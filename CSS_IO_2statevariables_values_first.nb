(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    795657,      14879]
NotebookOptionsPosition[    793785,      14830]
NotebookOutlinePosition[    794141,      14846]
CellTagsIndexPosition[    794098,      14843]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"css", " ", "zebrafinch", " ", "model"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ns", " ", ":=", " ", 
     RowBox[{
      RowBox[{"Na", " ", "ba", " ", "pa"}], " ", "+", " ", 
      RowBox[{"Nn", " ", "bn", " ", "pn"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"nh", ":=", " ", 
     RowBox[{
      RowBox[{"Na", " ", "ba", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "pa"}], ")"}]}], " ", "+", " ", 
      RowBox[{"Nn", " ", "bn", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "pn"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NNa", " ", ":=", 
     RowBox[{
      RowBox[{"ns", " ", "vs", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "lsO"}], ")"}], " ", "vI", " ", "z"}], " ", "+", 
         
         RowBox[{"lsO", " ", "qO"}]}], " ", ")"}]}], " ", "+", " ", 
      RowBox[{"nh", " ", "vh", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "lhO"}], ")"}], " ", "vI", " ", "z"}], " ", "+", 
         
         RowBox[{"lhO", " ", "qO"}]}], " ", ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NNn", " ", ":=", 
     RowBox[{
      RowBox[{"ns", " ", "vs", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "lsO"}], ")"}], " ", "vI", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "z"}], ")"}]}], "+", 
         RowBox[{"lsO", 
          RowBox[{"(", 
           RowBox[{"1", "-", " ", "qO"}], ")"}]}]}], " ", ")"}]}], " ", "+", 
      " ", 
      RowBox[{"nh", " ", "vh", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "lhO"}], ")"}], " ", "vI", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "z"}], ")"}]}], "+", 
         RowBox[{"lhO", 
          RowBox[{"(", 
           RowBox[{"1", "-", " ", "qO"}], ")"}]}]}], " ", ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qO", " ", ":=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "u"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"Na", "/", 
        RowBox[{"(", 
         RowBox[{"Na", " ", "+", "Nn"}], ")"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "leave", " ", "Q", " ", "in", " ", "matrix", " ", "below", " ", 
     "different", " ", "than", " ", "one", " ", "up", " ", "above", " ", 
     "recursions"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.75922536820514*^9, 3.759225374361019*^9}, {
   3.759226978263508*^9, 3.7592270511939898`*^9}, {3.7592272071577883`*^9, 
   3.759227502951234*^9}, {3.759227549246399*^9, 3.759227595035541*^9}, {
   3.759227633556774*^9, 3.759227779349925*^9}, {3.760182138805376*^9, 
   3.760182140164405*^9}, {3.7601825668532953`*^9, 3.7601825760529423`*^9}, {
   3.760260971894476*^9, 3.760261003261483*^9}, {3.760343678985106*^9, 
   3.760343727470407*^9}, 3.7603437708077*^9, {3.760343806968362*^9, 
   3.760343810862163*^9}, {3.760347725058481*^9, 3.76034772570505*^9}, {
   3.7609513639818087`*^9, 3.7609513682270327`*^9}, {3.765256219711523*^9, 
   3.7652562443580437`*^9}, {3.7676090976881447`*^9, 3.767609173472151*^9}, {
   3.77122177981454*^9, 3.771221796535448*^9}, {3.771652005656386*^9, 
   3.7716520084194613`*^9}, {3.771743399294156*^9, 3.771743400406986*^9}, {
   3.771744015554516*^9, 3.771744047235196*^9}, {3.7717440985156116`*^9, 
   3.771744107244638*^9}},ExpressionUUID->"dae59257-83f4-40a7-8359-\
3ea76e2c326f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AA", ":=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", 
       RowBox[{"ba", " ", "pa"}], 
       RowBox[{"bn", " ", "pn"}]},
      {"0", "0", 
       RowBox[{"ba", 
        RowBox[{"(", 
         RowBox[{"1", "-", "pa"}], ")"}]}], 
       RowBox[{"bn", 
        RowBox[{"(", 
         RowBox[{"1", "-", "pn"}], ")"}]}]},
      {
       RowBox[{"vs", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "lsO"}], ")"}], " ", "vI", " ", "z"}], " ", "+", 
          RowBox[{"lsO", " ", "Qh"}]}], ")"}]}], 
       RowBox[{" ", 
        RowBox[{"vh", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "lhO"}], ")"}], " ", "vI", " ", "z"}], " ", 
           "+", 
           RowBox[{"lhO", " ", "Qh"}]}], " ", ")"}]}]}], "0", "0"},
      {
       RowBox[{"vs", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "lsO"}], ")"}], " ", "vI", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "z"}], ")"}]}], "+", 
          RowBox[{"lsO", 
           RowBox[{"(", 
            RowBox[{"1", "-", " ", "Qh"}], ")"}]}]}], " ", ")"}], " "}], 
       RowBox[{"vh", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "lhO"}], ")"}], " ", "vI", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "z"}], ")"}]}], "+", 
          RowBox[{"lhO", 
           RowBox[{"(", 
            RowBox[{"1", "-", " ", "Qh"}], ")"}]}]}], " ", ")"}]}], "0", "0"}
     }], "\[NoBreak]", ")"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.759229336797518*^9, 3.75922941064526*^9}, {
   3.7601910668877563`*^9, 3.760191069968646*^9}, {3.7609532359902973`*^9, 
   3.760953296684855*^9}, {3.760959349527267*^9, 3.760959368606543*^9}, {
   3.761035121392744*^9, 3.76103512193158*^9}, 3.761045760902514*^9, 
   3.7614723052140512`*^9, {3.765256247405995*^9, 3.7652562817340727`*^9}, {
   3.767609177679335*^9, 3.767609192766227*^9}, {3.77072038029767*^9, 
   3.7707203911646214`*^9}, {3.771743546774617*^9, 
   3.771743560995676*^9}},ExpressionUUID->"b419f1f4-43d7-432b-956e-\
3865eca957af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NN", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"NNn", " ", "+", " ", "NNa"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.767609229418394*^9, 3.7676092418263702`*^9}, 
   3.767609303794414*^9},ExpressionUUID->"d2439a89-a167-41e0-abf6-\
28fd2c6ca69d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FFa", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"NNa", "/", "NN"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Na", "\[Rule]", 
        RowBox[{"Fa", " ", "N0"}]}], ",", 
       RowBox[{"Nn", "\[Rule]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "Fa"}], ")"}], "N0"}]}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.7652563372065363`*^9, 
  3.767428186086334*^9},ExpressionUUID->"04ebd907-0190-44c3-8647-\
75b81461511b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FFn", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"NNn", "/", "NN"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Na", "\[Rule]", 
        RowBox[{"Fa", " ", "N0"}]}], ",", 
       RowBox[{"Nn", "\[Rule]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "Fa"}], ")"}], "N0"}]}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.7652563533747797`*^9, 3.767428186606475*^9, 
  3.771743861492507*^9, 
  3.771746605927393*^9},ExpressionUUID->"8d81e881-d293-423a-932b-\
e977e12f23ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"FFn", "+", "FFa"}], "]"}]], "Input",ExpressionUUID->"51e46bda-5212-\
4bac-a486-25bf56a41d20"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.7652563766032677`*^9, 3.765274508624042*^9, 3.765275857873808*^9, 
   3.765530995977647*^9, 3.7674247653006496`*^9, 3.76742486162066*^9, 
   3.767428181159596*^9, 3.767436671148477*^9, 3.767522013505011*^9, 
   3.767609318926516*^9, 3.767692007553767*^9, 3.767692633641698*^9, 
   3.7676933847351027`*^9, 3.767693416809304*^9, 3.767693530049163*^9, 
   3.767693808398802*^9, 3.767694070658029*^9, 3.767694133378681*^9, 
   3.767694403481168*^9, 3.767694884489552*^9, 3.770366808156866*^9, 
   3.770374263532011*^9, 3.7707039017014627`*^9, 3.770713388367136*^9, 
   3.77071341874806*^9, 3.7707134918134413`*^9, {3.770715208381282*^9, 
   3.770715231783855*^9}, 3.770716897503373*^9, 3.770717068147419*^9, 
   3.770717204630273*^9, 3.770717251548367*^9, 3.770717431067676*^9, 
   3.770717525857126*^9, 3.770717803463581*^9, 3.770720363977283*^9, 
   3.770720408646554*^9, 3.771221810947377*^9, 3.771651935044628*^9, 
   3.77165241205829*^9, 3.7716524916458406`*^9, 3.771654499656795*^9, 
   3.771658930114113*^9, 3.771658998373848*^9, 3.771659353564712*^9, 
   3.77166030951224*^9, 3.771660369808*^9, 3.771660434647965*^9, 
   3.771660564321527*^9, 3.7716613543784237`*^9, {3.7716613877613688`*^9, 
   3.771661413627882*^9}, 3.7716614555948277`*^9, 3.771661497517908*^9, 
   3.771661545728176*^9, {3.771661586857608*^9, 3.771661619448851*^9}, 
   3.771661665177449*^9, {3.771661717830427*^9, 3.771661742417799*^9}, 
   3.771661835870933*^9, 3.7716618807771606`*^9, {3.77166201300522*^9, 
   3.771662040755192*^9}, 3.771662145647277*^9, 3.7716621857896852`*^9, 
   3.7716622257282543`*^9, 3.771662295863245*^9, 3.771662337204023*^9, {
   3.771740443496616*^9, 3.771740466258691*^9}, {3.771740504617218*^9, 
   3.7717405514048*^9}, 3.771743574373577*^9, 3.771743865955285*^9, 
   3.771744113046269*^9, 3.771744326276844*^9, 3.771746194093068*^9, 
   3.771746478882195*^9, 3.771746519374106*^9, 3.771746557822513*^9, 
   3.771746609763937*^9, 3.7717467208174973`*^9, 3.7717469379021273`*^9, {
   3.771747885704548*^9, 3.771747908866817*^9}, 3.7717481374945593`*^9, 
   3.771748264394051*^9, {3.7717483423507977`*^9, 3.771748368132701*^9}, 
   3.7717485206056757`*^9, 3.77174855232647*^9, 3.771748717358222*^9, 
   3.771749132968192*^9, 3.77175026190968*^9, 3.771750296992206*^9, 
   3.771750400791872*^9, 3.771750431067029*^9, 3.771750848010991*^9, 
   3.77175092122514*^9, 3.771751907849412*^9, 3.771752998523596*^9, 
   3.7717531334503813`*^9, 3.771754703702783*^9, 3.771755232894843*^9, 
   3.77175589905567*^9, 3.771758922503375*^9, 3.771759498026425*^9, 
   3.77183510295203*^9, 3.771909454189793*^9, 
   3.7724496018333073`*^9},ExpressionUUID->"b80b260c-c42a-479f-896e-\
c850c46a4f22"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"identify", " ", "Q"}], "-", 
    RowBox[{"hat", " ", "for", " ", "common", " ", "strategy"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Fasols", "=", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"FFa", "\[Equal]", "Fa"}], ",", "Fa"}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.771743481027957*^9, 3.771743503268949*^9}, {
   3.7717438367194157`*^9, 3.771743837517026*^9}, 
   3.771746450189302*^9},ExpressionUUID->"72666374-6073-4376-bf00-\
7480537d551a"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"begin", " ", "looping", " ", "here"}], ",", " ", 
    RowBox[{"try", " ", "matrices"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PSTYLE", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {RGBColor[
              0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
              RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            Frame->True,
            
            FrameStyle->RGBColor[
             0.3607843137254902, 0.4758169934640523, 0.018300653594771243`],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}],
            PlotRangePadding->None],
           
           "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = 
              RGBColor[
               0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["RGBColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         RGBColor[
         0.5411764705882353, 0.7137254901960784, 0.027450980392156862`],
         Editable->False,
         Selectable->False], "]"}], ",", 
       RowBox[{"Directive", "[", 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {RGBColor[
              0.1450980392156863, 0.43529411764705883`, 0.3843137254901961], 
              RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            Frame->True,
            
            FrameStyle->RGBColor[
             0.09673202614379087, 0.2901960784313726, 0.2562091503267974],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}],
            PlotRangePadding->None],
           
           "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = 
              RGBColor[
               0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["RGBColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         RGBColor[
         0.1450980392156863, 0.43529411764705883`, 0.3843137254901961],
         Editable->False,
         Selectable->False], "]"}], ",", 
       RowBox[{"Directive", "[", 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {RGBColor[
              0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
              RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            Frame->True,
            
            FrameStyle->RGBColor[
             0.005228758169934641, 0.33986928104575165`, 0.6196078431372549],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}],
            PlotRangePadding->None],
           
           "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = 
              RGBColor[
               0.00784313725490196, 0.5098039215686274, 0.9294117647058824]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["RGBColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824],
         Editable->False,
         Selectable->False], "]"}], ",", 
       RowBox[{"Directive", "[", 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {RGBColor[
              0.47058823529411764`, 0.2627450980392157, 0.5843137254901961], 
              RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            Frame->True,
            
            FrameStyle->RGBColor[
             0.3137254901960784, 0.17516339869281047`, 0.3895424836601308],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}],
            PlotRangePadding->None],
           
           "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = 
              RGBColor[
               0.47058823529411764`, 0.2627450980392157, 0.5843137254901961]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["RGBColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         RGBColor[
         0.47058823529411764`, 0.2627450980392157, 0.5843137254901961],
         Editable->False,
         Selectable->False], "]"}], ",", 
       RowBox[{"Directive", "[", 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {RGBColor[
              0.8901960784313725, 0.011764705882352941`, 
               0.49019607843137253`], RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            Frame->True,
            
            FrameStyle->RGBColor[
             0.5934640522875817, 0.00784313725490196, 0.32679738562091504`],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}],
            PlotRangePadding->None],
           
           "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = 
              RGBColor[
               0.8901960784313725, 0.011764705882352941`, 
                0.49019607843137253`]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["RGBColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         RGBColor[
         0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`],
         Editable->False,
         Selectable->False], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[
               0.5411764705882353, 0.7137254901960784, 0.027450980392156862`],
                RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             
             FrameStyle->RGBColor[
              0.3607843137254902, 0.4758169934640523, 0.018300653594771243`],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            
            "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[
                0.5411764705882353, 0.7137254901960784, 
                 0.027450980392156862`]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[
          0.5411764705882353, 0.7137254901960784, 0.027450980392156862`],
          Editable->False,
          Selectable->False], ",", "Dashed"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[
               0.1450980392156863, 0.43529411764705883`, 0.3843137254901961], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             
             FrameStyle->RGBColor[
              0.09673202614379087, 0.2901960784313726, 0.2562091503267974],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            
            "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[
                0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[
          0.1450980392156863, 0.43529411764705883`, 0.3843137254901961],
          Editable->False,
          Selectable->False], ",", "Dashed"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[
               0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             
             FrameStyle->RGBColor[
              0.005228758169934641, 0.33986928104575165`, 0.6196078431372549],
             
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            
            "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[
                0.00784313725490196, 0.5098039215686274, 0.9294117647058824]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824],
          Editable->False,
          Selectable->False], ",", "Dashed"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[
               0.47058823529411764`, 0.2627450980392157, 0.5843137254901961], 
               RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             
             FrameStyle->RGBColor[
              0.3137254901960784, 0.17516339869281047`, 0.3895424836601308],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            
            "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[
                0.47058823529411764`, 0.2627450980392157, 0.5843137254901961]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[
          0.47058823529411764`, 0.2627450980392157, 0.5843137254901961],
          Editable->False,
          Selectable->False], ",", "Dashed"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{
              {GrayLevel[0], RectangleBox[{0, 0}]}, 
              {GrayLevel[0], RectangleBox[{1, -1}]}, 
              {RGBColor[
               0.8901960784313725, 0.011764705882352941`, 
                0.49019607843137253`], RectangleBox[{0, -1}, {2, 1}]}},
             AspectRatio->1,
             Frame->True,
             
             FrameStyle->RGBColor[
              0.5934640522875817, 0.00784313725490196, 0.32679738562091504`],
             FrameTicks->None,
             
             ImageSize->
              Dynamic[{
               Automatic, 
                1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}],
             PlotRangePadding->None],
            
            "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"],
           Appearance->None,
           BaseStyle->{},
           BaselinePosition->Baseline,
           ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[
                0.8901960784313725, 0.011764705882352941`, 
                 0.49019607843137253`]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
           
           DefaultBaseStyle->{},
           Evaluator->Automatic,
           Method->"Preemptive"],
          RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`],
          Editable->False,
          Selectable->False], ",", "Dashed"}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ulist", "=", 
     RowBox[{"{", 
      RowBox[{
      "0.01", ",", "0.05", ",", "0.15", ",", " ", "0.25", " ", ",", " ", 
       "0.5"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"blist", "=", 
     RowBox[{"{", 
      RowBox[{"1.5", ",", "2", ",", "3", ",", "5"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lsOstart", "=", "0.99"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lhOstart", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imax", "=", "1500"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lhOtab", "=", 
     RowBox[{"lsOtab", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"imax", "-", "1"}]}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"delta", "=", "0.08"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"lsOtab", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "lsOstart"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"lhOtab", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "lhOstart"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.771759559000457*^9, 3.771759615469256*^9}, {
   3.771759726993932*^9, 3.771759729097726*^9}, {3.77175989229853*^9, 
   3.7717600620428553`*^9}, {3.7717601567392397`*^9, 3.771760276644022*^9}, {
   3.771760385976563*^9, 3.7717604900527897`*^9}, {3.771760521520499*^9, 
   3.7717606032643967`*^9}, {3.771760759579132*^9, 3.7717607671635237`*^9}, {
   3.771760939440736*^9, 3.771760942915742*^9}, {3.771760983405039*^9, 
   3.771761042658512*^9}, {3.771761095065835*^9, 3.771761095469221*^9}, {
   3.771761641461412*^9, 3.771761731664544*^9}, 3.771762208530805*^9, {
   3.7717626750146923`*^9, 3.771762675721612*^9}, {3.7717629119233227`*^9, 
   3.771762980718687*^9}, {3.771763011972727*^9, 3.771763033314149*^9}, {
   3.7717630740743523`*^9, 3.771763085312744*^9}, 3.7718348913171883`*^9, {
   3.7718350130915117`*^9, 3.771835026277795*^9}, {3.7718354579441843`*^9, 
   3.771835550611166*^9}, {3.771835901926805*^9, 3.771835943833003*^9}, {
   3.771837552745574*^9, 3.7718375528234653`*^9}, {3.771837607096043*^9, 
   3.771837689054022*^9}, {3.771837725899572*^9, 3.771837765342527*^9}, {
   3.771837829594181*^9, 3.771837870859414*^9}, {3.7718379018889008`*^9, 
   3.771837901943965*^9}, {3.7718432872748413`*^9, 3.7718432892883997`*^9}, 
   3.771844088572277*^9, {3.771844676626608*^9, 3.7718446770866737`*^9}, 
   3.771846773199141*^9, {3.771846914174591*^9, 3.7718469143395443`*^9}, {
   3.771847010760941*^9, 3.771847012603986*^9}, {3.771847071288076*^9, 
   3.7718470715444736`*^9}, {3.771909408327351*^9, 3.7719094268229837`*^9}, {
   3.771910203288121*^9, 3.771910206166931*^9}, 3.771910681528813*^9, 
   3.77191119988941*^9, 3.77191261078356*^9, 3.771912997288344*^9, 
   3.771913134391333*^9, 3.7719131646278048`*^9, 3.771917924900419*^9, {
   3.7719219485813923`*^9, 3.7719219548344183`*^9}, {3.771922238592491*^9, 
   3.771922247534726*^9}, {3.77192232924713*^9, 3.771922334837224*^9}, {
   3.77192258549887*^9, 3.7719225860936947`*^9}, {3.771923200543964*^9, 
   3.771923201262726*^9}, {3.7719234528557463`*^9, 3.771923457016815*^9}, {
   3.771923563086006*^9, 3.771923563692271*^9}, {3.7719241843634367`*^9, 
   3.771924186332108*^9}, {3.7719249310334663`*^9, 3.7719249360160027`*^9}, {
   3.771925356893792*^9, 3.771925363383741*^9}, {3.771925398587359*^9, 
   3.771925399294873*^9}, {3.771925789425233*^9, 3.771925790087775*^9}, {
   3.771925901839037*^9, 3.771925905842873*^9}, {3.77192608229423*^9, 
   3.771926083654954*^9}, 3.771926910316381*^9, 3.771926984635784*^9, {
   3.771927016092647*^9, 3.771927016169551*^9}, {3.7719270953836403`*^9, 
   3.7719270977680473`*^9}, {3.7719272152122726`*^9, 3.771927215942236*^9}, {
   3.771927289880609*^9, 3.7719272947284527`*^9}, {3.7719274096857243`*^9, 
   3.771927410336795*^9}, 3.771927525653035*^9, {3.771927696231996*^9, 
   3.771927697130603*^9}, {3.771928402135045*^9, 3.771928409052596*^9}, {
   3.7719286788437862`*^9, 3.7719286795374947`*^9}, {3.7719291176530523`*^9, 
   3.771929127887188*^9}, {3.77245008606068*^9, 3.772450086216529*^9}, {
   3.772450427507666*^9, 3.7724504336724873`*^9}, {3.7724506862552347`*^9, 
   3.77245068686171*^9}, {3.7724509689656343`*^9, 3.772450972357811*^9}, 
   3.772451860705267*^9, {3.7724518916337214`*^9, 3.7724518917008047`*^9}, {
   3.772452569670454*^9, 3.772452569893961*^9}, {3.772452759373477*^9, 
   3.772452765988222*^9}, {3.772453358849107*^9, 3.772453359489106*^9}, {
   3.7724534893758593`*^9, 3.7724534945945053`*^9}, {3.7724536586371737`*^9, 
   3.772453660278757*^9}},ExpressionUUID->"84779083-38e0-472f-a5e7-\
f8db19158bd0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "\[LessEqual]", 
      RowBox[{"Length", "[", "blist", "]"}]}], ",", 
     RowBox[{"j", "++"}], ",", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"h", "=", "1"}], ",", 
         RowBox[{"h", "\[LessEqual]", 
          RowBox[{"Length", "[", "ulist", "]"}]}], ",", 
         RowBox[{"h", "++"}], ",", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"subs", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ba", "\[Rule]", 
               RowBox[{"blist", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], ",", 
              RowBox[{"bn", "\[Rule]", "1"}], ",", 
              RowBox[{"z", "\[Rule]", "0.8"}], ",", 
              RowBox[{"vs", "\[Rule]", ".8"}], ",", 
              RowBox[{"vh", "\[Rule]", "1"}], ",", 
              RowBox[{"vI", "\[Rule]", "0.8"}], " ", ",", 
              RowBox[{"u", "\[Rule]", 
               RowBox[{"ulist", "[", 
                RowBox[{"[", "h", "]"}], "]"}]}], " ", ",", " ", 
              RowBox[{"pa", " ", "\[Rule]", " ", "0.2"}], ",", " ", 
              RowBox[{"pn", "\[Rule]", " ", "1"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"QHAT", "[", 
             RowBox[{"LHO_", ",", "LSO_"}], "]"}], " ", ":=", 
            RowBox[{"Simplify", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Fasols", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"lhO", "\[Rule]", "LHO"}], ",", 
                 RowBox[{"lhI", " ", "\[Rule]", " ", "LHI"}], ",", " ", 
                 RowBox[{"lsO", " ", "\[Rule]", " ", "LSO"}], ",", " ", 
                 RowBox[{"lsI", "\[Rule]", " ", "LSI"}]}], "}"}]}], " ", "/.",
               "subs"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"isolate", " ", "dominant", " ", "eigenvalue"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"AA2", "=", 
            RowBox[{"AA", "/.", "subs"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"LL", "=", 
            RowBox[{"Eigenvalues", "[", "AA2", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"isolate", " ", "Dominant", " ", "eigenvalue"}], ",", 
             " ", 
             RowBox[{
              RowBox[{"substitute", " ", "in", " ", "q"}], "-", "hat"}]}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Lambda1", "[", " ", 
             RowBox[{"lsO_", ",", " ", "lhO_", ",", "LHO_", ",", "LSO_"}], 
             "]"}], ":=", " ", 
            RowBox[{"Simplify", "[", 
             RowBox[{
              RowBox[{"LL", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "/.", 
              RowBox[{"Qh", "\[Rule]", "  ", 
               RowBox[{"QHAT", "[", 
                RowBox[{"LHO", ",", "LSO"}], "]"}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "take", " ", "partial", " ", "derivatives", " ", "to", " ", 
              "calculate", " ", "gradient"}], ",", " ", 
             RowBox[{
             "substitute", " ", "mutant", " ", "for", " ", "common", " ", 
              "type"}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"DlsO", "=", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"Lambda1", "[", 
                RowBox[{"lsO", ",", " ", "lhO", ",", "LHO", ",", "LSO"}], 
                "]"}], ",", "lsO"}], "]"}], "/.", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"LHO", " ", "\[Rule]", " ", "lhO"}], ",", 
               RowBox[{"LSO", "\[Rule]", " ", "lsO"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"DlhO", "=", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"Lambda1", "[", 
                RowBox[{"lsO", ",", " ", "lhO", ",", "LHO", ",", "LSO"}], 
                "]"}], ",", "lhO"}], "]"}], "/.", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"LHO", " ", "\[Rule]", " ", "lhO"}], ",", 
               RowBox[{"LSO", "\[Rule]", " ", "lsO"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"try", " ", "and", " ", "graph"}], "*)"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", "=", "2"}], ",", 
             RowBox[{"i", "<", "imax"}], ",", 
             RowBox[{"i", "++"}], ",", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"lsOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"lsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}], "  ", "+", " ", 
                   RowBox[{"delta", " ", "DlsO"}]}], "/.", "subs"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"lsO", "\[Rule]", 
                    RowBox[{"lsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", 
                   RowBox[{"lhO", "\[Rule]", 
                    RowBox[{"lhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lsOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"lsOtab", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ">", "1"}], ",", "1", ",", 
                  RowBox[{"lsOtab", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lsOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"lsOtab", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "<", "0"}], ",", "0", ",", 
                  RowBox[{"lsOtab", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lhOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"lhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}], "  ", "+", " ", 
                   RowBox[{"delta", " ", "DlhO"}]}], "/.", "subs"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"lsO", "\[Rule]", 
                    RowBox[{"lsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", 
                   RowBox[{"lhO", "\[Rule]", 
                    RowBox[{"lhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lhOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"lhOtab", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ">", "1"}], ",", "1", ",", 
                  RowBox[{"lhOtab", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lhOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"lhOtab", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "<", "0"}], ",", "0", ",", 
                  RowBox[{"lhOtab", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}], 
              "\[IndentingNewLine]", "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"lsOtab1", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"h", "==", "1"}], ",", "lsOtab", ",", "lsOtab1"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"lsOtab2", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"h", "==", "2"}], ",", "lsOtab", ",", "lsOtab2"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"lsOtab3", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"h", "\[Equal]", "3"}], ",", "lsOtab", ",", "lsOtab3"}],
              "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"lsOtab4", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"h", "\[Equal]", "4"}], ",", "lsOtab", ",", "lsOtab4"}],
              "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"lsOtab5", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"h", "\[Equal]", "5"}], ",", "lsOtab", ",", "lsOtab5"}],
              "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"lhOtab1", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"h", "==", "1"}], ",", "lhOtab", ",", "lhOtab1"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"lhOtab2", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"h", "==", "2"}], ",", "lhOtab", ",", "lhOtab2"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"lhOtab3", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"h", "\[Equal]", "3"}], ",", "lhOtab", ",", "lhOtab3"}],
              "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"lhOtab4", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"h", "\[Equal]", "4"}], ",", "lhOtab", ",", "lhOtab4"}],
              "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"lhOtab5", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"h", "\[Equal]", "5"}], ",", "lhOtab", ",", "lhOtab5"}],
              "]"}]}], ";"}], "\[IndentingNewLine]", "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"plotcode", "=", 
        RowBox[{"ListLinePlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "lhOtab1", ",", "lhOtab2", ",", "lhOtab3", ",", "lhOtab4", ",", 
            "lhOtab5", ",", " ", "lsOtab1", ",", "lsOtab2", ",", "lsOtab3", 
            ",", "lsOtab4", ",", "lsOtab5"}], "}"}], ",", 
          RowBox[{"PlotLabels", "\[Rule]", "ulist"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "PSTYLE"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"time", ",", " ", 
             RowBox[{"freq", " ", "oblique"}]}], "}"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Placed", "[", 
              RowBox[{
               RowBox[{"PointLegend", "[", "ulist", "]"}], ",", "Bottom"}], 
              "]"}], ",", 
             RowBox[{"Placed", "[", 
              RowBox[{
               RowBox[{"LineLegend", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Normal", ",", "Dashed"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<healthy juv\>\"", ",", "\"\<stressed juv\>\""}], 
                  "}"}]}], "]"}], ",", "Top"}], "]"}]}], "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "subs"}], ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", "440"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"p1", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "\[NotEqual]", "1"}], ",", "p1", ",", "plotcode"}], 
         "]"}]}], ";", "\n", "       ", 
       RowBox[{"p2", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "\[NotEqual]", "2"}], ",", "p2", ",", "plotcode"}], 
         "]"}]}], ";", "\n", "       ", 
       RowBox[{"p3", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "\[NotEqual]", "3"}], ",", "p3", ",", "plotcode"}], 
         "]"}]}], ";", "\n", "       ", 
       RowBox[{"p4", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "\[NotEqual]", "4"}], ",", "p4", ",", "plotcode"}], 
         "]"}]}], ";"}], "\[IndentingNewLine]", "}"}]}], "]"}], ";"}], 
  "              ", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.771761812051703*^9, 3.77176181908092*^9}, {
   3.771761850106616*^9, 3.771761861708253*^9}, {3.771761907077829*^9, 
   3.771762106029364*^9}, {3.7717621715307407`*^9, 3.771762177469591*^9}, 
   3.771762253859755*^9, {3.771762315458227*^9, 3.771762338731399*^9}, {
   3.771762411624033*^9, 3.77176241270258*^9}, {3.77176257154659*^9, 
   3.771762600504231*^9}, {3.7718343622941847`*^9, 3.771834368334687*^9}, {
   3.771834670025382*^9, 3.7718346715552797`*^9}, {3.771834711032114*^9, 
   3.77183471292659*^9}, {3.7718347950394707`*^9, 3.771834863732511*^9}, {
   3.771835349041153*^9, 3.7718354390314217`*^9}, {3.771835670385035*^9, 
   3.771835671891288*^9}, {3.771835744834778*^9, 3.771835875545814*^9}, {
   3.771836164761355*^9, 3.771836167740024*^9}, {3.771836306670479*^9, 
   3.771836327887785*^9}, {3.771836421727963*^9, 3.771836487541486*^9}, {
   3.771836521349866*^9, 3.771836533387006*^9}, {3.7718370788613*^9, 
   3.771837155241748*^9}, {3.771837189553125*^9, 3.7718372467488728`*^9}, {
   3.771837294204218*^9, 3.77183732526527*^9}, {3.7718375266456347`*^9, 
   3.7718375278719254`*^9}, {3.77184373132896*^9, 3.771843800496122*^9}, {
   3.7718438396812162`*^9, 3.771843856701432*^9}, {3.7718446449366627`*^9, 
   3.77184464544153*^9}, {3.771845500403132*^9, 3.771845500470737*^9}, {
   3.771845542748015*^9, 3.7718455428769407`*^9}, {3.77184558139386*^9, 
   3.771845581664909*^9}, {3.7718456891039133`*^9, 3.771845689394421*^9}, {
   3.771846681508287*^9, 3.7718467135836887`*^9}, {3.771846786159821*^9, 
   3.7718468083200903`*^9}, {3.771846895172864*^9, 3.771846908450461*^9}, {
   3.771848910073514*^9, 3.771848940031598*^9}, {3.7718492000192966`*^9, 
   3.7718492001646*^9}, {3.771849447964603*^9, 3.771849458065893*^9}, {
   3.771909404032105*^9, 3.771909404135954*^9}, {3.771909512153026*^9, 
   3.771909513543029*^9}, {3.771909565569906*^9, 3.771909605797138*^9}, {
   3.771909645896594*^9, 3.771909651497752*^9}, {3.7719097072751293`*^9, 
   3.771909983423626*^9}, {3.7719100235667877`*^9, 3.771910071603797*^9}, {
   3.771910122322419*^9, 3.77191016519521*^9}, {3.771910345044536*^9, 
   3.7719104787535257`*^9}, {3.771911427271446*^9, 3.771911436597061*^9}, {
   3.7719115565489397`*^9, 3.771911579141932*^9}, {3.771911617076353*^9, 
   3.771911626110903*^9}, {3.771911666499917*^9, 3.771911668163102*^9}, {
   3.771911707607823*^9, 3.771911771519895*^9}, {3.7719118023140783`*^9, 
   3.771911824657051*^9}, {3.771911865292059*^9, 3.771911885869913*^9}, {
   3.771911932708817*^9, 3.7719120861353607`*^9}, 3.771912138565319*^9, {
   3.771912178277562*^9, 3.771912228983034*^9}, {3.7719123108854837`*^9, 
   3.7719123731540403`*^9}, {3.7719128692897882`*^9, 3.7719128991418858`*^9}, 
   3.771912993402151*^9, {3.771913029356372*^9, 3.771913033563232*^9}, {
   3.771913412216846*^9, 3.771913463587307*^9}, {3.7719135224359217`*^9, 
   3.771913592121986*^9}, {3.7719165027011757`*^9, 3.7719165489613667`*^9}, 
   3.771916861290464*^9, {3.77191699063885*^9, 3.771917166772743*^9}, {
   3.7719172063528233`*^9, 3.771917226973331*^9}, {3.771917259578505*^9, 
   3.771917322387807*^9}, {3.771917362756042*^9, 3.771917376446905*^9}, {
   3.771917425218449*^9, 3.7719174616584587`*^9}, {3.771917498062125*^9, 
   3.771917508201275*^9}, 3.771917554601947*^9, {3.771917597129075*^9, 
   3.771917617790677*^9}, {3.771917657044664*^9, 3.771917681781898*^9}, {
   3.771917735223394*^9, 3.7719177912704372`*^9}, {3.771917829805253*^9, 
   3.771917833200515*^9}, {3.771917950889271*^9, 3.771917952614449*^9}, {
   3.77191799548853*^9, 3.771918004777988*^9}, 3.771918130639504*^9, {
   3.771918164961522*^9, 3.7719181797779503`*^9}, {3.771918214046332*^9, 
   3.771918260960163*^9}, {3.771918389709721*^9, 3.771918425137147*^9}, {
   3.771918464266389*^9, 3.771918526647739*^9}, {3.7719185569918623`*^9, 
   3.7719186054357862`*^9}, {3.771918645294442*^9, 3.7719186480842857`*^9}, {
   3.771918680336918*^9, 3.771918708884655*^9}, {3.771918888726653*^9, 
   3.7719189177029*^9}, {3.771919214046085*^9, 3.77191925666144*^9}, {
   3.7719193426707478`*^9, 3.7719193517034693`*^9}, {3.771919417497871*^9, 
   3.771919433572154*^9}, {3.77191952253128*^9, 3.7719195505657187`*^9}, {
   3.77191959097814*^9, 3.771919594987268*^9}, {3.771919649806168*^9, 
   3.771919669638111*^9}, {3.771919723721496*^9, 3.771919727633911*^9}, {
   3.7719199547809277`*^9, 3.771920032781562*^9}, {3.771920062918748*^9, 
   3.771920279945692*^9}, {3.771920513828822*^9, 3.771920514625888*^9}, {
   3.7719211064736977`*^9, 3.771921107563698*^9}, {3.7719211757646914`*^9, 
   3.771921175810416*^9}, {3.771922354528968*^9, 3.771922365857222*^9}, {
   3.771922403267703*^9, 3.771922403942194*^9}, {3.7719228923538237`*^9, 
   3.771922958494206*^9}, {3.7719230138020077`*^9, 3.771923015072083*^9}, {
   3.7719230611430187`*^9, 3.7719230714480886`*^9}, {3.771923417161256*^9, 
   3.771923432133807*^9}, {3.771923809167465*^9, 3.771923812418151*^9}, {
   3.771923848117194*^9, 3.77192384820459*^9}, {3.771924052310245*^9, 
   3.771924064384804*^9}, {3.771925652590252*^9, 3.771925652714769*^9}, {
   3.771926808402711*^9, 3.771926808524535*^9}, {3.771927509974517*^9, 
   3.771927513496436*^9}, {3.772449710728341*^9, 3.772449710825979*^9}, {
   3.772451832076716*^9, 3.772451832179821*^9}, {3.7724526878696327`*^9, 
   3.772452688149428*^9}, {3.772452736492669*^9, 
   3.7724527549849653`*^9}},ExpressionUUID->"3a9b002c-cbaa-4179-afef-\
73bb20ec8de6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}], "}"}], " ", 
  "]"}]], "Input",ExpressionUUID->"444ef7f8-d9b3-4e45-9e1d-69db0f5708f6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
            
            LineBox[CompressedData["
1:eJxd1HuQzWUcx/GHSIn2hBQyDrMplDnJZVnyXZdlLzg2lxXxi9hWLse1nVrr
iZQMzbFoTGP0c22mZA5Nu2LZpyhpJnsmUTLqx5J1yZ6ikXFrGr9nmvM+/zzz
Ou/znc9/p+3EmXmT6yql3qmj1H/v3U+i793X818lbRecmzmtq/V90nx8dcPK
QuuAtDz+bVU917qZFGyY1jz3J+tHpSaU+vXmlFO+H5NPb69dGcyyDsqNRg3C
RxZbt5PRDwdGHqm0TpWxMw7X9rxl3V62tFf1Unuf9v2kVFwaXbWz2LqjzN95
9HyjSuunpNf64rUT7qn23VlGlK1Y42VZh6TxgoNvxUutn5EG2+9MLfnVuouk
Jt7enfv0Gd/PSn5R1Z+7Flp3lSbO+fUFx6y7yQxpPz6ty1nf3aWiNHVR4Wrr
HnLlu8p9J29bp4meMq6ybO7vvntKUdPXV129Yd1L9o5/v/3STed8p0vJmEMl
x8pqfPeWben7NqRfsO4jCw/syZjX+rzv52Rj3heNF4Wt+8qsWbM3OoutRT5a
0O3dlDLfWqRJi3XdV9TYniGF1Z3u/7nlBb9nSKtTJwddzvWt+smHtcuCh0ts
7yfupvSt82K295dH/hpTdfqU7f3lerP9c5o2vej3AXKl567s+gN86wHywO5t
NZ/PtX2g3PISFe222D5QqnekpWQdtT1TJm+6ffPx+pf8nimfNNw/v6yrbzVI
Rp3p0OfaJNsHydVL10+eKbV9sLir6+x440vbB8scp+bH8lrbs2TdD393WtP6
D79nyfcP/pKfkuNbZcuFXkv3tC2yPVu+6tBjxsHNtufIBxkb+92I254jV459
XFl+0/Zc2Tv2zTbXnrjs91w5Xr5k6Gd5vtUQub69+cWzxbYPkQP3rsxcutX2
oVK8/mDBqirbh8qeugNT1D+2D5Mdrbbt/aZNrd+Hycra9yp+y/StwjIp/8GO
/af7lrBkP7SswflS+/uwLN+3KudQuW8TlrN10q6dOGHvh8v25Us6t7hj74fL
3e/9/xENG1jlJVtgDRtYPY97WMMGViNwD2vYwGok7mENG1iNwj2sYQOr0biH
NWxglY97WMMGVmNwD2vYwOoF3MMaNrAai3tYwwZW43APa9jA6kXcwxo2sBqP
e1jDBlYTcA9r2MDKSXYQFtiBNezCBvZg9RL2YYEdWMMubGAPVhOxDwvswBp2
YQN7sJqEfVhgB9awCxvYg9XL2IcFdmANu7CBPVhNxj4ssANr2IUN7MFqCvZh
gR1Ywy5sYA9WBdiHBXZgDbuwgT1YvYJ9WGAH1rALG9iDVSH2YYEdWMMubGAP
VlOxDwvswBp2YQN7sHoV+7DADqxhFzawB6tp2IcFdmANu7CBPVhNxz4ssANr
2IUN7MFqBvZhgR1Ywy5sYA9WM7EPC+zAGnZhA3uwiiQ7AAfhECxwGHbgCKzh
KOzCMdjAcdiDE7CalewAHIRDsMBh2IEjsIajsAvHYAPHYQ9OwGp2sgNwEA7B
AodhB47AGo7CLhyDDRyHPTgBqznJDsBBOAQLHIYdOAJrOAq7cAw2cBz24ASs
5iY7AAfhECxwGHbgCKzhKOzCMdjAcdiDE7Cal+wAHIRDsMBh2IEjsIajsAvH
YAPHYQ9OwGp+sgNwEA7BAodhB47AGo7CLhyDDRyHPTgBq9eSHYCDcAgWOAw7
cATWcBR24Rhs4DjswQlYFSU7AAfhECxwGHbgyP/+F7u/L1Y=
             "]], 
            
            LineBox[{{409.53846153846155`, 1.}, {410., 0.9999999999999987}, {
             411., 0.9999999999999963}, {411.8048780487805, 1.}}], 
            
            LineBox[{{421.3783783783784, 1.}, {422., 0.9999999999999974}, {
             422.7931034482759, 1.}}]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]], 
            LineBox[CompressedData["
1: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
gmVqdOtZINhODfnTPYLlatSaLwh2VOOzXi8FO6mxbG+ze7xd1Gg2uodgNzUc
r0Owhxov02YLhhpDJoUJ9lKj3QC9YG81xk5cK9hHjTErdgpW1NVrVyY4SI0z
t64JVqqx/tlzwSo1/p7w2X3h/qtR9OkrwXo1/pE7C+bUKNa6Cy5Q4wc/T8EW
NeZvnia4UI3OCxcKtqqRZlYKLlbDzzNJcKka1yKzBJepUfVNgeAKNTyWbRBc
qcb9wVbBNjX2rt4vuEqNSeYTgqvVON7jnOCaun5mXxMs06Ds2/uC7TTYtfG5
YLkG10+8FeyogZtR9kCYvwZVTe0Fu2iwYWBLwW4a5LZuK9hDg7DfnARDg58+
9BDspUF0kz6CvTV4dKm/YB8NZgYMFazQoPHOUYKDNPh40kuwUoOHGyYJVmnQ
dNJ0wWoNxpfOFqzXQCabL5jTYGOLAMEFGqx9GSTYokHfjSGCCzUI7R0u2KpB
n+xowcUazDsSJ7hUg3XnkgSXaVBUkiK4QoOkxDTBlXXzcsoUbKs7fn2O4CoN
vm5gEFytQekYs+AaDTRBKwXLUjBk+SrBdilwn7VGsDwFUd0sgh1TEHJlPZl/
CgZGbSTzT8GUms1k/ilY5f8rmX8KjpQUkfmnYMe7bWT+Kbjp/DuZfwrKhuwk
809B0YjdZP4paNZ3L5l/CkbLS8j8U5B3Yx+ZfwqOrj5A5p+CduMPkvnXXd/D
Q2T+KXCMPkzmn4Lp/x4h809BStAxMv8UPD99nMw/BeFdT5L5pyBweRmZfwoe
bz9F5l93vXf/JPNPwYzm5WT+KRjgeobMPwXlI8+S+aeg1/i/yPxT0GVCBZl/
3fxGniPz16Kwz3kyfy0mOfxN5q/FwmpiRy1mH79A5q9Fc9NFMn8tsn0ukflr
0dDxMpm/Fv3OEkOLI5pKMn8tFL2ukPlrceYMsY8Wb4KvkvlroW90jcxfi/Sf
iJVazOl5ncxfi+47idVaNBl0g8xfi3N7iTktvv7uJpm/FjVbiC1anG13i8y/
bj2D2KrF+3+Ii+vsYyPz12LCfuIyLTq1u03mr8WIKOLKuus5Q2zTYkOXO2T+
WgRGEldrse8wcY0Wg5rdJfPXYdYMYjtd3feEWK6Dv43YUYf/db5H5q/Dfwpi
Fx12rCV200F2hdhDB5+W98n8dYj0IvbS4WwCsbcOA6zEPjo43CZW6JDd4gGZ
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
GMU/71RKru+6EZ9R2yTr9yT5KiP6i/a/ZB7VRuSK9r8Rt+n5aoyYSF0rscwE
B+oGJnF/diZxf81MWEGPl5tgpMc7mPCOzt/RhL6i/W/CTtH+N0FBnx9nE67S
95GLCQPp8+pqgg9ddzNh5FW6/+uul/57q4cJq6iHSs4PE5yoPU04Se1lQjWt
P9GETdTeJmiop5vQnOZ9TDhH6/uaoKLXqzBhDXWACUeog0x4Q/PBJmym/76s
NKEbdaQJ+6hVJiipE0z4kZ5PLTm/zoQy+u/behMq6Hq2Ca2pubr50PObTQil
LpAcv7ru/tF1iwmJtN4GEwIv0f1vwmi6XmRCb7puNWEWXd9lwi7q4rr7TY8/
YIKVutQEe+pjJvSj+TLJ+ctNWEpdUfe8UF8wIY+60oSeF+n+N2Eytc2ENtT3
TOhE81UmbKfX99SEZnS92gRP6teS9RoT2tF8bd3+o+syM2ZSNzDDSOdjZ8Yg
Or9mZiykz6fcjPPUDmYMo3aUHN/eDD96Piczgmk9ZzNa0XUXMyJp3tWMntRu
Zmjp8e6S6/Ew4xD1UDPsRfvfjEDR/jcjVrT/JcdPNGMfredtxjzq6ZLr9zGj
u2j/m5Eu2v+S4wPMOEXvR5Dk+GBJ/0oz3lBHmnGSvo9UZuSJvv9mLBV9/83Q
iL7/ZrQWff/NyBR9/81oRt/3nBme1GYzLtDjC8zoKPr934xk+v2wSLzBjOui
3//NeE2vp8iMwdRWM3TUu8yYL/r934yVot//zWhMr69U4mNmpIp+/5e43Ixq
er8qzEig9/OCGcWi/7+OGR/p+nUzBtB1m2Q+98yw0uetyows6qdmfE1dLan/
2oyHot//zfCi9Wolx8vyxfUb5OMozdvli5+PZvlwppbni58Xh3wMEX3/Jfn2
+Wgn+v7ni58XZ8n5XPJxk+Zd8+FC193y8T9q93zMpcd75OME7W+oxMgXz8NT
kvfKh6fo+58vvr/e+eL7OT0fmaLvf939oPvTNx9mut8VEgfkw0m0//Oxir6/
g/MRSN/XynysF33/83FS9P3PRwk9f0I+7tDrUdfdf3q9unz8Qdf1kny2JM9J
8mZJvkCSXy3JWyT5DZJ8oSRfJMlbJfldknyxJH9Aki+V5I9J8mWSfLkkXyHJ
X5DkKyX565K8TZK/J8lXSfJPJflqSf61JF8jyddK8rIV4nyDFeK83QpxvtkK
cV4uyTtI8o6SfHtJ3kmSd5bkXSR5V0neTZJ3l+Q9JPmhkjwkeU9J3kuSnyjJ
e0vy0yV5H0neV5JXSPIBknyQJB8sySsl+UhJXiXJJ0jyakleJ8nrJflsSZ6T
5M2SfIEkv1qSt0jyGyT5Qkm+SJK3SvK7JPliSf6AJF8qyR+T5Msk+XJJvkKS
vyDJV0ry1yV5myR/T5KvkuSfSvLVkvxrSb5Gkq+V5GUrJft/pWT/r5Ts/5WS
/S/JO0jyjpJ8e0neSZJ3luRdJHlXSd5NkneX5D0k+aGSPCR5T0neS5KfKMl7
S/LTJXkfSd5XkldI8gGSfJAkHyzk/x/TIbyz
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
            LineBox[CompressedData["
1:eJxN1Hdczf37B/Bjh5Adiow72UnIflGUHUJSOZGUktPedU7ztM8+mWVEdoiy
Q8iI7OzsIoRucgu/83t8vcf9j8fz8enq+rw+r6679/K181c2FggEj5oJBP//
7//+q530v38r//4rwJdrd6qmlBLrocbFoHrmxud/bYDX3Ss710S/+OtOsHu2
xSA08OVfG+K/Cb/32MS/+msjjFvzx/nKydd/bYJt1kufWNi8/es+iP6Fwj76
7/66H67/iB+a3Y3YFJrF40bUmhKbYdycq+ZdLIkH4s4nN0X7ycSDse1SzbkX
s4mHwjur05AUJ2JzHBhrNU5vFfFw/Fi/arFLALEFhlW4vk+OIR6BBolEmJFK
bInZ3+/28tYSj8StVwKFyTbiUYh4iV4H9hOPxp1Rq4d1PU5shX/2vBiw5ALx
GAxRbgoKKiceC5fXXcN8HhGPw5JQh/UT3xCPR5prxcSaWuIJ2CTceTXoJ/FE
SDTIfdTs/V9PwqeeG4b1NCAGqur6XJ/Q/a/FQLuXR16O7UeeT0asKudW56Hk
+WQ8O7eh4fpo8nwK+koun/OYTJ5PQdtthxKezCDPrbEDNrkjHMhza6QuLBN7
uZDnNtgT0RAc40Ge2+BP8ZPXQWvJ86mo1lYMnB1Knk/Fhef7tjaTkOfTMLdj
8K7sZPJ8Gnz9s9f3UJDntvjqU1Metp48t0VVC/8dx7eS53b4z0MT+HQ3eW4H
uXc71etD5Pl09PZ+7lx+nDyfjukNLqbZ58jzGbB72Md2/hXyfAZcnhp2fneT
PJ8JVduA1x4PyPOZUJ/dp3+5kjyfhUb3058aVJHns/C2icn+iZ/I89l4blFU
Nv8beT4by77XZsz+RZ7PwZGOe6YMa1rz9/kchLZvM6a+1V8L5uLQ+9izee3J
87mQXDk1cLIheW6PwzcOnzvb869hj1dfs+8N/If8vD2Of210OHLQXxfb4/Ks
zdsKh5P5eSiYHv310WgyPw89jWtrqieQ+Xlo3DrpwXNrMj8PP7N7NC6ZTubn
Y9C3q/tlc8n8fIxr0WBqt5DMz0ff1osOvnMi8/Nh+/KKMlRI5hdAJld0/LKS
zC+AwYnBQYu9yfwCPBzp1pAnIvMLsHMLat4EkXkHfGz1T1L7CDLvgJZZh9oO
EJN5B3RCxfkhCWTeAaap5W96pZD5hUhd2qfwTwaZX4jtZ7YElCnJ/EL0vSZy
Ss4i8wsxLlqwa8QmMr8Iktz2G69tIfOL0OfukbUOO8j8Igxytl92dTeZX4QY
G23u8ANkfjGmOKoikw6T+cVYMWSHcVkhmV+MxqMlZxufJPOL4fzYPMesmMw7
orXa8PPEEjLvCJtW/76bWkrmHVE2/sn5CdfIvCOiDlgfNC0n80vwXf39reAO
mV+ChS1MN167T+aXINdyaaOUR2R+CZ5sjZsx5hmZd4Kx54ddD1+QeSc08Zk+
z/cNmXfCzd17/eqqybwTxkfIx635QOaXYtu9iqcVtWR+KeK3XU0ZXUfml+Jr
IyPf5O9kfilq1705ev0/Mu8Mt/eHFS1+k3lnxGaHDbVs9OHvvDP2Ptpw1KHp
Xxc7Y6T64yKvFn8tcMG8N0fH+rf6a7jg+Iq9aWvbkHkXtAj4L9jNgMy7IGHL
5L52Hcm8Kzx/Zh3v24XMu2L0isyVdYZk3hULqwfPOt6DzLsirG+dOqgnmV+G
hriXXqa9yfwyPMsP/nitL5lfhlUPd073MiXzyzCi/eecn2ZkXogjG2Z3ix/0
1yZCVM8Yd7/xUPL7hBh7/cTvEPO/FgoR1HzR4ZcW5PcLcWxxV8NpI/86Rwjr
/1Rzs0eTfUK0nPEh4tOYv64Uol3ny6dHjSf73TC/ynlM0ESy3w3zlq7W3wOy
3w3NnCY7Vkwh+90wY83Z8b9syH43bGm09EE3W7LfDSP2GsweOp3sd0NX39Cj
Y2eS/W449e/JEZNmk/3LEfx084txc8n+5dD/GFRpPo/sX46l9hYzei4g+5fj
WbnL+KYLyf7lsOxgfPvFIrJ/OXzOmw887kj2L8fk29+cU5zI/uXossU7cYEz
2b8ChYMGne3sSvavwJ0J/v1vLiP7V2BkVq/bCW5k/wqoux15MmIF2b8C/V85
Ch+5k/0rUCC+FxDpQfavwJI/2eZdPcl+3e/vfGP/Hi+y3x0e40ybj/Um+90x
9lz7Oed8yH53LPqYt8nGl+x3R9tWB1qfXUv2u+NHiGr/aD+y3x3LzoVszPMn
+93RP8/0fcdAst8d4/v3yg8LIvtXwj1eJngYTPavhNre+bNlKNm/EoXeXbUp
YWT/Sjxt2rr5o3CyfyW+aUfON40k+1fiRdXMTJ8osn8l2jYcK98XTfavhJ/+
9gHvYsh+D+jHvN3bW0L2e+D27R5rHGLJfg90UCkjY+PIfg/MmOjyYU882e+B
+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
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961]], 
            LineBox[CompressedData["
1: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
CxUI2pPBHKTA+0E7mMMUSI07wBypwM1zx5lFCgx5VMicoECbe5eZxQp8PHKT
WabA7HUPmOX6/K0qmdUKtE2sYc5UYOmrOuYtClwb/J05S4HyuU1K2P4r8Mi2
NXO2/r7JnZhzFIhq3YM5V4FXZ/jMeQo8tTNhzlfg+s0xzIUKdDCdyKxToEXo
VOYiBdrvnsVcrED8KRvmG/rfw9ElzGUKDFI5Md9VoKnzauYKBY6382J+ou9j
jy9zpQJVQ4KZX+mfTxHBXKOA86tY5loF+P3FzHX638OcNOZ6Bawd1cwNCsxb
son5lwKNFlnMPCVyWu9lbq7EzssHmQ2UGLb+KHM7JaS8U8yGSrQXFTJ3VeL7
uwvMxkqorK4y91aCL73BzFfiVeFt5kFKDHh6n9lEid7vHjOPVKJLdSWzqRJz
blcxmynRsP8ts4US7v4fmacoUTy0nhlKrC5tYLZSwse1kdla/zzVTa6x/Vfi
/IqWzLZKROjaMNsrkW7UkdlRifErujA7K7FN0Z1ZoESr072Y3fXv/3Y/Zi8l
9jweyOyjxMwHQ5mFSuQWjWAOUqLv7jHMYfrnDR7PHKnE5UkTmUVKCOosmRP0
n984lVmsRGfzGcwyJZIvz2KWK2FjPZdZrc9/zoY5U4lIE1vmLUpMTVrCnKVE
k4plzLuVqOvjxJytxARHF+YcJX4kCZhzlfA64Macp8S+ix7M+Uo8v7WWuVCJ
iXd8mHVK3C/xYy5S4sXJAOZiJWI3BjPfUKLCP4y5TIl2iGC+qwSaRzNXKLHx
nIj5iRKT/OKZK5Ww6pbE/EqJx8fFzDX6fbFOYa5Vwqw8lblOCYulcuZ6fR83
lcwNSsinaph/KTFobwYzT4UhLTYxN1fhxIotzAYqfNy/jbmdCp8/ZjEbqvB4
1C7mripcddvDbKxCuWIfc28VeubvZ+arkH//IPMgFUreH2I2UcGz8QjzSBUO
tTjGbKp/3pZ5zGYqbOSdZLZQIeDLKeYpKjg9P80MFdYWnWG20j/PzrPM1iqs
DD/P2X8VAudf4Oy/Ch27XeLsvwpzHxVx9l+FiZlXOPuvQt2iYs7+q5DS5Bpn
/1Xofeg6Z/9VKLAr5ey/CuGfb3L2XwWhrIyz/yoc5d/h7L8KdkfKOfuvgofF
Pc7+q9C08D5n/1WwsKzg7L/+eY4/5Oy/CheGPObsvwqWmiec/de//99POfuv
z+v6nLP/+ue5WMnZfxVu9X7B2X99voCXnP1Xwe3SK87+q7Cl42vO/qswwaGa
s/8qTNtUw9l//e+p4g1n/1V41fkdZ/9VyLKu5ey/Cu3C33P2X/8+9n3g7L8K
48s+cvZf//mvdZz9V+G20WfO/qugGPeFs/8qrJhfz9l/FaYIvnL2X4UZ/v9x
9l+FiOhvnP1X4WtyA2f/VTib+p2z/ypUpv/g7L8K69J+cvZfb8kvzv6r8V7U
yNl/NRqDfnP2X419a/5w9l+NBjvedbb/avyc0oS5qxqFA5syG6sxp1Uz5t76
76vmmK9GTVFz5kFqdN3egtlEjYkhLZlHqrFiXitmUzVSehkwm6lx5w3HFmpY
nmjNPEWN0qg2zFBDM7Mts5UaW1u2Y7ZW48MVjm3UUCS0Z7ZVQz6tA7O9Gl+/
ceyoRsmhjszOahitNmQWqPGiUydmdzUm6Tj2UmOgT2dmHzWyjbowC9W4Xchx
kBp7V3dlDlPDtLkRc6Qaobs5FqkRP6Mbc4Iazs84FqvROqw7s0wNVUdjZrka
TfZwrFbDyaIHc6b+eUo43qJGrWNP5iw1zF5zvFuNBP9ezNlqvPrBcY6+/7je
zLlqfGzVhzlP//tK4ThfDWn7vsyFamxL5Vinxpu2/ZiL1AgQc1ysBprxmW+o
4RjJcZkaui8c31UjZm1/5go1Nj3l+IkaxrYDmCvV+K3j+JUai00HMtfoP7+N
41o1HNoMYq7T/56COa7Xnz/juEGNAbMHM/9SIzyHY54GHp2GMDfX4G0QxwYa
tHvAcTsNyiYO5ey/BpMzOO6qgd1Xjo016Glnwtl/DTIOcczX4GarYZz916BI
wLGJBlH5HI/UoLHDcM7+azDXnWMzDdbkc2yhwdK2Izj7r0FfF46hv+8Qx1Ya
zGvk2FqDvPkjOfuvQauNHNtqMKeKY3sNQk1HcfZfg83hHDtrcOoSxwJ9/raj
OfuvwSs7jr30eTM59tGg9zOOhRrMGjCGs/8aRKzhOEyDi/s4jtTPv+FYpEHa
MFPO/uv7WsuxWINL+ziWaZBaxbFcf9+AsZz910C+kuNMDW5t5HiL/vdyl+Ms
DR60H8fZfw32zOY4W4P90RznaFB1guNcDZxrOc7ToNOA8Zz91/flwHGhBkjh
WKfB+XMcF2mQ/InjYg02DTTj7L8GP+w5LtPgQCLHdzU4dILjCg1aVHH8RP97
6jKBs/8anJ3O8SsN+vtxXKP/PWzmuFafp5jjOn0fXziu1yCsrzln/zW4Zs3x
Lw0SAzjmaXFwM8fNtZhWxLGBFjNrOW6nRX6XiZz91yLLkuOuWjQKODbW4k4S
x7214OdwzNfiTRnHg7QY85VjEy3qjS04+6/FpCkcm2rRZBXHZlosiOXYQou+
uzieokVoEcfQYnkVx1ZaXGkxibP/WpwfzLGNFrNncWyrhYs7x/ZatIjn2FEL
7ODYWYuO5zkWaBH0hGN3LYTfOfbSf183S87+a2E2jmOhFn8WcBykhedajsO0
WJ/AcaQWXbZzLNLC6TTHCfq+yzkWa1FWy7FMi6YtJ3P2X4tHfTlW69/nRI4z
tYhdxPEWLZZ4cpyl//5ojndr8UPDcbYWt3M4ztHC4RLHuVrIHnKcp0XAR47z
tWjTYgpn/7VY2pNjnd5jOC7Sf96K42Itgh05vqFFhg/HZVr4izi+q+9LzXGF
Pu8+jp9o4VzAcaUW/Us5fqXFrucc12jx8hPHtVq8aPYPZ/+12GHEcb3++4Zy
3KCFqwXHv7TwmMsxLwOjnDhunoHT3hwbZKBNBMftMtA/hWPDDPzexHHXDOw6
wLFxBgwLOO6dgdklHPP1ruB4kP7z1RybZGDvV45HZsCg+VTO/mfAvDPHZhkY
x+fYIgO/RnE8JQOayRwjA43WHFvpv28Zx9YZgBvHNhnoJeTYNgPFkRzbZ8Ba
wrFjBrZoOHbOQNEOjgUZuHCIY/cMqE5z7JWByZc59tH3U/Y//x8QiiYa
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 
              0.49019607843137253`]], 
            LineBox[CompressedData["
1:eJxF13dczX3YB/CQWwhlZkQIRRRC9gcho1SSJImKJiftoU77tM8uO1nZ2dnZ
IcnODiE7K9nPeZ7Hdf3uf3q9X9/zPdfv+n3O537dd/eFSx29G2ppad1vrKX1
v3///5/asf//t+rfXy28bn/L49HiJ/+sg8xv4iYVFU//WQ8HLjqeHz6v+p/b
Itoh1XDi4Bf/bICJ+retit7V/HMX7O9nlDb5OdkIY4ofeH56QO6BSVl31hfd
JBujYPzHzgll5N5w6NJj+6KzZBP8Ohtj4n6M3BcT7lsE+uwnm2GVU5Zj8g7y
ADgXN9y7fyPZAiOH9PKuW00eiA+KXROnqsiDYKcj7l+URR6M9c821PVJIVsi
03RG9J5Y8hD4NX2mmh5OHordo98bfV9KHoYbjgO+HfQhW6HfHenn5AXk4WgY
avnR25U8Aub1vpedZ5JHYgYOzHOZTh6FI0bliX4TyaMx1Hx9x6wx5DHwTLD/
eXIYeSyOeVg2bjSQDLR/cr+Nc99/FgOzl7fQPtyTzsdhUN6Fvf0M6Xwc8urw
e2d7Oh+P9P6vSsbq0fl4vNb2vV/VlM4n4NnVgr6yRnQ+AVFH92ba/37579wa
ZW0+PO767Z/F1ogU1zT8VUvnE3HAyu/my9d0PhH+5lGDn1bT+SS8GTbn7+tH
dD4JET0TOzS8S+eT0a1y19w+N+h8MiwXlG93vULnNjj3vWXNqgt0bgMX/bu1
r0/R+RSMn1axefIxOp+CuxE3Xu85SOdTcSv71xrTPXQ+Fa3U+et3bafzafiQ
O+MONtP5NOxPuWlUlU/n03Gv+xCPzFV0Ph0Vt/eET1TTuS36rT03pbmMzm2R
c6vX4YcZdG6H0PanC4+l0Lkd/jQ9+3NLPJ3PwM/hOap1MXQ+A3aPS+ZsCKdz
e1TsNDfbt+yfYY+7a97UlgfS5+0h2zc6s87nn0vs0fvslqemXnTfAbrDqyt9
5tN9B7hdez5znyvdd0DIgjtWTZ3pvgM+SjsH+jnQfUd0yZ1++/Z0uu+Ip19H
utrZ0H1HiAZ/elQxge47Ilm+a6r7WLo/E/KLLxLrRtD9mThePCloxVC6PxO3
uhZ9nzSI7s+Eg+0I7b/96b4TPO8PjDhlSvedMMzFYHR2L7rvBN9fG0Z4d6f7
TjjpetJlkiHdn4VxemlxAzvS/VnYFTwzt3c7uj8LntYbJb306f4snHGxHDWg
Bd13Rq/pH1aiKd13xhyzz1lujem+M670lv6Jb0D3neE6xOZ20W/69+tsXLxU
/qfm+z9jNtrF6SzsW/fP4tlYdrTZ65BP/1wyG6aLOseXvqf7LpiYXaTf6w3d
d4FJB1FK+ku674KGXuaX6p/RfReMbPT5wtIquj8H1+a89/vwgO7PwX67xLXh
d+n+HBjXjbPTuU3356Dj6Brv9dfpviuOKRdcG3+V7rvi/ZrzMW8v031X1N50
c1pbSvdd0We02trlHN2fC+0W+iM6nab7c9HGNbd79Qm6PxdDz3WtOXCU7s9F
uz6lUTnFdN8NJ0Y9Pi86QPfdEO907/CcvXTfDf/9nDNu6m6674aNhSbTxu+g
+/PwY8mIc+O20v15uLJ5xxqbzXR/HgauPXfaeQPdn4e/k770CMin++5QP7+6
Q7KG7rvj/ckOM3aspPvuaHBlb/3tXLrvjlSv3Xk6Kro/H80/jO86Tk7358NV
fTFCnEP358O+7lzu+Uy6Px9/r1T5tUmn+x4YtqfmyaLUfzbyQPCRa29Lkuj7
PNBj9IHo7gn/7OEBt4hrsZI4+n4P1E1Je/E15p/zPdDwqecG3yia54H9Ybqb
n4X/c5UH9tU7PPYMpfkLUHGhN14vo/kLYO6TfzhMRPMX4O6wb6OaLqH5C3DE
OOXoen+avwCtPC/1hi/NX4AJxp6i6kU0fwFG2OmnZ3vRfM3nBx/yHrOQ5i/E
uCkuXz/Pp/kLMaPaoN/ueTR/IS69G/196VyavxB315o5Dp1D8xfCbISfScPZ
NH8hvM6vWnLDieYvxMfS5A7bHGn+Qrg30G2fYk/zPdG+18B5i+1ovifyVrWv
sp1O8z3Re+Qv2fCpNN8TVY2xqK8NzffEnJfz7I0m0XxP5C/7MKGzNc33RHH+
dsvO42m+J7JyFrU3As33gvM4/YemY2i+F5a4HY6xGkXzvbD+jeTVtBE03wvv
u57v4GVF871wVPfGT/FQmu+F5cH90wssab4XbkUvOVQ6iOZ7oVv01IjPFjTf
G8EHpad6mNN8b3Tt3U/i3J/meyNpeNdT2f1ovjdiV0kWXDal+d7o9a3AXdeE
5nuj5fGTOx1603xvfK+Zar3KmOZ74/OFix1e9aD5i/D0xD3Dkd1p/iJI9IdM
l3Wj+YvwaWth3htDmr8Is6sMv0/pQvMXYdEEleeOTjR/ERot6FPeuiPNX4Sg
HG3z5R1o/iK8ORgS86YdzV+MrZ3v7JjXluYvhr1JwcEbrWn+Yly38pTa6tP8
xSj2PmFxuRXNX4xbM5ZkT29J8xfD++2E/Gu6NH8xVjj0nufanOYvRmpi62Mv
mtJ8H0jGdd4fpkPzffD7hs+oZk1ovg8i7llNX9+Y5vvAqdOjeyO1ab4PdtqW
PL7bkOb74PSnuY7RDWi+D451Ht/XSIvm++DeGIP5pX+e/5vvC60meTXBv//Z
yBc7jXNO9Pj1z/CFY7fHlTd//LOHL3T7LDdP//7PYl+cexF0ZHz9P+f7Yofz
3aA/df9c4ovOOU9tj3/95ypf3Fx1dVLcF5rvh/wZX52sP9N8PzgYHBXpfqL5
fuh6Y6X8Ti3N98OC9Ub7Nn2g+X7Yffz1pbD3NN8Pdg5br099R/P90Gxq1zPd
39J8P3hYGKp+vqb5/mj2J31c5Sua74+nX+adOlRD8/3RLWxNi5Uvab4/3t1d
0C3uBc33h9vkmx8WPaf5/ijMHBDhUE3z/XH725E9Y57RfH/sML+pGvCU5gfg
l+5zw+5PaH4AJob4TGhfRfMDsN381d8Wj2l+AHCxga3OI5ofgA3ebsaNH9L8
AHxZuzdO+wHND0B7jysu/92n+QGYVJK0tdk9mh+IRo9P+uvfpfmBmvOQFZ0q
aX4gdE0LzXrfofmBGBAT2M3yNs0PRGruC3/rWzQ/EAF7JujOvknzAxE49MwP
/xs0PxCLt+wZmHid5i/Bs3Df7auv0fwlOPHWcWFxBc1fgq4/n9nfvkrzl2Bf
n/ygunKavwTjFhmcNCDnL0Hw99eDR1+h+Uvw0/HMJc8ymr8EXz/Pic28TPOX
Itc2ZMqhSzR/KfoUVPeuvkjzl2LIizT9NmSPpeheMEPbupTmL8XTG/1/hF2g
+UvR9prJ++3naf5S2Jo63H96juYvRZHkzLHOZC0RylYWZjmf/Wc9EQ6+s5yi
OEPPI0LArcLX107/s4UI4TPsA1uTIUL5i4Qyp1P/bC/Cj9wNjVaU0POKsPyA
UcvHJ/9ZpLlfFvyyN1ksQlpa9wzRiX+WivBzzeEvR4/TPiJ02XS7W1NykQhP
m3bVcTlG+4lw/u3YrYVH/7lChKqm3/78OEL7ijBynU7jGeRaEfxmWh/aeJj2
D4JDlyT9X8W0fxAseu9oNYtsFISXR7bt3H2I9g/CEtOIl83JCEL2zvaHfQ/S
/kEony3vevEA7R+ENV+12vYli4Kw43u8KnM/7R+ENK8x62r30f5B8Nvp09+Z
nB+EgdtHjTq+l/YPQuHyvxd6kUuC8D7sb1nOHto/CF0bKyf/LKL9g2Cy2tDS
h1wbhAfrGufc3k37L4OF3QmnSWS9Zdi79XT8oV20v+bcS926L9liGZQXzzVa
u5P2X4b32547tCHbL8O+KYrvaTto/2UwmxDyrQFZtAztY4baRG+n/Zdhma60
5us22n8ZkvuNvRVEzl+GJl2aNf+wlfZfhiSDkymB5JJleD7WcuK7Qtpf87wJ
kycsIVctw9KsR8trt9D+y3D+yIuPwWStYBz56bS6fjPtH4y1F3pFxZKNgjG4
6TxJY7JFMJbo/nc2axPtr3HA4L4dyPbBWNXg76H1G2n/YHy4mubXnywKRsDX
n2OObKD9g1GclzTIhiwNxos7c8bfKaD9g+FzqNh/MbkoGKb6z7fXr6f9g1Ge
aKqVQa4IRveFd7y7kquCsbFg0r29+bR/MKZdveVqQ9YKgdvXV9WP1tH+IYhQ
vQ8NIxuF4IJiVvNWZIsQ2JrkFhSupf1D4HV14PAJZPsQzB2xrezRGto/BCOQ
4RpNFoVga7l3lQFZHAKt+xVzD62m/UMQPtP3kjM5PwSRetdNv62i/UPQ7fy+
8DxySQgufj22ZwS5IgQPH6+/9XAl7R+CwtAuT+LJtSFwn/b2Wm+yVijGpd/e
VLaC9g/F86ebXIPJRqFYEdf3fSeyRSje1g13P5NH+4fCZczuwgCyfSiarvG7
3J7sEYoLax3Onsql/UPx+78ZskCyOBRPzjhadCJLQ3HiicO6C2raPxTOsZMe
hJKLQuFzzPy5MbkkFI6H9Itvqmj/UFwP++qYTK4KRfXTmn1DybWhKDn0p7JG
SfuHoTbSrmQVWS8MEr8vi2eQjcIQHq1f3ohsEYa6CZdrixW0fxjaf51WvoRs
HwZPu9NevcgeYdgqX7D3gZz2D8O1mAUHlGRxGO5b/vG3JUs1z2MdcfM/cn4Y
FNlt35XIaP8wzf+5dNkfTS4JQ5uLD/oMI1eE4fS1LZM+S2n/MOwfcKNlEbk2
DEF3imMDyVrh0H9wUNmPrBcOo7nmM17n0P7hUIdLdmwlW4TjtZ3Zdl8ywoEP
kil9yfbh2Garl/Imm/YPR+Ioq/k7yaJwVC+IurGULA5HvwFOTwaRpeFYe31S
al0W7R+OHlZ3zhwhF4VDty5LFUcuCUejKd9+WJMrwvGn6YZPzchV4Zi1yTj6
WibtH46X+m0UeWStCLiW6gz3IOtFwO/IBn8TslEEZk5NNv2YQftHYMZ4x6Aj
ZETAuGzvuCSyfQSu+jiusCN7RGBkzeOwjmRRBNosaHG3Op32j0CBifREEVka
gSuXjHovJ+dHwLBhdMup5KIIPNw9L6wDuSQC02+muz1Po/0j8CTlwsl95KoI
bHp/f20CuTYCq0co6h3IWpEYv/Lo5e5kvUh0Htq7wycJ7R8JZ5Mtd0+TLSIh
Dm3XWklGJKY2nnbSm2wfiYWrjKuGkT0i4VYRH9yMLIrEtmYTIx6m0v6R2Bk+
810RWRqJq9qqa0nk/EjscfnScw65KBL+Ze7P+pNLIvHA62zLRuSKSDQt67Cp
MoX2j0TmVLtNu8i1kTA4Nb9lMlkrCk0KJj2eS9aLwvfXf9sPJhtFQdI1Y38z
skUUtMe8Pvg0mfaPgvWZ7oZHyfZRSFxp9UJB9oiCbRcr/UCyKAqxTczWTCKL
ozA1ukeaEVkaBZeP/W7+SKL9o/B62Nzlt8hFUWgfcC6xiFyief4v8S8yyBVR
cIrctnExuSoK7s9cj08g10bhtMMecyOyVjRutC//8SuR9o+Gyd4bhvfIRtEw
v/wi9xDZIhq3+w3wUZERjVFHr2cFk+2jERTxt4kj2SMa40Of3LIgi6LR5tqW
ulZkcTTO7kv0/ZBA+0djk01h/6vk/GiEHJ46fje5KBq+pgWbc8gl0bArejlH
RK6IxoZZznMdyFXRuNK837ZB5NpoOG7fOLEtWSsGPd436l8XT/vHoMYvY34l
2SgG/tK4B0fIFjGoy++9YQ0ZMajYWbpXTLaPwVH57mZeZI8YJHzsvW0yWRSD
zP4x0n5kcQwSF/851oosjcGfiD8Dvohp/xgMqy1/Xkku0sxrfrbqOLkkBmsP
Du62gVwRA3FiaL6EXBUDbH3quYRcG4O4P7d8nMhay7Ht6/ZdI8h6y/Ej77Rl
d7LRcsSkRP5oQrZYDpO3A/++j6P9l+N7ot3422T75eggHXzmONljOf67Myl+
E1m0HFXrPkRnkcXLkbdLvTeULF2Oidhs7E7OX47IJunXJpGLlmOtye5ic3LJ
crgPTbprQK5YjnYDIgc3JFcth03I33NvYml/zfNfS5PeImvFwjAwU36SrBeL
2VdiLm8lG8UioOLaCCXZIha/tjWqiiUjFvOqM474ku1jYTfz+UUnskcsDnXK
bAGyKBb+m38n9SOLY/FtS7F5B7I0FmFtRrdoRM6PxdIuuoYfltP+sTg4qND9
PrkkFu5/ldcukCtisXnB7ND95CrN8/qHTllPro3Fd48w22yyVhxERU/F0WS9
OMR+mfDMh2wUh4L3xiHOZIs4PEnSH2xNRhxqTqi7DSLbx2HsmfHDjcgecYi5
uTGuJVkUhzg720+/Ymj/OBzacEX6hiyNg79rses9cn4cmjdbP+MiuSgOqS5d
lhaTS+Kw89vJ4i3kijhkF/QwyyVXxeF1pwelKeTaOKztnZwdRtYSwyjrUMwi
so4YP9u2VDiT9cSYGW98bRLZQAxRTu7QYWQjMWZ80T7Th2wihpVr8zADsoUY
bu5TZzQlW4kRmr3Q7kc0vT/N9y36uuwN2UYMQ7tNxx6Q7cV4rG7Xr5zsIoZ/
5OvjJ8keYiS0uRiyh+wjxhHv2TM2kEViTHYYZasiR4hxWdVtSSpZLEa/q1v3
RJIlYgQEJ3UIIEvFkFbMWedOzhND3OyWjQM5X4xPBgVtrMmFYrieC/w7lFwk
RnXh8+Z9ycViLOpbbGVILtE4RpmsRy4Vo9Oqvp8akSvECJ7aL/Zb1D9Xap63
rY3pG3KVGHcmDv78iFwjxt/36+5fJ9eKMfLxuKfnyfWaPDde+e8oWSseXpJ6
m91knXjoSiMKN5D14rEyQrtXHtkgHqMPzjyRSTaKx7hlXUPiySbxmJxmOCmM
bBGPtLRmlv5kq3gY7lk32oOMeOBt7sJZZJt4FNzYVTCVbB+Pw9vyf48lu8Sj
vXvf4CFkj3iUxDdt1I/sEw/FjF87jMiieKzfdErUnhwRjzztjna6ZHE8zLNP
WzckS+IhbRTnVB9J+cej4kyr5e/JefGYf2noiWpyfjxSdh7scJ9cGI9nqx3T
rpGL4vF2fnnrUnJxPJY5vd93glwSj36B4QEHyKWa92FhPmoHuSIe9w7c77GB
XBmP4s0TjFaSq+JxbsQASxm5Jh4Hhnm6S8i1mv0/bFsbR66Px9ax5V/CyFoJ
WJGt9lhC1kmA4vKVJ95kvQQcCRgTMY9skICqwH09Z5GNEjByRv2z6WSTBLRv
e7fYmmyRAOm4HgWjyFYJmPkwf50lGQmYHdBjjxnZJgH5H0NuG5PtE6DzblEr
Q7JLArRdL8xtR/ZIQPAu76MtyD4J8LmrP+A/sigBWuNX7/sTQfknYPD5W9O+
kcUJ2Hk4p+4DWZKArdWr9tWQpQkoSyhLeELOS0CT8V8875HzExAx7oXzDXJh
Ahz1wuaWkYsScGpHeNA5cnEC7iWczDtBLklAin+Pa4fIpQkI2h7aaQ+5IgEN
PmWHbCNXJmCyi/XjDeSqBPyaH+C6hlyjeZ5PD5+rybUJ2DNfFC8l12vymvfT
LJ2slYgpjWfXJJJ1ErHv1tx9y8l6ifiz62lWONkgEV43zoYHkY0S8eT5fZE/
2SQR4141iPQmWyRi4Fh96XyyVSJmbqk+MIcMjcfMfj2TbJOI3zHW/e3I9olw
HSaJtSG7JOLSqj8Px5M9EtFzUNK00WSfRFy/9/X8MLJI8/xXLOwHcf6J2Lmy
9Uszzj8Rr3tFZvTh/BNRu3X86B6cfyKcDtj+6sL5J2JQ38jSDpx/IuaP3ri+
NeefiNzQXaktOH/N+9wWHqXD+SfikXZVZCPOPxFlPy8k/wmn/BPxZZbe2u/k
Cs2+fVae/kKuTMTf65M+fyBXJeJY43rzN+SaRNQczol4Qa5NxGLL2rIn5PpE
LND+ZfaQrJWElIbqvEqyThJc7de3uknWS8Ly2Q3kV8kGSfhWuqLbZbJREpJX
2xWfJ5sk4U0rbbfTZIskTNi8ttkJslUSZvRpdPYwGUm4tra95ADZJgmP555w
3kO2T8KI2sfmO8kuSSg0X9BmK9kjCY7mJg02kX2SYDix8/d8sigJzZp0/7ma
HJEE9VSjJivI4iR0NtYyVJElSRj8YssoGVmq+b7uf72zyHlJ6FnwLi+NnJ+E
BsFzbyWTC5Ngd9eicwK5KAmvZjn7xZKLk+Cxcf/pKHJJEjyPWBqHc/5JML9w
MjuY80+C1uCxDUWcfxIS1q6ODeD8Ne/36alGvpx/Evq1XCHz5vyT8M5H12Qh
55+ExKX/XXDn/JNRcDNoyVzOPxnDxMO7unD+yajKtrntxPknw98hXe3A+SfD
fvprdzvOPxmDhzmZT+P8k+H1a18TG84/Ge7FX19ac/7JsD3cuGIc55+MnNiK
k2M4/2SMLB5/aCTnn4xNk6YctOL8k/Fm+LVjQzj/ZIRdu3BpEOefjPToTlXm
nH8yym8e/GXG+Sejcku6UV/OPxnH3yZO68P5J2N1qXS5MeefDIusdQe7c/7J
mF+8tq4r55+MK59jRnfh/JMR2NY0oyPnn4z2neSP23P+yTAw3zKiLeefjBtb
Zq/W5/yTMbWhQrsV55+Mkuc2wbqcv+b99fCtacr5JyOq6JlnE84/GQ+KCp9r
c/7J2O1fGNiQ809BiP2Nn3/DKP8UZH/tKP1N1kvBkw6BfX+SDVIQvPL4pXqy
UQqap/wS1ZFNUnBLp7PhF7JFChqENbv6kWyVAr+Jx1I+kJGCEW16WL8j26Qg
a13/Jm/I9ikwKK+4WkN2ScGNTb/XvCB7pGCN/eagarJPCl52Oj71KVmUArdg
S9MqckQKcl7/0X1EFqegYFCruvtkSQq+dHWpvkuWpuDqhrI7d8h5KWh7e37F
LXJ+Ct6+1i6/QS7UvM9huyuukYtSILJwrLxKLk7BD98n1VfIJSkYkmtfd5lc
mgKtdIXuJXJFCgoHre1TSq5Mwap1XpPPk6tS0O33Pf+z5JoUNFF9VZ4m16bA
p7zwdAm5PgUO/V99OUHWSkWC4/Z+xzn/VBj/fLboKOefiiQtyebDnH8qLs3O
fH2I80/FAf0Xgw5y/qmY5Zoet5/z13w+YknFXs4/FT/LU3vt4fxT4XL3cuxu
zj8VqgEWD3Zy/qnwjds2egfnnwo7tcWGbZx/KsbMLtbdyvmnIvzksKgtnH8q
hj/f+GYT55+KtG9fPTZy/qn4NLr7vQLOPxVTDAxnr+f8UyH68/jOOs4/FQZi
D7e1nH8qJNaq6tWcfyoWNgsVreL8U7F4S93fFZy/5nl19BV5nH8qRlkcNc3l
/FNhMvztGRXnnwqdmasWKDn/VFSfOdlQwfmnQvHSfouM809FovmkGVLOX+Me
uT+yOf9UZLuN3JrF+Uugyu47N5Pzl8A21k0vg/OXoL7xxdI0zl8Cy7Y+SRLO
X4LS7QMnpHL+EgQ9M2ycwvlLUPTc+FIS5y9Bbu0YeSLnL8GaWV7zEjh/CXwj
s/rFc/4SbLix91cc5y/B+fdlFbGcvwQfFt/cspzzl2DP+1PxMZy/BNXW2e7R
nL8EUWMGjYni/CWYcWqzUSTnL8Hfs9WNIzh/CYodn78L4/wlaJm8vjKU85eg
IrX1+RDOX4JHuQMPBnP+EvxuWF+4jPOXYGef+WuDOH/NvBAPtYjzlyDA76t0
Keev+Xxuh+wlnL8E0tUlWYGcvwTXTV7nBHD+EtT9zFL6c/4SdH2+aZUf5695
H6f7bfLl/NMwOLHjHh/OPw09evqeXMz5p+HKrrYVizj/NAwY1/6ZN+efhp+N
fOq9OP80iM219dgWaYho9tzUk/NPw7tX2pMWcv5paD3Q3WsB55+G7g5vkjw4
/zRYXty8ZT7nnwbT3hll7px/GiIbKj7P4/zT0Om/w13YojTMe/Ftshvnn4bL
3lND53L+aWjstH2jK+efhoKsdrfncP6a5/uV2JSdl4Yo1ccxLpx/GtRuc8Jm
c/5pWOlxcLcz56+5f7zRm1mcfxrOrBhlwi5JQ1Zft8VOnH8a7HbPK5zJ+afh
VPCoN46cfxo8r342Z1elwalXXJgD55+GkdV3T9hz/mkwSfmrw67XPL/0jdMM
zj8dJYoVBXacfzrW9Gv8yZbzT0fRH9MJbIN0BJ9opJ7O+aejV5/s19M4/3Ts
+HsWbIt0xHTcmDeV809HtH2fT1M4/3TUpE+1ZdukY/zhpttsOP90mN320GG7
pMP5xTSfyZx/Ojzrz1+cxPmn46pxuRlblI7KrHmyiZx/OhbND/pmzfmno7a8
8Xy2JB0+nTuUTuD809E9a/0gdl46DoWuXzue80/Hd/M2uuzCdFzv9jlqHOef
jkF7R78B55+Ob24f3Nglmudbq10xlvNPh93fSGt2RTqWt5x+ZAznr3ke7/CB
7Kp0hG2s3zqa80+HcVhZT3ZtOkwzP6wdxfmn40K+e2e2Vgb8w9qvGMn5Z2D1
nTYGbL0MvFDPzBvB+WfgbPb1jmyjDEjXZ60ezvlrvu9wvBHbIgNmpds3WXH+
GbC9oGPGRgYqD6n2DeP8M+BYMGMU2z4D29WDzw/l/DNgumOMA9sjA7MbLHk4
hPPPwOejJ/zYogw80Bnw3ZLzz8DfzoclbHEGbCzmdWRLMpCV2mH7YM4/A7F+
z0ez8zKQa3L22iDOPwPNDfYsYhdmYL9q66+BnH8GGjXermAXZ+Dj1b392CUZ
eLvoxFkLzj8DF3HZnV2Rgb33bn835/wz0KH4kYpdlYH8hVWD2DUZ6OJ3t2IA
558BkdeFpez6DGS829KKrZWJWVsiivpz/pnIHz7Mka2Xic6OT76Ycf6ZwMaQ
PLZRJqa+ej+KbZKJHlW2T/tx/pmYaZsjYVtl4s+PInM2MlFaXHSnL+efiYq5
mWK2fSbWnBjXl+2SiXanym+acv6ZCLQZKGb7ZKLL2MVmbFEmypVL7ppw/plw
GTMxlS3OxLYhr4awJZk4E+nyvA/nn4n1LWUqdl4mRv6WTmLnZ0I007m+N+ef
iR89H29jF2XCO8XUnV2ciYa5g1uzSzJxN+zn+V6cv+b9T4uLYVdkYtfY44PY
lZn4EL/vlTHnn4l7Ez3Ws2sy4XXm1Bx2bSa+Dr3dml2fiflPVpX15PyzUNFE
P5Wtk4VLnwePZ+tlod3nhn96cP5ZODg75gjbKAsvw9eGs02y8N+uxUPYFlmQ
u9z+3J3zz0KXezV72cjC6BVrlrFtspCt9XkQ2z4La2Nffjbi/LPwPDnyANsj
C8czt4SzfbIwp4VoBFuUheLka7+7cf5ZWBd+6RRbrJnnMyeFLdHs9yRmGlua
hY9LB+uz8zTftyH6TlfOPwud9Z3WsguzcGjGUW92URZ2/djdn12chTVFFnWG
nH8WlG1GnWSXZqHVxQoJuyILryLfObIrNftdlxqyq7LwIv5wTRfOPwseIxft
Z9dm4c5+lZhdnwXVlkm2bK1stK4I78TWyUbtuz41nTn/bHw8M+sg20Bz3kEr
mW2Ujbt7ezmxTbKx3uNcT7ZFNsbWPvzcifPPxqbBS86ykY2Df0NUbJtsjDP7
uIhtn40fiidWbJdsBLWd2JztkQ3d7E6POnL+2fj7zGMPW5SNyb/aJ7MjNM93
cuQctjgbSR3L+7Ml2ehYX9aQLc3GsOnDKg04/2zMaaq7i52fjZW9piaxC7Ox
c0WtK7soG3c8/gxkF2ejJmJZU3ZJNoY8nfakA+efDcW6tMPsimzYH+wrZ1dm
o++AAf7sqmzY6Sus2TXZsA1w6cquzUYnu+X17Tn/bDQo1brB1srBxndPdrJ1
cvD5Zrc0tl4OeqsPe7ENcnB42i6wjXLg3fp3F7ZJDjo33fS9Heefg7/2m26z
rXKwsMXvfWzk4KjndhnbJgeboncvZdvn4Hasjh3bJQddVhwwY3vkwKX+QHO2
Tw7Cy3TetOX8c7Bk8s5L7IgcDF1TsI0tzsG5RjXpbEkOmu6L8WdLc/Ciev50
dl4O+t+S9mfn52DVqZat2IU5uPaqsrYN558D+5z319nFOYj4aneAXZKD2AXf
c9mlOfDr9C6KXZGD1r6m7uzKHHTI2zmOXZWDR58jerFrcpB1Kb0puzYHTQKe
vmvN+Wv2MY27ztaSInK2xyG2thQnpiSvZutI4T77XTxbV4qtlbmL2XpSKPok
2bLbSrFr3Z7BbAMp+qzt1ondRYoz8Ve02EZSVG478lKfbCzF9OgX5WwTKaTO
9gfZZlKsWf9tDdtCiven7yezLaWI7fErkG2lmWfq4swepXm+CR/GsCFFwYOS
PmxrKYIXlumxbaTwtNb/oUeeLkXXz9nP2PZSHKiyvsJ2kmK1eNAhtosUWybP
Xs92k6Lxjr0ZbA8pxvSyDmN7STHArPkCto8U2iObTGcHSDHqyrBhbJHmfcxf
3YMdIoWVyLIlO0KKBbF/v7cix2j2b/b7OVssxWe12XV2khRjN2edYEukuH+s
23Z2phQTPJ7msqVS9O5wK4mtlGKh77cgdp4UDats5rNXSzG88cXp7HzN83mF
j2BvlKI+baYJu1CKVY3mtWfvkKKJh0KbXSRFa/O6Ty3J+6XY0SD5CbtYiru+
YyvYx6TY88P4JLtEirk2Q3axz0rRombpGnapFP+Jbmayy6TICV8Yw66Qok7d
MYB9U4qMxd/nsiulyE9sMJ39QIrklIGj2FVSpOimmbGrpXixt4khu0aKJx12
tmC/lWLzvYg/LbjfUsxe5feB/UXz+/oZX8Wul2LnqhPX2L8079/I6AxbS4Yo
s8372doymHrbb2bryPBkadc8tq4MRp9bpbP1ZLBWG8ew28ogaeC2hG0gQ6NH
BzzYXWTYeGvgTLaRDIMUVyeyjWWwOZ1txTaRYVarpf3YZjLk9RF1ZVvI0O2w
TJ9tKcO5ZTe02VYyWGgPqdfl/stQbnjwDRsy3BQ5P2ZbyzB6d7sbbBvN92V8
Ps+eLsPrwx+OsO01ftd0N9tJhpIH4zawXWToPio3l+0mQ+zppplsDxl+914h
ZnvJENN9YijbR4ZsvxZ+7AAZwo5+dGeLZOhb/nEmO0QG23ktprAjZBhobD2G
HSPDjUeqwWyxDPemNDRlJ8mg6pHWlS2R4Ufvvm3ZmZr82j1vypbKcG3n4b/N
uf8yLNi95Ss7T4Zb93a9Ya+WYdrH8ifsfBnE+5tUsjfKUPbCpZxdqPm9TTt9
lr1DhiabJhxlF8lQUPxgD3u/DIVTswrZxTJ4G81axz4m0/z35mA1u0SGZrtN
s9hnNc//dUgSu1SGyStdotllMlR6y5axK2Q4bFTly74pQ2el9QJ2pQzFaSdc
2A9kqLhsa8+ukqFfr0+T2dUytFuwfSy7Rgb3aZHD2G9lmFM015xdK8NdN8c+
7C+avLvO68aul8HydHQH9i/NeYddrdhacnx587kJW1uOM61stdg6crg7Hq5v
xv2X42+i1Ue2nhzOoZdesdvKkfZtyVO2gRyWD3rdZ3eRY9HX9zfYRnIUtLtU
xjaW436rQ+fYJnKEHTpwgm0mx+Sqc4fYFnLI3F8WsS3laNSk0za2lRzFu+Zt
YI+Sw6rf3tVsyBHq2EHNtpaj9EdmDttG835+tE5jT5ejR9+tCWx7OZ7OnxHD
dpLDJKRxGNtFDtuxl5ey3eTQXZnvy/aQI3FesifbS45BnpHz2D5yfEuKmc0O
kEN/TbYDWyRHl5Td09ghcrTp/HgiO0KO6cMMwY6RI+qg7wi2WI5tIWct2Uly
jLfrb86WaN6n0UZTdqYc2hdMjNlSOfYbHe3KVspxt9ncjuw8ObI9ddqyV8sx
oemZlux8OY7eS2/K3ihHi0PztdmFmt/H8nF/m3L/Nb+nlhY/2EVylNv0+8re
L8flFoNr2cVy3Bo9+Q37mBzVhxe/YJfIMcZT+YR9VvN76HzlAbtUDp+z+pXs
MjmAhTfYFXIsCzpRzr4px/ERvS+xK+XoE7fiHPuBHFo9DE6xq+So+q/gGLta
jk36w4rZNXKE9L6zj/1WjkOmCbvZtXIYalltZ3+RY2V2/WZ2vRzeR84UsH/J
Ue+zYi1bS4FW4siVbG0FCp97qtk6CjQUu8jZugqsHjI7m62nwJB389PZbRW4
nLUshW2gwKo/2QnsLgp063Mglm2kmf+hOoptrIDHmK7hbBMFxv/2CGabKdC9
7c6lbAsFNvg3DGBbKrDtrYcP20oBB3GpF3uUAu9aDV/AhgLNkvfOY1srEHjR
0pVto0DrCyed2dMV6O8zcybbXgHT3A8z2E4KbBqjnM52USBsyrgpbDcFthTU
TWR7aM6H7B/P9lLA+V3kWLaP5nkPTB7FDlCgTbThcLZIgRsmP4ewQxTw3141
iB2hgM2HK+bsGM2+T06bscUKiANPmrKTNO8v/kxvtkSBQ82u9mRnKtC47okR
W6rJY+AvQ7ZSgfNbDTuz8xR4YDvJgL1agYjmYe3Y+Qo8rNjRmr1RgcjM163Y
hQrUmJm3EPqvwIf8qGZC/xWIu1PWROi/AvtP9mos9F+BmzbJDYX+KzBj4Zu/
Otx/BU78nP2bfVaBZ9qXf7BLFdgaaF3PLlOgR++zX9kVCqR1nfqZfVOBcZNv
17IrFbgu9XnPfqDA2zdab9lVCiyasu4Vu1qBkSsnvGTXKJB59V01+60C6++t
ecquVaB6x8wq9hcFng9r9Yhdr8CcwIr77F8KdBibe5etpUSndZ532NpKiOOG
3GLrKJF2XfcGW1eJFemvKth6SgxZebmc3VaJRl/2lrENlChLX3eJ3UWJSAdZ
KdtIibYjJefZxkpcGJF0lm2ixIMJyafZZkqcmJJRwrZQom6s+gTbUgmzTpuP
sa2UMC07coQ9SonrU24Ws6FEv9RPB9nWSsyOaHeAbaOEWn/0PvZ0Jawn++5h
2yvxsMXK3WwnJb7NubqT7aLEJKOmO9huSqycNXkb20OJx+/TCtleSnR5UrGZ
7aNESPcum9gBSvTa5L+BLVJCsuDkenaIEnrTO+SzI5SY7hq8lh2jxLP4G6vZ
YiXyioetYicpMfHLuhVsiRJVfXXz2JlKhDvGqNlSJSwW1CrZSiWm2foo2HlK
dGtRLWOv1uyX6yll5ytx6cmLbPZGJS4+C8xiFypxVVGfwd6hxLaalHR2kRK4
a5DG3q9EptuuVHaxEvm+k1PYx5TY/O1ZktB/ze/rd2Ki0H9N3sF9EoT+KzHW
vlws9F8J54yIOKH/Soi69I4V+q+E1c/bMUL/lQjolhEt9F/zPsXjo4T+KxHd
4XeE0H8lRtw/Ei70X/N7PhsdJvRfibBLY0OF/isx48V/IUL/Nf3Tu7ZM6L8S
H8auDRL6r0TykiUiof8qTFWOWyr0X4WbWzssEfqvwpUttQFC/1WoTSnzF/qv
gi62+wn9V0GrLNNX6L8KJ3oG+Qj918yDy2Kh/yoUdxq/SOi/CuY7BngL/Vfh
xTtDL6H/KvS628pT6L8KExdrLxT6r8Ju2U8Pof8qPHL4Ol/ovwpu6z+6C/1X
4Uxk7Tyh/yqcvPnRTei/Ck13fJ0r9F8F/+8/XYX+az5/UFuwkwrvH7aaI/Rf
8758DF2E/qtQ5tB/ttB/FfLkY52F/qsQ2ctpltB/FTZo+zsJ/Vdhdt+kmUL/
Ne9Hus5R6L9m/0HHHYT+q9C12UN7of8q7NT/O0PovwrPJ/QUnKR5P6um2An9
V+Fg62W2Qv81z7Nx9XSh/yo8nXZxmtB/FcY0qp8q9F+FnHMmglercDRr7hSh
/yrsc5baCP1XIbzzhclC/1XQv/N3ktB/FVYkjRBcpMKgbuEThf6r0KLggLXQ
fxUW6dRNEPqvQpKtleASzfMExIwX+q+C34LT44T+q/CrdzPBZSrUFM+E0H/N
+269bqzQf83vzfztGKH/mufRHSn4gQpVBRmjhf6roF37cJTQfxUGfhgouEYF
s9WpI4X+q3D606MRQv81v6f3wwR/UaF/pny40H8Vrp1/byX0X4WildMFa6lR
1mjHMKH/alj80RWso8bH5KVDhf6rYZ57Y4jQfzX0BwwX3FaNy5PyLYX+q5H3
UEdwFzVOvF82WOi/GhlhjwYJ/VdjdtA0wSZqJN4/PFDovxqRe0wFW6ix/cNK
C6H/aqjlLQRbaeap482F/quxp75ugNB/NRofCBRsrYZL6fP+Qv/VcDCfL3i6
Gute3DUT+q/Gj9ezBDup0X34jX5C/9V4eMVBsJsavzdd6yv0Xw3XE46CvdS4
0eaWqdB/NWZscBEcoMZJ34cmQv/V6OjlKThEjbk5r/sI/Vcjs2aZ4Bg1Dgf8
6i30X416g1TBSWp4vW4tWKLZ59G6XkL/1Zjzsb9gqRpjuh83FvqvRlN/W8F5
any//Kin0H81Zo0LEpyvhl+ptuCNmud1X9FD6L8a7RqYC96hhs/Oc92F/qvx
xmOe4P1qtOxYZyT0Xw3rGzmCj6nRLKuv4BI1qiac7yb0Xw27rwsFl6rxdK2W
4DJNP8as6yr0X43rFWME39Q8n9NjQ6H/mt//ebHgB2q06NVTcJXm9xx4vovQ
fzWUa/wE16jRaV8rwW/VuLr9QGeh/2pEJbsJ/qLGq9HaguvVqL2+o5PQf83z
jXcWrJUL83Qtwdq5MCnc3lHofy5GrZwtWDcXc9y1BevlYtmnPQZC/3MhdvIQ
bKBxQivBXXIREnWyg9D/XHiOEAk2zoVrSXfBJrnwa3azvdD/XGxtnyrYIheD
no0QbJkL4yUf2gn9z8XGAxsFj8rFvUOugpGLL8v0BVvnoufz0rZC/3OxTjde
8PRcFLwcLtg+FwEhn9sI/c8F9uwU7JKLxat9BLvlor+lsWCPXDwNq2ot9D8X
9xeuEeyjeb91roIDcqFt0fH//D/orRF6
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxd2X98zXXfwPFzFZHUNaWsWjUuV1YtHRpWhjdWDlYORoupg+FgtrPfZ2s4
RhwMh4ZdWjlKmfLjqGGV6lQr60o6Siyh48fNaHJIddLidj/u8znf73n1T49X
332e73087Hj71nFC9ohJ1xkMhh9bGgz/9+///yfQb8ugYyXtt5zvF/oPsuJP
31tvzlLdWr7ak9Vm8NOqo2Tf+GO3/RKjur2c3NX/yPyzv4Q6Wt68+Z1j1+1U
HSNn4o9/NKxMdax0fPCHE2kpqjvJQt8X8a1uV91ZZp/tMFkOnwv1/TLx+L4t
p9apjpOre4JbDk5S/aC8tOjw8p+7qI6Xu8a9vOnX002h7iof/rPr5to3VBtl
1U3v3xW0qO4mfxW9vddyp+ru4jw26rsle38O9aOytcdbG67MVp0gl7aPibrp
YdU9ZEDP0wf27j8b6p5y6bqpO1oWqu4lx7/I+r3uFtWJMsvTK/unl8+E+jH5
NTn9uoEdVD8u7Re2HXUkpzHUvUVG9jl57vnToU6SyTNa/ffefNV9ZNqUBYuH
OFX3lanWw+1yqlT3k1tnPJC8wqNapP+Hk1ptqQu1QyS+d1zfugb1vL889Etm
/f4m9by/3Nwhde5PBvX9DJDMlodMJ9uH2jFA/rln/vnjcer5QHnkQPshPyap
5wNlQ7+bu3xtVs+TpcPWNHNthnqeLNFDPltUZVfPn5DW3XJXFper50/I6k9M
Dwxzq+dPStnm3sGYGvX8Sbnno2Wbju9WzwfJ2lP/aFz7o3o+SB6OOjAg9bx6
bpJB33855Op1oV9vh0lKuzfOcd+hfv0HS3Lb3uN6PaieDxZn6jMDP+ujng+R
Ha94Fw0crp4PkWntOtp3ZqjnQyU2ZmTSvXb1fKjUfPT4xcLF6nmK9MqbUeV9
VT1PkZrrN3a6vE09f0pidt49rNPn6vlTsuxC2Ve9GtTzp6XFhbh7H/tZPX9a
/lm/983OV9TzYXL+oZUvB6NCv98cw8R4698t3/2X+v1nlkdSYr3De4ZazLL7
t8G535rU15ulbYd7l3cfG2qvWbbmzU/PnqHOD5dVHdb+9OJsdX64NBUdvZC7
XJ0fLs67C8tHv67OD5f9zS+P7bZdnR8h3x1M+df1u9X5EfLZI2Pe+KpBnR8h
J54asW7RWXV+hOTdMWV/v2Z1fqS0fmPkn2dvDv38yUipdEv94vtC7Rgpt/fa
8HvHbqH2jpRtW7v32jxA/bymyogy92MPp6rzqXLT8VffWjdJnU+VUxs2Ptqm
SJ1PFc+i/ymZ7FTnR8mlZX922vEfdX6UnF136r/Bt9T5UbKlx5Gbu+5S50eJ
vylq7qiv1fnRsuWeRR9mHVXnR8uT8b8NLT6vzo+WZnd2bb4h9HnkHS0/nhrh
tLRTn0/PSLe1zb2TOoVanpFtRRVPt3o01I5nJCP3mx6fDFTnn5E1Ls/4qanq
fJrU7H8y6WqGOp8mZ5ZbHygrUOfTJKll5vwLL6rzaXK615GNKavU+Wfl5W7d
Tqx4U51/VoY7C0s+26HOPyuDMq73HPlCnX9Wet/ZcZf/gDo/RnLLtu/96pQ6
P0Y+GHf2lld/V+fHyLcXv10z+obQ57l3jJRaoxZcul19vo+VO6TgaOG/Qy1j
JX5x9brDCaF2jJWaJV9+0TlZnR8r97/e/rGnR6rz6dJl0qKGZyao8+myU9YU
S446ny6nDu07eYNDnU+XD/wrDmxcqs6Pk6H37bvS5RV1fpxsv/FHg+NtdX6c
bO30SJ7nPXV+nAy6Y/xPO3er88/J2S3tPq34Xp1/To4k/L3oiRPq/HPyvbHz
K/UBdf45af3HrcNirqjzz8uEr1N+7ntT6M9LeV5anv3J0zU61I7npexsl/1n
Oofa+7x0eb9udlY39eerRfrdt+f79/uEOtYiY4cmXdgzWHkWGbd7++nXRoXa
YpGdh8u+eny88i3S+t8XN6/IDLXbIps73vhadZGaZ5HUVSs+LlF/3vstcmHv
ovtbLVHzx0vUuTPXpaxW88fLp19+6Rq0Ts0fL/9z4lhs8C01f7wM622+J71G
zR8vzzWtuyX3QzV/vKQHb1yX+IWaP15evdmzccteNX+8XChvfui7A2r+BGn+
+NPn3jiq5k+QjPn3b+t8Ss2fIHVtor8xn1PzJ8htW/q+8cAlNX+CfLs2PmPr
ZTV/ghzes6PsuCG0D3knyA3Rwz/+7IZQ+yfIV/GjYlPbqn1pogxc1OnXinah
jp0o7v5R/11wR6hlopzY92hx17tDbZkoPY/edOvi+0LtmChflcQdXfuvULuv
ff27l9Kyu6j5E+X2u7+Oa35QzZ8oDxlWdhjcVc3PkIRHr7Z5tpuanyH7Xv+4
uWuCmp8hG67/4eLXPdX8DOnZrkcw8TE1P0P+OrD19rzean6GvLRwx9DZfdT8
DCm3rCi39FPzM+T+57J33tlfzZ8k2y7dX7F5gJo/STrIN9/cm6zmT5K49Bsv
Zz+h5k+Sh6e3mPv6k2r+JPmjc5f3Pxik5k+SrIHDvn7fpOZPknnbKupfG6zm
T5LpP81cVTBEzZ8s546vMPQYquZPlqXH+niOq5bJMqWs8RFHipo/WVK2DWq6
5Sk1/1q/Ud/Dpdo9WUYfuG1AS7UfeyfLhr5VD2er9k+W9w51/3tveH+eIhcP
rl7772Fq/hS5o3uL83mqZYqs82x4533VlikyJyHafVm1Y4o0x3nSE8xq/hTp
tu7QLKtq7xSpMaUsW63aP0UOfR7X5lPVBqs0vtTe0qg61iqz3nj0jzbD1Xyr
vD329vgHVVuscnD+0hFPqnZYZePgsh3Pq3Zb5dW6NVWFqr1WKZt1ccBi1f5r
/tytx15RbZgqp7otf3uL6tipUroxZ++H4flTpWb3B3lfhedPlZkVB7wHw/On
yhN/zD94PDx/qiTPMh1oCs+fKseCrzT8Fp4/VX5YNeaPv8Pzp8mgbidNLUeo
+dPkxjHZx25SLdMk5sMe37VTbZkm0c9u6NpBtWOa1LVYfV2Mavc0SX53Qnqs
au80udLQwdRZtX+a5A+r8HVRbZguA9uuv/pgeP508f1299GHw/Ony9T7LuYZ
w/OnyyPVI+u7h+dPl3+W1B5LCM+fLvl3/fZ5z/D86fLxh0NKEsPzp0vz7oLr
Hw/Pz5RDx96f1Ds8P1OKP7+4Pik8P1NKjlfU9QnPzxTr797dfcPzM2VwzaBt
/cLzM6XN8nfmSnh+pmzdM6R///D8TPn3l/c1hdswQ17+pO38AeH5M6TkwodR
A8PzZ8iBx7YvCbdlhuwb9vSVcDuuPZ/76cTk8PwZcm+X+I/D7Z0hZ6oWtnsi
PH+G9LvHOzbchiy5s/urr4Y7NkvW/HbkULglS17v0KXdk+H5WWL2RA0ItyNL
jpzolBVud5aMGtewMtzeLMlZv/a9cPuzRMyHfwi3IVsWxjT+Hu7YbGl78rZ2
g8Lzs2W4ozou3JZsca883Sfcjmz5xNR2eLjd2de+n6ETwu3Nlk7TD+SE258t
uzsenB1ug02uXldQHu4omwzp+t3qcMfa5Lyp3WvhNtrEc2Do29r3Z5NBzqp3
w222SYt5d32gfb82uf+NQ5+E22aTuh3nd2vfv03cG6Z9HW6XTTq+N+Zb7T42
qXjr6wPh9thk2dFvDmn3s4l/ZubRcPts8t2qzce0+9pkbWLVyXAHbPJzuZzW
7p8jr/2y7ox2/xzpfeWLn7X754i5Zvs57f450iU377x2/xxZFtXygnb/HHnv
XNZF7f45ciZY86t2/xy54aNDl7T758iXWSd+0+6fI/2b9v2u3T9HYvdW/6Hd
P0c+mDYtqN0/R1ofif5Tu3+OfN5mh9b+HFm4ceBl7f45snHgZ1obcuWRpJ5/
affPlQHfvaJ1bK489sBfWhtzpeOAYc3a/XNlf6uXtTbnypKnftLakisP7Iv5
W7t/rpzuk6q1I1cGdZ2vtStXfo9/V2t3rszc+aPWnlz5qK/hinb/XJkc11Fr
X6788U1frf258g/ns1oHciW4JkdrQ56cG7pA66g8GXBwjdaxefJ83iatjXly
//BdWkue/Fj1X63NedJv1kGtLXky+s4TWtvypMfSc1o78iTp8u9au/JkRNFV
rd15MvGeVle1++fJyn/corX32rxe7bX25cmL39yptT9P/vzhXq0DebI9419a
G/JlemkXraPyZXL8Q1rH5kvr2V21NubL8JndtJZ82fVIgtbmfDn9Sk+tLfky
YW+i1rZ8WbD7ca0d+bJkaZLWrmsd11drd760WdNPd/98+fWU6O6fLx/fOkB3
/3y5qeNA3f3zZVb7ZN398+Wn87o2FIhr+xO6+xfIa1Oe1N2/QB5qPUh3/wLZ
XKlrKZDb7jbp7l8gRS5dWwrkrsu6thVI/rODdfcvkH5bde0qkKpmXbsLZMSA
Ibr7F0j0HF17C8Tznq59176/Jl37C2TjXUN19y+Qvwbq2lAoo6fqOqpQ/l6k
69hCGb9R18ZC+U+drqVQ7jqia3OhxP2qa0uhxLRK0d2/UG64U9eOQun3gK5d
hbKvl67dhXIlWdeeQmkw69pbKEVjde0rlOhJuvYXyu4Zug4UymsFujYUybul
uo4qkl/LdB1bJB85dW0sksYlupYiWb5C1+YieW+Vri1FkrVGf/8i8b+iv/81
z62/f5F88Lr+/kXS6039/YtkXrX+/kVif0t//yLpu0l//yL5ebP+/kVi3aq/
v13e8ejvb5cj2/T3t8vVd/T3t4v/Xf39r52v0d/fLs7t+vvbpd8O/f3tclbf
Drvk79Tf3y4BfbvtklGrv79djurba5cR7+nvb5eP9e23y2V9B+zS/X39/Ysl
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
vDR46fAs8DLgWeFlat7/AuSSV8Y=
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxd13dcFNf3N/A1sZDEgooJsW6UGDSoqPgVI5iPHRUVFRX7ShFQlJXeWWCB
BRaYLSi2iIoGO3ZsERUVjQU7xoYdO7aILf72eT3emTPXf3y9PffcM2fO3J3x
J+/gsX5fKRSKq/UUiv/39///U/P7pqG3Ymw2Pf/9yz+gb6Y66tuBzFbYuWz3
iRnnn32xNR513T8jZjqzDSKbXt2Tf+fpF9tC5Ri69OBM5tY483akYe3lJ1+s
RLSicVTqQOb2yOsy59iOlY+/2A6rT6es+/7Foy/uiEUry+qM/4XZHg0ck8bu
6fXwizuj6+Ttm+IfPvhiB9T9ccLbUR+Yu+Kd051LTRpVf7Ej6jg/fHSgLXN3
LPGxOT3dkbkHOnh3tn3Sn7knqt3rT/cfx+yEej8v6F7hy9wL+65f+aljBPP/
sOWHu3sC0pl749aGa6kL85mdMbdLvW+2rmXug9i5B47t2sP8G4YOWjCg6G/m
vmi61O1t8jVmFzR/eUk19CmzK/7wNb19/Ym5HyYHOXXPaszuz+9QTn2k+aYd
M/CmNHJicLcv1gDZu9077Pudxfuj3eTVHs9Hs3h/zO26fpiVisUHYHn1ooj6
ahYfgIdDH7g+TGTxgahxnVe3OJfFB2LV+GVdJi9n8UHQTSpq9WATi1vcY3+3
CX+x+GDYv+p7Ys0pFh+MrE8vhldeY/EhaNXFq+mjxyw+BOX3z8ddfc/iQ/HN
0/dP1n/z5XnRDEX56SsHJ9uy58cN6Ydcpj7oyOJu+Hn3+zZjerH4MLyfO2D2
woEsPgzJTg9X7x7D4sOR2W9v710zWHw4Hluf0uXOZfERGFN5qu6AWBYfgfgR
k1ue1rG4O+6Vje7bcwGLu0P/W7vr6lUsPhKJJe2i04pZfCS2K6r0oftZfBSu
v4hY3PsEi49CwoRz9ucusfhonNn/ddmAOyw+Gp3rZH3SPWdxDwS3/COo8MMX
wwOxL+duMjf4cv40Hnh21n/WpOZfXOqBkPah/V62ZedzDMb1/PXB9M5fjDHw
3G1ju7wXyx+D+GOnc7eC5Y/Bxbq/2ywawfLHYu3DkpCxE1j+WHS81E5zQ8Xy
x8L/6tc/us5h+WNx9IfdP80LZ/nj0DI3MG1+Issfh3nBP/UdmsHyx6F0z8W+
z40s3xKf4KcPXMryPZGiMzvvXM3yPfH9q688L25i+Z5w+Ln1+6O7WL4nzt/8
alRWKcsfj5dOkTHtj7P88di/ftcW/VmWPx57lk7rcuIKyx+Pcx+dul69xfIn
4Nr5Jh8PPGT5E7B6ed69qBcsfwLaVzdG/XcsfwK8RnbxD1Cw38uJ2DipYt/y
Bl+MiWgy61jRhsZfrJmIwhtCfm6LLy6diJu9f/js1prleyH67hzPK+1ZvhfS
l2pa9O/E8r0QNPjmYU03lm/xcdW9/F4sfxIUDne+zuzL8ifh946fN3j2Z/mT
0Ne8f/67ISx/EjTv3O9HubP8yaiv2rXi/BiWPxkRZ/Ndv53I8ifj6z8vjW8z
leVPxvnqibpGM1n+FMx/8VfYVT+WPwWd0uz2pc9m+VPwjeGConkwy5+C+4UN
78eHsvyp+Dd4X5PjkSx/Ktq6urV/E8vyp+Ld8pGHvtKw/Kn47DPb/DKF5U/D
+nP1XI+ks/xpGDWztSo2i+VPQ+fzjVa0yGX50/Cqcu5Ks5HlT4eN0+V67/JY
/nScnnFwzsBFLH861pV6hYYtZfnToZg4aY9+OcufAZvnj6/pV7J8i4+lhoev
Zvkz8LngROuhRSx/BnY4zQ/8aj3LV6Hu6041f278YqUKOc10A52L2X4quJY+
ebVt6xerVDiiDctttYPtr0L/dfdXBO/64gIVTq9cs714N6ungsP4P0fd3PvF
VSosclG9/rCf1Z+JekPKfmlQyurPROKE3wLqHGL1Z+Kp78Iejw+z+jMxu1nL
OkeOsPozsWO9/4jcY6z+TOQnZqYNP87qz0TT8Bd2b0+w+jNhd0q9IO8kq++N
yE8D3TqeZvW9kZxjvXrtGVbfG6+ePLRRnmX1vVHz44RPGedYfW8Edx538MF5
Vt8bQSnTDva5yOp7A4cjpmgusfreaOzW5fFe8fvHB3MGFx5/Usnq+2DwpKUj
m//D6vvAyxz3d7errL4Psh5MyRtwjdX3Qf/H334YcZ3V98G6V22Gu99g9X1Q
Gfj21MCbrL4Pbk45d6ZHFavvC8Hl1IIfb7H6vthy/LV/LTN80b3J6LQzt1l9
XwRr7vdYfofV90UP5cUN/ndZfct+m0d373SP1ffF2hvFH+4wV/nicJR2cP59
Vt8P36cbhwx5wOr7QevzyOkZM/xwbM/TQUI1q+8HZdiUtQ4PWX0/FGsmmw4z
F/ihmV7bY/wjVt8Pvpk1228xV/lhhp3r0MDHrP4stPmw2OYJs3IWao5cGjL7
Cas/C7cH+NS/y6yahYefvGMmPWX1Z2HToy3lJ5gLZuF/Z561cH7G6s+CVYI2
dQVz1SyU3t3ap8FzVt8f5bcXjgtkVvoj4t/er44xwx9/b0/r3aGG1ffH7CbB
/WKZNf6YMeeqXQVzgT+aJu2v3/4Fq++PV82//6xmrvLHoOCPv+xnVgRAu3v1
4vovWf0A+DcPCh7JjAAY0i/uNzCrAlBzYvHS88yaAMw6u/Gn5q9Y/QB83w3e
HsylAVjmeTwki7kqACOEhv5lzIpA9HrVduwHZmUgbtWdO8TxNasfiCeDSsf7
MKsC8VXeIIOZWROIkbOzvyljLgjE7ouLT79gLg2ELvrG8zZvWP1AdB6CODdm
xWx8atgheT6zcjbaWwU2WcSM2VB3iep+gFk1G6bJ/d7cYdbMxvKgXv4N/mX1
Z+NRe39TJ+bS2TjwRp06nLlqNnKep7vNZlbMQXB83AMds3IODh3dG7SGGXOg
uD/h9iFm1RyMafv12BvMmjmwLWtzpFasPwejF20e1Owtqz8H76OCr3RmrpqD
jc5HsgYwK4LQcNpJn0nMyiDsvjkhMJgZQZi+6vkqLbMqCNon11ouYtYE4cqt
9hc3MBcEoU5J6pUDYv0ghCj0Xc+J9YOA65p/7oj152LP5/A7r8X6c1GzbfDo
erWs/lwU3jJ3aMGsmotWVy742TFr5iK6x+BWPZkL5mKe9o1bf+bSudja5tir
UcxVc/FX4TzlVGbFPMSuDT8fwKych0edXJqGi/Uttnl/XSPWn4d/N5a66sX6
87D4YazTQrH+PAw79urICrH+PNw2nnqzXqw/D+/sso/tEOsH43nDBf0OiPWD
8b8DDtPLxfrB2PFnZKezYv1g1B2sWXVFrB+M7h2dztwS6wfj9Wu/zQ/F+sFY
7nN6yAuxfjBqfmiUXyvWV+O3xWtXf2a2VuPkLzYh9d+x61Hj15w1nxsyO6rx
ubbQozkz1GizrZ//j8wearR9kDO4HbNKjf5Tlj21Y1arEdd2xszOzBo1HF13
rezGLKgxfFLkNifmAjX+Gq/K68NcrMbZB+2H92MuVcOqm+r8AOYKNS4NXtdj
KHOVGg+OawNHMNeosX6mX/RoZsV8GPpt9xnHbD0fvYwnO00U+5+PZd9+OjlZ
7H8+HgzXjZou9j8ffUat3jxT7H8+tlxLfOEr9j8fJ545twgQ+5+PW00etJoj
9j8f/Q8uqD9P7N8SPzf8klrsfz42//UxK1Tsfz6611lmHyH2Px9h/s03Ron9
z8f+mb+3jBX7n48Go2vV8WL/87H8RKOtiWL/IbhXM/RGkth/CJ4V+v+bIvYf
guLLHT+kiv2HYOwe56fpYv8hSGk8/FSG2H8I5o6rszRL7N8S/+7zpGyx/xCs
enS9Qa7Yfwi+adxzjSD2HwL3bjm9jGL/IWh7PXqnSew/BI//iO2UJ/YfgsG/
2uQuEPsPQUvDgQcLxf5DsHbOm56LxP5DEP/RPmyx2H8odk47XrRE7D8Ul//s
f26p2H8oTjV7V7NM7D8U91qPq7dc7D8UnzZsblIg9h+Kod3nWK8Q+w/FHwdv
NFgp9h+KIFfVv6I1oQgIGnBtldi/5XpsLu4uFPsPRVw7v9zVYv+hcF3nMm2N
2H8o7v+8qsOfYv+hWBV8/bboqlBMvd9lSZHYfyhiUy+4rxX7D0PE68a1oq3D
4FZou2yd2H8YVl7t7LJe7D8Mr87HXRSNMKSWDQzcIPYfhl3vtr4VrQrDk9sf
NBvF/sNQ6zCq3iax/zA8PXRZK1oIw9onZZ9FF4ThznhEbBb7D8OztqHVokvD
MPO5dkKx2H8Y/n2/pFR0VRg2/nC94xax/zAcLpuTIVoRjgF9Z1eLtg7HiNB3
A7eK/YfDv3efpaIdw2H81e2FaISjxaWBA7eJ/Ydj4iY3o2hVOMZ2CLkhWh2O
4YX//LJd7D8cD4uXzBMthGPG5VNbRReEw+Wo7rXo4nCsG3On5w6x/3CcD3+l
Fl0Rjh2zTq8XXRWOP0y6u6JrwvHb5l6tdor9R+CX7dWjRVtHYPvzbcmilRH4
u97abaIdI/DTq8rbohGBU608rXeJ/Udg8bDOLqJVETi4ffYs0eoIKL61yxWt
iUBQkO9O0UIEzif2uSa6IALuvsWKErH/CLQ/dLGD6NIIRJ7eMVh0RQQOj5o6
S3RVBMbnXUgVXROB3kKnQtGKSPQ84XdQtLXFAabropWR+LvnvlrRjpG4uvhh
s91i/5Hov83OQbRHJBoPiBgkWhWJhJ33p4hWR+KmU0KIaE0k2i8YpBMtRCIp
oP8y0QWR6PJv7BbRxRYP+VAmujQSujZHL4uuiETmV3ceiq6y7NfP64PomkiE
3/614R6x/yjMKvNpLdo6ClYZ9RxEK6Pgv+T7vqIdo/Dsf0uHiUYUyvyXTBTt
EYV/G/zoJ1oVhRXHfwwRrY7Cua4rE0RromAy7MwULUThpt2UBaILonDmpWmF
6OIodK7y3SC6NAohm8/uFF0RhYT/rpeKrorC3+7ZJ0TXRMH2ze3zUv/RQK/b
16T+o7GiS849qf9oqO48fCr1H42+v9W+kfqPxuz/9n6S+o9G2J3e9faK/UdD
kTSvoWh1NMZM8W4uWhONLVdatBQtRCNnTJZSdEE0/v5c1lF0cTTONTziILo0
GoKQ3UN0RTRcs5XOoquiEfki0VV0TTSUizYOEK2IQerY9UNFW8cgoTLGXbQy
BimX24wR7RiD8Y/yxotGDOwL7k4S7RED1/Dvpkv9x+Dwte+8pf5jMPy3B35S
/zHoevePQKn/GHzT0Wmu1H8M1rsWqaX+YzBt+sdQqf8Y9NvYPVLqPwaJw4fF
SP3HYMOwQfFS/zHw3NJBI/Ufi4lJ1clS/7FwLjalSv3HIseho07qP9Yyr4JM
qf9Y9DbXzZb6j0W3rmNzpf5j4RuRaZD6j0V2j00mqf9YJLb/K0/qPxYz3u9Z
KPUfiz+DVi+S+o/FyPYJS6T+Y7H9wOBlUv+x+HDv4x9S/7EY0KmwQOo/Ft5t
XVZK/ccBnkdWSf3HwdYTq6X+4/B+6cY1Uv9x6L+1UZHUfxzuNpy5Vuo/DhOU
Reuk/uOgnHlnvdR/HKxcmm+U+o/D9VbOm6T+45DiM3az1H8c1OHexVL/cRi0
JWCL1H8cZof4bZX6j8Nr60nbpP7j4HZj4Hap/zj817XjDqn/eFR6KHZK/cfj
F+GcZGU86vVatkvqPx7TU1UlUv/xUB1pvVvqPx69nM9JVsVD0Sppj9R/PL5d
32mv1H88Hrc/KVmIx5C9Afuk/uPRaN1nycXx0HUw7Jf6j0f6pDZ/Sf3Ho0NC
oeSqeGwr7XhA6j8e3UYUSlYk4Ll7m1Kp/wTEPjdIVibgw+SvDkr9J2DrjnmS
kYC7P1+W7JGAmFN9D0n9J8Dm/FLJ6gS0G/9esiYBHhGeh6X+EzDUc73kggT8
0eSz5OIEjDs0ukzqPwFLMpdJrkiAa3K15KoELCpzPCL1n4CgwAjJikSsytwt
2ToRWtf3kpWJmL7I+ajUfyICt4dJRiIqV22S7JGILTH3JasS0dO99TGp/0S0
cfCQrElEHYdkyUIixkzfKrkgEU3PVkkuTkTZgkblUv+JWLPfWXJFIn7w9JZc
lYjugZmSaxLx7XdbJCs06DLskmQrDbK6vJdsrUGno62Pi7bVYGjbfpKVGgwY
OF2yvQa9XeIlO2oQ9sMSyc4azL6xSzI0OLLkvGQ3DewmPpPsocHxVlYnRHtp
sOOlUrJKgwW3nSUHaPD89WjJag32dZ8lOUoDrxWxkjUaPBsmSNZpENCzULKg
QZXPLsn5Giy7c1xygQbdd12VXKRByr0nkos1OBz+SXKJBh5zG/0tzU+D/IrW
kss12L3mV8kVGpx+0UdypQYNdg+VXKXBRsV4ydUa/HVypuQaDfp3mCe5VoPI
+jGSFUmojkuVbJWEnAxBsnUSvnNcItk2CY1DV0tWJsHTa7Nk+yT8eqtEsmMS
Jjc9JNk5CQeenpCMJDhHnpfsloQtW65K9kjCjuV3JHsl4dbAx5JVSei58qXk
gCSc3fNOsjoJZoPipDT/JEz6tYFkTRKy0htJ1iVh6trmkgXLfoYfJecn4eKg
dpILktDyoJ3koiR0/baz5OIkdO/QTXKJ5X40dJJcmgT1cWfJ5ZZ+vVwlVyRB
s7+/5ErL9b0fLLkqCU2bDJdcnYQHn0dKrklC6Kkxkmst84scL1mRjIj/vCRb
JSPKd6pk62TcXTdDsq0lft5bsjIZTW74SbZPxvKTAZIdk7F/+RzJzsnoN3me
ZCTj1ju1ZLdkHE0KleyRjGYvwyV7JePZiCjJqmSsFWIkByTDsTROsjoZHlcT
yPyT8c8dDZl/MppfSSbzT0b5Xi2ZfzKuZ6eR+Sejw0gdmX8yfviUQeafDLtl
WWT+lvvVLZvMPxk+W3LI/JPxzS8CmX8yXHIMZP6W/R8ayfyTMf9/ZjL/ZIRG
5pH5J+PpxgVk/snoc2UhmX8yur/LJ/NPgVfjxWT+KUhouYTMPwXerZaS+afg
+xbLyPxT4Pv1H2T+KRj1mNgxBeYTy8n8U2C3ooDMPwWu81eQ+aeg428ryfxT
cOkdsVcKVm9bReafgthZhWT+KWjSbDWZfwoa7CKOSsGkiWvI/FPQ/gWxLgX6
1D/J/FPQx6aIzD/F8ntEXGC5Pz+vJfNPwaHVxMUp2P7TOjJ/S/184lLL/flu
PZl/Ck5FE1ek4NM94soUPB+xgcw/BZs3EVen4FzjjWT+Keg/h7jWUr+MWKHF
uh83kflrMT2I2FoL733EtlpstdpM5q/F+7HE9lr0WULsqMX4m8TOWkxuX0zm
r8X+mcRuWgQtI/bQIr2S2EsLZfMtZP5a7BlGHKDFggRitRa5W4ijtPjlDrFG
iyNNt5L5a5HjSixo8SCAOF+L9SbiAi0e7iMu0mLGfeJiLfTfbSPz1yLJkbhU
ixaexOVaPA4nrtBi6ULiSi1m7yKu0mLOJeJqLT69Jq7RYpr1djJ/Lex/JVak
InwIsVUqTs4gtk6FXySxbSpW5BArU6FdQ2yfit/2ETum4koFsXMqqu8RIxWF
tcRuqVj5zQ4y/1QMbUXslYonDsQqS7wfcUAqGo0mVqdi4XTiqFTcCyLWpOKf
WGJdKt5lEQupKFhEnJ+KJn8SF6SibBtxUSo6HyAuTkVpOXFJKlIuEJemQn+T
uDwVex8RV6Ti1iviSsv1fSKusvTbYCeZv6W/xsQ1qTj+I3FtKgJ/Ilak4a49
sVUafLoTW6ehqTOxbRoO/06sTMMvQ4jt0xA2gtgxDQFjiJ3TYJ5IjDRETCN2
S8NKH2KPNKwNJPZKQ9o8YlUaxocRB6TBK5pYnYaG8cRRlv40xJo0jEsl1qVh
v45YSINHNnF+Gv4UiAvSMM9MXJSGokXExWkIXkZckob/CohL0/CxkLg8DdVF
xBWW61lPXJkG7WbiqjQYttL5W/rZQeefhim76PzTcKaEzj8dz/bS+adj1l90
/ukwl9L5pyPwMJ1/OuofpfNPR8wxOn/L/uV0/umI/pvOPx0tz9D5p+NoBZ1/
Omaco/NPx6qLdP7pGH2Zzj8d8Vfo/NOR9A+dfzoyrtH5pyP2Op1/OobeoPNP
x4YqOv90eN2m80/HjTt0/umwv0vnn4779+j8LffjAZ2/Zf+HdP7paPSYzj8d
udSV6bB7QuefjpFP6fzToaKusfT3nM4/HYtf0vnrMOsVnb8OramtdfjnNZ2/
Dp3+pfPXwYXaXodxb+n8dWhUS+evQzWNQ4dcGnfTYd47On8daqi9dDBRq3Ro
8IHOX4cx1GodnD7R+evw6COdvw7fUet0cKQWuP3zdYikLtDhAnWRDta0XrEO
u6hLdJj+H50/53IdvD/T+etwjrpSh43UVTroqKt1+IXuV6PDFFq/VoejtD9F
BtzpeqsMnKa2zsBeatsMeNB6ygy8onH7DFRRO3L5zhnoSI0MDKXX55aBAnp9
HhlwpfW8MrCYWpWBdOqADPRX7CLz5xzF7afh8nUZeEstcPn5GWhUh7ggA/HU
RRnY/RVxMeeSDJipSzPQ6Wvi8gxE1SWuyMCKesSVGSipT1yVgd8aEFdnoAV1
TQbWUddy6xWZCKG2ysR5K2LrTCyhts3ELbpemYm11PaZ+JWud8zEW2rnTKRT
IxP1qN0y0Yfu55EJbxr3ykTWN8SqTIyjDsjExG/p/DPRjjoqEx2+I9ZkIo7G
dZl4T/cTMtGVOj8TG+j1FGSimsaLMnGRujgTPej+Jdz1l2biJu23PBPNqSsy
oaauzIRBNn8uXp2JjrL5ZyJFNv9M7JXNP0t+/62y5P1ZZ6E1vV7bLLySzT8L
l2jcPgunadwxC8/p9TpnYTU1suTPk1uW/PnzyEKEbP5ZaCObfxYcZfPPwmVq
dRYUdN5RWXhK56HJQrls/lnwl80/Cw9l889CT7q+gFtflIUY2fyz8JNs/lkY
Tq+nNAvB1OVcvCILJ6krs5DWkM4/C2Yar87CZ1qvJgt96fpaLq7Qw4vaSo8d
1NZ6/ENtq4cdrafUy/ez5+yoRzO63lkvv37oMbYRnb8eFTTuocdumu+lxzG6
v0rPnX89fqDPi1ov/72J0uMlfd40evl50ekxglrQ4zh9XvP1OEJ/jwv0aELj
RXosp/FiPSbReIkeZTReqkee7Pzr4UKvt0KPpzS/Uo/hdH2VHj/Lzr8e3ej+
NXp40PdJrR46akU2ttD1VtkYQutZc7bNxk5qZTayab59NhypHbMxhtZzzkYD
amTjPrVbNj7RfI9sWNN6XtnoQK3KxkS6PiAbV6jV2fibro/KxhpqTTb+R63L
hoZayMZ/dL/8bAySzT8bh+j1F2XjDn2fF2fDisZLshEom382cqjLOVdkI5Pm
V3L7VWXDhdarzkYYdU02zlLXZmMRtSJHbqsceb51DmZS2+bAj9ZX5qCdbP45
8u8Xxxw0onHnHAymRg7GyebP7efBXZ8Xd32qHLyk31MBOXhGv8fUnKNycJl+
z2ly4EzzdTlIp/sLOXhLnZ+DnrL55+ChbP45WCybfw70svnn4FcaL82Brez7
Lwc66oocxMjmnwMnWr/K0h91dQ6CZOc/B1tl5z8H2bLzn4sj1Fa5cKS2zkUb
attc+X7KXNSh58U+FwuoHXPhTX+fnHOxmBq5+Fb2/ZeLLbL3fy76y97/uRBk
7/9cvKDvg4Bc9KXvC3Uuesu+/3JxmO6nyYWS7qfLRRaNC7mYLXv/c/kFuSim
LspFFHVxLvyoS3LxWPb9l4vu1OW56CL7/efyK3MRSNdX5WIbdXUu3GTvf65e
bS6Msve/gF3UdQV53ErAc+qGgnw/awGx1DYCrGXfC9z61gIe0H6UAjrQ9Xac
7Tk7CPL+HAU0pPs7CfL74SygLbWLgABqCBhPPUiQf3+6cXYXkEjrewiYTp83
TwG29PvFS8Bd6qkCXtL1KgGdadxXQBGNBwg4RR0k4F+6Xi2gFf1+ChMwmsaj
BIRRxwmopus1Ap40JtYKWNOEngcBt62J9QLOUAsCSuh6s4DtdL98AVeolwq4
TtcXCLhF9ysUMIO6SMBC6g0CQqiLuevZLmAkdYmAVOp9AlTUpQLeUJcJGNuU
nkcBgc2ITwpoR10hYDNdf0HAO+pKAV2or3H5VZb7Q31XwJTm9DwL+M2G+ImA
jBb0fFv6pfHXlvnR/FoBN6g/CmhA8xUGOFDXNWAd3c/KgPM03tCAMdTWBrT5
np5/A67+QM+/Aads6fk3oJDGlQYU0bidASnU9gYk0vUOBhTQeo4GHKTX42RA
LI07GzCWxl0MaEvjMOB3Gh/Exd0M+I7a3YB99P54GNCP5nty98vLgAjqqQZs
olYZcITu78v1F8DFgwxoQu+H2oDlNB5mQAx1FHc9cQb5/DXcPLXc9eoM8KHW
G3CL9i9w+Wauv3wDHtHrWWrAZeoCA1bRfgoNSKbzLzKgnMY3GODyIz3/BqAl
Pf8GTGxFz78BHVrT82/AURovNeAEjZdxLjegF/VJA9pTVxgQRH3B0h/dv9KA
rdTXDMig11tlwH3quwYspP1VG/Ca+okBX1HXGFCf5r82wIbGaw3oQ/3RgLn0
/iqMmEHjdY1YS21lhA/dv6EROmprI/bR9TbcfrZGjKHrW3NWGnGE3h87I2za
0PNvlN9vByMKqR2NOEj3czJiG93P2YjH1C5G5FDDiOt0v0FGxNG4mxENqd2N
GEvreRjRhdrTiExqL85TjfCjVhlhRe1rRDtaL4CrH8TF1UYcovlhXL9R3P2I
MyKSrtcYsZlaa8QbOj+dEaHUeiNa0vWCEQ2ozUZ8R+vlG5FNvZRbX8BdTyE3
zyIuf4MRiXRexUY8ovHtRhTIzr8R7+h++4z4nbrUiDO0vzIjRlKXcz5pxG3q
CiMc6H4XuP0rjQiQnX8jd/655/8u97xXc/0+Mcp/j2qMcKfn5TXnWiOu0fUf
jdhFrTDJ96trkte3MqGI7tfQhOM0bm2Sz8eGy7c1yX8fW5tQh+6nNMnnY2eS
Pw/2JsTS/R1MmEDtaEIgtZMJ3WXnn8t3Mcl/b2GSP4+DuPpuJlTQebubMIra
g7OnCZ2ovUyoSz3VhB+oVSb595GvCZ1pPMCEdOogLq42wZU6zARv6igTRtD9
40wIoO9fjQmV1FqT/PtJZ8JQ+v7Vm7CVxgXL80DjZhOm03r5XP5SzgWW50P2
/jfBibrIJP9e2GDCNLp/MXe/t5uwiLrEJP+93WeS/36XmuS/32Um+e9puQn/
0efnpAklsve/Cfvo83zBBC11pUn+Prtmkn9fVHHr73L7VZugkZ1/E2pk55/z
axP+pq41YSTd76MJKmqFGV9T1zXjM+3Xygw7ul9DM6bKzr8ZzahtzPhA75+t
GV50v9ZmzJK9/80YJzv/ZnSVnX8zRtN5Ophxk87f0Yw91E5mhNH1zmb8TOMu
ZuygzxfMmEM9yIye1G6c3c3wpM+jhxlKGve09E/jXmZEU081y79nVWYMofY1
Qy/7/ufyg8xoTa02Y4vs+9+Mh7LvfzPKqOPM2EnraThrzfLvcR13fXrufgtm
+e+bmYvnc/svNcNR9v1vlv//oNCMZ7Lzb5b/3m0w46zs+597frab0UP2/jdj
iuz73yw/L6Vm/E/2/W/GMNn3vxm5svNvxmFar8KM/rL3vxkH6PVVcs//Ncu8
ZO9/y/Mle/+bYZa9/80YLjv/nGvMcJG9/824SverNSNZ9v43QyF7/+fBk15P
3Tz5+bXKw0nZ+c/DG1rPOg+Rben552zLuXUeLlAr8+S/R3Z5aEDj9nnoS+MO
efie2jEPu+n1OeUhn8ad8+BL93PJg2M7ev7zsITGB+XhHrVbHgbQ9e55+ElJ
z38eVlF75uFbut4rDz50v6ncfqo8nKNx3zz591pAnvx7KihP/v2mzsNe2m9Y
Hp7TeFQeZtB4XJ78+1DDxbV58veTjovruXyBi5u5/HwuvpTLL+DihVx+ERff
wOUXc/HtXH4JF9/H5Zdy8TIuv5yLn+TyK7j4BS6/kotf4/KruPhdLr+aiz/h
8mu4+Gsuv5aLf+TyFQvk8boL5PlWXLzhAnm+NRe34fJtuXhrLl/Jxe24fHsu
7sDlO3JxJy7fmYu7cPng4oO4fDcu7s7le3BxTy7fi4tP5fJVXNyXyw/g4kFc
vpqLh3H5UVw8jsvXcHEtl6/j4nouX+DiZi4/n4sv5fILuHghl1/ExTdw+cVc
fDuXX8LF93H5pVy8jMsv5+InufwKLn6By6/k4te4/CoufpfLr+biT7j8Gi7+
msuv5eIfuXzFQu78L+TOPxdvuJA7/1zchsu35eKtuXwlF7fj8u25uAOX78jF
nbh8Zy7uwuWDiw/i8t24uDuX78HFPbl8Ly4+lctXcXFfLj+AiwdJ+f8Hke3w
Jw==
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
h0UFxx7p+O86x17pSLjzP/8fuitLWA==
             "]]}, {
            Hue[0.5585438199983166, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
eMgHUTcl4UnrHiOoeclIeRhhSq2TDKOV5ZOp9ZNx4saPGdSGyajf0X0uNT8Z
hkbdF1EbJcNN8305tWkyDpSW2VObJSMrPsqRGsnwc+jrTm2VjOSdO32obZJx
d7d+ELVdMsaec4+gFiRj8bR9sdTuyTjp828ytTAZdbveZFCHJoNv+kZOLUrG
Pvu7m6jFySjw27uDWpIMaDx2UeckI0jSYz+1OhlLRxUWUecn436VaTF1UTJ0
a9WnqEuS8Tbpl4Zao33/3eZdpi5PxvfLUdeoK5Ox9tXOSta/9v0fO/Iv6z8Z
zwKOPGD9a/M47nzC+te+j7NRdaz/ZOy9YvWa9S+Giab1B9a/GCOe7P/M+hdj
i5PlN9a/GIcTr/9k/YtxJc6S10L7F2OjvKANtakYKxva6FKbiRF9a1EnaojR
2Se5K7WVGL7Nh3pQ24i1f1+50ZvaTozIiw/6UwvEMNtQPYjaXYx3N64MoxaK
YTOqYAR1qBieh0SjqUVipErnjaUWi2HbzJtILRHj9KBCM+ocMfTGWk+jVovx
yu7xTOp87fOWOc+mLhIjYe/DudQl2u83nr+AWiPGzYi9i6jLte/vwi8b6kox
OoyZa0tdJcanF3GrqGvFqDA4ak9dL8a559VrqRvEmB/xRUDdJIbrX21cqHkp
iMrV2UCtkwLvuNae1PopEF/+5EVtmIIc5T1fan4Kag0O+bP+UzDQIzaI9Z8C
SfG8UNZ/Cj7w20Sw/lMQeK04ivWfgidV60Ws/xT4b2yJY/2n4EueMpH1n4Kj
uweLWf8pSJPuTmX9p+BR4qAM1n8KNufKs1j/KZjV4ZeU9f+/+9cqWP8p6DGm
WMX6T4GBUbtNrP8U5NUt2sL6T8Gg2IxtrP8UxPS5tIP1n4KFN77sZP2noOBY
vzzWfwpcP07bzfpPwT3linzWfwp+X3Dbx/pPQbhCWMD6T9H+/y7gAOs/BfqJ
PkWs/xRIq5wOs/5TYTbR5ijrPxX3jkwqZv2nos6rZwnrPxVxoR9PsP5TEfWh
9BTrPxULX2acYf2nonPI8nOs/1RkH+9WyvpPhdvZa+dZ/6nYuzP6Ius/FbNC
Rl1m/afinO3tMtZ/KjyWBFxh/WvzRHa+xvpPRc3H3Ous/1QcPzv+Jus/FfXN
ZypY/6mwOGtxi/WfCtue52+z/rXPazjtLus/FZH3i/5l/adihRv/Pus/FT73
U6tY/6loPb2hmvWfCr29NjWs/1TMHV3wkPWfipE1rR+z/lPReMH2Ces/FflN
O2tZ/6lok/rmKes/FRLxmOes/1TktPGpY/2nYUznvS9Y/2kYdezJS9Z/Gkx0
u9Wz/tPwT2+8Zv2n4fhXjzes/zS4F2S9Zf2nIdL60DvWfxoS626+Z/2noTau
/gPrX/t9E39/ZP2noXVH/U+s/zSI9Qd8Zv2n4dFyo/9Y/2lwezbmC+s/DXZX
xn5l/afhRI+xjaz/NDjeNf7G+k/D967Dmlj/afj1oPd31n8azk7t+IP1nwYB
vjPnp6Hmy/OfrP80tLhca2b9p8F368FfrP807N4t+c36T0Njpk8L61+bVzBf
+9c00n8a1g0f1Iq6Ng3L335lrk9Dn5Nlrakb0jBrm+ov6qY0mO5wakPNS8fI
q6PaUuukY7HRZ2b9dCgvHGtHbZiO+7uC21Pz01FWNUGH2igd31wbmE3TcW/l
Xl1qs3QcOrq+AzXScVTcvSO1VTre1lxktkmHxfEAPWq7dCQM4XeiFqRj7Yir
zO7pWHPLrzO1MB3vh/TqQh2aDucRJ5lF6fj02l6fWpyOQu/vzJJ0SE4ru1Ln
pCPksUk3anU6BteUMeenY9LJtd2pi9IxI/4Tc0k68qfHG1Br0nGloVsP6vJ0
PMxVM1emo9U6456s/3TMHF7MXJuOxL9m9GL9a7+/+QJzQzpcDa0MWf/pcFx7
lZmXgZG3F/Rm/WdgUtQVZv0M1LnM7cP6z0BkVikzPwNj/5ral/WfgQGXDzOb
ZmD+Y6N+rP8M5C3dxowM6A7X78/6zwAcY5ltMvBD5xOzXQbuDV4/gPWfgbVH
rzG7Z6DthUkDWf8ZMLVVM4dmYIy3Dp/1n4Fp3X2ZxRmIX3iXWZKBvn3NBrH+
tc+bvJlZrX1exU/m/Az8M2/NYNZ/Blp2nWAuyUDPoz2HsP4zoAr2Zy7PQP/P
15krMzB51PChrP8MOA2PZq7NQIf6u8z1GUgPHDmM9a+dr4xmbsqAVcstZl4m
PrQdOpz1n4kF9YHM+pnw2XeR2TATDjbd/2b9Z0L3sYDZSHu+qpDZNBOjNU3M
Zpmw6jfbiPWfCU/fdGarTMw+c5fZJhMhuv1GsP4zsWWVE7MgE1P272F2z8SN
9u+YhZkoF5qMZP1nIvO1H7MoE8FBR5jF2vleX5glmbhzZ/wo1n8mzhT4M6sz
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
             "]]}, {
            Hue[0.7946117974981064, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxF13lcjXu0BvDMIYSQOSEhhEwJD6IoRIaQbElC2M1b426ea89lLHMScpQy
Z86cIUKIUOYQMt9977XW6x+f7/m19vP+3mevczo9XNfOWlZfR0fnYSMdnf/9
+///1Izbb/M00GD/h3H//gFSko+0d2j8/p914e0a/8g58u0/62OK7QSlTdXr
fzaAifHM4vwmr/7ZEHMXTU/S2L785y44Vlxl/m4s2Qix3vpebsPIxmize83J
n/3JvfDtabOU/4zJJtguHuoU15Fsiju2S9KD9cn90L5Bt2spTchmGPz6dcDJ
Py/+eSAkrft2bf6VbI4DbvWtfd+RB6PDTkf/78/JQ/DUJg0byslD8a3fzcFz
75AtcKJd0EOzq+Rh+PDT62bXc+ThEH2v3GN6nDwC93+P/W2fRx6JciMj94Qc
8iiEqSeGV+wgW+L3cL930zeTR0Nvd7hdqZpsBedvfcb6pJDHoF5Z85WmseSx
eGqd5VcbRh6H1JwJTe9JyAASH1+/4fXPUuCm72DvxyvpfDw6x6dl1nej8/Fo
Ol23qdUiOp+APm+aOyfMpfMJSDiTa/duBp1PxIil4YluU+h8IhxvBpZ8mEDn
1tAYNbiZYkXn1shdVGE9fjidT8LSs4NeNDan80lYNHKR55O+dD4Z5W06ay73
pPPJWNZ9QffirnRug09V4y/c60DnNmg8qu/U763p3Bbzn6WsMtOjc1ucyW3z
VtyYzqdgbMaalAs6dD4F363E7Qf8fP7vfCqWTv5ku+PLP0unwm3t3Tf9a+jc
Di+c/54/+5rO7fDhytSMVS/o3B75zxPRs4LO7fGzINrn9QM6n4apL17UP11K
59MQ7THu6K4SOp8O/+RG7huv0Pl0/GwSe3vLBTqfAdWgVyW5p+l8Blov6jng
5nE6d4D5ih8Ffwv+GQ5ob/drvNUh+nkHSEuDNsXs/+ciB+yXJ61/vIfmZ0Kn
4E9z6500PxOOYxdePJxJ8zMxQr8iY/gmmp8Jg2nBK8+m0fwseOy/+stZSfOz
4KhjOKBBKs3Pwsb/7G7lJ9D8LPhL6876xtC8I2YNnPFgXATNO+KLc9f37UNp
3hHjvS6XfV9H8474mjrbt9qP5mfjfs60jc+8aH42MnPKTKtX0/xstFm/q65u
Bc3PxrWXn18auNP8HJhejS4Z7Urzc5CdtVux2oXm52BzsGnz7AU0PweWYifD
j3Npfi5+r2i8foIjzc/F3kMhnltm0PxcZO6L9G5oT/Nz8S11TqKvLc3PQ/dR
u9LeW9P8PCQ13STxHk/z89Di6vVWOmNpfh5CsieNS7OkeSd4DPR7NWIEzTth
wbQxH58OpXknBEirRqnNad4JhlW9ds8cQPPz0cZXr2uHfjQ/Hyt6d5S+MKH5
+egy2TT/eE+an49zRwK2bjKi+QW4NHNHv+iuNL8AT/tnDffvRPMLkNHx/t61
HWh+Ae7pV4m9DGh+IWQ7HngGtab5hZgV0zY2uSXNL8TGVja7dzen+YUYdTs0
/5IuzTtDNLzDhs+NaN4ZaH1yTO8GNO+M93O94l10aN4Za8+FuGf8rvw3vwiH
NSEnq378MxZhhc28oBF1/yxdhLEOVrEpX/65aBGKa3dfffuJ5l2Q2MZl+Kwa
mneB+bcVB06+o3kX5Fh17TnkDc27wGpvy5CcappfjJY9Ou4Z8JLmF8M7bIEy
v5LmF8Nv8xBT66c0vxjHx02Yff8xzYuQ3G5lQ7/yfzYS4c7RS707PKDPE6H9
qZM7T937Z5EI/Q9Weq0ppc8XYeugVpKet/85U4T837N2PS6hPBGOdvn5OuP6
P1eIUPEqyWL5VcpfgpG44GVxmfKX4NGWTfImxZS/BEMdrSIrzlP+ErTd3WT4
qbOUvwRP2mjWbz9N+Uuw0OfQ5uRTlL8EoyYuHhJygvKXwKbsio33Mcp3hdGO
Rdc9j1C+K+ZLsg97FlC+K5pel3z0yqd8V+zUP7U2+BDlu6Lt223GSQcp3xVv
Nkt+Zh6gfFdcm3LmzdF9lO+KEw6DXtzfS/lLIdm78f7vPZS/FPtsWh0zyaL8
pdDzOBE0exflL0XnJg1bxu6g/KU4Z7XK7eQ2yl+K2F07vH5kUv5STL+VYDo6
g/K1P7/XKFi6mfLdYP5WtvjyRsp3w9mkARcMN1C+G6xHr92+Kp3y3dDpZu3r
MxrKd8PmqxGybmrKd0PW1fpxoUrKd4OoZeT5Z3LKd4PRu2Fj7GSUvwwxbl6V
BSmUvwxJqv05psmUvwwHbOKTNydS/jK0DjoV2D6B8pchodp8hTKO8pchW/F4
mkEs5S+DbNbrruujKX8Zti3XXO8RRfnu0G06ac7+CMp3x+e6gN1jwynfHekd
S47eCqN8d1Q2aBG9MpTy3VGSoferUQjlu8Pj5OV2O4Mo3x1O+aJim0DKd4fh
r4bN3ksofzm2XG52My2A8pdDc+Rp20n+lL8crdzaXfriS/nLsaPZtKo9PpS/
HC1H2i1b4k35y2G0/N2oLl6Uvxzdsvs7P1hL+cvh7Wh4duMayvdAfsaTZaLV
lO+BP6KLo009Kd8DEXsHWn1eSfkeWBWZ7HJ6BeV74GOi7waFB+V7YFdBUpX7
csr3QM13zZix7pTvgdzvq1SGyyh/BVqe/1n5ZSnlr4BrzLRed10pfwUsLcOm
HVlC+Svg535+XoaI8ldg7a2Vo+MWU/4KjEJJjY8L5a9AqYmn2HUR5a9A8OrL
/zk6U/5KPOiTlGuzkPJXYorjctexCyh/Jf6oTE6PmE/5K2H2Pev8UCfKX4mW
h556DJlH+Svx6NG97UPnUv5K7Bu7a+2IOZS/EqZNgs6PmU35q9B7fdqWyY6U
vwrd7RxqZ86i/FUIHKBXtHgm5a9CRon1z7UOlL8K1c1jMiJmUP4qzDy/elfa
dMpfhR9H9jY9MI3yV2GZTb2zxfaU74nAYeOvPrejfE9MDZ/RvQEZnog37XG4
51TK98T5L8cSJk+hfE9MnzY8bZUt5Xvi9o/DpQobyvdEzl9fHJ9M+Z64uaTg
ZtUkyl+N0J93ItuRjVYjwM5i5iRryl+Nr5PsLAImUv5qWJpk9Nk7gfJX4xDO
9X46nvJX43Lpor4dyUWrYfOi6wBHUP5q2NU/3z91HOWvQUUfY6NrYyl/Dbqn
tGnUggzteVh46fQxlL8G9QZ7JCmsKH8NBquv9SobTflrYDfiwvru5KI1GNba
96WHJeWvwRS3xo3zRlH+WlgpjnzWIRutRdLXu9kzRlL+WqwuyjPJHEH5azHo
Wr7rp+GUvxamkVMWTCZnrkWrfW90Nw2j/LW4N6fXys8WlL8Wv3fErrMn64hh
dyx/yO6h/6wvhp5sgbwB2UiM/OsD5EuG/LO5GL/yPg04PZieT4wFHwOWGpMd
xPgbnjYg2pyeV4z+quFxrwb9s1iM2qWT1s4gS8Xw6nLq8eGB/ywTw75wz63u
5Ewxjj1rZ5Mw4J9zxbhX1m3kVzO6nxhOdq+3LiWXiJGHLOmt/nRfMdTfFCUT
yDXa80vvk/P60f29oNeqWX4fsr4XPOuNmbCpL93fCwszXw1uQzb3gos6SBpv
Svf3QrKhR7/6ZAcvRJQOMAvuQ/f3wsaS2RHfTOj+XlDYr+nrS5Z6wTXXoNun
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
xJIsjUD9IctEFuS4CBgHXlwzkCyLwKLTjZNMyekReF/6u8CY+4/A5MrYT124
/wj08JKO7sD9RyDT9ayiNfcfAdcvZnXNuX/tedH6VY25/wjY5718q8P9R8DC
8GPQz1rqPwI9EzWGX8kVEWhSP/9MDbk6Ap0u9gt8Q66JQLN1d8e+JNdFoE+z
NP2nZJ1IJJ+y+/CQrBsJJ/M7D+6S9SNRaq1/+ybZMBL5wyruXSUbRcI6sder
i2TTSGztcrLxWbJ5JOpappifJI+MxMk7fu5HyIhEjdm8rDyybSQcjA2+HiA7
RGJPs9QZe8lOkTCIyc7bRRZFwjJ0Su9tZI9IbOk9Y+tmsjgSz79uMV1PlkSi
e16XYyqyNBKd3XOcZOS4SOQsHFIviSyLxF9TZV4sOT0Sb3Yd8o4kZ0bC5pNk
dBg5KxJWq4pbBpFzI5GRF/vWn1yo/flDm+54k4sisTL53YU15GLt+9ojOruS
XKL1gfJL7tx/JKqibR+4cv/a55+ZWOvC/Ueip1+S4ULuPxL9lUMnz+P+I7E0
3iPEkfuPgrt325MzuP8oZO7oomvP/Ufh2EHPhbbcfxR03d8WWHP/UXh3Marr
eO4/Co4duieN4f6jYHhtRwNL7j8KwRv+Rg7n/qOg8ejYYij3H4XL88q3DOL+
ozDq1JBRZtx/FMaaNSk35f6jULHEOrY39x+FmU6llsbcfxTcrHZ+7cb9R6HF
2oyjnbn/KJRHHYgx5P6jEDTp9IJ23H8UzPcWDW/D/Udh0bP1nVpx/1FoMGVU
Yz3uPwrWaxK/63L/UXjdOqS2Efcfhbc9f36tz/1H4cvZTzo63L/2fWJmm9+f
qf8oRBg27P+DXBaFvK91U7+RK6Igyu/qXUuujsK1haLMj+SaKFh2O1D6nlwX
hTWL6lq/JetEY8qufnNekXWj4XjQIuMlWT8aM10b1VSSDaNRdjHR5inZKBrP
OhXsfEw2jYbbSf9m5WRz7fnYo373ySOj0XyWV9VdMqLhcDdx8R2ybTRCbn1/
dJPsEI05fntdb5CdojGonfzdVbIoGrJBG0Mvkz2iccXjaLtisjgamYlP/jtP
lkTjQdzPOWfJ0mjU+P/9U0SOi8Yeefm+k2RZNE6MinI9Tk6PRkBtVZej5Mxo
LFz1vbyAnBWNq6uyt+WTc6Nx8OXb1YfIhdHoXPPf2IPkIm3+yfcGB8jF0ZDn
KGpyuP9oRFvIb2Zz/9HoWVtekMX9R2NMtsf2Xdx/NK4P76Pawf1HY8eG5gnb
uP9otP6mG53J/ccgLblN9BbuPwbppzonbOL+Y9CkpaFqA/cfg04df25L5/5j
UJdReFjD/cdALLW+oeL+Y5B1WPFWwf3HoNQ5raWc+4/Bu+zJw1K5/xgs+qoS
JXP/MTh90F+WyP1rn8+z4lw89x+DP7cu/I7l/mPgtq/b6BjuPwa2FeXBUdx/
DGpWfT0Twf3HoJenqEU49x+D1x30ncO4/xiMPf1jfwj3r33+O+0aB3P/Mbhz
f+6SQO4/BgqvQ0US7j8Gs+f16BXA/ceghUiT6Mf9x6BboO43H+4/Bu33rXb3
5v5j4N3x+H0x9x+DJXWvHNZy/zGI2vjuymruPwb/eZ6Y6sn9x+DYuxnXVnL/
MTAr3Oi4gvuPRduQtEfLuf9YXGhoucqd+4/F7oGBv9y4/1i8rpkuX8r9x2Kx
04G+rtx/LIbFKc6LuH/t5x354LaY+4+Fs9XJJi7cfyx++37Z58z9x8LicdK8
hdx/LO43CW64gPuPxRPN0Twn7j8WXSbBYx73HwvDpw27z+X+Y3F3ms792dx/
LLZH9NM4cv+xqEwImjuL+4/Fo+g3HWdy/7FI2uVdMYP7j8XKoU2zp3P/sbCO
2e0/jfuPRSO9yZPtuf9YxFs/MrTj/mOx+syy91O4/1g87Vd2wZb7j4X/sAHb
bLj/WNTuXSSdzP3Hov9K1yWTuP9YnF9kMcma+49F55ir/Sdy/7HQre3ZbgL3
H4sTl4bWG8/9x0Ft+eXDOO4/Dm8Sljwdy/3H4WMr79Ix3H8cIgYZXbXi/uPw
c/Gy86O5/zi0MR192pL7j0NOt42nRnH/cch/HVo0kvuPw7cJFWdHcP9xqH1X
eGk49x+HE6fr3xrG/cfh2vaCcgvuPw4VcTdfDeX+43Ddd+r3Idx/HJYHdmnO
lsRh6rHx3Qdz/3E4uzxvmDn3H4edJ9dMH8T9x8GkxaoVA7n/OBzdvz1mAPev
fT96bXeZcf9xcMw4dLE/9x8Hqzdhb/px/3E4Fundml0UB3HTmFF9uf84ePTL
X2rK/cfhz9YfqX24/zgUjJx50oT7j0PPc4fe9+b+43DcpGsPdk0czs+Im9OL
+49D/9E1iT25/3gs+zjjnDH3H4/Zsdv+9OD+42HSrdKSbRgPi0q9dUbcfzxe
tup8pDv3Hw/VK92f3bj/eKw4fXMse2Q8JtaKo7py//HY8PrplS7cfzxcDI3a
sR3i8fiXiagz9x+Pvcafcjpx//EI7B7ysyP3H49mqrN2bHE8mpid3mzI/cfj
42avjx24/3j8zi6ZzI6Lx99uDza35/7jYV8S/7Ud9x+PzIyHDuzMeDSWXMkx
4P7jcXz6nGbs3Hh07um3oi33H4+QPyaX23D/8ehd627GLo5Hrx6DZa25f+37
ygn/os/9x6P6/GxndkU86mftOteK+4/HO7XPQHZNPBaVF6xvyf3HY9LNtY3Z
Ogk4fTvNtwX3n4C/dmbP9bj/BJju7TuHbZiAqauSLjbn/hMwvtXM0WzTBGQa
++Y24/4TkDHqkwl7ZALqf7y4pSn3n4CG7z92YNsmwPqxp0KX+0/AvoBhLdlO
CVgqsU1swv0nYP+ubU3ZHgmoKkF8Y+4/Aa7XujdjSxKwINAqqRH3n4AnJ5St
2HHa9xFtrGrI/Scg5OKLjuz0BPSVPshswP1rnyfvtyk7KwFjxPb/1ef+E9Dv
4lkrdmEC3twWFdfj/hMQWmg0h12cgBZbdCp1uP8EPMj77cUuS4CZRbv67IoE
TFhgrfz7ifpPwFjPuN7smgS0Pfy48A+5LgHrEqynsXUSUTqh4Nlvsm4iBo2z
WMfWT0S3l4X6bMNEHN4xYc8vslEigt9fn8A2TYTjmIWPfpLNE7G69QsJe2Qi
Rn9c0Y6NRDivqPrvB9k2EQq9hTPZDonY53Om5jvZKRHSMZ3lbFEiSlouHcL2
SMRkRdqdOrI4EYslhwPYEq0DTnRmSxMxwS676Bs5TpuXH+jOliXiaYhZC3Z6
InLEJ/K+kjO1zy/qv4idlYiDvXwbs3MTcWODOvcLuTAR5juTF7KLEpHef0ET
dnEimnT+fqiWXKLNW+axhF2WiPv1d7ViVySi9v2Bk5+5/0R49o9aw67R3uek
UXd2XSJa50WWfOL+k3C3894Itm4SWjdXD2PrJ2HbxnGvPnL/SejzNmsz2ygJ
n7rfmMU2TcIvl1xdtnkSHpROPVXD/SfhYP4mfzaS0M9ix0C2bRJWJC6u+sD9
J+HP96uZbKckPDnzegFblASnAQXt2B5JaBBtfvM995+EEx3nJLMlSdg4rudU
tlT7edPXN2HHJeH99vzz77j/JEzO8I9ipyfBZ+eDiezMJDTqXtGAnZWEWEn0
ubfcfxJ8jS9FswuTMFC+x4ZdpH1/Vr2bsYuTcGur5bU33H8SssZVy9hlSWi1
wWwOu0J7/5GNO7GrkxCx0+fJa+4/CeZin53suiRk9GvoydZJRubKXkPZuslI
vHTrxyvuPxmWz1ucZRsm48+CO4lso2Sk3ew1h22ajP4ffndjmydjjIvLq2ru
Pxm7r1rnsZEM2ZsDYWzbZLiu3WLHdkjGhVatDNlO2rxYnRdV3H8ynqi8/mN7
JONKnUjKFidjZ8C16WxJMq6V5XdlS5Nx4KXhu5fcfzJOrvlynC1LxorxU5PZ
6ckwHNLehZ2ZDKMOToPYWck4dallPXZuMgxMRt1+wf0no0PzuzvZRclQLHgu
YRcno9N3V3t2STKaXXcwYpclQ3I2p/Y595+MIRf8LrGrk5F/PnsLuyYZpnlT
fdl1yXCMmT2VrZOCjUMvGrF1U/A9f+u3Su4/BV+bVl5nG6Zg+8CEXWyjFCh7
a0LZpim486nRPLZ5Ct5sKhvEHpmCq2YtmrKh/fl925494/5TcG5A+nG2QwqO
HH+rYTuloO/qDC+2KAUPHQ/Ysz1S8Cy2sylbnII048oGbIn2ecc1qnjK/acg
+5f0ODsuBS/XzVnPlqUg7H64Pzs9BWXjGs1mZ6Yg8PbjweysFOidaKHPzk3B
jD7y9xXcfwo6jfO4xi5KgeNQRQ67WPu+LFomsUu0ef4PV7HLUqA/8LsduyIF
0XJ3M3Z1CoweGLdg16Tg6IQB759w/9p83egbbJ1UvPfoe5Ctm4rinR2VbP1U
dKg3x49tmIrepx7MYxulorVJtiXbNBWXQs50ZZunoql+z3rskalwNL3y/DH3
n4p3bY8Ws21T8bDHhxy2QyrKt62Qs51S4fbK1J8tSsX6KWYL2R6pmNHRB2xx
Kurn/urNlqSi1L24OVuaioT00o+PuP9URGztWcaWpSL/ycGT7PRU5P4XtpOd
mQpFUFISOysVTTbf82HnpmJikGghuzAV9YJNJrKLUhHcuG9/dnEq1kQub8su
0b6/RU9/lnP/qaj7o37OrkjFvLtR19jVqTg4c99hdk0q/lS0zGTXpWLTl6x4
to4M0+sH+bAbyjAqKGoRW1eGx6XnbNh6MnSMHz2ErS9D1xbVXdgGMqx9eKkJ
21CGF2sqPj0kd5Fh28T+j9lGMrS5t+cSu5cM1bsX5rNNtXnDsZVtJsPD+vOS
2eYyZMoy1rEtZDBY2tGdPVKGTn/PzmJbyXDp9ZZxbMjgsW+PGdtahlU3Kjuy
bWXwfmDfhG0vg/X857UP+Pspw/V7e56xZ8vQrXJTCdtJhiVNT5xkO8vw9H7T
fWyRDPVfRGxku8kw7nifBLaHDCafvknYnjLM6/R5OVssQ/glw3lsXxlEao/J
bIkMhQbPhrGDZZjzJKo3WypDkxSHduwo7fs8at2IHSfDx7+iL/fJSdr3933H
C7ZMhg/W+nfZKhl6h227wE6XwchmYQF7kwzxVpZZ7EwZfvwdu569Q4afQ1Yk
sLNk0JEUBrFztH15m61m58oguXDOhZ0nw4KO4Q7sQhm6tF4ygX1chn2z3SzY
RTI8SEwwYZ+TwX7xbUN2sUz7+9zY5uyrMrwMv/K7jPdTho0mgTXsOzLktJla
yS7Tvr9PlnfZ5TLo+9lfYlfIILUJPc5+rnXHkgPsau3zbxy/nf1W+30IuaVh
18gw3CsigV0rw56+M0PZdTJsmj/Wm/1L21feFHe2jhxjarwXsBvKUVF0ZDpb
V4435V0nsvXk6P9zywi2vhw9b1uZsQ3kaN71mxHbUI7r8mvt2F3kaPbmVDO2
kRx6ldf+3uP9l6PE4lst21SO3xtHv2abyfHyzoYnbHM5YjcZlLIt5IjMzbrM
Hql9vhtzi9hWcswu6HaYDTl2merksK3lmFr5YyvbVg79rJbpbHs53EeOTmE7
yDFvrjSKPVuOuHOPAtlOcoyc7OjFdta+74yK5WyRHI1U0S5sNznkr8bPYXvI
4b+snT3bU46H1/5OYIvlkLzSsWT7yqEMMxzMlshR32myKTtYjt6jE7qzpXJU
f6xsz46So2iSY0t2nBw5OmWN2ElymL/z+n2X91+OuXeNvrBVcuyLff6WnS6H
zbXjz9mb5Cj02VPOzpTDwDb7DnuHHO87nLrKztK+34NV59g5cjx61vMEO1eO
hCCffHaeHM+m3t3HLtTayH4X+7gcf6/d2cIu0r6PnuI09jk5Dn/sKmMXa79f
zR/Hsa/KUTkhN5xdIkfUSlUg+44c6XMSfNhlchy7J/dkl8vx/Vz2MnaFHFc+
3nFhP5fDcKi+E7tajiEuzjPZb+UotT0ylV0jR59LJtbsWu37zd8xhl0nR8iL
ISPYv+S4M+imOVtHgTDPsH7shgrs9BnTi62rwM2uzbux9RT4MLG6A1tfgRmn
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
XQv/z/8DQS+2bQ==
             "]]}}}, {{}, {}}, {{{{{
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 1.0000000000000073`}], 
                   Offset[{0, 0}, {1530.2291666666667`, 1.0000000000000073`}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    1.0000000000000073`}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    1.0000000000000073`}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    1.0000000000000073`}], 
                   Offset[{0, 0}, {1643.7511134085507`, 0.964860378952735}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1643.7511134085507`, 0.964860378952735}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1643.7511134085507`,
                     0.964860378952735}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1643.7511134085507`,
                     0.964860378952735}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 1.0000000000000073`}], 
                   Offset[{0, 0}, {1530.2291666666667`, 1.0000000000000073`}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    1.0000000000000073`}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    1.0000000000000073`}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    1.0000000000000073`}], 
                   Offset[{0, 0}, {1643.7511134085507`, 0.964860378952735}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1643.7511134085507`, 0.964860378952735}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1643.7511134085507`,
                     0.964860378952735}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1643.7511134085507`,
                     0.964860378952735}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{34., 6.500000000000007}, {1643.7511134085507`, 
                    0.964860378952735}], 
                   
                   Offset[{34., -6.499999999999993}, {1643.7511134085507`, 
                    0.964860378952735}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999998}, {
                    1643.7511134085507`, 0.964860378952735}], 
                   
                   Offset[{9.999999999999998, 6.500000000000002}, {
                    1643.7511134085507`, 0.964860378952735}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.01`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22., 4.884981308350689*^-15}, {1643.7511134085507`, 
                  0.964860378952735}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9916057119470134}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9916057119470134}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9916057119470134}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9916057119470134}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9916057119470134}], 
                   Offset[{0, 0}, {1643.7511134085507`, 0.8945990292048519}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1643.7511134085507`, 0.8945990292048519}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1643.7511134085507`,
                     0.8945990292048519}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1643.7511134085507`,
                     0.8945990292048519}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9916057119470134}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9916057119470134}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9916057119470134}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9916057119470134}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9916057119470134}], 
                   Offset[{0, 0}, {1643.7511134085507`, 0.8945990292048519}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1643.7511134085507`, 0.8945990292048519}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1643.7511134085507`,
                     0.8945990292048519}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1643.7511134085507`,
                     0.8945990292048519}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1643.7511134085507`, 
                    0.8945990292048519}], 
                   
                   Offset[{35., -6.499999999999992}, {1643.7511134085507`, 
                    0.8945990292048519}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1643.7511134085507`, 0.8945990292048519}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1643.7511134085507`, 0.8945990292048519}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.05`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1643.7511134085507`, 0.8945990292048519}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9315011031541052}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9315011031541052}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9315011031541052}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9315011031541052}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9315011031541052}], 
                   Offset[{0, 0}, {1643.7511134085507`, 0.824305746098967}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1643.7511134085507`, 0.824305746098967}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1643.7511134085507`,
                     0.824305746098967}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1643.7511134085507`,
                     0.824305746098967}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9315011031541052}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9315011031541052}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9315011031541052}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9315011031541052}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9315011031541052}], 
                   Offset[{0, 0}, {1643.7511134085507`, 0.824305746098967}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1643.7511134085507`, 0.824305746098967}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1643.7511134085507`,
                     0.824305746098967}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1643.7511134085507`,
                     0.824305746098967}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1643.7511134085507`, 
                    0.824305746098967}], 
                   
                   Offset[{35., -6.499999999999992}, {1643.7511134085507`, 
                    0.824305746098967}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1643.7511134085507`, 0.824305746098967}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1643.7511134085507`, 0.824305746098967}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.15`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1643.7511134085507`, 0.824305746098967}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.7766021699558429}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.7766021699558429}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7766021699558429}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7766021699558429}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.7766021699558429}], 
                   Offset[{0, 0}, {1643.7511134085507`, 0.7529774175745061}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1643.7511134085507`, 0.7529774175745061}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1643.7511134085507`,
                     0.7529774175745061}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1643.7511134085507`,
                     0.7529774175745061}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.7766021699558429}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.7766021699558429}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7766021699558429}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7766021699558429}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.7766021699558429}], 
                   Offset[{0, 0}, {1643.7511134085507`, 0.7529774175745061}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1643.7511134085507`, 0.7529774175745061}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1643.7511134085507`,
                     0.7529774175745061}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1643.7511134085507`,
                     0.7529774175745061}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1643.7511134085507`, 
                    0.7529774175745061}], 
                   
                   Offset[{35., -6.499999999999992}, {1643.7511134085507`, 
                    0.7529774175745061}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1643.7511134085507`, 0.7529774175745061}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1643.7511134085507`, 0.7529774175745061}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.25`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1643.7511134085507`, 0.7529774175745061}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.6706581452831419}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.6706581452831419}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.6706581452831419}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.6706581452831419}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.6706581452831419}], 
                   Offset[{0, 0}, {1643.7511134085507`, 0.6695899023965098}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1643.7511134085507`, 0.6695899023965098}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1643.7511134085507`,
                     0.6695899023965098}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1643.7511134085507`,
                     0.6695899023965098}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.6706581452831419}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.6706581452831419}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.6706581452831419}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.6706581452831419}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.6706581452831419}], 
                   Offset[{0, 0}, {1643.7511134085507`, 0.6695899023965098}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1643.7511134085507`, 0.6695899023965098}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1643.7511134085507`,
                     0.6695899023965098}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1643.7511134085507`,
                     0.6695899023965098}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{30., 6.500000000000006}, {1643.7511134085507`, 
                    0.6695899023965098}], 
                   
                   Offset[{30., -6.499999999999994}, {1643.7511134085507`, 
                    0.6695899023965098}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1643.7511134085507`, 0.6695899023965098}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1643.7511134085507`, 0.6695899023965098}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.5`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{20., 4.440892098500626*^-15}, {1643.7511134085507`, 
                  0.6695899023965098}], {0, 
                 0}]}]}}}}, {{{}}}}, {{}, {}}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> False, 
         ImagePadding -> {{All, 72.32198570142026}, {All, All}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["time", TraditionalForm], 
           FormBox[
            RowBox[{"freq", " ", "oblique"}], TraditionalForm]}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 440, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           RowBox[{"{", 
             RowBox[{
               RowBox[{"ba", "\[Rule]", "1.5`"}], ",", 
               RowBox[{"bn", "\[Rule]", "1"}], ",", 
               RowBox[{"z", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vs", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vh", "\[Rule]", "1"}], ",", 
               RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"u", "\[Rule]", "0.5`"}], ",", 
               RowBox[{"pa", "\[Rule]", "0.2`"}], ",", 
               RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
       
        FormBox[
         TemplateBox[{"0.01`", "0.05`", "0.15`", "0.25`", "0.5`"}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm],FormBox[
        FormBox[
         TemplateBox[{"\"healthy juv\"", "\"stressed juv\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Normal", ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
      
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {2, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}], ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#3, ",", "Above"}], "]"}]}], "}"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
            
            LineBox[CompressedData["
1:eJxd02uMFtUdx/Ejrs22xnaARrctJEND6moIjJbWpQr+RYQH5DLihaW67QEF
d5HL0KKsssgR0KxNoxNf2G0qOiVClrTYIY269HoMsW5rIJNa6TZtwhFoXbnU
sdS6USltw5w0831ePCeffPPP79VMWL5u8YpRSqm9//3733v+V15//nXVq2Tf
5kMfBFO9m2XW82OXXNzlHciaLU0dHz/r/Vn5aPQTe/7xpneL9IcTNvz7krcq
j5N9xecOXTXHO5SHDr53JnvE+4vy+ynb9i3/pfdEOTx7ypH0Q+8vyZKmD881
ph2t3CrxHSMX733Q+0q59Zmujcd/7j1JXli+7Ynx6ljlybJ29BXznpztHUky
+tU3Nz3pfZWcvHx1OPXP3lfLba07PjP+yuOVvyyPvTiy9OUe76ny3ISB0z96
w/srsuvApB1uyl8rf1VeXHjvmB1PeV8jl+9fc90bZ73bZG/X9gN2w98qT5Pv
n31q0vNnvb8mj/2l57m2/rcrXyur31E/3P3acOXrRI/9waNbRr1TebqEv5n0
9Jjp3jNk56bpizo2el8vd25/+6KOfd4il3zq3PFPn6xsRDadueDEuoknqn6D
XGQOvtXTUdncIHftuXTF1U/7PlN+O7DzD9895PtMmTxmxu29nzhZ9RulJ0he
D2dUNjfKPy84dfiW+32fJQf+ZQ9e+mPfZ8kXGvNfXnXU95tkwq73ZzdaTlX9
JlnZ9uvDexZUVrNFLdy/7PGtvs+Wo+fWPuxe8n2OfHJ019L+E77Pkabe0z/5
0/jTVW9IY9Tk11fHlU1D3l08sWfpVt/nys4jq1u+91Pf58oL15ruccd9nydL
Ol754MjYv1d9nly468QDf5xZWd0sJ1Z2LxtJfL9Z2n/2ykvXPOv7fJl8T89l
3/md7/PlzMf3DR173/cFsr+p/Py08N2qL5A9B5pObZ5bWS2Uxa8Fq3av932h
rH/VvLe7z/dFcvdlv1i04Ve+L5JxEzs/uvCY77Gcf6vvXmADW1jdgnvYwBZW
i3EPG9jC6lbcwwa2sLoN97CBLaxuxz1sYAurO3APG9jCagnuYQNbWLXjHjaw
hdVS3MMGtrD6Ou5hA1tY3Yl72MAWVnfhHjawhVUH7mEDW1h9A/ewgS2svol7
2MAWVrruEBZYwwbOYAs7WC3DPiywhg2cwRZ2sFqOfVhgDRs4gy3sYHU39mGB
NWzgDLawg9U92IcF1rCBM9jCDlYrsA8LrGEDZ7CFHaxWYh8WWMMGzmALO1jd
i31YYA0bOIMt7GDViX1YYA0bOIMt7GDVhX1YYA0bOIMt7GC1CvuwwBo2cAZb
2MHqPuzDAmvYwBlsYQer1diHBdawgTPYwg5Wa7APC6xhA2ewhR2s1mIfFljD
Bs5gCztYrcM+LLCGDZzBFnawSuoO4BCOYIFjWMMJbOAUzuActnABO7iE1fq6
AziEI1jgGNZwAhs4hTM4hy1cwA4uYfWtugM4hCNY4BjWcAIbOIUzOIctXMAO
LmH17boDOIQjWOAY1nACGziFMziHLVzADi5htaHuAA7hCBY4hjWcwAZO4QzO
YQsXsINLWN1fdwCHcAQLHMMaTmADp3AG57CFC9jBJaweqDuAQziCBY5hDSew
gVM4g3PYwgXs4BJWG+sO4BCOYIFjWMMJbOAUzuActnABO7iEVXfdARzCESxw
DGs4gQ2cwhmcwxYuYAeXsHqw7gAO4QgWOIY1nMAGTuEMzmELF7CDS1g9VHcA
h3AECxzDGk5gA6dwBuewhQvYwSWsNtUdwCEcwQLHsIYT2MApnME5bOECdnAJ
q566AziEI1jgGNZwAhs4hTM4hy1cwA4uYbW57gAO4QgWOIY1nMAGTuEMzmEL
F7CDS1g9XHcAh3AECxzDGk5gA6dwBuewhQvYwSWsttQdwCEcwQLHsIYT2MAp
nME5bOECdnAJK1N3MxzALXAIt8IR3AYL3IBjuB3WcCecwN2wgXvhFO6DM7gf
zuEB2MKDcAEPwQ4ehkt4BFaP1N0MB3ALHMKtcAS3wQI34BhuhzXcCSdwN2zg
XjiF++AM7odzeAC28CBcwEOwg4fhEh6B1da6m+EAboFDuBWO4DZY4AYcw+2w
hjvhBO6GDdwLp3AfnMH9cA4PwBYehAt4CHbwMFzCI7DaVnczHMAtcAi3whHc
BgvcgGO4HdZwJ5zA3bCBe+EU7oMzuB/O4QHYwoNwAQ/BDh6GS3gEVtvrboYD
uAUO4VY4gttggRtwDLfDGu6EE7gbNnAvnMJ9cAb3wzk8AFt4EC7gIdjBw3AJ
j8Dq0bqb4QBugUO4FY7gNljgBhzD7bCGO//v/wCnx9lE
             "]], 
            
            LineBox[{{768.5625, 1.}, {769., 0.9999999999999984}, {770., 
             0.9999999999999951}, {771., 0.9999999999999958}, {772., 
             0.9999999999999991}, {772.3076923076923, 1.}}], 
            
            LineBox[{{773.5806451612904, 1.}, {774., 0.9999999999999986}, {
             775., 0.9999999999999998}, {775.1111111111111, 1.}}], 
            
            LineBox[{{777.3636363636364, 1.}, {778., 0.9999999999999984}, {
             779., 0.9999999999999967}, {780., 0.999999999999993}, {781., 
             0.9999999999999966}, {781.6595744680851, 1.}}], 
            
            LineBox[{{801.375, 1.}, {802., 0.9999999999999978}, {803., 
             0.9999999999999948}, {804., 0.999999999999996}, {805., 
             0.9999999999999962}, {805.6296296296297, 1.}}], 
            
            LineBox[{{816.8888888888889, 1.}, {817., 0.9999999999999994}, {
             817.2, 1.}}]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]], 
            LineBox[CompressedData["
1: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
RHR5GXNfyp+IW1HdHkr5E9H7xqlKKX8idnqMfSLlT0TM1MKnUv5E5I/46IWU
PxF7S0a9lPInYsm1yCopfyK6dTK8kfInojAp462UPxF/blnwXsqfiI4TR8tu
8vyJaNa3WW3ukkQs/+9kHW5HIj4bG1GP25kI1yO1G3DLkvDrE4sLtzwJV6Nq
N+RWJCH8ckQjblUSNGvONOZGEqJGtGnKrU5C/JTAZtyaJFh8Vsq5tUkYvPRI
c259Eg6vvdmC25oEl8vPW3Lbqr31vSt3QRKOR35oJeVPQural62l/Eko1939
WMqfhKYRZ9yk/Em4f+q7NlL+ZHy4kdhWyp+MG29GtpPyJ+PtwobtpfzJ+Mh0
WjKS8bc+tYOUPxnF33t8IuVPxtTB1yRrq+dJCR2l/Ml4tLWlQsqfDN9/dki2
JQOrB3WS8iej9sWTku3J+PX8uE+l/Mk4ePy8ZEcyRt3x+UzKn4yH0+ySZSnQ
+vdxl/Kn4Nm7LZIVKahMb9xZyp+CcbVjJCMFSTuvSVanINnWt4uUPwV361ol
a1Pw8s19yfoU7PzW63MpfwqOfbJUsq3aOeWSC1LQsp5SKeVPQa18reSSFJxe
9ZNkRwrW//VasjMFhd8O6irlT8Ws1zrJ8lS8erVfsiIVVYX/SFalouGYLt2k
/Kn4cHKGZHUqHmCZZE0qml+wS9amwiXVKVmfin1Bn3wh5U/FiGVjJdtS4dMy
TnJBKgrfb5JsT8VfmpOSS1Jh9nkk2ZGK+8ebeUj5U5Hv6C1Zloaqnf6S5WlI
7x0nWZGGhfpVklVpMGzZKxlpqLflkmR1Gn63PJKsSUNMaP3uUv403IVCsj4N
f346ULI1DftaTZJsS8PsT8MkF6TBMilNsj0NaTtXSi5Jw1DPPMmO6uf9cFCy
Mw17XC5JlqXj4fRbkuXpaP7umWRFOuz/1ukh5U+H/zhXyUjH4zruktXpiOzc
R7ImHcbCYZK16dj+80TJ+nS0GjBTsjUd5b3DJdvS8eeP8ZIL0nGyyCDZno6P
fZdKLklHV+06yY5qd90m2ZmODsm7Jcv0uD2vSLKLHqrXxyTL9djkcU6ymx4b
G5RKVuiRsaRcslKP1GN3hfelx7fbKyV76vFw6Avh/enR1fqfZB89Oq6v3VN6
n3pEaj6SHKDHlnvNJGv06ObRWnKYHsH920vW6rGi/qeSddV5v/lcsl6PBbW6
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
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
            LineBox[CompressedData["
1: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
0o/HCaME5/sgtsnJtpMFG3xQ79S/EbMEV/jA7Y7nGi823xcGk0G6QDbfF8F/
eLpEs/m+6Hb/+cNkNt8XDoWH7LLZfF+om12fv4zN98X6Tx1d17H5vsh7lGKx
nc33xcnX74r2sfl+kD906GBg8/0wcpzLrHNsvh+Wyur6XWXz/bCnqvM/d9l8
P8y+LK3/lM33gzTzk+41m+8H0S58/8jm++H8t55//2DzF8MqPNy5Xg9h/mL4
pD0a2UQwFiOscfeGrQV7LEbFlJ/bLARLFmP/kPY2VoLzF8N0fB95L8GGxWi2
6+nR/oIrFsPCr/LaUMGiJbDuX3EGbP4SWO0IzB3P5i/Bd/8hEyaz+Usw9b/r
t13Y/CV4V/144hw2fwnq/fqycgGbvwQ/fmwt82Hzl2DYf5nPA9h8f0SN6/Mw
hM33R3V8u0NRbL4/xuTfjk5g8/3Rq9nnjjI23x8PN3zYlMbm+8PJ4NJGyeb7
o7HjssU6Nt8fXQwjNixn8wOgcDacWc3mByD4iv7yejY/AEE37Qyb2fwAuBz4
c9kONj8At9bvmF3E5geg02qvesVsfgDqabcsO8zmB6DP/Ndtj7P5S/HxhkZy
ms1fik5XTK+fY/OXInDwrhaX2PylqKnzzv4qm78UU6b0nH6TzV8KveeRGXfY
/KWYtMt07AM2fyn+e+nb+TGbH4iTdYa+esbmB2Jn/6tr/2XzA/GqSYZjFZsf
iEvxh+9Vs/nG89f2z//I5gfC5EzZlRo2PxB2iW4D/mPzA/FiS17yTzZfjFK/
d6fr9PxtMzFMAlbVmAi2FOPPD1XtTAXbivGxzKZ3I8EQY1nk2n5NBTuLcfeX
rntzwR5iPO72T7NWgsViaOY1/reNYIkYdy612dtOsNJo9x0hFoLzxagpbNm1
k+BCMS7Zp5zrLNhgfF+HMQusBJeJ8b9raa+7Ca4QI/exbkkPwdVihIzMf9BL
sCgI6rwnY/uw/EHIWp27xpblD0LZlc/v+rP8QdhxYOCQQSx/EAJuyIOGsPxB
6LPWas1Qlj8IR/NHnBnG8gfBbbbpo+EsfxDGeRe9G8nyByHUT/zFgeUPwnOr
wE+jWf4gdBQ/qBzL8gfBf9Trq+NZ/iB033e6aALLH4SrjXPSJ7H8QehblD77
H5Y/GBh7yXIKyx+M3mrFA2eWPxid859oprH8wWha2MDBheUPxgIHi+czWP5g
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
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961]], 
            LineBox[CompressedData["
1:eJxdz1HoHOtdBuAPibhq0LkIskgupocgSwky2mjXGu1Uo676V8djtNsadTzm
6KqpHW20a4062qhrTXVaU93SUKYQZIUIiwTdi4CD5sBeRNyLICvmYsSIe5GL
QSMskopIE2Se7+bHw8vLy/e2Nz74+ptfFEL45y8O4f/uF1737i/c9uUN6Zc+
fPt7t//5yoP0cx/7zFtf8t//8tJR+tlPvPUffzv815c+k77+zv/6fP3+py89
TN91+e/+4o1//LeXPpv+zaf/4d5XP/73l47Tr/r8X9YfeeuVX0v/6W0np1/7
61c+l37Fl/3Z/Cv//JW/Jr3+9+/48Hs+88qj9KPv++zn/urjr/z29Mv/55Of
/kD5yufT1x5/cvDmh175a9P+PxP8dfjr8TvwBfwN+BvxO/EYfxN+F/5mfBF/
C/5W/G6c9l3i8B5yHL6NHIdvJ8fhEjkO30GOw3eS4/Bd5DhMyHH4bnIcvocc
h+8lx+GEHIfvI8fh+8lx+AFyHLK+U1ziBocfpI9L3ODwOn1c4gaHH6KPS9zg
cJk+LnGDww/TxyVucPgR+rjEDQ7vpY9L3OAwpY9L3ODwPvq4xA0O76ePS9zg
8KP0cYkbHK7QxyVucPgx+rjEDQ4/Th+XuMHhJ+jjEjc45H3HOMU5LnGNG9zi
8JPs4xTnuMQ1bnCLwxvs4xTnuMQ1bnCLw0+xj1Oc4xLXuMEtDlfZxynOcYlr
3OAWhzfZxynOcYlr3OAWh59mH6c4xyWucYNbHH6GfZziHJe4xg1ucZixj1Oc
4xLXuMEtDj/LPk5xjktc4wa3OPwc+zjFOS5xjRvc4vDz7OMU57jENW5wi8M1
9nGKc1ziGje4xeED7OMU57jENW5wi8MvsI9TnOMS17jBLQ4fZB+nOMclrnGD
WxyKviMc4wSnOMM5LnCJK1zjNW7wDre4w+EX+45wjBOc4gznuMAlrnCN17jB
O9ziDodf6jvCMU5wijOc4wKXuMI1XuMG73CLOxw+1HeEY5zgFGc4xwUucYVr
vMYN3uEWdzhc7zvCMU5wijOc4wKXuMI1XuMG73CLOxx+ue8IxzjBKc5wjgtc
4grXeI0bvMMt7nD4lb4jHOMEpzjDOS5wiStc4zVu8A63uMPhw31HOMYJTnGG
c1zgEle4xmvc4B1ucYfDvO8IxzjBKc5wjgtc4grXeI0bvMMt7nD41b4jHOME
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
yCsh
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 
              0.49019607843137253`]], 
            LineBox[CompressedData["
1:eJw913lYjO37BvDs2UMRWhEhZC/CqaQkFKVSlBYqZNqnfaqppmmbvZCUNYSU
VNYkSrZky5ZkebOUbAnFb37Hd67n/cfxOe7uuZ7zOed6Rdd951qvnkpKSs/6
KCn9/5//+699yf/+bFL8qYRJdrLYmyteKayMjuJi6/FHmxVWQeiYCv+3s98o
rAqDXQ/WcYe9U1gdf79vaA1rbVFYA3fqJu0wuUXWwbAez5vcj5PH4fjNSvVW
PnkCoj+Mvv/UlzwRBisrLk5dSdbHE6Py0JdTyVNw3zVZ9GMQ2QA91wSId7T9
p/B0xLEE35fXkQ3x7nWjXmwReSbiDSakj5WSZ0GM2hQ1Nnk2vsw4GOznTJ6D
yTYH9ugtIc9F/71RFgvGk+fhSPXyi8f7keejYUn3wrBP9H6MUOEy6G/ePbIx
eh2pMtYrJS/Asck3dXvuJS/ESinn7fx4sgn2f3A7fc2HvAixq11OHbMhL8ab
zMn93s0nL8GMMeLGEG0ysE3nkpNLP4U5wJe4HXukn98qzpci/+ySa7oNCnOW
Qq2g5ee/Cjo3RcitretmHKNzU/R3WfDzpJjOzeAUx+8ZHUXnZrgw21myZyud
L8O8Wadv9l1L58vg6lBefcmEzs3xxu7TkcpJdG6OHDXD1GEj6Hw5mt92SI79
VXz/OMtxJdHldeoH+j5aYO6qpbtKH9G5BR5s83gy+SqdW2JzfEh18yk6t8Ru
iTHvVTadr8DlbSlL9fh0vgLHs6PGnAilcyvcn7BlIduLzq3Qu/rz7YR1dL4S
CbMndz9YSucr0W+I+IenIZ1b49Qrg7dztOncGtLhsX/MhtD5Kox4dspH2P1a
cb4K293D3DVaFVZajYRfy8e8eU7nq3E0eXb1f7fofA0OYETexIt0vgYPuOGv
9p2gcxvYL6y6ujZHYdhgj8+ohMUZ9PM2yF243dOdo3CFDXqGCvZf9Kf7tjDw
mBq3xoPu20J1+hWLUfZ03xa1D0qMVS3ovi2OytbkmhvT/bXI+VV27dhUur8W
+V49O0y16P5aeG0cHzN4GN1fi+lOfwr796b76/B3xdoX834q/n+EddC/0eAg
+aAwZx34vyaF6DYqXLEOVVpXMl7co/9/2aGobdDf6mt03w5L8jZoNJXTfTt4
VDZa6J2k+3boWXv6pWw/3beHdtSdZXMy6b49LoxVedqVQvftwdtk2LudQ/ft
4WlxbfLgELq/HqLqxcXrttH99bBa/GbAVTe6vx4r6u9lb1hP99fjXv6PR6Ot
6b4DWF2DJiuZ0n0H1Kjl9R5sRPcdEKjf+8WS6XTfASojV0/KmkD3HeEw2mmD
2li67wgV50ttZ4fRfUccDqjfFKlM9x3x637eRK9/9PeBE/oatF5ldSgMJzw7
oXc2p1VhjhOsbH2i294oXOGEE71j9rk+p/sb0Pt+/d4v9+n+Bhz55//vwE26
vwEn1ftZh1yl+xswo8ejQd7n6b4zbL+X3mIX031nLI4bpZ5/nO4741nSp8gf
B+i+MyaOK+O7ZdN9F4zL4dS3SOi+C3pvuf0uLY3uuyDm037nNYl03wW1sujr
BjF0fyP0Dq+9pMem+xsRqBv3zNif7m9E0uXnpd6+dH8jSut3t532oPubsHye
k4baRrq/CaMWq70Urqf7m2B8VP/RJBu6vwknMs33P2L+PnZFc3zA271mdN8V
puhrFrWI7rti0a8DrkHz6b4rtEzmv4qbSffdMKxXu1/+VIV13CC9vvj0Gz36
PDeUS+ps5+so7OaGjdNT/uwbQ58vP5+SvEFLTeFcN+zUHalRNJTmuWH9s2Nt
GwYo3OQGE/77WPU+NH8zbvTbnfjhn+L3DZ3NKBx7+GTdb4WxGZtuqJ2o/aGw
22YsPzRwXkO7wpzN+DLzyt/OjwrnbsbXZfEXDf5TuGIzngSenBzYrHDTZixK
Pv7n5gv6/cYdSj0/fZr3hOa746HoXWnxA5rvDt2zI9RN62i+O1aafrjx6ibN
dwdH+TlfVE3z3dE7cu1ou6s03x3D3I/PmXiZ5rvDhj93r/J5mu+B7xnTVP+c
pfkeiDxwzrm7iOZ7QHvjx3lDT9F8D7zLLPIxPE7zPRBk/6bM7QjNl98/NuvD
vgM03wPNxVOqWvfRfA8kS2YOscqm+Z6oiogVnMmi+Z7wPjNRdZqU5nsi8kKX
e7GQ5nsiwuu4hUU6zffE+O4DaS18mu+J6mitHplJNN8TWrdH7lzLpfme4H5f
cWhMLM33wq7g2QGfo2i+F5ZlDThUF07zvfDv+uXBl0Jpvhe2fP0VWRpE873w
u2tE1QV/mu+FQTPGlNz2o/leuFJUPe7DNprvBU11btMwH5q/BUNfuVUu20Lz
t8BDbdTeOA+avwXSxt7Lb7rR/C3wmzpVrLWJ5m+Bi/NU50hnmr8F7C/Lgt84
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
y+y/BNwnpo+1mf2X4GdqjZMWs//yz0NLowaz/xIE++7dMpbZfwlckl63j2b2
X4IKjbNR6sz+S1BSqjJ4FLP/EgxvbctRY/ZfAk8n69mqzP5L8DJ3Qu1wZv8l
sNsZ6DGM2X/5+2fP+TeU2X8JxoV47B3C7L8EBVO7Fg1m9l+CEPffTQOZ/ZdA
/NEpcQCz/xJs3jdyen9m/yWI2WjQ0I/Zf3meQZncvsz+S6C1Z+3sPsz+y+d1
b3jTi9l/+ffHsCCzJ7P/EryaZ7qqB7P/ElSNGd1Hidl/eZ+tBpf/fqH9l0Dj
elhEN/mgBLpVf4y7yPkSXBx06vdvcoH8/FbGxV/kQgmmzt0d10k+I4FzbO2K
n+QyCarbNUZ0kC/I+6hNa/xOrpBg04bRBd/IVRLgx/mIr+QaCcq/+6/6Qr4l
gV75fN12cp0E8472/9lGfiDB65lv7rSSG+Tv+/rV/E/k5xKoNx3kfiQ3SSD7
G+/+gfxGgsQjG03fk1skOLRl+oQW8icJzt7+2u8/crsEEUFHWt+Sv0twuNPy
4RtypwT13fcvvSZ3ScCeZn6smawkxet5uzJfkXtLMfnurcQmsrIUmqefh74k
D5Jixd5rvo1kFSmanbiuL8iqUlwsUlv/nKwuhUVYyOpnZA0pIrkHLJ+SdaR4
Wrhr2RPyBCk2NNmbNpD1pdjy+8HSx2QDKe5+HGH2iGwoxbXDQ5c/JM+R4ua4
a1YPyEZSFLrMtL1PNpEicb2tUz0ZUshGjfO4R14mhVNBrl8d2VIK1sTaiLtk
aymysvfw75BtpDg4Zfie22Q7KQK/TDlxi+woxbuRrytukl2keHJt/qNaspsU
Y6ZPbL1B9pTClXu8D2NvKdDzmnYNebsUU9/tXFhNZsl/PvCo43VykLyPL36h
18hsKdgnL2ZWkSOlyP4tKr9K5kgRavDpeSWZK3++nOs9GPOkmHFaW/8KOVXe
X/X3NRVkgRS2VmZhl8kSKa4fVj54iZwlf3+rTesukrPl/Za2dl9g9l+Kf87K
0xgflGLJ+YyN55n9l/+8Y2zGOWb/pWg597SynNl/Ker8dv0sY/ZfiqW9z09j
XCbF8aGLvEqZ/ZeifLJmzllm/6VY/tmxoYTZf3n/PdpGMK6Rf//7PLU5w+y/
FI8PjMkoZvZfvj/8E3eKmP2Xz9smGMq4QYp9fypsTzP7L3+f302khcz+S1E1
vOfTU8z+S3FOfYgO4xYp1t/ctPUks/9SXP325dQJZv+l6O967VcBs/9S9G18
tIxxpxQ+5hOEx5n9l+LYjuONx5j9l6HXbN9pjHvLsC14U9RRZv9lyFBPvJPP
7L8Mtb1e6jBWkUF33NagI8z+y7DAXePGYWb/ZXA826XFWEMGO9W+IYeY/ZdB
FjzvzkFm/2UY+jhlEmN9GeYY9447wOy/DB379r7Yz+y/DBeHr1/AeI4M7tlT
s/KY/ZdBf6XGz1xm/2UoN5zowBgyaLhblO1j9l+Gop9RYxhbyjBjcE1UDrP/
MkivjG/ey+y/DAbzMywY28kQI1Y+mc3svwzr/6WpMXaR4eRhzeg9zP7LcLas
5L/dzP7LULPVbi1jbxm83v+8uIvZf/m8kJwpjFkyPFmxPCuL2X8ZFh1o7cuY
LYNxlSgkk9l/ef4vs/+TMfsvf57Au46MuTL0l3rclDL7L0PpgbbFjFNl2N3u
Vyxh9l+GhLvN+owlMszPtNwnZvZf3ndezkjG2fJ+rF6ni5j9l+HqF1Vlxgdl
OP1rZpyQ2X8ZjKqNugXM/ssws3JSGONCGRbbd//IYPZfhqrW0kDGZTK0/LH/
ms7svwy8rw/9GVfIP99i3tc0Zv9lMAkIDmRcIwO3Tfgjldl/GY4Y89mM62R4
ed+lK4XZfxn6QDmWcYMMyb1S+jJ+LkPA4depfGb/5d+PYhVVxm9kcChVyU5m
9l8GbdPmCYw/yfDsbfxJHrP/8vc9/7sR4+/yfbs9syqJ2X8Zni5daMO4S4ab
hkNfJDL7n4lDRgW+jHtnwvq3yq8EZv8zMWC0CY/xoEzwFhioM1bJxK2+Tflc
Zv8zMVd//QLG6pkIXZl2K57Z/0xItbmujHUy0WRv/C2O2f9MfM47nsRYPxP7
yp9oMDbIxGD7yqJYZv8zIZ7uuYLxnExU9rzUxGH2PxObBXfYjE0ysTVLMowx
MtH5YsjxGGb/M+E+0cScsWUm1I3HNkUz+5+Jky+PRTC2ycTjt+9HMbbLhNvo
x2eimP3PhIGV/1rGLpmYaVXaHsnsfyaCW49kMPbMhPIA0xmMvTPRh829G8Hs
fyaSh/mx/t//B5ZlE8s=
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
xIb3B0k22pD4luQIG3yHSjbZcB2SzTZkDpdsseF5f8nOmveRkgtsuDpKcqEN
owMku2xwjpFcZIN7rORiG26Pk1xiQ4NAyW4b2gbJ+9vQeoK8f82/b5D3t+Gh
bI8NP02U97dhyyR5fxtCJ8v71+QFy/vbcUK2lx3WKfL+dnSZKu9vx1HZOjsi
psn72/FYtt6OnBB5fzseyoYdCdPl/e24Ldtgx7wZ8v52/E+20Y5+M+X97Vgv
21STJ9tsR9AseX87PpLttOMf2QV2jJ0t72/HUtkuO47LLrKj7Rx5fzsMskvs
WCXbbccPskvteCK7zA59qLy/HamyPXZslF1Zs6fsKjvuyK62o7VR3t+B4bK9
HAiVrXUgT7a3A+tk6xz4SLaPA5/J1jvwvWw/B/bKhgOPZQc40HiuvL8D7WWH
1Hy/so0OzJMd4UCibFPN9yvb7MDXsi0OnJLtdMAju8CBc7ILHfhTtsuBVvPk
/R3Qyy524C3ZJQ70l+12YJjsUgciZJc5ECe73AG7bE/Nz192pQOfy65yoER2
tQPnZWtycVG2Vy4uy9bm4oFs71y8OF/ePxdtZfvk4iXZerr3y8UL8jty0UF2
QC6ayDbkoqHskFy8JttIjsiFn2xTLnxkm3PRV7YlF31kO3PRRnZBLl6XXZiL
HrJduegou4jyi3MxTnZJLoJku3MxRHYpuSwXvWWX56KdbE8ufGVX5qKr7Kpc
dJZdTdY46/78vZx1f95aJx7V2d+J+nX2d6J1nf2d6F5nfydelu3nhHed/Z11
9wtwon2d/Z1oWWd/JxrX2d+Jf+XvL4LeTU70qrO/s+7eFmfdvZzOunsVODGx
zv5OzKmzP70XOevuW+ysu1+JE/519ndibp39nciss78Tb9fZn+whV9J9lRMJ
dfZ3YnGd/fMQXGf/vLrfvzav7s/HO6/uXrq8uj9fH7I+DxPq7J+H6XX2z8Os
OvvnIarO/nlYVGf/PMTU2Z8ckYfwOvuTzXlIrLM/3TvzMKXO/nmIqLM/3bvy
kFVn/zyk1NmfXEJ2k0vJZeRysodcSa4iV5M1S+vai6wle5N1ZB+ynuxHBjmA
bCCHkI3kCLKJbCZbyE5yAbmQ7CIXkYvJJWQ3uZRcRi4ne8iV5CpyNVnzNu1P
1pK9yTqyD1lP9iODHEA2kEPIRnIE2UQ2ky1kJ7mAXEh2kYvIxeQSsptcSi4j
l5M95EpyFbmarMmn/clasjdZR/Yh68l+ZJADyAZyCNlIjiCbyGayhewkF5AL
yS5yEbmYXEJ2k0vJZeRysodcSa4iV5M1y2h/spbsTdaRfch6sh8Z5ACygRxC
NpIjyCaymWwhO8kF5EKyi1xELiaXkN3kUnIZuZzsIVeSq8jVZM1y2p+sJXuT
dWQfsp7sRwY5gGwgh5CN5AiyiWwmW8hOcgG5kOwiF5GLySVkN7mUXEYuJ3vI
leQqcjVZs4L2J2vJ3mQd2YesJ/uRQQ4gG8ghZCM5gmwim8kWspNcQC4ku8hF
5GJyCdlNLiWXkcvJHnIluYpcTdYU1PVzZC9yI7KW3JzsTW5D1pE7k33IPch6
si/ZjzyYDLI/OYA8nmwgB5NDyLPIRnIYOYIcRTaRE8hmcjrZQraRneR8cgF5
NbmQvI7sIm8mF5F3kIvJe8gl5L1kN/kQuZR8jFxGPk0uJ1eQPeQr5EryLXIV
+R65mvyYrHmHPv9kL3IjspbcnOxNbkPWkTuTfcg9yHqyL9mPPJgMsj85gDye
bCAHk0PIs8hGchg5ghxFNpETyGZyOtlCtpGd5HxyAXk1uZC8juwibyYXkXeQ
i8l7yCXkvWQ3+RC5lHyMXEY+TS4nV5A95CvkSvItchX5Hrma/JisWUmff7IX
uRFZS25O9ia3IevInck+5B5kPdmX7EceTAbZnxxAHk82kIPJIeRZZCM5jBxB
jiKbyAlkMzmdbCHbyE5yPrmAvJpcSF5HdpE3k4vIO8jF5D3kEvJespt8iFxK
PkYuI58ml5MryB7yFXIl+Ra5inyPXE1+TNasos8/2YvciKwlNyd7k9uQdeTO
ZB9yD7Ke7Ev2Iw8mg+xPDiCPJxvIweQQ8iyykRxGjiBHkU3kBLKZnE62kG1k
JzmfXEBeTS4kryO7yJvJReQd5GLyHnIJeS/ZTT5ELiUfI5eRT5PLyRVkD/kK
uZJ8i1xFvkeuJj8ma1bT55/sRW5E1pKbk73Jbcg6cmeyD7kHWU/2JfuRB5NB
9icHkMeTDeRgcgh5FtlIDiNHkKPIJnIC2UxOJ1vINrKTnE8uIK8mF5LXkV3k
zeQi8g5yMXkPuYS8l+wmHyKXko+Ry8inyeXkCrKHfIVcSb5FriLfI1eTH5M1
79Lnn+xFbkTWkpuTvcltyDpyZ7IPuQdZT/Yl+5EHk0H2JweQx5MN5GByCHkW
2UgOI0eQo8gmcgLZTE4nW8g2spOcTy4gryYXkteRXeTN5CLyDnIxeQ+5hLyX
7CYfIpeSj5HLyKfJ5eQKsod8hVxJvkWuIt8jV5MfkzXv0eef7EVuRNaSm5O9
yW3IOnJnsg+5B1lP9iX7kQeTQfYnB5DHkw3kYHIIeRbZSA4jR5CjyCZyAtlM
TidbyDayk5xPLiCvJheS15Fd5M3kIvIOcjF5D7mEvJfsJh8il5KPkcvIp8nl
5Aqyh3yFXEm+Ra4i3yNXkx+TNWvo80/2Ijcia8nNyd7kNmQduTPZh9yDrCf7
kv3Ig8kg+5MDyOPJBnIwOYQ8i2wkh5EjyFGq/w9+zjfN
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxd13tc0/X7PvClZpiYlFjkqVkeyFNTUbFQrxQSFHUo6FTUiSBTQcZ5nHeE
AZZkaphWSy3J1FZRUaLOwydJTVee0EznKfHYyhMe0i+/x4/Xodt/fDy9d3O/
r11MsXtcyuSEFgqF4vcnFYr/9/v//+UdtWXs2Vz/LX+Nav4DlO/ttfDOGGYf
9JozOunVozea7Yewo1vb+s1l9sdvvb/MvfDn9WYH4MLobM+GBOYu+PSZO7Of
OnWt2Uq8oHL90D+c+WVccoZ3T95wtdk98OXMQ5VLbl9pdi/U/p207IW+zIEo
P7FgW7fgy83ug91fj3liyeVLze6HDYmWM3camQcgsX+/3fBpaLYKo77o12nB
C8wDsW/S6qiUXsyDMHv79aOThzAPRvnVwR06hDIHocfZqZlfTmYegtc7z9T1
nss8FI8TP9PkpjAPw4p+Ed9sKGAOxtKGcX9uKWcejlk/39MuXcX8Oro+P2J5
+AbmNzB38JV/TlQzh2DT7c7/jN7FPAJl3vI2lkPMI/FF4vVvVp1iHoV+RREp
xZeZgSWI3RZ+p9lG4KMW/7ziacHezzdhqw3tH9m+2cY3MeQnjW5JZzYfjWVW
zQJHbzYfjbq8Gz+XDGbzMViED18dPYrNx+D2dv8Bh8axeSj+F2W1DJjK5qFY
99LlU3PmsnkYXoTmVlwSm4dhW+/Q8mHZbP4WNl+oXfiHic3fQtutG+dFL2Hz
sej8Y4tJa1ay+Vhsunar3bcONg/Hqt86lH20kc3DMeyPjG811WwegZxvfy47
v43NI9BCmdZu1F42H4dFc4sjFrnZfBwGdjg5RXeCzcejn+5uxNBzbD4em64/
N/noFTaPROSFux+E3WTzSPSbfn1myQM2n4AuQ5Yf+aBl8/e7cQLyLNsjjW3Z
9/9E/DYC/sEd2HwiLDd/MO/qxOaToNgy6+5LL7P5JPjkbqlXv8rmagx88o3l
MapmQw3jnikfDRjGXq9Gq67bUk+NaLZLjeSnZy+dE8r2oxC682pBzTi2H4Wr
+5b9fEnN9qNwI+Cjljemsv0opJV32bU/lu1Pxpl5to9NcWx/Mt54MfZ1Px3b
n4wJjw8HGZLZ/mQk9MsI+jGN7U9By1a1Z49ls/0pGPpT3aWD+Wx/Ch7mP7y5
1sT2p+Dsqs++nVLM9qPx4J0tf5wtY/vRePQZuk1cyvaj8ZemoM+q99h+NAyR
fb/b/T7bj8HZkKTMg6vZfgxMZzO6/Pgx24+B68HYOSXr2H4MAtdn/D10A9uf
iiOXj9t+3sj2p2LVr3MPjtrC9qfix9o/8j74iu1PxcXh20ecrGb70zBx5LWd
j79n+9NQ4lpV3XYr25+G1RtfcD3axvanwdLxyyUnXGxfg29qC1xrdrN9DS6t
iHkc/hPb1+DrrI+vnK5j+xpkfInuc/az/elYZLKM2vcL25+OSdEtzijdbH86
tryzYuW839j+dCTfHHN/2RG2PwND5g9Z/eUxtt/kxg1P/VjP9megsNulfV+f
ZPszMOxmaPIHp9j+TIyc1zEj9TTbn4lHr34xN9jD9meivmDqt3+dZfsz0U2d
cPX982w/FmjVs2DgRbYfi2rzRU/tn2w/FqeX/Fv6egPbj0VEsLth42W2PwtJ
hsMLn7nK9mdhyMfv5yZcY/uz8Om2Q0XO62x/FtwHZ5z56wbbnw1H5YQHr3jZ
/mzsGvDvoAl/s/3ZCH3y6fOL/mH7szHdtCjBeJPtz8HRu3nPlt9i+3Nwos2T
IfzfS+McjIqKHGa9w/bnoMck5ZT0u2xfi5tLL56a3thspRZB99a9FHyPfT0t
ug31j3/mfrO1WlwP3uw9xWzUYuner9qsf9Bshxa92o78e95Ddk8LfaeYS13+
bbZHi8bsG68eYlbMxZyClrdzH7H7c3F18xqz8jG7Pxf1V04/7WLWzsVGa8Ce
6Yrmnw+Mc/Fsz4PnrjM75uLtt/euyn+i2a65iOndpVPrFs32NM3njnqvjFkR
h2d+9x38dMtmK+OwIuZITxsz4jBOn7DyAbM2Dh0DO29JbsXuxyGqy6XlvzM7
4nByZWxq2JPsfhxKp27VfcHsicOyzvc/atea3Z+HcbfdQ5OYlfPQOWp31F5m
zMNn+171e+kpdn8e2m974910ZuM8HFoRcHMPs2MeIi+7J3fwYffnwRWRcmA2
s2ceHnkUeRuYFfH43y8fGq4zK+MxOyz1tKoNux+Pybk796Qya+PRI+LuaCez
MR53vvg05Rqzo2l+p0Lb62l2Px5767/tM5vZE4/RA9Xn3mNWJODa2rMf7GVW
JuDSw2GJ95iRAE1y+vRX27L7CXjW4muZxmxsev2jE7cszI4EHM58fscWZlcC
7u1J+Ps4sycBJzQnP3jMrJiPXeH3f+7py+7Px9qxe5aMY8Z8pCyq9iYza+dj
0IG6FhXMxvk498B2yMnsmI9emgdxbmbXfDw5bG/dDWbPfDj/6uTr247dT8Qs
1/ZhgczKRLy5rOPUMcxIxPdrlKmzmLWJsDaYl2UxGxMRXG3d/Q6zIxEbfny+
3WfMrkTExB7NrmX2JOLUpra+v/H7OvgkfPfrn/y+Ds4fi933+X0dnnrpYvtn
nmH3dRh34eZKJbNRh9L97yYNYnboEJcX+/4YZpcOCz1fd41m9uhwL/v7J+OZ
FQvQo3hyTDqzcgHKhwU9Z2bGAqz78tibFfz+AgxpZbz8Ib+/AJt6hT7zBb+/
AHVbW3/7Pb+/AAvO5Z/bze8vwPXLA1Yf4vcXYmdjzvmT/P5CVK17d8dFfn8h
xmaZBnv5/YXITx4w5j6/vxB/z9P807I9u78QaamrQ9sxuxaiYETqiOeZPQuR
FzbI041ZsQjPvfCCqjezchEeFg5Xvcbc9NPzwU0rzg9l1i7C85FtJ4xkNi7C
K+/NTgnj9xfh0tjhEyL5/UUI3dr38mR+v+n1WzeHTef3k7Am76WEOfx+Eiqy
90Uk8PtJUEScu72Q309CQo5tkZ7fT8Kccds3ZfL7Sfg3y7I1l99PwqnrNauK
+P0kLLKqIqz8fjIq1m3cb+f3k3Hx+rGX3+b3k/HrmWj1u/x+Mr5ZUB2zgt9P
hsaaFbSK30/G9R3tbqzh95PxxS+nLQ5+PxkzWr15dx2/vxj3zxRGbOD3F2Nd
/rG8jfz+Yhz2zV26md9fjNnjK2xOfn8xXrocNOcbfn8xVtwxdP2O31+M0oh5
O2v4/cV4fNo7fiu/n4LFwztu38bvp6Bw648BLn4/BfMf74rdxe+n4Km+T5Xv
4fdTcBGa9T/x+yl4cXHR53X8fgpmxoxcvY/fT8HoaZNyD/D7evx2PGHsQWY/
PZJMA1q6+fPo8ZZt0pZfmVV6ZJzQRRzmz6fHhgz/o0eY1XpsLPkz6hh/Xj1+
qE52HWfW63EwdHD3E/z59bg2Y2vGSeYKPXJ72rb+zvPo8Uu7tndOMTv1uHJx
V4/TPJ8e5f7dws8wu/Uo21Gq9fC8emy6tXjxWWavHpfcg9LO8fypGPrZ0KTz
PH8qHr5UH3uB509F2/mpoRd5/lTMHTn9lT95/lSs6n/+Hrc6FQNWzqm7xPOn
wn6s89IGnj8VdxLiJl7m+VNR7M1tfYXnT8XJ1I3fcztScXfi4LirPH8quqfE
tL7G86di55SJ67ndqUh9bXrIdZ6/6fUPtxzk9qYisaJ45g2ePw0dqv3Pc/ul
4eLgJQl/8fxpqLzV9Ty3Kq3p/4v3Znp5/jSsdo5zc6vT8OE7I/E3z5+GQcsf
fcGtT8PwV77p8A/Pn4aVL1qyuSvSsPvMe8e5HWk4nNUm6CbPn4YrttZvc7ua
vl7ipnPc7jQYgzoPucXzp6H94VQrtzcNsY9/cXMr0tFTE9npNs+fjsAFPnO5
lenI+7bLp9yqdOh3rv2TG+no3+Wbnnd4/nT8rkuI49amw5zoXsOtT8fSf9sc
5Tamw3dk77Z3ef50FKWGjOJ2pKOk66xUbmc6+vmu+YTblY7Lk9u6ud3pyJxe
+5Dbk463PDt6N/L86ahv3SuKW5GBmqhHBm6/DMQ4p33MrczAB2bs4VZlYNJH
P13iRgbGRt9tc4/nz0B85pk+3NoMzJxWPo5bn4HYE60XcBszYNTNKuauyMCz
rT5Yy+3IwJY3927jdmZgRNRfx7ldGdiu6PI3tzsDjTumtrnP82eg1foqJbc3
A98s7DSMW5GJwwXVkdx+mZhxp3AutzITCz82ZXKrMhF6b7edG5loHzJhNbc6
E+/N6LGZW9v09Vupt3PrM1G+8dhBbmMmPizYfpq7IhNxGe1ucDsy0TD+54fc
zkx0LLv79AOePxPbiz4M4HZn4uNxrp7cnkyMPx4/iNubiRbnl47kVmQh59+w
cdx+WXinrDyGW5mFv3bHa7lVWdjy49GF3MjCz5pzGdzqLDji3ink1mZhjuGP
Em59Fma8cLiC25iF2NVpq7grsnB51I5PuB1ZSOte+zm3MwslI5O+EvmzcM3w
W43In4XvVv69Q+TPQtSYAz+J/Fkw+SX8IvJnY2r29sMifzaUJ06eEPmzMcFY
e0bkz0bEJwkXRf5sRM6svyLyZ6P/D897Rf5sdP/65dsifzZy+jy6J/JnQ3Nr
4yORPxtz3H1aPuT5sxG7uOgpbmc2PMkb23K7snFl9ub23O5spOwq7cDtycat
p998gdubDf8Pj3TiVhjwlDusG7efAd1vrOjOrTRAPeSnHtwqA947frw3NwxI
frC/D7fagMm16/pzaw14tq9Wxa03YMTEFoO5jQaUv1w+hLvCgCGrHwwT+Q2Y
sjb6dZHfgKAX3w8R+Q34qn73SJHfAONXv0PkN6Aw6cxokd8Axf5DoSJ/Dl4s
2fyWyJ+Ds1NywkX+HFT/MXicyJ+DrH1/jBf5c3D4h+wJIn8OssNaTBL5cxD+
RKFa5M/BJ3lXo0T+HJhHjJ8i8ufg530fRov8OdCuPR8j8udg0ciu00T+HOT7
j9eI/DmoWZE8XeTPwVOv2WaI/DkIjlg2U+TPRd+IFbEify7uLX1nlsifC/+8
wtkify6S4hPmiPy5qFg7Rivy5+JX+4tzRf5czEq8JKzPRVz55jiRPxe9RiXN
E/mbvO+VeJE/F6rUI8LOXBRkFSaI/Ln4+cWX54v8uVhUuUPYk4vF/aclivy5
+OzZy8KKPOzKy9SJ/HmY73gorMzDG18XLhD589Dy3ANh5GHz7IyFIn8e4mIa
hLV5WP33tEUifx5Us3YLG/OQ4OqTJPLn4d833xF25GHMUzeEnXl4KWhcssjf
5Ktrhd15sE5oFPbkQZ03brHIn4fJ760SVuRD9c1FYb98ZNwdkCLy52NFXqaw
Kh9PzPhBGPnos+m+sDofb5cN14v8+djqmyWsz8e8CKewMR/TpzYIV+TDEd4t
VeTPR1rQZGFnPsL6W4Vd+TgWVi3szke/inPCnnx83LV9msifj4uPhgsrCvBc
6DxhvwJ8+LBMWFmABcO+ElYV4GCLY8IowHtJ94TVBXjC3Dld5C/AmUkhwvoC
ZJ+bKWwsgCMsV7iiADus7ws7CrBv4zfCzgJM2nVQ2FWArKMNwu4CtLzxRIbI
XwBtx07C3gKsiR4orChEcvVYYb9CDB0xS1hZiLZ3U4VVhfjysk0YhVjTZZWw
uhCt3/9CWFuIk3O2CesLsbvgoLCxEH3unhauKMSI324IOwpxw/+RsLMQt/f4
Zor8hThyqZOwuxDHzYHCnkJ0Wj1E2FsI85DRwooi7J86UdivCMaWM4SVRXgC
CcKqItj89MIoQuecXGF1ETYUWIW1RbjR/R1hfRGWLHhf2FiE+9McwhVFWOat
EnY0vX7oV8LOIrTq/4OUvwi3j7mk/EUYOaxOyl+EdepDUv4iHOx5TMpvxKQf
Tgn7GLG63Xnp/TDCv+dl4QAjnmjxl/T+GLHys1vCgcamvu5L71fT/qTHwsFG
KKa1yhLvnxHvDmgjHG7EquPthNVGHJ/ynLDGiHvrnxfWGvHxgU7COiOmHegm
rDfik09fFjYYcX16L2GjEY4rrwrbjWg/vb9whRGWz1TClUa8fmSwsMOI+PND
hauMCDw6XNjZ9HwbQ4RrjPg9fpSwy4gzrUYL1xmxsTxU2G1E3/tvCdc39RUV
Iewx4va744UbjLhVO0HYa0S3w5OEG5ue/2iUsMKENnumCPuYEOaIEfYz4eOF
04QDTPjfK9OFlSbMPDBDONAERUKssMqEiTdmCQebUK+bI/VvQr+jWql/E34b
HCf1b8Ik2zypfxOU++Kl/k3Y0WK+1L8Ja19LlPo34Y0ondS/CTcTF0j9mzAk
Y6HUvwkJWYuk/k04vzhJ6t8E39nJUv8mvB66WOrfhJ+6p0j9N70fdyXXmDB8
j17q34RtpalS/yYcH5sm9W/CwUeS6024tCVd6t+EeE2G1L8JlgeSvSZYKzOl
/pv6fC1L6t+Mdjsl+5jRekK21L8Z2w9LDjAjMcYg9W/GwN8kB5oROS5H6t+M
P7dJDjYjsH+u1L8ZIyolh5sx4bFktRmFcXlS/2bc2SlZa0Z913ypfzPCsyTr
zZi/X7LBjKiuBVL/ZryaJNluhm+N5AozOj5RKPVvxtyxkh1mtCmXXNWU74Bk
pxlHni6S+jej51jJLjMGmSTXmfHcD5LdZpy4IbnejA9eNkr9m7EoWnKDGbOs
kr1mmL+W3GjG1dOSFRZ83sYk9W/BwUGS/SyYP0NygAUWo2SlBQM/lRxoQWGd
ZJUFhiuSgy3o09Ys9W/Buj6Swy24Hi5ZbUHH+ZI1FvQ0S9Za0PtDybqm+feS
9RYEuiUbLAhpkGy0QPdYst2C7zpapP4t6N9XcqUFx0ZJdlhQM0VylQV/zJfs
tCAiR3KNBS3LJbss6LBGcp0FRZskuy2YUCu5vun93y/Z05T/pOQGC0Y1SPZa
4L4tubHp+VpYpf6tWNxeso8Vts6S/awI7C05wIqZgyQrrXhlhORAKyxjJaus
MEZJDrai60zJsGJ2vORwK8KSJautOJ4pWWPF84WStVa0Lpass2Lj25L1VrRa
IdlgxQtrJBut+HOtZLsVGZ9LrrBi95eSK6049q1khxWbt0qusiJyp2SnFd/9
JLnGiqv7JbusuOGWXGfFrqOS3VboTkqut+LsackeK1TnJTdYEX1JstcK9VXJ
jVb0+kvu34bj/8j925BwR+7fhkP35P5t6PSv3L8NYQqb1L8Nk1tKVtnwZmvJ
wTZ0aCMZNuxrKznchsRnJKttuOonWWPDtA6StTZs6ihZ1/T6FyTrbejYSbLB
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
q4mjiTXEscRa4nhiHXGS8P8BLuI9bQ==
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxd13lYzOv/P/CxhxwhhJA9e7ZkfyKEkJAijJSSYrTvTU1NMzXV7Nll7zh0
cjiEHGM5ZA8he/bs2bN/53f9zvu+X33843q4u+c1z/fz/boudfBZ7u5XUyQS
3aojEv2/v///n8pR+RPux1jnvxn13z8gsvvAEZPevf7PFvi90d+rkroLtkLh
Y3HcP26v/rM12l65/yBi0cv/bIOk66qDTea8+M+26Haq4ZCjXZ7/Zzvsf+Dj
7phb8Z87ImmGstW5x4//c2c0+GixRv9EcFcMMvhFej0VbI+emfWOtK4Q3APT
k5smlzH3gshjcYn2meA+ONss98DE54IdMOBu6yk/mPuh+Eblql0vBPfH6hbf
8+e8FDwAHyOvr679SvBAzFl9b+kfzIOwfv8Ah2mvBTvCUbnv4xvmwci2b3wm
841gJ8S9+v2gfaXgIdg06UCpiXkoHmx37OLxVvAw7B/6sLCCeThibrusjXon
eAR0dw/eqvNe8Eik3PaQqZlH4WJGnQ02HwQDe5SxQ9cLlgJ/dx26sMNH4Xw0
vvdVt9skWDoaIftWx9t9Es7HYNeVccq1gqVjkBs0xbXFZ+F8LBq+G3EpU7B0
LHa2C+9Yq0o4d4bjno6TIgRLnVHDYaL7U3Y+Dgmqf5w9vgjn4xD0slfP44JF
41Hs3qxxn6/C+XjI3E9+MQoWTcDnIsmHH+x8AjpOtbZY9E04d8FWj/QRJwVL
XaBclLKu23fhfCIuPVQ5pAmWTsTls/V+PWLnkyB2HNBk9A/hfBKKa9kvXyNY
NBnrI27afWDnk+F7oXWfyT+Fc1f8Vm5YnytY6ooFO69Gf2DnU9D3w+hT438J
51OQfcYuK0ewaCrud865+oSdT8XVgN+3DBQ9+e98GuZXDauZJFg6DRsONft4
lp274VzeNVnzGv8ZbrCeZPn3PMFSN2SMbpe9RbDJDe3Oeto8FyyaDv3wFx59
agr3p2ObrMJthWDpdPTYNMFyj2DTdCywf5T1XrDIHV67Eu72ryXcd4dx3GHR
CsFSd/zzuee3XYJN7tD1HXHlmWDRDLTpOymrc23h/gzUStD1my9YOgPjZ48+
ZhRsmgGb5r7jLggWzYTtmg9HatcR7s/Eq39KHYcKls7E9/yL+csEm2bi7OzV
vTYJFs1C6qkre0vZ/Vmooa7jWreucH8WenTb8slRsGkW7o5rfGCxYJEHho/T
5hgEwwOhMb7G4+y+Byw1vx+oZPc98M/DFXXa1hPuz8a/Vw7GuwjGbFxut7xr
qGDpbKQO8K+1TrBpNtJTlticZPc9Me1mjyWv2X1PzNs89UtzC+G+J+aP9T83
XLDJE2fFnx77CBZ5wa1f8ESFYHjh8YleX3ey+17YOk3+rYTd94JPyCG3D+z+
HNRM/vm9RX3h/hxsOR9Sa4hg6RwYHvbynyPYNActrvbvGStYNBffouLc17D7
c9F11/t7B9n9uXhkDLt2g92fi14PzjtVsfveOPfLVL9FA+G+N+J9aroOECz1
RuXBITXdBJu8cb5/zb5BgkXzkL/teWkauz8PLe+Ff9rE7s9DSHFr42F2fx6s
djjvu87uz4ej9wyvt+z+fDjFr0lq0FC4Px/bti7u10mwaT6y17wPHCZYtAB3
UiIcZgjGAly2aZUSyO4vwKaSr/5J7P4CDGzZ724Ouy+GZdSpil2C7cRYeP6I
8jj7PDEWBDc9XiZYLMYmj3zjK/b5YjycG123puV/zhXj3lQ36xaCTWLE9ah3
rLvgcjH6Dl/SZIRg0UJsch1S202w3UJsP9VvrY9gLETww9q3wgSLF6LuKe9j
csHShRhVcGvGSjZ/IU7Y2Gp+Z/MXIvdmQexBNn8hms3s0vwsm++D4+k/5t9i
830wZeq+OS/YfB84zvm3/jc23wcjI1cFN2gkzPdB27Wr01oJzvXB1kY9vOwF
m3wwM2HTQ0fB5T5w7+1pP06waBHu1F5lP0Ow3SL0Kdz5WCwYi1BSXipeJli8
CMFtpqyJZfMXoU3nyUYFm78IHd/9dDew+YuAK9rLG9n8RQiX92yRz+b7YrxH
RbuDbL4vDP0fvvqXzffF+9MOKZfYfF/IN5U/uM3m+yK8/48GFWy+Lx5/zvjx
js33Rao689APNt8Xf5T8GGfxmzDfDxY3r6xrKtjOD2/61TxhKxh+cLwecaCr
YLEf8me3SXQQLPWD0+PS5kMF5/ohOjAlYaxgkx96bKh70FVwuR8a2A48PYvN
X4yQZfd3zmfzFyOz5z0/fzZ/MZxqff2wnM1fjLTLX+dEsfmL8fbvbSulbP5i
9GlzJF/B5i/Gvss11qvZ/MWosuvuv5LN98ewiy8a5LL5/ugz/IdyO5tvdlCj
x/lsvj9GtDptu4/N98euYzf6HWbz/SEretz5BJvvD81I9aczbL4/JoRGb7/E
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
5RXcuQrcMb0i/Stg9+Ud6V+BiTZVpH8FLrX7QfpXoG+jmt68fwWuPazLXaLA
kM0NucsUKJ5sxV2uQOUda+4KBdrOacVdqUChqS13lQI9mnbkFilRNrUrt4US
XSN7cFspEZHRh9tGCXtVf247JdZEO3LbK9Fz5lBuByUG2I7kdlLC8vJobijR
KGIct4sSKouJ3G5K3FW6cnsqMevrNG6xEmPmzOAOUOLj7x7cEiUOPfPijlLi
Qat53FIl9g4VcyuUiHVdxK1WInHaYu6VSlg4L+HOVWJujyDuPCWKai7nLlBi
2fkV3IXmeelh3CYlzg+NJP0r8eVONOlficiwONK/ErKfCaR/Jbzikkj/Sgx8
LSP9KzFlppz0r8SdfAXpPx22P9NJ/+nAmEzSfzoSYrNJ/+losEND+k9Hqws6
0n86bj81kP7Tkfo5h/SfjnE/VpH+0zH5yxrSfzpOvlhH+k/Ho9INpP90XN67
kfSfjqKMzaT/dFzw2kr6T0f/9ttJ/+locjuP9J8Og3oH6T8dT4bvJP2no+f9
XaT/dGTE/0n6T0evprtJ/+kYuOEv0r85T+e9pP901Nv8N+k/Ha1b7yf9p6ND
eiHpPx2j3h8g/adDP+sQ6T8do3cXkf7TsbjuP6T/dHSadYT0nw7jOhPpPwN3
7x0l/WfAxvY46T8DC91PkP4zcC35X9J/BnS7TpL+M7D38inSfwZmvCsm/Wcg
w/IM6T8DER3Okv4z0LvfOdJ/Bk4PO0/6z8Ci0RdI/xloNuYi6T8Db0eUkP4z
YD3oEuk/A9pul0n/GUhufoX0n4GvP4nVGbB6VEr6z0DZiauk/wz4b7xG+s/A
pejrpP8M9JxaRvrPgKLdDdJ/Br49Jy7OgHHPTdJ/BoKjbpH+M6AZcpv0n4Hm
n4krMlB/9x3SfwYS/e+S/jOQ1voe6V+FAWeILVTQRpST/lXY2/4+6V+F3/8l
tlNBGvCA9K+Ci8VD0r8KjbcSO6nwaOQj0r8K164Su6jwbslj0r8K478Re6pw
T/mE9K/CmeZPSf8qWG8glpjPu1SQ/lWo+p1YqsIfPZ+R/lV4vYNYrcL5bs9J
/yrM2EScq4Kq9QvSvwoyNXGBCmNrvyT9m/OGE5tUmPCYuFiFXPdXpH8VXhwm
LlOhf7fXpH8VErOIK1S49Z64UgW32W9I/yo8LSQWZeJ3m0rSfybWRxBbZeLi
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
             "]]}, {
            Hue[0.5585438199983166, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
9canccdrdJ6Rq7zRV/zqV8p7cp03WmcuUK/5Q271Rq+B+ZYjexXR+X3wn9a3
7VYjyCo+uBHf6UeqFlnNB1/Vj3sen0vW9sG2/g87VJuS4QOn9UvPNWwgm/lA
v1PTjg+eZBsfvOwbV/ghkuztg7yYr58bMsgCxe837eNVnUMW+mCka8HYE4fJ
uT64e04+Mv08udAH7//bs2HdLXKpDwbF7msa9Zxc5QN3kcelZ+/JdT7Q7l3e
mvmH3OqD0H2Rwbo9T9H5ffHjy6YND1XJKr5IE8zb5z6RrOaLrqUvLL7PJmv7
4lP/XgGhS8nwhdaNjA6frchmvrg8aEIXO1eyjS+2DzqQeDWE7O2LCbduJoxJ
Jgt8sUZ9fbfAzWShLwY1Dhl0YR851xdzy68c/VtELvSF+apRtdPKyaW+WKbU
vNv2PrnKF6tHNCjHN5DrfLH5aXmnHZ/Jrb4YYGR2+Ej703R+P7gvnK10qg9Z
xQ8nsue1O6lGVvPDjNphRQcmk7X9sDY5eoxsLhl+CKzXNA1aRjbzQ263q3pm
68g2fkhp6/1hpBvZW3G/Z5H76xCywA/pPdzP7k4iC/1Qrf/iuUUWOdcP7/Su
PGm/l1zoB3mf8qK8E+RSP1hlC/3nlJGr/JAUVDXkZjW5zg89h2sXrKojtyrO
e8VyUvUHPr8/9gZ8ylv4h8/vjwG/dg882r2Yzu8Pj7d9E/sNJWv7Y3fOy5/u
mmT44+3M4sBzM8hm/hBumf5PeSHZxh99PX9sXrCK7O2Pr8PyjENsyQJ/3Ll1
t+9eL7LQH8t8NH5fiyDn+qPLoWldX6WSC/1R+Gbr3G/Z5FJ/NC79kqu0n1zl
D/sT96e1KyLX+ePJ+Qd/v5eRW/3R52Jah6ZqslIA7l9LNbpVS1YJwJhcx9sF
7/n8AVC+dHiH4BefPwCXNn0pMel6hs4fgFrP8gkqg8hmARgbfaz1ujrZJgCV
7wxVIqaQvQPgdKxL5liQBQEYnZLoc3UZWRiAC48Wl2y0JucGIP/4A78WZ3Jh
AMbXHt8WGEguDYDNTYfZX2PJVQEI3u5l7iYi1wXg3NBVzY9yyK2K339W2Hnu
QbJSIAJ37svfUkxWCcRG+YCaD+VktUDs7mmxRe8eWTsQi0Y3tkS84PMHQl9u
UHv6A58/ECeqH7m/+8XnD8TY+v+2D+h6ls4fiISQ/f4zB5IFgYh8X/HNbAxZ
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
xr4aEpiRwv1TcLtWMs01jfun4GxS607DDO6fgmWy/heGC7l/Cr5Nakj7KuL+
KYj9ML9HpYT7p2Dp635zd8q4fwqSNs8aE5DF/VMg+i0rMcrm/ikYGtmt+5Ct
3D8FIX+Cer/Zxv1T0Hz7/PVTOdw/BfcvnJ8Tn8v9U9Czp4XLil3cPwXdPRxN
VfO4fwoWdL/x/tUe7p+Ctcl2xof3cf8UuP7rujHgAPdPUfy9sX3K7ALun4Lr
8T/L/h3k/in4N/hXv7LD3F/xefNDx8QXcv8USPau+rzwGPdPQcHHjXEdT3D/
FLg0BT8sO8n9U9DJJui94BT3T0H83qlX9Yu5fwp+x8Q7fDvD/VPweLrhtcIS
7p+CkSGLPjuf5/6pyBfYNYws5f6p8P7psf3+Re6fiiu95o5MKeP+qYr/v7vP
dc4V7p+K+p6RgpZy7p+K2CMy29wK7p+Kt2sv9jK7zv1TMW773aS/N7h/KmbE
51QV3OT+qZi/5fNri9vcPxWv6nZXtq/m/qnwrImKOXiH+6dCLd6i6+p73D8V
/ut+2v6+z/1TsXbtzPRdD7l/KsI/PU01esz9UxGvWrzhXQ33T4XlkuxOGU+5
fyrWeSyJm/yc+6ei5OvmR7druX8q8u6YKXu94P6piPOd06XnS+6fijVl/706
0MD9U/FsSt3Wha+5fyrqDo+fVNfI/VMRsudOdsgb7p8K04476/u84/6puDNn
Q5cDzdw/FQkGd7obfOD+qTAMv/z+bgv3V/Rs/HXY6SP3T4VR21yzn5+4fxqG
5a66k/qF+6dBsuHfdNU27p+G5kmdwwu+cf80zE2fvGfWD+6fhnOR+sfKf3L/
NHxM/Lh75W/un4ZOx/qEPfvD/dPwJ3mjrtM/7p+Gr2rbn7YoXaH+afDskeYc
1J5sloYYx/dP/3QgW6ZB61a0XmxHsk0ahE5dYzp3JjunYfTTBSdSupC906Bk
3Vrdoxs5OA0Ts28+Se9OFqThYnX2nZ49yUlpmF/e91RaL7IwDXfOf03upkLe
nIbglH9LE/uQc9NgGdX8p30/8v40tAsLzo3oTy5MQ279hmnfBpBPp2HBbqsz
XoPIpWlQmzJ2auNgckUaKtLCdqwfSq5Kg++s/kp3h5EfpUHX6MBqo+HkujSY
m37OPTOC3JSGTd759RPVyK1p2GGZMCxnFPm74vvRn2vSawxZKR0TapICItTJ
XdJhFq66+Z0GWSUdlW2HT1iOIw9OR9H+rzcua5LV0mEQvuf55PFkzXS0vfZ9
nz2BrJ0O5bd9frSfRNZNh2vfGe3dtMhIx6IQcdc7k7l/OjpfftxbV4f7p6NY
/fyA7VO4fzr0rD4OazeN+6cjrFB9jP107p+OC0pdJ5bP4P7peHrUdOY4Xe6f
joDTexYmzuL+it+Xdc7itR73T4fmxoWehvrcPx2XjrxL3jmH+6dj/akNBX/m
cv90LJ9qctcS3D8dk7xt2x+fx/3TMWDJ0lk9FnD/dLyeWBRsb8j90xHc3/Ti
2YXcPx21aef79TXi/uk4dOyYt5Mx90/H2Kn3H51dzP3TkWxSZdJ7KfdX9Li1
7KatCfdX/PyQb1bHl3H/dFwbGdDWYTn3z0C2o3fuKjPunwFtZdHaXSu4fwaE
OyNHt67k/hlYE1r3S9+c+2eg/fr1r5NWc/8MTCrYWn93DffPwLW18z4Ot+T+
GVj38XNfp7XcPwOzMyyNj1hx/wzcqOsnbrPm/hm4MOl6q/567p+BJaYjHWI2
cP8MOBUWtZRv5P4Z6GUxVdTNlvtnwKdm5pJldtw/A/OdHYdlbuL+GXhaZtOx
yp77ZyBjUUUXFUfun4HHtXPGLnfi/hnYOsBuQ7oz91ecR/n+0esu3D8Dgo0z
RnV24/4ZiPPRODTfnftnAKrz1kR4cP8MDHk8bvgpT+6v+HzFQe1bvbh/Btoc
bnXS9OH+GTihdm38Rl/un4HAMmUvmR/3z8DH0uH3rvtz/wxUqxda/Qvg/hlo
llh0mBrE/TMRb3LklkMw989EzNiV57JCuH8mDkhqbleEcv9MPNlR3+lHGPfP
hPHHDps0I7h/JooqHjasieT+mTjY7ltaXBT3z0Rx35/WRwXcPxN7e4asfBbN
/TNxakd3ny6x3D8TT/ssPj0ljvtn4otxhea6eO6fifblI8viErh/Jpz3vko8
mMj9M6GadyTobhL3z8TbAf0kP5K5v+J8LXk1I1K5fyY8Lv0wXZDG/TNxr2RP
q2M698/EhAL90uQM7p+Jo99WnC/I5P6ZqM4Pflcp5P6ZMHNbYPxexP0zkRVp
eL+HhPsrvs+KnpIJUu6fCYeb2jGLZdw/ExcOz93tKOf+mWjRqmiLyeL+mThx
ZH1Ezmbun4mSKZkzi7O5fyZq1jZr3N3C/TMx10l5cfNW7i/EiTmOO5W3k5WF
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
webjA3n/iu/v5VedPPZmKSqHmRcND+L9S/H51N0XcnauFF4dTp7oHcz7Vzxf
VXdyEnu/FM5ftq1QCuH9SyExHaMazC6UouBit8wW9gkpZp0S5zuG8v6lqHP7
6fmMXSJFaIvg6aow3r8U0zUcPl9jX5biSNmr4wbhvH8pRqyeN+Iku1KKTTOL
poyP4P1LMXFbzMcc9j0pBiQ3WPWL5P1LceHhEK9E9lMpvk230frFrlP01fi6
2TOK9684z58BR16wm6RIbPrnbS7g/UvR+qrleTm7VYpJ10f/0I3m/UthO/f+
hXz2dynyShdMVY3h/UsxPC9/VTpbSYaxfRaN+stWlsGp48ptnrG8fxlaV3W7
8pzdQwaLPflbTeN4/zI8DPJUO8/uL4P7SNGqSfG8fxk+XVk2fRtbVQY9t9or
3RJ4/zJMfCXoGMJWl+FVrfuX12xNGaqfPRObJ/L+Zbg+s9eLi2xtGbSH69Zq
JfH+ZegqlaVvZevKMDTEprlzMu9fho6CO7/82JDBeapGSS3bUIbPX0STlqbw
/mVI/rPCrIhtIsPq9Tnqo1J5/zJ8/HUkP5VtLkPQ5gv1X9mWMuy81vHmxjTe
v+J8f864XGPbyCAMG1Q8JZ33L0O9zaqzW9nOMmjm7fVWzuD9y1DTb/Fjd7a3
DEfX+H69x/aXoeLd2iv6mbx/GY6Pn7k4jx0uw/YF86K7C3n/MtgZHPHwZcfJ
sO/fqV6P2Uky/JgrtjcQ8f5laBL6e+1hC2UYaSeb3F3M+5ch7Pv4Pd7szTLo
+LlV3Wdvk+H59bSjehLevwx7qi8b72DnybB06mJ5BynvX4blAcu3OLEPKvp9
67H6BrtQhsMfi8q1ZLx/GbKDY1pE7NMy6Ibk3f7CLpFhxtkVThZy3r8MW+rO
FxWzL8vwxEHt/LAs3r8Mv3bmR0SwK2XILRd9fc6ukmFyXdex2Mz7V3w/9xf1
3sl+JMN3l/Cj7bJ5/4rnzXrew45dp7j/3I5Rl9gNMqw0/tIyagvvX/H9d+0d
HM1uliG1x5gzdexWGb5O31RksJX3L8MNo/YeOezvMqyrnfL8N/u3DNcCxnWz
3sb7l0PDpu/H02xlORJua0gGbuf9K65XS1r92D3k8DPN6FrNVpFjck+j55Ny
eP9yxB1p8UxhD5Zj1Inis6/ZqnIsDnxwef4O3r8cPyYFpeSw1RVuqezxk60p
x6dDXUxW5/L+5UiaYW1cyNaWI3T613bdd/L+5Tg4tXOIA1tXjiVZFw9dYOvL
UbvbPHfILt6/HA6hrWZ+bEM5HIdcuVDJNpaj1/r27zV28/4Vn//fw0eRbDM5
7mYFxD5km8uxZlu395PzeP9yRNiUD0hir5Oj58BHf2rZNnL8q/TcM3MP718O
qV9xj0y2sxzeD15Pfc12l+NwrsawOXt5/3K0WeddkrD95djqLRr/lh0sR77G
sFXYx/uXo+NOL305WyBHVGPJ63fsODlePdVeOW8/718OdcMfkXJ2mhxrLyzw
eMcWyvH69pzhOMD7lyP1Qf9MKXuz4vf3a7vUxN4mR8zeXsX6+bx/Ob5lpPoI
2XmK/gXZzS/Z++XwKnEYP7OA9y/HxI2qE1LYhXJ87/v2w1P2CcX3M+NXwOSD
vH85LLqGl0azS+TQzt986y67VI6qwRG5God4/3LoTV89I4hdIcebCybCCnal
4vOuzTw85DDvX7GPeGORK/ueHL9279Y9y34kx70fN/K6H+H9K+7Pb75vza6T
41iJdmUBu0EOpwFlib/YTYr3OfxWl6WFvH85LLdGLN/CbpVj86+f1m/YXxTv
V1cfLd2jvH85Hqp0u5rA/q143rxWjftspSx0Prhs6ZhjvP8sKM03menD7pKF
vIcD3p5n98jCq9H3NvU4zvvPwqmzhXlr2f2zMFb1/sG97MFZ8Mh1Df/MVs1C
h8Qt/XCC95+F4tZ03zS2ehau1XlkP2JrZqFVf1OS+knefxbCbsoNvNnaWdgw
R+fCWfa0LCwfat25cxHvPwvV9/QHr2TrZ2FV6d+P29jIwqx+16SNbMMsfHtd
pjTlFO8/C+N0B80IZ5tkQfL67bRytlkWLE86/ul9mvefhZYlxzLXsi2zYKjz
9d0u9rosVN5f07eZbZMFWfLf9tOLef9Z2Bjd73wE2zkLh++XLChnu2fhQcwo
aa8z5Qb/A9ELfjU=
             "]]}, {
            Hue[0.7946117974981064, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxdzX98U/W9x/Ez7TBXq2RaNGrVo9YtasUoiMEV+KAFgitwCgUCFDmFQsMP
JfxwRkA4ImrQqlE7jA71ONkWlWl0BSIPZGdYJWh1USuGCXpU2DKGGJHrjcrV
3ftYv4978zr/5PE8n7zP6/yZC8fPPk7TtA9/rGn/+/vvpzjs+VGfLKt6/oth
vS+k5ZSzp+T7Hu61R7Z67rhs+KpDvfbK4gv3jTjr3YO9rpKeh/ve9fLeQq99
0rNjy76VXx3odbXc0zL2tPr3lXWxT2l6ftcW5QukWNG22/Nr5Ro5GBrl/W6l
8k/l5oN7Bj02S9kvjy/861I3pHyJ5N64aFi2v3KtjDjjvnEN/ZT7y0XbdLvt
2P5eB8T75N/m9NuvfIU8kv3iJ43dyleKMenV607fpDxAPsz3y5lPKA+USY2v
ZWrjylfJ3OKpl/5ysfIgGX931W2DpytfLX3Ghi9dElIOyp/qNu8+b6DyYLln
+/XX1unK18iq0rrG1yqVfy47Qq/2yXzzWa/r5KLvtNt/8nflIXLm7Z7v3u5R
HipfOy/u+nyH8jD5eOyGqfNfVBZZkTxnwAi715aIPeTNw7EH1H24TPtuy9CK
Veo+XJKbRhf236Tu10rPmHFdvhnqfq1Mrzpn++Pj1P06OeWVze8uEnW/Tgbv
+bH34SvUvV5Sh8/u+OECda+Xxyavat9Upe4jpOPi1Vf9sY+6j5CrF/1mz9el
T3vvI2X3eV/lVv6z19ZI+WfVfdboj9R9lKx++YSpE99R91Gy4fnSX+0udQ/J
pjOXtV+SUfeQbL9gy3FfPqfuo+U9Wbn3yJPqPlrqS/kd/TvU/Xq5bFMq8nRc
3a+X6iWhe8bdpu6/kNmFKz+/YrG6/0L2FTfOGN2m7g3yQGlJpqNZ3Rtk0aXR
3aeOV/cxcu6AefaOUeo+RiLjuiqeHqLuY+WbRwd989IAdR8r80P3L/vyYnUf
J5e/urB9uq7u46Rh3tmDvz5d3Q257bOBD249uddiyP1/aX/umQr1f0O+eP3Q
hh3fffJvO4asWnXgyYqveq01ivnDE103Hey1NMqkHc+K9mmvrUb5OPPByMwe
tW+Uh/7D03fdO2o/Xnas9OxO7lL78dJ579x9f/qz2o+X7PtT5p+4Ve3Hy5DL
V79xy0tqP0HOP/Lp6BOeU/sJUvHcS3WZp9V+ghw5fui3a9er/QQ58ZPsvuW/
UvsmeceOjrzvfrVvkiuX9H3klbvVvkle3KoPqrxd7Zvk3AW/uy+2TO0nyqMt
fU86bqnaT5QZ6849L3Wj2k+UicPfGzKvTe0nyntdjR+NalH7SfLbeW8tk2lq
P0le/GxxYsJEtZ8kvjsmPGmNU/tJcuZljZfsHK32k2XMkRO3/LRe7SdLvfHG
W08MVfvJkvMu+qb/YLWfLPaf23buHqD2Yblwe/vOX/VX+7D847UL2+dfrPZh
+dFZrz8zuUbtw1JVPWHLlPPUforIvE/GLDpL7aeIuzjteaKf2k+R7cvPuvNj
r9pPkXrf3TOvqlT7qZI48YZrnzxB7afK7Hu/3Vl9vNpPlf7/+UTyD9+7vfup
cuPbkWmN3/ZamyZ6YMTLJ3zda5kmr6w50Jz7stfWNHlsfeeRZz9X+2nSWdXt
f+Qfat8sH1cefL7jgNo3S/KStkFPf6L2zfLGgdrFO/apfbMUqjeefmSP2k+X
w5+/t+eK3Wo/XT59x7Pk9nfVfro8XDr71+7baj9dWj+9tnLcm2p/g5w8qO/q
7p1qf4OEcnNeDnep/Q1y10krol85an+D7Bjy+pz1r6j9DNk079vmCVvVfoa8
4K/o59ui9jNk7ubvGw/+Ue1nyEjpn9+VVntTFkz4ZsHmP/RaN2XMbZ/ufuFZ
9T1TLjl99b5Nv++1aco1V1mjsxvU90254K379//tqV7bpqz6YtatP3lS9UwZ
MajzvVHre+2a0t14mbP2UdVvkblbo5UfrFP9Flm25pS7L+9Q/RbZN9H64aEH
Vb9FupfXjPzRA6rfIjX64Npl7arfIj97/IM7/nut6rdIz+Evzrv3btVvkcNS
33PBnao/Uz5Jtt7ctVr1Z8rGx57NL7RUf6Z4I1f11KxU/Zly9aMHhn62XPVn
ij52SvHZW1V/pvQLF5zlt6j+TFm2zF478WbVnykTdgyvCS5R/VnyzlfXzL9w
kerPkqaTfzf4jIWqP0uGf1w//7QbVX+W+DK37T1jvurPkmE14Xk1c1V/lnzp
3Hok2Kb6s+Qv5184YeJs1Z8lHdna+bfOUv1WmdW/4qzftqh+q1z3UWpYfobq
t8r19jPbTr1B9VvlhE3nL25qVv1WeUXfPPzxqarfKn36PHzy52HVb5Vo37mZ
6yarfqu8/Pd5Fz01UfVnS51zffDHTao/W4YeuPr9heNVf7ZsnrHXdQ3Vny3X
bJgq4XGqP1u2jf3FnvfHqP5s2XFw64NTGlR/tuza+TPjs+tVf7bcuWfVd4tH
q/4ceeHpc5d7Qqo/R8684s3NT49U/Tni9Nu8rn6E6s+RXy+/5fh/Xqf6c2T3
4JP/tu5a1Z8jo77O/yw0XPXnyHvGEy99P0z158ha3+3RrUNVv00G3XN8w/Ih
qv8/TlYEhtepfpsYP99+QuXPVb9NJne/uv3DwarfJjfN0Yang6rfJs80blq2
9mrVb5P9N8fCbYNUv00ee//KnaOvUv2ItHvP6wwMVP2InHh4Z2X1ANWPSPpw
nz+ddKXqRyR64LiXfwiofkQ6H+n/j/+6XPUjckvrqKFH+6t+RPxHJvz+6GWq
H5EBn/3mtG9qVX+u9Hlw1+IfKetz5aa3ftN58qWqP1cuenbMrnMuUf258suR
tU9dcbHqzxXt/z827MAurM0rtw4LbMIWbMMO7MLafPRhgU3Ygm3YgV1YW4A+
LLAJW7ANO7ALazeiDwtswhZsww7swtpN6MMCm7AF27ADu7C2EH1YYBO2YBt2
YBfWouX2wjocgAU2YBOOwhacgG04DTtwDnbhIqwtKrcX1uEALLABm3AUtuAE
bMNp2IFzsAsXYW1xub2wDgdggQ3YhKOwBSdgG07DDpyDXbgIa0vK7YV1OAAL
bMAmHIUtOAHbcBp24BzswkVYW1puL6zDAVhgAzbhKGzBCdiG07AD52AXLsLa
zeX2wjocgAU2YBOOwhacgG04DTtwDnbhIqz9stxeWIcDsMAGbMJR2IITsA2n
YQfOwS5chLVbyu2FdTgAC2zAJhyFLTgB23AaduAc7MJFWIuV2wvrcAAW2IBN
OApbcAK24TTswDnYhYuwdmu5vbAOB2CBDdiEo7AFJ2AbTsMOnINduAhry8rt
hXU4AAtswCYchS04AdtwGnbgHOzCRVhbXm4vrMMBWGADNuEobMEJ2IbTsAPn
YBcuwtqKcnthHQ7AAhuwCUdhC07ANpyGHTgHu3AR1m4rtxfW4QAssAGbcBS2
4ARsw2nYgXOwCxdhbWW5vbAOB2CBDdiEo7AFJ2AbTsMOnINduAhrq8rthXU4
AAtswCYchS04AdtwGnbgHOzCRVizyu2BvbAP1mE/HICDsMAh2IDDsAlH4Cgc
gy04DifgJGzDKTgNZ2AHzsI5OA+7cAEuwiVYu73cHtgL+2Ad9sMBOAgLHIIN
OAybcASOwjHYguNwAk7CNpyC03AGduAsnIPzsAsX4CJcgrXV5fbAXtgH67Af
DsBBWOAQbMBh2IQjcBSOwRYchxNwErbhFJyGM7ADZ+EcnIdduAAX4RKs3VFu
D+yFfbAO++EAHIQFDsEGHIZNOAJH4RhswXE4ASdhG07BaTgDO3AWzsF52IUL
cBEuwdqacntgL+yDddgPB+AgLHAINuAwbMIROArHYAuOwwk4CdtwCk7DGdiB
s3AOzsMuXICLcAnW7iy3B/bCPliH/XAADsICh2ADDsMmHIGjcAy24DicgJOw
DafgNJyBHTgL5+A87MIFuAiXYO2ucntgL+yDddgPB+AgLHAINuAwbMIROArH
YAuOwwk4CdtwCk7DGdiBs3AOzsMuXICLcAnW7i63B/bCPliH/XAADsICh2AD
DsMmHIGjcAy24DicgJOwDafgNJyBHTgL5+A87MIFuAiXYC1ebg/shX2wDvvh
AByEBQ7BBhyGTTgCR+EYbMFxOAEnYRtOwWk4AztwFs7BediFC3ARLsHa2nJ7
YC/sg3XYDwfgICxwCDbgMGzCETgKx2ALjsMJOAnbcApOwxnYgbNwDs7DLlyA
i3AJ1u4ptwf2wj5Yh/1wAA7CAodgAw7DJhyBo3AMtuA4nICTsA2n4DScgR04
C+fgPOzCBbgIl2Dt3nJ7YC/sg3XYDwfgICxwCDbgMGzCETgKx2ALjsMJOAnb
cApOwxnYgbNwDs7DLlyAi3AJ1trL7YG9sA/WYT8cgIOwwCHYgMOwCUfgKByD
LTgOJ+AkbMMpOA1nYAfOwjk4D7twAS7CJVi7r9we2Av7YB32wwE4CAscgg04
DJtwBI7CMdiC43ACTsI2nILTcAZ24Cycg/OwCxfgIlyCtfvL7YG9sA/WYT8c
gIOwwCHYgMOwCUfgKByDLTgOJ+AkbMMpOA1nYAfOwjk4D7twAS7CJVh7oNwe
2Av7YB32wwE4CAscgg04DJtwBI7CMdiC43ACTsI2nILTcAZ24Cycg/OwCxfg
IlyCtUS5K2APXAl74SrYB1fDOlwD++FaOAAPhINwHSxwPRyCG2ADboLDcDNs
wq1wBF4AR+GlcAxeAVvwGjgOt8MJuANOwuthG94Ap+CNcBruhDPwNtiBu+As
3A3n4B44D++FXXg/XIAPwUX4KFyCj8Hag+WugD1wJeyFq2AfXA3rcA3sh2vh
ADwQDsJ1sMD1cAhugA24CQ7DzbAJt8IReAEchZfCMXgFbMFr4DjcDifgDjgJ
r4dteAOcgjfCabgTzsDbYAfugrNwN5yDe+A8vBd24f1wAT4EF+GjcAk+BmsP
lbsC9sCVsBeugn1wNazDNbAfroUD8EA4CNfBAtfDIbgBNuAmOAw3wybcCkfg
BXAUXgrH4BWwBa+B43A7nIA74CS8HrbhDXAK3gin4U44A2+DHbgLzsLdcA7u
gfPwXtiF98MF+BBchI/CJfgYrD1c7grYA1fCXrgK9sHVsA7XwH64Fg7AA+Eg
XAcLXA+H4AbYgJvgMNwMm3ArHIEXwFF4KRyDV8AWvAaOw+1wAu6Ak/B62IY3
wCl4I5yGO+EMvA124C44C3fDObgHzsN7YRfeDxfgQ3ARPgqX4GOw1lHuCtgD
V8JeuAr2wdWwDtfAfrgWDsAD4SBcBwtcD4fgBtiAm+Aw3AybcCscgRfAUXgp
HINXwBa8Bo7D7XAC7oCT8HrYhjfAKXgjnIY74Qy8DXbgLjgLd8M5uAfOw3th
F94PF+BDcBE+CpfgY7D2q3JXwB64EvbCVbAProZ1uAb2w7VwAB4IB+E6WOB6
OAQ3wAbcBIfhZtiEW+EIvACOwkvhGLwCtuA1cBxuhxNwB5yE18M2vAFOwRvh
NNwJZ+BtsAN3wVm4G87BPXAe3gu78H64AB+Ci/BRuAQfg7V15a6APXAl7IWr
YB9cDetwDeyHa+EAPBAOwnWwwPVwCG6ADbgJDsPNsAm3whF4ARyFl8IxeAVs
wWvgONwOJ+AOOAmvh214A5yCN8JpuBPOwNtgB+6Cs3A3nIN74Dy8F3bh/XAB
PgQX4aNwCT4Ga4+UuwL2wJWwF66CfXA1rMM1sB+uhQPwQDgI18EC18MhuAE2
4CY4DDfDJtwKR+AF/+d/AVfESxE=
             "]]}}}, {{}, {}}, {{{{{
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 1.000000000000003}], 
                   Offset[{0, 0}, {1530.2291666666667`, 1.000000000000003}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.000000000000003}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.000000000000003}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 1.000000000000003}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.9648658095119993}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.9648658095119993}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.9648658095119993}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.9648658095119993}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 1.000000000000003}], 
                   Offset[{0, 0}, {1530.2291666666667`, 1.000000000000003}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.000000000000003}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.000000000000003}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 1.000000000000003}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.9648658095119993}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.9648658095119993}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.9648658095119993}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.9648658095119993}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{34., 6.500000000000007}, {1650.1491666666668`, 
                    0.9648658095119993}], 
                   
                   Offset[{34., -6.499999999999993}, {1650.1491666666668`, 
                    0.9648658095119993}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999998}, {
                    1650.1491666666668`, 0.9648658095119993}], 
                   
                   Offset[{9.999999999999998, 6.500000000000002}, {
                    1650.1491666666668`, 0.9648658095119993}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.01`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22., 4.884981308350689*^-15}, {1650.1491666666668`, 
                  0.9648658095119993}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9501791889128779}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9501791889128779}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9501791889128779}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9501791889128779}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9501791889128779}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.8243570742836589}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.8243570742836589}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8243570742836589}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8243570742836589}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9501791889128779}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9501791889128779}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9501791889128779}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9501791889128779}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9501791889128779}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.8243570742836589}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.8243570742836589}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8243570742836589}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8243570742836589}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1650.1491666666668`, 
                    0.8243570742836589}], 
                   
                   Offset[{35., -6.499999999999992}, {1650.1491666666668`, 
                    0.8243570742836589}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1650.1491666666668`, 0.8243570742836589}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1650.1491666666668`, 0.8243570742836589}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.05`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1650.1491666666668`, 0.8243570742836589}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.8177088844311073}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.8177088844311073}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8177088844311073}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8177088844311073}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.8177088844311073}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.6838129558020515}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.6838129558020515}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.6838129558020515}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.6838129558020515}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.8177088844311073}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.8177088844311073}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8177088844311073}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8177088844311073}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.8177088844311073}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.6838129558020515}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.6838129558020515}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.6838129558020515}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.6838129558020515}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1650.1491666666668`, 
                    0.6838129558020515}], 
                   
                   Offset[{35., -6.499999999999992}, {1650.1491666666668`, 
                    0.6838129558020515}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1650.1491666666668`, 0.6838129558020515}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1650.1491666666668`, 0.6838129558020515}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.15`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1650.1491666666668`, 0.6838129558020515}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 1.}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.8946141636808339}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.8946141636808339}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8946141636808339}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8946141636808339}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 1.}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.8946141636808339}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.8946141636808339}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8946141636808339}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8946141636808339}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1650.1491666666668`, 
                    0.8946141636808339}], 
                   
                   Offset[{35., -6.499999999999992}, {1650.1491666666668`, 
                    0.8946141636808339}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1650.1491666666668`, 0.8946141636808339}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1650.1491666666668`, 0.8946141636808339}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.25`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1650.1491666666668`, 0.8946141636808339}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.8419778057000694}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.8419778057000694}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8419778057000694}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8419778057000694}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.8419778057000694}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.7540884256174482}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.7540884256174482}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.7540884256174482}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.7540884256174482}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.8419778057000694}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.8419778057000694}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8419778057000694}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8419778057000694}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.8419778057000694}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.7540884256174482}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.7540884256174482}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.7540884256174482}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.7540884256174482}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{30., 6.500000000000006}, {1650.1491666666668`, 
                    0.7540884256174482}], 
                   
                   Offset[{30., -6.499999999999994}, {1650.1491666666668`, 
                    0.7540884256174482}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1650.1491666666668`, 0.7540884256174482}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1650.1491666666668`, 0.7540884256174482}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.5`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{20., 4.440892098500626*^-15}, {1650.1491666666668`, 
                  0.7540884256174482}], {0, 
                 0}]}]}}}}, {{{}}}}, {{}, {}}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> False, 
         ImagePadding -> {{All, 74.19999999999999}, {All, All}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["time", TraditionalForm], 
           FormBox[
            RowBox[{"freq", " ", "oblique"}], TraditionalForm]}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 440, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           RowBox[{"{", 
             RowBox[{
               RowBox[{"ba", "\[Rule]", "2"}], ",", 
               RowBox[{"bn", "\[Rule]", "1"}], ",", 
               RowBox[{"z", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vs", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vh", "\[Rule]", "1"}], ",", 
               RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"u", "\[Rule]", "0.5`"}], ",", 
               RowBox[{"pa", "\[Rule]", "0.2`"}], ",", 
               RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
       
        FormBox[
         TemplateBox[{"0.01`", "0.05`", "0.15`", "0.25`", "0.5`"}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm],FormBox[
        FormBox[
         TemplateBox[{"\"healthy juv\"", "\"stressed juv\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Normal", ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
      
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {2, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}], ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#3, ",", "Above"}], "]"}]}], "}"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
            
            LineBox[CompressedData["
1:eJxd013sHFUdxvETgmSJEAaEdEObMsjb0jQ4LX/qWqD86Nt/C61MK9i1rXgo
pV0UZJSCS3npQYpdaIHRFLIVSebCiyWldkRD1xbiCQnNxhgyEAwbJXKqAqtg
O3dsQiXGdCdmvnPzy2eePHmuzoUb71lzxylKqa+cqtT/7skvv+7kdZOrZNMT
q97ff2XhigxO7JxqtAp78sfonQffe6HwuXLawW17H3incFUO9I+fHZxxdOJZ
cvSF11eds6ywL/f3D3wytb3wl+XPxxbOPXCo8MVy+v4/bHn+08KXyl+ueeLQ
jAV/m7gmF7z8ypvL7y88R9Y3538c9gvPlYfWj9becaLwFXLbofWLXl3894kD
ObruPNm7q/A8mXdd/4Kb3i08X369YvuMZZf+Y+Ir5bK3dn78ebvwlLgdM/dd
nhW+SsJbF3yWzv1g4gUyvXb11AfPFP6qLDjz94uPfFa4Lme/+tzsffd+OPHX
5NovrNx/+ueFF8rbF83esHLfRxNfLTe3lhze/KfRxNfI3Wse3XVg1j8nvlY2
PvLis9tuL7xIdl913+zXXyx8nfzuvX3/2X68sMivdn20Z//Uv07aiGzY8vwb
Sx6YWF0vZ85Y++HC14r8erlzzvTBJ9XHk3yxnH9kfMucJRObxXLROVHgPV7k
S+Tebfs/nXekyJfIu9mbP91x2ieTfKlsP3bWGSeWTWyWysGPvvjUrh1Fvkym
D7wxfcnrRb5Mbt17RXTo8yJfLi8fnjn/6oX/nuTLZdHyo/ue2zqxmpbN45nH
Du0v8mn52elPnvLsB0XekNeuDE54s45N8oZcFq770vmrJ1YrZOkiyX6+o8hX
yNbHLph++JUiv0GOzFzd2vdhkd8gf337ks1nnXd8kt8oD76k5u25fmJzo1w2
vrxy6V1FvlIu3Llg5m/2FPlKuTx+a2ru4SJfJZ9s6G16/P0iXyUn/xfv9Otl
G1jdhBxWYdkCG9jCajX6sIEtrNagDxvYwuob6MMGtrC6GX3YwBZWt6APG9jC
6pvowwa2sFqLPmxgC6sm+rCBLay+hT5sYAurdejDBrawWo8+bGALqw3owwa2
sPo2+rCBLaxuRR82sIXVd9CHDWxhpcv2YYE1bOAEtrCD1W3YhwXWsIET2MIO
VhuxDwusYQMnsIUdrG7HPiywhg2cwBZ2sNqEfVhgDRs4gS3sYHUH9mGBNWzg
BLawg9Vm7MMCa9jACWxhB6st2IcF1rCBE9jCDlYt7MMCa9jACWxhB6s7sQ8L
rGEDJ7CFHay+i31YYA0bOIEt7GD1PezDAmvYwAlsYQeru7APC6xhAyewhR2s
7sY+LLCGDZzAFnaw+j72YYE1bOAEtrCD1T3YhwXWsIET2MIOVlHZHuzDASxw
CGs4gg0cwwmcwhbOYAfnsPpB2R7swwEscAhrOIINHMMJnMIWzmAH57D6Ydke
7MMBLHAIaziCDRzDCZzCFs5gB+ewurdsD/bhABY4hDUcwQaO4QROYQtnsINz
WG0t24N9OIAFDmENR7CBYziBU9jCGezgHFb3le3BPhzAAoewhiPYwDGcwCls
4Qx2cA6r+8v2YB8OYIFDWMMRbOAYTuAUtnAGOziH1Y/K9mAfDmCBQ1jDEWzg
GE7gFLZwBjs4h1W7bA/24QAWOIQ1HMEGjuEETmELZ7CDc1g9ULYH+3AACxzC
Go5gA8dwAqewhTPYwTmstpXtwT4cwAKHsIYj2MAxnMApbOEMdnAOqwfL9mAf
DmCBQ1jDEWzgGE7gFLZwBjs4h9VDZXuwDwewwCGs4Qg2cAwncApbOIMdnMPq
4bI92IcDWOAQ1nAEGziGEziFLZzBDs5h9UjZHuzDASxwCGs4gg0cwwmcwhbO
YAfnsNpetgf7cAALHMIajmADx3ACp7CFM9jBOaxM2RXYg6uwD9fgAK7DAjfg
EG7CGm7BEdyGDdyBY7gLJ3APTuE+bOEBnMFD2MEjOIfHsHq07ArswVXYh2tw
ANdhgRtwCDdhDbfgCG7DBu7AMdyFE7gHp3AftvAAzuAh7OARnMNjWP247Ars
wVXYh2twANdhgRtwCDdhDbfgCG7DBu7AMdyFE7gHp3AftvAAzuAh7OARnMNj
WD1WdgX24CrswzU4gOuwwA04hJuwhltwBLdhA3fgGO7CCdyDU7gPW3gAZ/AQ
dvAIzuExrHaUXYE9uAr7cA0O4DoscAMO4Sas4RYcwW3YwB04hrtwAvfgFO7D
Fh7AGTyEHTyCc3gMq8fLrsAeXIV9uAYHcB0WuAGHcBPWcAuO4DZs4A4cw104
gXtwCvdhCw/gDB7CDh7BOTyG1U/KrsAeXIV9uAYHcB0WuAGHcBPWcAuO4DZs
4A4cw104gXtwCvdhCw/gDB7CDh7BOTyG1c6yK7AHV2EfrsEBXIcFbsAh3IQ1
3IIjuA0buAPHcBdO4B6cwn3YwgM4g4ewg0dwDo9h1Sm7AntwFfbhGhzAdVjg
BhzCTVjDLTiC27CBO3AMd+EE7sEp3IctPIAzeAg7eATn8BhWT5RdgT24Cvtw
DQ7gOixwAw7hJqzhFhzBbdjAHTiGu3AC9+AU7sMWHsAZPIQdPIJzeAyrJ8uu
wB5chX24BgdwHRa4AYdwE9ZwC47gNmzgDhzDXTiBe3AK92ELD+AMHsIOHsE5
PIbVrrIrsAdXYR+uwQFchwVuwCHchDXcgiO4DRu4A8dwF07gHpzCfdjCAziD
h7CDR3AOj2G1u+wK7MFV2IdrcADXYYEbcAg3YQ234AhuwwbuwDHchRO4B6dw
H7bwAM7gIezgEZzDY1g9VXYF9uAq7MM1OIDrsMANOISbsIZbcAS3YQN34Bju
wgncg1O4D1t4AGfwEHbwCM7hMayeLrsCe3AV9uEaHMB1WOAGHMJNWMMtOILb
sIE7cAx34QTuwSnchy08gDN4CDt4BOfwGFbPlF2BPbgK+3ANDuA6LHADDuEm
rOEWHMFt2MAdOIa7cAL34BTuwxYewBk8hB08gnN4DKu47FPhCnwG7MHnwlV4
FuzDF8M1eC4cwFNwHb4GFngp3IBXwiF8M9yEN8Aa3gS34LvgCN4Kt+GHYAPv
gDvwbjiG98Bd+BdwAv8S7sEvwSn8W7gPv/p//xf6LXZ/
             "]], 
            LineBox[{{1073., 1.}, {1074., 1.}}], 
            LineBox[{{1076., 1.}, {1077., 1.}, {1078., 1.}}], 
            LineBox[{{1080., 1.}, {1081., 1.}}], 
            LineBox[{{1094., 1.}, {1095., 1.}, {1096., 1.}}], 
            
            LineBox[{{1097.4848484848485`, 1.}, {1098., 0.9999999999999962}, {
             1099., 0.9999999999999782}, {1100., 0.9999999999999951}, {
             1100.4583333333333`, 1.}}], 
            LineBox[{{1108., 1.}, {1109., 0.9999999999999988}, {1110., 1.}}], 
            
            
            LineBox[{{1121., 1.}, {1122., 0.9999999999999988}, {
             1122.09243697479, 1.}}], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQZTJjpAGB/swdSMiQ6P/4PAewh/zkSHaGT+gokO
jsj8JRMdMpH5KyY63Ebmr5nocB+Zv2Giw3lk/paJDn3I/B0THXz/IfH3THTY
/xeJf2Ciw1Fk+SMTHd4g809MdJiBbN6ZiQ7fkfkXJjqsR+ZfmejwDpl/Y6LD
e2Tz7kx00EOWfzDR4S2y/JOJDrxQ+f3VCofeP0OEJwAh47Gh
             "]], 
            
            LineBox[{{1146.6929133858268`, 1.}, {1147., 0.9999999999999957}, {
             1148., 1.}}], 
            
            LineBox[{{1152., 1.}, {1153., 0.9999999999999911}, {1154., 
             0.9999999999999829}, {1155., 0.9999999999999681}, {
             1155.8567164179105`, 1.}}], 
            
            LineBox[{{1156.3902439024391`, 1.}, {1157., 0.9999999999999917}, {
             1158., 0.9999999999999993}, {1159., 0.9999999999999837}, {1160., 
             0.9999999999999861}, {1161., 0.9999999999999621}, {1162., 
             0.9999999999999623}, {1163., 0.9999999999999823}, {
             1163.8882681564246`, 1.}}], 
            
            LineBox[{{1164.1960784313726`, 1.}, {1165., 0.9999999999999909}, {
             1166., 0.9999999999999823}, {1166.7607655502393`, 1.}}], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQYOkxwgjA/2YMplksPt/yDwHsL3mORwAZnvM8nh
FzI/YJLDtX9I/JBJDo+R+RGTHOYh82MmOcxA5idMcrBANi9lkkMnMj9jkkMV
Mj9nksNsZP0FkxyWIvNLJjkIIvMrJjlM/4vErwGahyzfMMnBBJnfMslBEtm+
jkkOtVB+5fptJ0q7EOEFAMZ/mGs=
             "]], 
            
            LineBox[{{1189.375, 1.}, {1190., 0.9999999999999778}, {1191., 
             0.9999999999999815}, {1191.9226519337017`, 1.}}], 
            
            LineBox[{{1193., 1.}, {1194., 0.9999999999999934}, {
             1194.3710691823899`, 1.}}], 
            
            LineBox[{{1195.9345794392523`, 1.}, {1196., 0.9999999999999992}, {
             1196.0578512396694`, 1.}}], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQY7JjlAGB/swdSeSQ4X/oPAewj/wCSHVcj8I5Mc
0v4h8U9MctBH5p+Z5HAPmX9hkkMkMv/KJIcNf5H4NyY5uCHL35nkMA9Z/sEk
B2dk+SeTHEyQ+S8mOWgiu+/NJIcTyPwPkxz2IfO/THLgQOb/mORQhMz/M8nh
I9T87wX83wv+I8IHACzgl/0=
             "]], 
            
            LineBox[{{1216.2716049382716`, 1.}, {1217., 0.9999999999999869}, {
             1218., 0.9999999999999648}, {1219., 0.9999999999999718}, {1220., 
             0.9999999999999737}, {1221., 0.9999999999999889}, {1222., 
             0.9999999999999932}, {1223., 0.9999999999999837}, {1224., 
             0.9999999999999815}, {1224.7840375586854`, 1.}}], 
            LineBox[CompressedData["
1:eJxd1DFIVVEcx/FHJDgEvaHBQTKx4YFvEHqDg+R3EApTkHqEwRukzBoiHRoc
IiRTDB2U3z9oEAl0SBJziHBwCGpwCCqREBIyKKwoekOCg1ZXH8TveeFy7off
/5xz77n33NrLveevHkqlUh3JudfuHxlRuig27zdZMft37/hVcsOBPCemPW8U
GXeTyLkRz90tYuSP+ayY97xNLHveIeo8z4t1zzvFO3dBfHN3ifvev1s8cV8X
Z9w3xJD37xOru+ZbYtDzfnHKfVvcdQ+IvPue+OkeEa0+/5j44vn4gfULMer5
QzHhnhTH3Y/Ert//jHjpfix6vH5OXHMviBWvfyYuuRdFhXtJ1LhfiBn3K7Hk
4y+LKfdrcdP9VlS6V5P19vVYExfd6+KN12+IovuzKHj9V9Hu/iHq3cXk+/T+
v8Ud93byfvz5dpL53Kmg3+sPR/n3UBkc9fmOBFnP00Gv+1gw664KPvl81UGF
5yeCB56fDD7smDPBpufZYM3dEAz7eLkg7W4Mnrqbgu9ugnPuluBj2f4P3rvb
gr6y/R9sufPBBV+vzqDWXQgW3V3x/3+WPr29MXglKL2XYvM/v7ZxpQ==
             "]], 
            
            LineBox[{{1305.3076923076924`, 1.}, {1306., 0.999999999999997}, {
             1306.7714285714285`, 1.}}], 
            LineBox[CompressedData["
1:eJxd1UFIFGEUB/AlLIykLPbgQVBJwoNJB6MIqT8k4UFCaw9WEhIWRlIGHjxY
GRRFbeDhvUnCg4iQheAWG1gYGUkIedjASkjKwx4KhDbqYLRlkx36z39gGX68
t+9733zzmIoT5w6dXBOLxZ6Hv7/3z8M3a550GmKrV27f6q3LsLDy9/ryz92G
Tewew4Hf5F7Dy1/kPsNB9hXDU/Z1Qwk7aXifJ/cb4lzfDOfZA2G/7EHDEHso
rMceMeTZo4YTvJ8xw2GOp2S9tCHF/U4YsuxJwzXOnzJMsqcNG3m9GUMZx2cN
v7hexjDOnjMc4fx5w1b2guEqe9GwmZ01XOR6nwzH2UuGx+yc4QX7u+E011s2
NHM8b8jw+cUce9gFHj3vQsczjhc5fnC82HGKHXck2SWO1/z/UscZdrljkPMr
HcPcf5XjJrvakWDvcHxg14b9s3c7cuw6RzOfLxzH2PWOLOc3OPZzvNGxgd0k
6ycc5ewWxxi71fGV3eZIcb12xxeOdzj2sjsdD/h5dTnK2N2Ot+weR4bd67jF
9focdyLz72iNzL9jJ59X0vHtJ7nfsZ5t4fNlDzgusAfD/tlDjm1cf8QxxR4N
z4Pzx8L9sFOOtZyfdtSwJxwr7Mnw/eL9TTlusKc9Om8zjgr2rOM518s4zrLn
HC/Z84777IXwfWcvOi6xs46jkfl3PIrMv+Mh5+cc2yPz7xjn+LJjHZ933vGG
82MB0uyCACucXxjgFbsoQIzf1+IA7zgeD6Lfm5IAd7l+aYCP7PIAWzi/Uvqp
CqLfi+oAbZH5D7CL+6kNcDky/wHucb06McT14gZxo7hJnBC3iFvFbeJ2cYe4
U9wl7hb3iHvFfeIr4uvipLhfbOIB8aB4SDwiHhWPiVPitHhCPCmeEk+LZ8Sz
4ox4TjwvXhAvirPiT+IlcU78Xbwszotjt6MuEBeKi8TF4ri4RFwqLhdXiqvE
1eId4lrxbnGdGOJ6cYO4UdwkTohbxK3iNnG7uEPc+d9/AIBZEuE=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]], 
            LineBox[CompressedData["
1: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
E8kmcjLZTM7Q/P8AHWktDg==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
            LineBox[CompressedData["
1:eJxd13lYzen/P/DDDGJ8TLbRYAgxIcSE7E/GEkJGyH4sEZLTvtepTqdz6lTv
ky3LmGPEZM9oaGxzELLHGLKfsWYbkSFL5tfv+rrv++X2T9fjus/rvN7P97P7
ctVq1uIffKurVKprNVSq///z//6VDfi/n7aPP1UYGHO/w//2MdthTF5Gk1WJ
f3+0PXKmvGmwZ9Ltj26Efl/sSqsz5M5HO2C+o1uNsZ53P7o5fl99uvOiuHsf
7YjyzYPP3VY9+OjWuHS34WL7Hx9+tBNMzXsNvpzC3A7tv4gb5xHM7IyOO19E
T5vB3AEXkt1t9p7MLph10v7O1F7MnbFA1dyp77fMrqhWryhmU2PmrhizdkHl
T58zd4PKJ/lR05elH/0dui/turfxXWY39Bq/s77pInN3XBrX5kjkUeYeaNDQ
59TV3cw90erzY2O25DK7I/jmqjUPVjH3wuH5pa1N6cy9EVP/cdgyLXMfbN3p
N1oVwtwX3m3bxZ+Yx9wP/7kFVT6dwtwfbVcVXl3gxTwAim3x4H5DmIHM6r6J
s3p/tBbotqPWq8td2PlAtOjT4OvVbdn5QPzjaYjZ1IydD8Io3z3HVQ3Y+SAs
CBy8Z60dO/8e+9cPaZ7w38d+td9j67V51za8Yn0PRlBZiyd1/mHngxHQ3zZx
+z12PgTRtrm9Mm6w8yHwtqu2P/cvdj4UX7y41/T9GXY+FFdeLbHoj7HzYfAb
2WPj0D/Y+TDcfl9/Se8Cdu6BW8feXFPvZOceWDKrqHrBZnY+HPp/bcv657Dz
4Vg58rcu5T+y8xHokz427OIKdj4Cum+fNv3bzM5HYqxFe6WJiZ2PxOFG6ohw
PTv3xFinq8c/aNm5JybVu7ZuazQ7H4X5p5Y8jA9j56Nw8h+ntPBAdj4aB1qO
is7yZ+ejkfu+6Z5z89j5GDTs9/P3nWez8zE48nBXp23T2bkXlutWGkdO/mh4
4a93F4LsJrDPe+HU0Mtf3Bn70VYvjEi7HHt1FJsfi5Rtuoqnw9n8WPh1uryz
+VA2PxYV3a/c8x3E5sfiy6NBl4r6s/kfcOhCz1OD+7D5HzBppnv9Kz3Z/A94
NOPCW50bm/8BP41IvjWsK5sfB/vQ481adWbz43Dl8XV7+45sfhx+vbbDqZEz
mx+Hdos2H3Jpy+a9cf/zrAmTWrN5b0RfmT1hZUs2740757q5P2nO5r0xwVwz
fGxTNj8e357ZZy5qwubHY+Cqe3XGNmbz4xH+ZIffowZsfjwmNjjittSezU/A
KVfn96PqsfkJGP5r5zFN6rL5CTj/0w+HntVm8xOgudrm4aVabH4iFrl0Vp+u
weYnYkP724fPfcbmJ8LuclyerRqbn4iU+u9Pfvjv/sd5H9Te9u/u9h8+Gj4I
HLyi2cz3H631wYtdhp9z3n601Qcje157XV7B5ifhUNvXJ0a/ZvOTUH1o6on8
f9n8JAzLD9vU9iWbn4Rp4w+3WPeCzU/GovN6W7vnbH4yltS//cvuZ2x+Mox9
HnTx+ofNT8ajdkr38idsfgpyh+0I/+kxm5+C5bVv7/Z+xOanoPbKpN8aPGTz
U7CnkaXnlQdsfipc2pZWz73P5qdizKucm3H32PxULM3cumTaXTY/FdkpE558
f4fNT0MD+8D8rrfZ/DTUndjj93Z/s/lpMPUedKK1jc1Pw72Rhvy2t9j8dHzm
OMKzy002Px3Oj/43e8ANNj8dP05fdnr8dTY/HW+vXpwWdI3Nz8Af5x89WXqV
zc9A7fAmYw9cYfMzMGhr/qzHJWx+Bk44d37XglmlRvaNNy8nXv5oRzWqZykd
l19i36fGb3vmRl/566PVagwPuXeoFbNWjeU3Z98IuPjRFjWGBDhus/7J9qnx
enXv+k2YbWro8rY+CrzA9s/EjUNDmp0/z/bPRMvr65PdmDETceM7/29NMds/
E/kj7ZfXYtbORN7w72qEn2P7Z8KjUW88Osv2z8Tva6I7zWS2zcTVJh92XTvD
9s/CVfegfZOYHWchNqOzy7XTbP8snKnW8dkMZvUs9A19//TBKbZ/FgYkFTcI
ZrbMQuSU+R7VmK2zEH/g66isk2z/LPjaH1rSjlk1Gy7LjyccOMH2z8aIvU27
TmTGbIRHtc8sL2L7Z0P10GbMYtbOxq3juV+6MVuq3Ef9Zclxtn82mq+YHBHH
bJuNb3tP7f0ts2oO3NNWDLlwjO2fg73VN6fGM2MOLJ4r33ZmVs+BLbZYbzvK
9s+BYdo3rZYyW+bgmnXbvuHM1jl49Kbu8GrMtjlo5dNq/95Ctt8XI/e2twtj
dvRFctd9jt8xwxd5+QffPD/C9vvi7p2AlF+Ztb4IuDb+YAizxRfljUcucWe2
+mLAtMB3lYfZfl/MOuH2pJBZNRdbznhMSWd2nIs24zb2n8iMuXC2GU2tmdVz
cfR0YJ9nh9j+uQhLaj7oALNlLsrP6FeYmK1zUdDpUbdpzLaq8wH7vujCrJoH
rUvu19WZHefht5YrvC9Z2f55+PFsTv4WZvU8LK7Rplsis3Ye7gxYcXQSs2Ue
uo78fV43Zus8BDwPrF+X2TYPn22/su/+H2y/H2ot7Kk+zOzoh27D/nu9lhl+
6DPnfEwMs9oPkw5ElE5m1vphd41Hbr2ZLX5YlTFoalNmqx+adT/u8+4g2++H
ryfecbrBrJqPCee+3fcHs+N8RFUM/2o9M+bjwu7WXVOY1fORbdhW059ZOx9r
19TKGstsmY9vnwWc7clsnY9T/gP3tOD756N3s/fDavL9C/DrsN4x/xxg+xeg
+r78MZeZsQCVL3DQyqxegHYzi49sZtYuQOL2xVOXMVsWQP35UJ2W2boAqslL
e/oz2xag7Fh+kA+zaiHeX/m62xC+fyHWvhwV1I3vX4gjm190ceT7F+J0O+u8
enz/Quww676q3M/2L0Sz+Da9njBbFyJp2rLT15htC1H+8P6ZU8wqf6z9xb33
fmZHf3yYfLDeNmb4I8Zw0GMts9of0a/M9zKZtf7Y22397QS+3x9Pmgb0C+H7
qz7vF18+l+/3x8QBIdUn8/2LcOiPN/NG8f2L8H7V6VYD+f5F+GtzQafufP8i
3E/LNrbn+xdB33v8dy34/kWY+us954Z8/yJolNF+dnz/IhzYs+5Z5T62PwDO
FZX7y5kdA3B6T8bZh8wIgLI2rbWNWR2A8u/d91xi1gag+q07qWeYLQFYWFG6
upDZGoClLbaV7mO2BWDfasviXXz/YlR26t9lC9+/GB6H6rRbz/cvxjcdl/2w
mu9fDKfS0F1L+P7FiLw2epiJ71+MbV+eqpvM9y9GQOTa6nF8/2Kc3pf8bTjf
r8GX/wyJ0jDba1B/9tY38/nzaOAQlJEzm9lVg1YDT0RO48+ngaIMjJjI7KXB
EMOdtWP582rwmf7nJyOZNRq0fRqhHsqfX4Nlr+e9AbOiQXVD+O4+PI8Gwyp/
W96DOU+DypruK7vyfBp0jXY44MJcrEGPThHVnHleDYxHY33bMJdpcHzV+NIW
PH8gfk7ramzK8wfiyhWPYV/x/IFoX7OkVQOePxCdtjk61OP5A+HiO799HZ4/
ECfWVHrX5PkDkR3VaVV1nj8QyQdGVXzYy/IHouHaPQHvmJVALMgrev+a2RKI
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
uFLvN6MztdUMF+pCMzpQF5nhTH3ajHbUxWY4UV80ozV1iRmO1NfNaEFtM6M5
9V0zmlKXmuFA/cSMr6jLzGhE/dKMBtQVZtSnfm+GPbUqC19+cv+zUO+T+5+F
/31y/7NQ95P7n4UvPrn/Wajzyf3PQu1P7n8W7D65/1mo9cn9z0LNT+5/Fmp8
cv+z8Pkn9z8Ln31y/7NQ/ZP7n4Vqn9z/LKg+uf9Z+K8Hvf9Z+EDtkYVKas8s
vKf2ysI7au8svKX2ycIb6qlZqKBWZ+E19ZwsvKL2y8K/1P5ZeEmtyUI5dUgW
XlBHZOE5dYxkrWSdZINkk2RF8lLJ2ZLXSLZIzpGcK3mr5DzJ+ZILJO+XbJVc
KLlI8mnJxZIvSi6RfF2yTfJdyaWSn0guk/xScoXk95JVSz7155LtJNeVbC+5
kWQHyc0lO0p2kuws2UWyq2Q3ye6S+0qG5MGSPSR7SvaS7C3ZR/JUyWrJcyT7
SfaXrJEcIjlCcoxkrWSdZINkk2RF8lLJ2ZLXSLZIzpGcK3mr5DzJ+ZILJO+X
bJVcKLlI8mnJxZIvSi6RfF2yTfJdyaWSn0guk/xScoXk95JVS6X7L9lOcl3J
9pIbSXaQ3Fyyo2Qnyc6SXSS7SnaT7C65r2RIHizZQ7KnZC/J3pJ9JE+VrJY8
R7KfZH/JGskhkiMkx0jWStZJNkg2SVYkL5WcLXmNZIvkHMm5krdKzpOcL7lA
8n7JVsmFkoskn5ZcLPmi5BLJ1yXbJN+VXCr5ieQyyS8lV0h+L1m1TLr/ku0k
15VsL7mRZAfJzSU7SnaS7CzZRbKrZDfJ7pL7SobkwZI9JHtK9pLsLdlH8lTJ
aslzJPtJ9peskRwiOUJyjGStZJ1kg2STZEXyUsnZktdItkjOkZwreavkPMn5
kgsk75dslVwouUjyacnFki9KLpF8XbJN8l3JpZKfSC6T/FJyheT3klXLpfsv
2U5yXcn2khtJdpDcXLKjZCfJzpJdJLtKdpPsLrmvZEgeLNlDsqdkL8nekn0k
T5WsljxHsp9kf8kaySGSIyTHSNZK1kk2SDZJViQvlZwteY1ki+QcybmSt0rO
k5wvuUDyfslWyYWSiySfllws+aLkEsnXJdsk35VcKvmJ5DLJLyVXSH4vWbVC
uv+S7STXlWwvuZFkB8nNJTtKdpLsLNlFsqtkN8nukvtKhuTBkj0ke0r2kuwt
2UfyVMlqyXMk+0n2F/5/3EfFgg==
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961]], 
            LineBox[CompressedData["
1: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

             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 
              0.49019607843137253`]], 
            LineBox[CompressedData["
1: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
/1g0JsQvn077j4VJvG+kJe0/FrP6DT5sQfuPxYIC71oz2n8sgk3Nh5nS/mNx
ZIy7x2TafyzWpj06aUL7j8XC+x5dJtL+lefbt3EbT/uPxfcd0dfH0f5jUZdZ
NmEs7T8W3m4XdhvR/mOxp3luv9G0/1gUHp6jGEn7j8Uth5x+hrT/WLjZmO8Z
TvuPxUSL3xMMaP+xcJp/tWwY7T8Wl7sLXIbS/mPRPUW3wxDafyx6DQk+PJj2
H4s2e0NXD6L9x+L03K5ddWn/sTDY1/+/AbT/WCSfSontT/tX9vFkjlU/2n8s
RDdMu+rQ/mNhsXP+kz60/1g8vOma35v2r7RBSJw27T8Ol257rOtF+4/DhQUj
0JP2Hwdd3naDHrT/OHx2O9Fdi/Yfh/1HHVu70f7jcFxX8KUr7T8ORjd7v9Ok
/cch0ri1tgvtPw46HYzedKb9x2HMqvR3nWj/cXDja33VoP3H4ejAva0daf9x
aOk7pTu1exy67i0e1oH2HwcbM52p7Wn/yvuVW9m3o/3HYfkZ45C2tP843Pt8
fZs67T8OJafbXG5D+1eery37qEb7j8PEIK2B1LlxeHXy+qJ/10j/yvmM3sa2
EhcrnbXyzF/i0jio/+r+s4W4LA5PEttMpq6MQ8apQSF/iKvi0NZk9bnfxDVx
GPFyf3vq+ji0e/LT9hdxo/L1fLCzmbg5DqYjAxp/EqvFY/DFhNnUGvEwGO69
7QexVjy2hup8/06sE48T3fhLqPXicckjs7CJ2DAey6Yv60ltHI9A/9ygb8Sm
8WjQSXv2lRjxcOZ9m0NtHY/TdfeOfSG2jVd+vgwbQm0fD/Xyh+JGYqd4NH+s
bUftHg+/HbPCPhPz4rF00Lsvn4hD4uHyvNyLmh+PQv9XdR+Jk+Jxd9swV2qR
8rxFwtsPxFnxaLO2jQd1TjzWjE/7+J44Nx6vuw4KoC6MR7r3kZYG2n88hrw3
SaQujcf++Qd7UZfF49bmtrvf0f7jsX6txQTqqnictJx3pZ72H48B9gb21PXK
++1d9rGO9h+PDq0jBdTN8ZhzetYgajUB1Hp0K3lL+xcgui5mObWWAB+Q9e0N
7V+AO5bzpdR6AmwfIDahNhRguInro1ravwDT/l4KpzYVYJzGriHUEGBxm99l
r2n/AggLrvlS2wrQsantQGp7AdKu5157RfsXYObswgBqdwHGi7WHUfMEePb9
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
iaaHHLtnYuVtjr0z8eTa//z/AIaohJY=
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxd13lczen7P/Az1iKEhuzZs2fP/pIQohCFcNBKy2nf67Sf9rOSbZyxNonJ
2NdP9mwjhOzZQ0yTEGK+5/f4dd/v65z5Zx5P97ne17ner/squq/0n+feQCQS
PWgsEv2//////6om7Z3+NNJs7z+T6v8ADZM2PRodx2yEcq33dA8HZlPsXmx1
XNGV2QzDbauK8ys/1NscI9bNc9IeZe6Me1/MHZYnM1ugsryd200H5h541xTZ
T82Ze0G07IgmoPx9vftAI49evWonsyUu1RY7qlYz98eP6yP/vjuQeSD8ZLET
Re8r6z0YhcqRb2/mM1thRl6pWzMP5qEoPDi2dG5X5mFQzfucNOnWu3oPx4Eh
74/aJzGPwHnf6lPFVswjEbI7ffHZu2/rPQpqkzE2r8KYR0P20CyyXytma4yL
XeHdf8Obeo9B9ouSg+I2zGPRZILr2EmeFfUeh8KwFV38J76u93gMEg93Xjef
eQKGNTnrvdOLeSKKfLsM3hjDPAkHOrVxC1YyA+aNt/1ptaveUqDJXwPW/n2c
nU+G61DrKPsSdj4Zlyc32pz3gp3bwLjrRtOntezcBj0vyU9+NGHfdwrKT8xZ
9Nii3tIpUB/9Z8VvI9i5Lfok/mE+1I6d22Jw4+Io1RJ2PhU11rY448fOp6Lu
Q7MrR+PZ+TQUd/u1f6ianU/DFEVyi4872fl0mInbnx5wlJ1PBzpP79PpCju3
w4ev5/48/pCd2+Fn4ptlTT+w8xlo3fPXc19+svMZqO3XumFKK5bPTEwc/+fD
/G71ls7E2JmfTy0bws5nwf5hp0frJ7LzWfA+NsXRaTY7t0ffmLDJKUvYuT18
rIM6W3qz89mYN/PKpWGh7Hw2boze+35LAjufgxZmZQUB2ex8Djp/SrS14vfJ
AQkFNsoHO9i5A7qXXg4K2sfOHZEY8OPClxP1hiOMjr319ipmn3fEjy93xp6/
Ve8iR8yXTzJv+YTVz8VNy/Jym7esfi6WfDgctOoTq5+Lqm8tC/1F9fe9aC7e
3o8K8WzO7v88vLN6s21mu3pjHorCNnbq0L3e0nn47emokzcHsPp5OD//vHfY
KFY/HwUxJxo0nczq52Nzs0ar42ex+vnYU/k9/tUCVj8fJ/+XMGiUmNU7wX5K
nYNkNat3Qugb52vqYFbvhPyI9unbYlm9E1acX7Bmk4zVL8APn2sL45SsfgFq
/noyzH4Tq1+AXks2vmqwk9UvwEj12UXb/mT1C3Gr4k7woKOsfiFGjmrX/fcz
rH4hFDsy7H5eYfULUbSj9R3b26zeGanPFh0MfszqneE2quZm1mtW74wp6gWd
5VWs3hn/e/k4Luorq3dBtwfPKx0a1P/8ggti/9g3v0Xzektd0PGAZsf+tvUu
csHQLi9KbTqzn3eL0Hvcz9JjvVj9Ikz64LKh0yBWvwjaWwkd3Uey+kXYNLe/
/boJrH4xWkX27PvXVFa/GPdO+W4/OJvVL8bD4DGnfl/A6hejYY/3/qFLWf0S
zFT2PzTcndUvQUrhrex7Pqx+CcZ2a/XVM5jVL0F+lv2nx1Gs3hXTL9glT0xk
9a7wD2xdkJLO6l1xSG7kd1jB6l0xZ8PrkpJcVr8UKU5nHtzcwuqXIm6W8bqT
O1n9Uiz/mGGi2MPql2Kcb+T02QdY/TJsee/hVH2M1S9DtzPTJktPs/plmF4T
2OXLRVa/DPmpeV8X/s3ql8NinlHFllJWvxy9fdrV3bjP6pfjpfXRme/LWf1y
nG1k/fbfV6xejBtjxlQ/qay3hRid+hdFHa5mzxPjuH//38Nr6y0WY9uzgbE9
f7Lni2HVu2TIkYb1vy+1YjQo9ikdZVzvIjGmN9mVsaVlvcvFeN5pdWh1W/b7
dQUmjn5+aEiHelusQKJRtMSZ/f7FCmytKr3o3bPe4hXYfvPUMw/LektXoCZt
RMWcQaz/CmQbOYl6DGP9V+C0hbNT+SjWfwWm/chomT6O9V+JLvazF3cD678S
Id2+rdLasv4r0TbtvUuLGaz/SkysCfH0mM36r8QJm6unds9l/Vdi6b5mOY8W
sP4rcUDW07huEeu/Ev/77e6ypstY/1WYtbfgzH8rWP9VGJj23POlO+u/CtX9
/BKOeLP+qxCS/3JahC/rvwrPekrf9g1g/VfBNabJtnPBrL/u+YMv73QIZ/11
z/+6YeClKNbfDfu3nVgzNI71d0Nd4cONsgTW3w3VPYw+/Z3M+rvh/LTf/2yU
xvq7wVaxoFH/TNbfDWU5bQdOymH93XDwX5HYVsn6u2HtHsm9MRrW3x27pt+7
0S2X9XfHvnFXEj5vYP3d8T37de9Tm1l/dxzPvFMTqmX93fGmcGK/7ttYf3ds
PXu87sQO1t8dpyzv5M3MY/3dMdH9m8dl/vc/D6Q+kkjG72H9PfDp2oKf2j9Z
fw9Mkipm1O5j/T3w81RJus0B1t8DH2Qx3+IOsf4eMG58pKTwCOvvgZZHHabe
Psb6e+C3Bidz3p9g/T1hVtrx9ddTrL8nWh6ySPhWxPp7ItCky7p/zrD+npj7
+z9L7p1j/T0xLqhRkyMXWH9PrLk053JGMevviSvpto+cLrP+nsi9dy+w7VXW
3wtm1dGnLl5j/b3QZlabjwHXWX8vHK6tsmlzg/X3QqzDkyd5N1l/L1hebPV9
ZCnr7wVNp67nj95m/b3gvdvEb8Rd1t8LPdrY9N5Zxvp7405dSodW91l/bzS1
bhTh/4D11/kTAi4+ZP29MXlq9yHtH7P+3vh66cXjZU9Yf290XNe74Ldy1t8b
v027e/rOU9bfG2fGTZvZ9DnrvxpGZu39rV6w/qvxvynTFs17yfqvxqtHfYf6
vmL9V+P3RM+u8a9Z/9WwjTKyy65g/VfDuNK9VP2G9V+N1xOGv1G/Zf1X49aG
6N3Z71j/Ndgs3zUpoZL1X4PYkqBL/uzfK1iDX1vUrXH+wPqvQYvqQzPG/MP6
r0HD0eFJv1ax/mtgcTlgQiVz0RooW4/UnPyX9V8Dmc2B3WnVrL8P7lyZonX8
yPr74MGtjYo2Nay/D8ZfvLf5OrPYB0Vf4p+lfmL9fXBlRnz0uM+svw9u/DNY
9pa5yAcBQ+d013xh/X1wZqLpqnG1rL8vOrdo5/WI2cIXXSYEzoz6yvr7wtx4
d89fv7H+vogZe8JkN7PUF5t6d+g64Tvr74u2u/f6X2Eu8sWl8S/NF9ax/r54
8Xqr1SNmkR/WrJh9TfyD9fdDF7OrjZ4yww8lQ9Mrl/5k/f1QejZ8/V1mqR/e
nTC1mPMf6+8Hj2YL1KeZi/zw2/ZS42Gi+n+PlvthyG8Fqi3MIn/0G5pu2+yX
elv44/mlgsGBzPDH91YVq+4yi/2heLvj05gG9Zb643JCRc16Zq0/nCfbB35h
LvKHW7Fx7LyGrL8//q740nc3s0iCPcqsuF8a1dtUgr1Fz1ULmC0kiFh+OGgX
s5UEzQatGfSFGRJ4aoyv2zaut6MEW1OneciZxRI4T40X3WeWSLBy4IX87k3Y
95fgckRJgCezXAJ1U5OVu5m1EsxosC71PXOhBPbrp3wY1JTNJ8H3vPW/+zCX
SDDVtazgD+ZyCUZd/tLxJXOVBJ3T8z93NWLzB6DVlOUznZlNA1A83MYim9ki
AIr9ExPOMlsFIL9AFPmFGQEYY/rZtL8xmz8ARlMcHZcwiwPwPrHx5AxmSQAS
Zt18d5RZGoCQ7WMXvWaWB+D32AxF22Zs/gAM/vZg00TmwgBs2dMy0Yu5KABx
z2/OUjCXBGBg6Y6fR5jLAzDq7q2tT5irArAiJ2JS4+Zs/kAMMU1+0I/ZNBCd
fx6Kmc1sEYg1u7YNlDBbBaKr+YEPCmYE4nXfvpf/YnYMxKX4NudvMosDkb5z
1ct/mSWBeFxRbmVqwuYPhLV7/z2DmOWB2FB9bPlMZm0gFrR6M9uDuTAQ+Rdf
R8czFwXiwLqL/25kLgnEOLuwfQeZywNx7Py5or+ZqwJx/uPSXq+ZRUHYEHmj
/CezaRB25uR8+7UFmz8Ivx5/GzKQ2SoI29eaO9swQ1efNmyrM7NjEAbGjVri
wywOwq71TVOkzJIg3Cj366NmlgZh1btO2MUsD4Jpyo47R5m1QchZkP7+CnNh
EGYFD5U9Yi4KwpIW7/74wFwShEYfqxb8x1wehP7DPHNatWTzB+n+/uC6qBuz
KBjxPlcODWY2DYbXb+vzJzBbBOPf7etH2zNbBWPorXTxYmYEI6C8g6UXs2Mw
xq96Kg9hFgej48zVmxOYJcFwmzvQMYdZGoymIdm7NzLLg6ESv963i1kbjN4P
Y9z3MxcGI25UWvEp5iKdC4Y+usRcEozCa/IdpczlwcCTfT2f8PmDcW+sctEb
Pn8Imu7pPuMjnz8EI6/b1NTx+UOQseKKa5NWbP4QjNcmJbViRghG5Q7wNWd2
DEFSRIB5d2ZxCIa++p7aj1kSgtuT3U8OZZaGYH7d+GNjmOUh2P+gqXQyszYE
j2xhOoO5MASb4xf6ODIXhSC90T6NM3NJCO7vLshaxlwegusNNi9wZ64KwVTp
1Q9rmEWhSD4XvTiQ2TQUA2+/Wh/ObBGKzc7j9sby+UNx9dLW3CQ+fyhyj05Y
nM7nD0W7771qcvj8oUh96O2p4fOHYvDidgc38PlDcd9h0OMtfP5QTPsj//l2
Pn8obBSJF/7g84diknZn6l4+fyiKjer67ufzh+LbGfe8w3z+UNge/p/xCT5/
KIpeP7Ev4vOHIS53beA5Pn8YtofujSrm84ch6lSl11U+fxjOi1uPK+Hzh+FO
n7vVt/j8YZh556P8Lp8/DNp55u0e8PnD8P5UVcJjPn8Ydv3Wq+wpnz8M12oW
tnvJ5w9D+1V9Jlbw+cNQPH2Q4zs+fxi+3/9l9gc+fxg6zBo18l8+fxjq7roY
1/D5w/D3h4+XPvP5w5E/JTvsK58/HCnv8tvU8fnDMSP40saffP5wZP1wb/uL
KZs/HO6OXyMaMjuGo/nn2uuNmcXhaDPn7q9GzJJwbNvW0L4ZszQcDW3fBpow
y8NxVFGT3pJZG46uHdLUpsyFuu+zvbm8DXNROMJmP4oxYy4Jx0KF67J2zOXh
OLji5VBz5qpw+I26UduBWRSBg13D9ndiNo1Axo0BK7swW0TgwMnJjbsxW0Xg
SQfjzRZ8/gi4f7zerwefPwK7Jjzb3ZPPH4H25Wk9e/P5IzD2XEtFHz5/BGa9
OFTTl88fgb7OF+b04/NHIGpZ3Jb+fP4IXArs8XoAnz8CJx0+9B7E54+Ag8jC
dTCfPwID31anDeHzR0ByT/unFZ8/Ej7NV14byuePxKIxvs+H8fkj8WHrl3+H
8/kjYWI+8usIPn8kpA1dvo7k80fCMlhRPYrPH4kXvVu/HM3nj4RzRuMb1nz+
SNy/s/HQGD5/JOIaiNaO5fNHosE9V/9xfP5IpPx4YDOezx+J9x93mE7g80di
ruWzMu7ySNz8fGjjRD5/JIr/mrFoEp8/ChF7TrUGnz8KDSaOOc9tEYXPFx4E
TebzR0F06mIXGz5/FGbv63KW2zEKz+f8WDWFzx8Fd+9kkS2fPwod/7uVyy2N
woWJTQZN5fNHwSTb+iS3NgpDs1NmTOPzR6FJj+Y3uYuiMCmwfOF0Pn8Uen3s
VsZdHgVr72cL7Pj8UZj8YVIJtygan2ocps/g80dj1px+x7ktovFq0LMBM/n8
0eg+WL6eG9Eom2/XaBafPxoX23Tz4RZHQzHX8ga3JBoDfMOG2/P5o/FufDcV
tzwaw9oNq+LWRmPm9dMzZ/P5o/H07JOt3EXRCLm7qZa7JBrScGP7OXz+aMi3
j9zMXRWN2W+tKrlFMRjh22yMA58/Bs4VJYncFjEIL1Re5baKwV+Hl7Z15PPH
IC9nkgu3Yww2+kzdyC2OwX99oh9yS2LQbVJVp7l8/hhseLxnEbc8Bo/vF2m4
tTG4fnhECXdhDPrkmxnP4/PHwDV3DbhLYrC0q20od3kMnLLz8rmrYmDzcesj
blEsbrWZ0Go+nz8Wq/ylk7gtYiGaEerHbRWLidq+m7gRi9TRm4u5HWMhUz/5
yC2OhU2DL12c+PyxcFW+m8YtjYWq63k/bnkszs7M0HBrY5GUPPU4d2Espjb7
/oS7KBbvn/3VcAGfPxZtK4L6cJfHYuxZWzvuqli0qRrgzS2Kg+PJIWncpnGY
MmdhHrdFHBQbd1zgtorDx+CeL7gRh+j426KFfP44qCaf7swtjsOKVpWjuSVx
mGCxZB63NA6JyW19uOVxSB3UMZlbG4eIF0GbuQvjELig90Huojg4Nx9+lbsk
Dn4Bvz/jLo+DtjS4lrsqDv3c9rVw5vNLsWLYkh7cRlKMGxk6ittUCun0JjO5
zaVY3K/VUm4LKRrEq/25LXXPe7A+nttKijZ7eqi4raXImjdsOzeksGp99QC3
nRRH2388x+0ohSguv5TbRYrmMz895xZLcc7zTjW3lxQz/nL8xYW/bymGVHm0
4g6X4lVppy7cUilsfgnszy2TYkdDn9HccineupjYcudKUeuzwJFbK0Xghhmu
3HlSOAx858ldKEX40vFB3Ed032/RpFjuIt384z/LuIul+Np2lYq7RKr791Xq
Zu4yKeJUHru4y6WIbP3LPu4KKY4PXXSMu0qKZv+TnOWulWJm2Iyr3KJ4dGrx
spTbKB5/9Jn6iNs0Ho2Wr3nJbR4Pj2mL3nNbxOPfFaafuC3jYT5QWcdtFQ+n
X8sbLuL5x2NR0vdm3IhH9e2Xrbnt4pG8VGvO7RgPB/eB3bhd4qEdnNGbWxyP
ftUnB3B7xaND+fmh3BLd5y22j+YO133/W4smcEvj0bV1hQ23LB5t3zrYccvj
ccJTOZs7Nx4jMwvncWvjUTlvtzN3Xjzu/5noyl0Yj2aKsSu4j8Tj66MSd+6i
eNwLm76auzgeC8Zs8eMuicfTL2WB3GXxMEv8FMpdrnuf2z9FclfEw87ifix3
VTwOH9yWwF0bj/Su81O4RQm43+pNGrdRAtaP8cjiNk1Au+lX5NzmCSh6bK7m
tkjA4a0O67gtE/CflWQDt1UCintEbRbyT0BAiwCtkH8CNAnztgn5J2BZK4ud
Qv4JcJ5wP0/IP0H3+yN+t5B/Am7L2+0V8k/A0sPrC4X8EzAovvl+If8EhHj4
HBTyT0D5gxOHhfwT8HPej6NC/gmYO3bwCSH/BHj+cDgl5J+AykarioT8E7Dx
kOcZIf8E5IQsOyfkn4DZW6dfEPJPQNSGnsVC/rp+R6svCfkn4IzzwStC/gmo
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
GdjewI4GdjKwi4FdDSw2sJuBvQzsI/j/AKUGZ14=
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
jwzyYHIsOY5sIseTzeREsoWcTLaSUzX/LxfSz/I=
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxd1ndYk2fUBvBYrKKi4sYdZ3EWN47q7aZqFTcqalCWChp22AECJBDCGydu
3Diw1KLFUY2bKlXcuOOqqKg4qtT55bs+3+c53+M/Xj8PJ+e935tcl63mLJrg
851Cobj5vULxv3//35/yQbtH3ouqv/vloG//gFvNB5l6vnvxzfboU3dU21rd
ZDvixdkJvdNmPP/m+nigXPf2s7rsm51wuPWYobnznn1zM/ywt+VYS++n36yE
yv7x1Ot7Sr+5NebuOu/i0uCfb26LdxXbgz1ryG6P9MDQ3AeVZDvDo+/9Q0cr
Hn1zR8w5svzg65eyO0MR7fsl+LHsrti5u4rjoLuyXdCljTJ34jXZ3dB38wFL
7nnZ3bG3RYVqVKHsHlg3sVFR+6Oye2Lol30+OCC7FxY0mZi/9HfZvWG3892s
Vrmy++Dc12adHm6V7YrWdoc/3MiW3Re/LU44Y7dadj9YxjfM81wmuz9aHcsp
eZApewBanIxIXZEm+ydceplUPzxZ9kAEq6Y+i9XKHgTNpweG3GjZQK2e4fF2
Ed+sBUYvO7AgLlieD0b6psufmy2U54PRw5j85vY8eT4EviFeThYfeT4E33er
O/yYlzwfispBW2c9mCnPh8JlSNnk1tPl+TA063m1fdwUeT4M812fXvt3gjwf
joEZ+yP14+T5cBireLXvNUaej8CoJnUqfXST5yOwSrm21/Xh8nwkTgyrU3Fu
iDwfCfPusbqbg+S5G8aE5Tb/MkCeu0H/blOt3v3k+c+42T0kJ7GPPP8ZVW9c
G/KgpzwfhaJ9R/pP7S7PR2Gbi9372z/K89EIXN/6TngXeT4af3SrqmrVSZ6P
wYVOp8tvOcvzMWj9c2C17e3l+S8oq3n8h+S28vwXvLzR/Jy6tTwfi30ruiYt
UMrzsQg/e+lCaAt5Pg7tvj53MzaT5+PQaETv6N+ayHN37C9q+PWB0zfDHRPG
JS9s00j+eXds9bzru6jBN1vc0XtUof50PXl/PLYftdd0qivvj8eC4kU3VznK
++PRzHuvZ4Pa8v54nG05K2dVTXl/ArpFZAd2dJD3J8Dry6hZJ6rL+xOgvr2z
q381eX8CNnlELmtgL+9PxKZZB0cXVZH3J6JJ7X0Oxu/l/Yl42fnKskmV5f2J
aKzO2trOTt6fhIM7tYqvleT9SXj052dfq0Len4R3A2eu/+vrw2/7k9Dx8X71
gS/frJiMkA3PNu35/M2YDNehGrs9n75ZOxkO93QzCj7K+5PxvOB05MkP8v4U
vNoR1eX6f/L+FFj6jh35pkLenwKjw8yV9WRbpiC1rOX7vu/l/akY4Tqnl+87
eX8qdpzu3THrX3l/Kkb2f77r/Ft5fyq0e6oud5Ct8EDxA5cjY9/I+x54sri7
3fLX8r4H1qrKfrr/St73QG75qDE9ZCum4bzXIAdDubw/DQvr/+H54KW8Pw0X
Dy1pPkS2ZRr0f276ccsLeX867E6vCnWQjenYvr/6+Yjn8v50JJ32bP24TN6f
jmqXzkyYLlsxA6n204ZfeCbvz0Dhr+fvjpattbnHXvszT+X9GRg3y23baNkK
T8w5GbWp+Im874mt/s8eecjWeuJMzL2pD0vlfU8MnzvyQbBsxUzsKNoSXFk2
ZuKdXctXWY/l/ZmY6jV/lItsy0xY75+ff+YfeX8WLj9pM8hPNmahZdPj+VVk
a2fhkJdpf84jeX8WTtZ53P8X2YrZ+NJxZ8e3D+X92Tiyv1vYWtna2Wg5eWSN
n2VbZmPK/o633z2Q91XwjDXc3CpbqcKp+zHvPWRDhe+OpLSuKVtlc6xp7PH7
8uerkNb7TmC07GwVRjxsGdJLtkWFJ5umj39175utKpjrlX/cLVvhhd+PrvRd
KFvphcd5vsk/yoYXHrwoGPPaKt/3wncDh/62T7bWCweKq+TEyM72wryG49sP
k23xQmnW/lY1ZVu9MOVpS+naXfn+HCzZuN1vk2zlHJQtsKxTy8YcaFo4dh4k
WzUHu57oqtSWrZ2D/PSf21nvyPfnoOXyk/F7ZFvmIOTI6popsq1zMHhwzqnp
shVzMXbI140uspVzETfm2aqqsjEX9c4923r3tnx/Lp5v+f1IgWztXEQe+OHO
YtnZc/F61cyPgbItc7Gl4yrHUbKtc/FssnujH2QrvCEVt6z2vWylNybevnT3
wS35vjdGtpiz7LhslTdOBD5ps1m21hs7j+QlJ8vO9oalevu9frIt3rjS9/au
UbKt3shom+nXVbbCB0mZTta6spU+WNojsk7FTfm+D5oWXXx3W7bKB2Wd/NNP
yNb64KLHmjM7ZWf7ICD31a9LZFt80KNStT4xsq0+CLuaPcNHtsIX7U1LG4+T
rfTF2A03A/qy+76ouKsf35bd94X/3r+O12b3fZEc9OjIxxvyfV9gxYAhpbIt
vrj1o9vIK7Ktvvi39cqzx2Qr/NBoybWzebKVfrg28Niw9bLhh77/dOlhkq3y
w6T8yktjZWv9UD13uHcgu++HIy0qb5jJ7vvhWSO/kWPZfT8ssuZMGsTu+8Mc
3vCUC7vvD0Pt2itbs/v+iFxtd7Y+u++PM2PCp1Vl9/1xvPWHwR+uy/f9MT6i
e+Jz2RZ/PMi82OiebKs/hnZbq7giWzEPM3p79/tLtnIeznWwP/6nbMzDhPsR
WXtkq+Zhf6u8gm2ytfOwpPfBVmvZ/XnwyM67sJjdnweHffmn9Oz+PAwZV/El
jt2fj6hFBZowdn8+Dr/5qXsAuz8fYUNud5jL7s+H5+d/Z05n9+fDvPd10Xh2
fz52bHAL+5ndnw/L5IjJg9n9+fCPtQ/oy+4vQPqKzD+6sfsL4JC/vXdHdn8B
evX4/Lg1u78A11P6nmnK7i9A238b3qrP7i9AjZlTmtVi9xdg0ieLoSq7vwBt
+ji3qcTuB6C6l8/jDyXy/QCYUqddeSsbAWg08PmzF7JVARiywLHjE9naABga
HTA9kJ0dgJ9+KnW6I9sSgKMr158ukW0NgL322cpLshWBGLzrtukcux+IfU6m
LX+x+4H461KT2yfY/UA4XtvW08LuByLl7qydB9n9QJwdsQh/sPuB8Lld880e
dj8QlU+FHtvN7i/E4fEPcnew+wsx8Pba/K3s/kJc3/38ykZ2fyEyrijrrGf3
F+KufZrPanbfNjdoL65g9xeisZ1q6lJ2fyGaL9S/kdj9RQh4M3NrBru/CC/P
uy1KY/cXYWTfvb+ksvuL0GpovcE6dn8Rhp686pbA7i/C8CER3nHs/iK8Pbdo
STS7vwgzPgy8omH31Qja59shXLajGrMGB2SGsOdRY2btkipBsl3U6L63V+ZC
9nxqdLtUzzlAtrsaFxSVL8xjz6vG2YJVBj/ZajUODF803oc9vxpDf23qPFe2
pMb+bQNqerE8avSNClLMlp2nxoj/ZlSayfKpcTkwu/YM2cVqnEh51HEay6vG
VbfLE6bKLlfj85dGqZNZ/iD80GnW6YksfxC8IqbUm8DyB8F/25757ix/EBan
tf97LMsfhOYv/Pr9wvIH4Vpm1z2jWf4gtKjTs+colj8I/Z72sLix/EGoMevZ
5JEsfxCqLmz873CWPwiZ5+LWDmP5g5B+8/bYoSx/EKZkfLAfwvIH4V3gqrNg
+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
aP8mbKf2N8GPWm3CD9QaE0qzaf8m7KTWm6CmlkzoTZ1lez/raf8mnKbOMWEx
dZ4Js6gLTOhEbTHhwzravwlnqItNWE1dYkIgtdWEwdSlJjSkLjehbC3t3/a+
qRWZWE1tn4lQasdMjKV2ykQHamUmvqd2zsT9NbT/TFioXTOxnhqZiKd2y8Rs
avdMgNojE62pVbb71P6ZeLKa9p+Jv6k1mdhDrc1EFrXe9jzUUiZ8qbNs74M6
OxO9qXMy0ZI6LxPVqAsy8WYV7T8Td6gLM/EXdXEm9lKXZGIjtTUTmdSlmYih
Ls/EfOqKTHhQKySMpK4soTe1vYT21A4SGlI7SqhKXV9CxUr6+yLhCXUzCTep
lRL+pm4rwULtLOF36s4StlK7SFhF3VOCidpVQiL1AAkR1JAQQD1Mghe1m4Qp
1GMkjKF2lzCEepIEV2oPCV2pPSW0o1ZJaEbtLaEetb+E6tQBEr6jVkv4kEUc
KuE1tUbCU+oYCfeptbY+qHUSLlPrbf1QGyWcopYkHKFeKmE/dZatP+o1EnKp
syVso94sYQN1joTV1LskLKPOkyBR50tIpy6QkEJ9SEICtUVCDPUJ2+8HdaGE
YOoiCQupiyXMp74swZe6RMIc6lsSZlFbJUynfmj7faMulTCBukzCWOpyCaOo
39q+z9QVEoZRf5IwmFphxkDqymb0p7Y3w5XawYxe1I5mdKeub8aP1E5mdKZu
ZkYHaqUZ7anbmtGG2tmMVtSdzWhJ7WJGc+qeZjSldjWjMfUAMxpRw4wG1MPM
qEftZkYd6jFm1KZ2N6Mm9SQzalB7mFGN2tOMqtQqM76n9jbDjtrfjErUAWZ8
XUG//2Z8oQ414zO1xoxP1DFmfKTWmvGBWmfGf9R6MyqojWa8p5bMeEe91Ix/
qbPMeEu9xow31NlmvKbebMYr6hwzyql3mfGSOs+MF9T5ZjynLjCjjPqQGc+o
LWY8pT5hxhPqQjNKqYvMeExdbMY/1JfNeERdYsZD6ltmPKC2mnGf+qEZ96hL
zbBSl5lxl7rcjDvUb824TV1hxi3qT2bcpFYsxg3qyotxndp+MUqoHRbjGrXj
Ylylrr8YV6idFuMydTPBSsFtBTsvxiXqzoJdBPcU7Cp4gGAIHibYTfAYwe6C
Jwn2EOwpWCXYW7C/4ADBasGhgjWCYwRrBesE6wUbBUuClwrOErxGcLbgzYJz
BO8SnCc4X3CB4EOCLYJPCC4UXCS4WPBlwSWCbwm2Cn4ouFRwmeBywW8FVwj+
JFix5P+7smB7wQ6CHQXXF+wkuJlgpeC2gp0FdxbsIrinYFfBAwRD8DDBboLH
CHYXPEmwh2BPwSrB3oL9BQcIVgsOFawRHCNYK1gnWC/YKFgSvFRwluA1grMF
bxacI3iX4DzB+YILBB8SbBF8QnCh4CLBxYIvCy4RfEuwVfBDwaWCywSXC34r
uELwJ8GKpcL3X7C9YAfBjoLrC3YS3EywUnBbwc6COwt2EdxTsKvgAYIheJhg
N8FjBLsLniTYQ7CnYJVgb8H+ggMEqwWHCtYIjhGsFawTrBdsFCwJXio4S/Aa
wdmCNwvOEbxLcJ7gfMEFgg8Jtgg+IbhQcJHgYsGXBZcIviXYKvih4FLBZYLL
Bb8VXCH4k2DFMuH7L9hesINgR8H1BTsJbiZYKbitYGfBnQW7CO4p2FXwAMEQ
PEywm+Axgt0FTxLsIdhTsEqwt2B/wQGC1YJDBWsExwjWCtYJ1gs2CpYELxWc
JXiN4GzBmwXnCN4lOE9wvuACwYcEWwSfEFwouEhwseDLgksE3xJsFfxQcKng
MsHlgt8KrhD8SbBiufD9F2wv2EGwo+D6gp0ENxOsFNxWsLPgzoJdBPcU7Cp4
gGAIHibYTfAYwe6CJwn2EOwpWCXYW7C/4ADBasGhgjWCYwRrBesE6wUbBUuC
lwrOErxGcLbgzYJzBO8SnCc4X3CB4EOCLYJPCC4UXCS4WPBlwSWCbwm2Cn4o
uFRwmeBywW8FVwj+JFixQvj+C7YX7CDYUXB9wU6CmwlWCm4r2FlwZ8EugnsK
dhU8QDAEDxPsJniMYHfBkwR7CPYUrBLsLdhfcAD3/wCfR/b2
             "]]}, {
            Hue[0.5585438199983166, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxN1nlczen7P/CDkCUyGEUIIXsI2cbLHkJEIstBSFKntC867af97IVw7PGx
ZA+hscZYQsgeE0IIobF+z+/x677va/6Zx3Purq736/163/OowyLf6UtqSySS
B3Ulkv/37///T+WIveOfhrXY+35EzX9Az4dt127Of1djU+TVO+lkdfRtjc1x
DvkH/TIratwCEUOTvjdxeVNjCxhutVlQfOtVja1wf8NV09t3XtbYGurO+0KC
op/UuCNcjhx+dhHMNhh35/qMvrWZu2C4W8SG9ecf19gWzeY8TqxOZu6O8e81
53tPZ+4JfYOub3u1Ye6NtsFNvcqeP6qxHWZ9HL5q5AHmvqjTuVutAXLmfnjV
z/XcvqnM/XH8navVFmtmewya5NC01qeHNR4Atyr3kfkXmAeiYkze24vrmAdh
UYOwx638mR2QfLDOUsME5sE4d32sm2tH5iEoPeht0ufHgxoPxb24J72t7zIP
Q6tbqY2sDzIPR6fe0Q6dlcx/4avdubwuPswjULIj5H2bycxARcawdT961lgO
3L1+/kaBGTsfiSU78r5L39+vOR+J4o+Him7fqLFkFGIjMl0sDrPzUVAdrrjW
YQ07H42Fk9Q33kSy89E43TO+h2wxOx8Dw557r3MmsPMxqK194Ka0Y+djMfKT
y1drC3Y+FoNvf4ycKWHn43D90v27tq/u1ZyPQ0GaUwf9zRpLxqN1M79tWfns
fDxch+Fhjx3s3BEby2M8J6nZuSP2ad+1/BTJzifAa9Xsu+282LnRcXXPX3Zl
5xNxMKRWm0+j2flENBq0YZC2LzufhCv/fl2zqz07n4S1C1Sl/ZqwcyfYj6hV
2O1nSc25E7Kc9nVLraixZDI+7d30zfUhO5+MmH/dJiZeYedTMOvksZGtT7Lz
KZi+x6Sj2V52PhU9NtwbPW8jO58K7fHxf5qq2LkzHkeUt20UW2M4Y5usbtXi
QPbzzpjXqnCsuWeNC5xxwHPVLTN3Nj8NNr7bfedMYfPT4KPY8evTSDY/DdV3
jwaWDGDz0/Awyud+3e5sfjrqDG0zKqwdm5+OuOo+N/o3Z/PTkdV2/3E7UzY/
HZstdo/w/Xm3Zt4Fk6sO7n37scYwesPixbvKayx3QfCa5+e3PK5xgQvO3JFP
LClm8zOgCujuN+4fNj8Djbtana/4m83PwI6mvg8v5bH5GWhy9fish/vY/Eyo
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
7J1peoK7xPh+Do/N5S6NwdvcE9u4y2OMf5suX8ddaXz+O04q7uoY3D69JJFb
Eotmfx+I5DaNxeDCfgHc5rH4t7DMi9siFt3zLy7kto6FynDfjdvW+POhVs7c
drFoOy11PLdDLJzsu43gRixCBn4cyO0YC4Xvi97czrHo8sOkK7dbLHb9dGrP
LY3FzzUnW3F7xiL++0xzblksGk9r2YA7JBY7rn6rxS2Pxaacut8Lef+xWNZ2
QBW3MhY+KxRvubNi0eHOrxfchlhc3ppZyp0TC3nH6fe5c2NhvqFXMXdeLN4u
73aNuyAWrR+OKeQujIXFlKgz3EWxKLYqyecuiYU+Z8pR7lLj75vxbD93eSw2
KtS7uStjkbVn/g7u6lg8sBu3mVsSB58Yx/XcpnGY0nJJFrd5HOYtWKfhtojD
jHuv07mt43Dw1/Rkbts4HJp8K57bLg5Dx6+I5naIwyWf1pHcMO6fWBrC7RiH
E4vyA7id43B41F4Zt5txPviwN7c0DqdVNzy5PeOwp2PtJdyyOLw5NW4hd0gc
6v/cMI9bbtwX2HCO6D8OT84qXEX/cZDGWbqI/uPQ3zV/qug/DpPvy5xE/3HQ
Hxw4QfQfh9IEs3Gi/zg8+lY1SvQfhxZ5FSNE/3G451k1TPQfh1HHGg0R/ceh
3ax+g0T/cXj3YZm96N84P2R3X9F/HLaX/eot+o/D/i0Leor+4/G817Vuov94
HBgysavoPx71Ym/ZiP7jMebv5R1F//EYsb+xteg/Hr3N89uK/uOxKzu4jeg/
Hlv/HGEp+o+H+4g/Won+jb5X2UL0H49VOff/EP3HY4/fdXPRfzwmfb/WRPQf
j5ON7zUW/cdjg8/bhqL/eOx+3aiB6D8eZybZ1xf9x+PWvKV1Rf/xKHu7qY7o
3/g+Lr+oJfqPh/Pf9hLRfzwebEn5dZH3H4/8UW9+cOfF45evy3fugnhs/HX2
P+7CeCSdGVbNXRSPDOXJL9wl8Vjy17jP3KXG+c13PnGXx+N/Wp+P3JXxuFJh
9oG7Oh5/xh16zy1JgJf9onfcpgnwK/nzLbd5AtZMuvmG2yIB5l7a19zWCfjb
fN4rbtsETG3bs5zbLgF/+NR6ye2QgObPHj7nRgJMZ58q43ZMwPSD2/7ldk7A
1xvqZ9xuCdikj3/KLTU+37+RpdyeCTi/LvwJtywBWzavfswdkoDxDxMeccsT
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
uFnj/wOWBN6y
             "]]}, {
            Hue[0.7946117974981064, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxdzX/wHHV9x/HVRjk1tYdknGOMM6eTMqdknANie0osH/GLHBjg0FBPTekq
Ec8S4bBRTxp01VhOifSQSA8bdLGxHhrl1IBfOum41rTc1NS5atr5tsS6baOe
NG3PmtZvO+mP6bDf6dxj/9l57HNf837BW2557VufGkXR40+Lov97P/nML/nS
5X9324Yv/cslxYcwv/j2F9yx9Z8Ll8LDV7/0+uojpwqXQzj/7HOufMY/Ft4Q
/vKmv/3eD8/+ceFK2NP7xOfevvTDwhvDie88dGN41pqr4XDnhmPfP/6Dwi8M
b3z4ikue+8CaN4X0guue+bVb1nxeePDRKx6+L6y5Ft75jefcdt85a35xePrS
bLp/drLw5vCTHx969ju+vuaXhKs++NTnPH245no4t73jzGXvXPMF4WX/80+n
N1y95gvDV17x2E93nL/mi8JnHjl6zzOeueYt4dml8MRZT/xD4ZeGGy761A2v
/taafylUn7vu4OEvrvmXw83Pu++mV9295ka45hf/5vaT71rzy8KHbrnnzo++
ac0vD/kD5z72vO9/rfDF4eG7zn3bd5+z5q3h2Wdd/533XvlI4VeE/MN/de6Z
Dz9c+FfCu8968ycv/5PDhS8J/eiTZ64orTmEfY9/astPrv7qk05CeP7l3/zA
+fd9peivDC8Zv+zmH/3wy0V/Zbi99dC3z2kUji4N2y478Y1P7xsX/dLwlHY5
/rfJQ0V/VXj5/rM+UXv/l4r+qrBjWH/uoxd/sehL4buv/+sb7/jvLxR9KTzt
M98c7n7s80W/LFy37tiVb7n3waJfFi59b/K5C28aFf3V4aKzRzdMLvtc0V8d
Wl8/cuTp5/1B0S8PV97afs9fPOuzRb88nLrn3u+t/9nvF70ZfqF60x/d/6PP
FL0Z9i7Nb3z79x4o+hXhFY9+4fPXraRFvyL86H33PXT3+NNFvzL8x92P7X7d
H95f9CvDIze/6KKv//nvFf014fAFH7np4BP3Ff014fr33/Gx75aHRd8W/rP0
xE+fH+4t+rbwon//QX5db3/Rrwov+MLbbrv60Y8X/arwlGve8KePP/Xuol8d
1n/jO1d99sG7in51KJ332S+eff2dRb8m/NmF27714Av7Rb8mXPX3F3Y2/mxv
0Vvh2+0v5+c+/oEnHVrhnPt7V4wO3F783wrn/fylb/6v9D1POmuFf33sU8+6
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
jtt4B47xTtzBu/7f/wvHCSGr
             "]]}}}, {{}, {}}, {{{{{
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9999999999999335}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9999999999999335}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9999999999999335}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9999999999999335}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9999999999999335}], 
                   Offset[{0, 0}, {1607.9100261544995`, 0.9645346374492342}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1607.9100261544995`, 0.9645346374492342}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.9100261544995`,
                     0.9645346374492342}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.9100261544995`,
                     0.9645346374492342}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9999999999999335}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9999999999999335}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9999999999999335}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9999999999999335}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9999999999999335}], 
                   Offset[{0, 0}, {1607.9100261544995`, 0.9645346374492342}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1607.9100261544995`, 0.9645346374492342}], 
                   Offset[{10., 2.220446049250313*^-15}, {1607.9100261544995`,
                     0.9645346374492342}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.9100261544995`,
                     0.9645346374492342}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{34., 6.500000000000007}, {1607.9100261544995`, 
                    0.9645346374492342}], 
                   
                   Offset[{34., -6.499999999999993}, {1607.9100261544995`, 
                    0.9645346374492342}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999998}, {
                    1607.9100261544995`, 0.9645346374492342}], 
                   
                   Offset[{9.999999999999998, 6.500000000000002}, {
                    1607.9100261544995`, 0.9645346374492342}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.01`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22., 4.884981308350689*^-15}, {1607.9100261544995`, 
                  0.9645346374492342}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9010337881886192}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9010337881886192}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9010337881886192}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9010337881886192}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9010337881886192}], 
                   Offset[{0, 0}, {1607.9100261544995`, 0.8916313327309585}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1607.9100261544995`, 0.8916313327309585}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.9100261544995`,
                     0.8916313327309585}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.9100261544995`,
                     0.8916313327309585}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9010337881886192}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9010337881886192}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9010337881886192}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9010337881886192}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9010337881886192}], 
                   Offset[{0, 0}, {1607.9100261544995`, 0.8916313327309585}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1607.9100261544995`, 0.8916313327309585}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.9100261544995`,
                     0.8916313327309585}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.9100261544995`,
                     0.8916313327309585}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1607.9100261544995`, 
                    0.8916313327309585}], 
                   
                   Offset[{35., -6.499999999999992}, {1607.9100261544995`, 
                    0.8916313327309585}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1607.9100261544995`, 0.8916313327309585}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1607.9100261544995`, 0.8916313327309585}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.05`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1607.9100261544995`, 0.8916313327309585}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.7102620723614718}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.7102620723614718}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7102620723614718}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7102620723614718}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.7102620723614718}], 
                   Offset[{0, 0}, {1607.9100261544995`, 0.7316517944022564}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1607.9100261544995`, 0.7316517944022564}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.9100261544995`,
                     0.7316517944022564}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.9100261544995`,
                     0.7316517944022564}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.7102620723614718}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.7102620723614718}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7102620723614718}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7102620723614718}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.7102620723614718}], 
                   Offset[{0, 0}, {1607.9100261544995`, 0.7316517944022564}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1607.9100261544995`, 0.7316517944022564}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.9100261544995`,
                     0.7316517944022564}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.9100261544995`,
                     0.7316517944022564}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1607.9100261544995`, 
                    0.7316517944022564}], 
                   
                   Offset[{35., -6.499999999999992}, {1607.9100261544995`, 
                    0.7316517944022564}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1607.9100261544995`, 0.7316517944022564}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1607.9100261544995`, 0.7316517944022564}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.15`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1607.9100261544995`, 0.7316517944022564}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.6785421700095702}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.6785421700095702}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.6785421700095702}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.6785421700095702}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.6785421700095702}], 
                   Offset[{0, 0}, {1607.9100261544995`, 0.660762397608986}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1607.9100261544995`, 0.660762397608986}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.9100261544995`,
                     0.660762397608986}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.9100261544995`,
                     0.660762397608986}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.6785421700095702}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.6785421700095702}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.6785421700095702}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.6785421700095702}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.6785421700095702}], 
                   Offset[{0, 0}, {1607.9100261544995`, 0.660762397608986}], 
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1607.9100261544995`, 0.660762397608986}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.9100261544995`,
                     0.660762397608986}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.9100261544995`,
                     0.660762397608986}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1607.9100261544995`, 
                    0.660762397608986}], 
                   
                   Offset[{35., -6.499999999999992}, {1607.9100261544995`, 
                    0.660762397608986}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1607.9100261544995`, 0.660762397608986}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1607.9100261544995`, 0.660762397608986}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.25`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1607.9100261544995`, 0.660762397608986}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.5868907187234484}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.5868907187234484}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.5868907187234484}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.5868907187234484}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.5868907187234484}], 
                   Offset[{0, 0}, {1607.9100261544995`, 0.5833279177262256}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1607.9100261544995`, 0.5833279177262256}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.9100261544995`,
                     0.5833279177262256}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.9100261544995`,
                     0.5833279177262256}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.5868907187234484}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.5868907187234484}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.5868907187234484}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.5868907187234484}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.5868907187234484}], 
                   Offset[{0, 0}, {1607.9100261544995`, 0.5833279177262256}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1607.9100261544995`, 0.5833279177262256}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.9100261544995`,
                     0.5833279177262256}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.9100261544995`,
                     0.5833279177262256}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{30., 6.500000000000006}, {1607.9100261544995`, 
                    0.5833279177262256}], 
                   
                   Offset[{30., -6.499999999999994}, {1607.9100261544995`, 
                    0.5833279177262256}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1607.9100261544995`, 0.5833279177262256}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1607.9100261544995`, 0.5833279177262256}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.5`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{20., 4.440892098500626*^-15}, {1607.9100261544995`, 
                  0.5833279177262256}], {0, 
                 0}]}]}}}}, {{{}}}}, {{}, {}}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> False, 
         ImagePadding -> {{All, 61.8015865074359}, {All, All}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["time", TraditionalForm], 
           FormBox[
            RowBox[{"freq", " ", "oblique"}], TraditionalForm]}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 440, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           RowBox[{"{", 
             RowBox[{
               RowBox[{"ba", "\[Rule]", "3"}], ",", 
               RowBox[{"bn", "\[Rule]", "1"}], ",", 
               RowBox[{"z", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vs", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vh", "\[Rule]", "1"}], ",", 
               RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"u", "\[Rule]", "0.5`"}], ",", 
               RowBox[{"pa", "\[Rule]", "0.2`"}], ",", 
               RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
       
        FormBox[
         TemplateBox[{"0.01`", "0.05`", "0.15`", "0.25`", "0.5`"}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm],FormBox[
        FormBox[
         TemplateBox[{"\"healthy juv\"", "\"stressed juv\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, GridBoxItemSize -> {\
"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Normal", ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
      
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {2, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}], ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#3, ",", "Above"}], "]"}]}], "}"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
            
            LineBox[CompressedData["
1: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
/+//BQ9vjho=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]], 
            LineBox[CompressedData["
1:eJxd13t0E+XaBfCACEUKBkSMWiRKweLp0SgVIqJssUBAhJQWCFAg0AKhN9J7
eh8QISBKRMSo1RO1YhQ8RuRSpGJU0CJFwkWs3AxSJEDRoCARQb5+63Rm3u7+
k/VbT57Zs+dd09XePXvBhDntNRrNkRs1mv///N9PeNj/PoOtnxqM0q3T71sg
OwqH3/EPH9AkW4txof2/1Uw/0eqe+Da4Mr/zMdk6DN1yeufEtJ9bHYPSIfsO
HbsgW48uR+omlyw/2ep7cO/QrfmHH2hqdSy69g1U4BfZ/fHL5o+2xG461eo4
7Bo82D1l/S+tvg8D1tQMvvfa6VbHY9rh6Obz/UKtvh/PnvlsXvrTsg3YOWHK
0OfzZT+I1AvJ8zPdsh/C3oafpravkz0Q+Y/eFpp4XHYCds7IMGdcl/0wprdP
Nib2OdPqQdi1f+K7ocdkD8agjVP/Sp0m24i579rOry2W/Qgi/xx4rmGV7CE4
Ff5twMH1sh9F6f6Js3bslD0UK+8+FFVzTPZjiP/l3n+XXpT9OP71cmbncTed
bfUwXJDWXO/fRzYwb8ERV/TAVktAZvfYSR1HyvMnkNP0YeROizx/Aj84j9w3
cb48H45Xjo1+a2uJPB+O7WMGRSctk+dPIuOtJ7r3dcvzJ6H5xT1i8Fp5nohy
03NxL38izxNxcdmquxL98nwEEu/el/VUgzwfgR/f6fTwhh/k+UjsSmqXV/Wz
PB+JwvuKLm5tluejMLVmptX2pzwfhSlRdfe9eF2em3BmybZXhkSda52bsGF2
0tYMbas1o7Hn2j059+rk+WjoHvrOWtRHno/BX72lTtP7y/MxeCv3+3eC8fL8
KZwxXRvecaA8fwoztty2fb9Rno/FzKm7Ph3zuDwfi1OLr63Le1KeP41FpwL7
x5nk+dOYcPzNYSfHyvNxaIqNPzAwSZ6Pww9vnxmWOFGej8eJi2O66KbI8/G4
66n4lRtS5bkZs/Y9+Xcva6thxuJ7X59kSpO/b8Z9e7suHD231X4zXt+zK6H3
fHk/CTk9A52+zpT3k1C2Ki97ZI68nwT/bd9t8djl/SSYSx+//Yc8eX8CJnp3
v3uuQN6fgKznXkgJFsn7E7D5YHS7LQ55fwI+/3N5Vm6pvJ+Mwm3Jw7qXy/vJ
2Bd1qbO7Qt5PRo+luSM7Vcn7yfji8twpVkneT8HwfgNeqlko76egv22f4ftF
8n4KAvuGT//jGXk/BRV39n1I86y8PxHdltTXXpWNifjuRMy5M0vk/YnI+adw
Y/1SeX8ivvo27fdXnfL+JJTkFhTOWCbvT0Lijl/b3bZc3p+EmWOeMe+Q7Z+E
h0df7DbvOXl/Mqb12RS8LhuTsWTMwpkrV8j7k3Hdfu7OXs/L+5OR9HXTG6tl
ayw4cfdjc7q8IO9bkBcTc7ZUtmTBnqX5b5yU7bdg7YuZZ0aslPenoDRY/+Db
sjEFG/4cezAiW5qCXf26DxjjkvenoNxydNEa2ZqpsEbyHzguG1OxxBAqvvtF
eX8qOjYc8Vhl+6diU/M3Z1+XrZmGZw88uuqAbExD3gVdoNMqeX8a0gt3/2iU
7Z+Gr51VJ+bK1qRiXEZyr1WykYrLLy2p+VTZT8WVXms3BZX9VMyctNne4SV5
fzrWjJx6pZ9sTMfrkyIFI2RL0xHb75gmTbZ/OsruSa2rVPZn4PJjv37lVvZn
4PG6cQ99rOzPQHPSGn29sj8Da6tT1h5T9mdi2C3eHy8o+zNx2+KUvR1Wy/sz
8d7gxtd6yfbPxOHdVePula2xwnvE8fcg2XorUp49+fEI2bBiZfBnKVm21Yrv
CtYXWZXrW9Hv8zWeLNkeK2IO9e/iUPKs6PlI7y8XyQ5acUPjwsAKJX8WXp75
EdYo+bPQ+fvpMf9R8mfBtmJ91ntK/izc+8y/hnyk5M/C6rimFZuV/FmIVM/K
+kzJn4WtC2p/+krJn4XkpufP71LyZ2Plzruq9yr5s7F/z4gLB5X82bhl3cLf
f1TyZ+PFmis1x5X82egYWtr1pJI/G3XPbDScVvJnw91jR49zSv5s/HTXli2/
KvlpuA/j+/6u5Kdhe6THlEtKfhpGTUpKjSj5aVg1pZ/hbyU/DT/FlfxwTclP
w583d56oeVnOT4M+ae669rKDaTi/66+jHWRr0jEnp2NzR9n6dAx/Y93hKNlI
xyvjT39wk2xrOnr1d8+Ili2lQzep6nJX2Z50WB3Di29W8tNR9Gj2T1olPx3j
/857sIeSPweXhvlyblHy52BtbJa7p5I/B+e8P350q5I/B3806zb3UvLnYOlU
4/rblPw52Lrt4Zd0Sv4cOHA983Ylfw66FxQMvkPJn4s1fef9qVg/F7GDqt+/
U8mfi8PFDUkxSv5cTLa8+5tiaS6WvLHrmd5K/lxkdNnf7S4lfy6q2417UXFw
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
DHIi2UQeSzaTU8gWcirZSk4n28hZqv8PFgWr8g==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
            LineBox[CompressedData["
1:eJxd1nlcjen/P/BjDyEzlhAOYpqxhZD9xYTIcGTLftpD6bTvddpPdU7d59ga
DNlGiMlnQrZxxjZZxmQPDdlGtpF1sv/6Pb5d1/12+afH0+V93vfrfp3Loy4e
ga7edRUKxY0GCsX///l/f6pG/d/PitqfCgTkjry7bQ+zBYrXVD84FXG71lbY
PXe8V8SEO7VuhTPT3QLc+96ttTX6NGq9Z0K/e7W2Qc/4+ktfz79fayW2Bvh7
77v2T627wnXbfMfsGQ9rbYuqlKgDZzow90CFufPHUfcra22HQ6ktru3azfwd
Uu9r39/WMvdCUal9/3xX5j5YuOH70ks9mO0R4uNjN+rjg1r3Q7FFi3ZHLzP3
R9suvfOHFTIPwNb/1SvQ65kd8NhjRELuYuaB+Dn+x9+cJjIPwp2+55tH9WQe
jKPdsx52as7siDef3DVdXrD8QxDqbjc24CrzUOg/7fGpOsw8DCjb1HL1Fubh
sLgUunlONvMIjDp4IK1bJPNITL169asHHsyjYHu7SVLuZGbgryXx13sOq7UW
2LCp060Vdux8NGzDFHXOtmHnozG4Xy/X4w3Y+Ri8PLwpKux1bZ/aMQhLTMy/
cp/1+z0qV7aUbl1h599j36bTbroSdu6EIXebrz51gJ07od+5PNe1O9n5WAzv
v//22zx2PhYntu1SlC9n5+OgGqY8PDyDnY/DY+3KkDbx7Hw8ijtJpz1D2Pl4
OGY829l5ETt3Rte+v08cu5CdOyPW0rVp6Qx2PgGnE3OWHZzEziegX8Pth+s5
sfOJOPb81crNw9j5RMy3/zRv9QB27gJn+2vRt3uycxc8u5ibFm7LzifBf8Wr
kTM7svNJeOXTOiOuDTv/Adm905c+bMHOf0DPjy4dVjVm55PhndC8PLkeO5+M
kd8G2ez8yO7bFOxuF+ltVV1r7RRs3t503o4X7FwF5UPjkZintYYKq1U/+SVU
sn+vgovzL+OL7tbarEJinWZe1rfY/FRsDd5yfdt1Nj8VN50a/e1zhc1Pxd0N
3oU/XGDzU6G9v71g3jk274qICbnDTKfZvCv+7+9r/x/SumL25Ho735U/q513
xZR7b0IbHKy1Yhp6WWw/23Z1rTEN6bv/9fs2utbaaRhzt3pE/7lsfhqaBWTE
fzeCzU/HV55PVzdRsvnpeLjo+qgz9dj8dLy/12eGd+W/tfPT4dtt7Yfzf9Za
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
jSpuczy0m2eP5C6Nx9lHUi/uinisKXfqwF0Vj/9aBDfhViSgrH/rd8k8fwLi
mvR8xK1MwKngwuvc9gnYPH/jGW4kwP3Cx0PcqgT0eHpkF7c6AfNv3s/j1iSg
+yP/ZdzaBJz0dU3jlhLQ6/dlUdx5CfAK7hPAXZiAzo2V7tzmBAyw9ZnBXVrz
+SGfJnBXJKBozz8juasS4H3QxoFboUVbz3XfcltosXL1os7y+9DCYUFsa25r
LTyKLzWV348WLr9r6nLbaRG5bvLbJP6+tAhM8q/idtRidkHJA25osd3X/Ra3
sxanmw68yq3S4uj70X9xu2nxcEvaH9zqmudNrmPm9tPiovXuYm6NFl+9Wrab
O1KLuzvzt3NrtdhV+XQTt06LAJXHT9ySFotX11/FnavFp5SLEneeFqqrf2Zy
52vRzv1FCnehFj7vRiVwF2uhTt4TxW3Wwure1FDuEi16WrYK5C7V4saLd4u4
y7TIXNnAm7tCi18+9FdzV2qxrl/SXO4qLdycX8zkrtZizpwkV25FIoLT+03m
tkiE8fWnCdxWidhQ+nAst3Ui5k58PppbmYiOq1uN5LZLxPEPrkPl/hORVrRj
kNx/Ik5bdBog95+IBuO29ZX7T0Tu4Um95P4TUXCi0bdy/4losf9ad7n/RLT5
7/eucv+JiLt7pLPcfyLG/XPBRu4/EeuWvGsn95+Iw3cHtpX7T8TZoymt5P4T
8Yf2n5Zy/4nw/nFOC7n/RHzIqrCU+0+E742IJnL/iXjWTGkh95+I/jvLGsj9
J8Jy3IZ6cv+J0PpF1ZH7T8SmrerPibz/RKT8OPMjd0Ui2l+d8567MhF9Pvi/
5a5KxPit+v+4qxOxKmr/a25FEh61efmS2yIJxu5DXnBbJcF1clYVt3US3IY/
/JdbmYROP7k+5bZLgpfyj8fc9kloHznuEbdjEma6lVZyIwmI8HrA7ZwEC0Pd
f7hVSbgwbfs9brck/JI+9y63OgmZ/7S+w+2XhM721yq4NUl43H3LLe7IJHTN
irrJrU3CRtuZf3PrklBZPLScW0pCPatvbnDnJkH/sv117rwkrOrT5hp3fhJ2
GqzLuAuTcORml6vcxUno+LzfFW5zEgJWOF/mLknC+p+8L3GX1jxPue6i3H8S
9n7zvwty/0nIn3b7vNx/EnSD28iuSsLIHapSuf8knEuX/pL7T4bL1svn5P6T
cfFeZ9lWyUi3CfxT7j8ZST2PnZX7T8blZx1k2yUj3jnqjNx/Mjxa3zgt95+M
CYNHy0YyLuXsOCX3n4zoOu1lq5KhDdSXyP0n4/XhurLVySg4H/uH3H8yBknv
Tsr9J+PmrRjZkck190khW5uMAX/pTsj9J+PByFaypWQcvrXxuNx/MmascZCd
l4wnc08dk/tPxkxLd9mFyfi06v1Ruf9k/P0oV7Y5GVHPHWWXJON27o3f5f6T
se2cVnZZMu5r7WRXJMNu3QWz3H/N+2+dILsqGUuu9JZdXTNfevOI3H8Kpr82
yrZIgd5hvGyrFPyZ8Ok3uf8UHC7ZJ1uZAp86IbLtUjDIxl62fQreNn12WO4/
BVeP/SIbNfsHB8t2TsGEOYNkq1JwX/nhkNx/CnYkHJOtTkHAEr1svxRMujZT
tiYFe3/rKjsyBR4tqw7K/adA9cdvsnUpOHElW7aUApdBatm5KdhV3l92Xgre
mRvKzk9BzPUbB+T+U7Bf+T/ZxSmIysqQbU7Bvq88ZJekYNuuYbJLU3BoVhvZ
ZSkwNnyxX+4/BR9/PSe7MgWNZhfIrkrBg38zZVenoGHgYtmKVLy9MFG2RSqS
WvWSbZUKY+/msq1TMcr6ebHcfyr+PHdJtl0qtrrsl22fioUZ62Q7pmJnUops
pGJp/yWynVOxaZmrbFUqAjcMle2WinazuslWp8Ki0FK2XyqOb32zT+4/FS+H
3JYdmYq5Hmdla1Nx06ZYti4Vcd6bZUupmOZolJ2bilXGeNl5qVgT4C87PxWn
S+bILkzFtvUTZBen4tK/jrLNqajzq53sklS8r7SWXZqKzYbGsstS8fqnd3vl
/lPxrs0T2ZWpuPL6b9lVqTgyuFR2dSo+XzsqW5GG59f2yLZIQ8OB22RbpeG3
yrWyrdNQ8EKSrUxDqCpVtl0aTn+Okm2fhuBPS2U7pgETvWQjDW1vz5btnIZH
5imyVWkofjBWtlsajNOGy1anQao7QLZfGm6++Fa2Jg27u3aRHZmGHyRr2do0
KIZaydalwbaThWwpDV2GKWTnpsE3p3qP3H8aQto9l52fhrNXH8ouTEP9U3dk
F6dh7+Mbss1pSB95WXZJGnqYz8kuTcPEwBLZZWnYM/Go7Io02E89JLsyDYbE
vbKr0rD1eqHs6jSo5+6QrUjHxro/y7ZIx8K/8mRbpcNoXiPbOh2DL6+UrUzH
HEuTbLt0NPI2yLZPx/SbOtmO6ZgbkSIb6RjVVyvbOR3fNIiVrUoHqiNku6Xj
t0ahstXpuN5fI9svHRci/WVr0vGozE92ZDqWuHrL1tbkv+cuW5eOu9kLZEvp
SFXNlZ2bjnt2bqT/dKjbziD917y/Dq6k/3RMdJhC+k9Htvsk0n861m6cQPqv
ed4340j/6Xg+34n0n44+V0eT/tPRxWMU6T8dP3waTvpPx9AdQ0n/6QjxcyT9
65A6cBDpX4e6XzmQ/nWI+9iP9K+D4b++pH8dzn7uTfrX4UrrXqR/HVyGfEf6
r/n3i+xI/zp8/rkH6V+HzCpb0r8ObcZ1I/3roNrahfSvw/2vlaR/HdKzOpH+
dXjQrCPpX4eDqzuQ/nXY36896V+HHy9Yk/51aBvXlvSvwzP7NqR/HW49bUX6
1yH/169J/zpYJn1F+tfhnFtL0r8ORYOtSP86pHRqQfrXwaJZc9K/Do3rNSP9
6+CqsCT967C7flPSvw6vWjQh/evwuEtj0n8GfIZakP4z4Di7Eek/AwPjG5L+
M9BvWwPSfwbqXq9P+s+A1orYPgPJk+qR/jNw11CX9J+B2Et1SP8ZsFMSqzJw
QqMg/Weg78nPRXL/GRirJPbLwD/xn2RrMvDi9kfZkRlwmUCszcCFog+ydRlY
bEssZeDNqveyczMwpwVxXs3zZ76TnZ+BMY2JCzNgzHoruzgDU1sSmzOwZHW1
7JIMnOxBXJqBSXv/k11Wk8+ZuCIDCTffyK6s6SOCuCoDc78irs5AWOFr2YpM
jJhKbJGJDa9eybbKRPZqYutMvBhDrMzE4acvZdtl4u/VxPaZGDOR2DET5e9f
yEYm1v5C7JyJYG9iVSZUHYndMmF39TnpPxNPTMR+Nc+rItZkoo4VcWQmhpyv
Iv1n4tvlxLpMnHAjlmrmOxPnZuLCP89I/5noXUicn4lGMcSFmZgxnrg4E81b
E5sz8c29f0n/mVhVRFxaM59GXJaJWbOJKzKxvDdxZSbq1yOuysS6a09J/5mY
u5tYkYX+mcQWWejgRWyVhRajiK2z0KgDsTILH/57QvrPwoPLxPZZMBcRO2Yh
aTkxstAjjNg5C1tmEquy8M6R2C0LnW2I1TXPpyD2y8Kxe49J/1kYfJo4Mgve
hcTaLDivItZl4UY8sZSFdr7EuVn4NIU4LwupQ4jzs7CtG3FhFnybExdn4cDb
R6T/LKy7T1ySheYXiEuzYHGEuCwL6QXEFVnQrSaurOkng7gqC4pI4uosBPkS
K/SYOYvYQo+C8cRWemgcia31WPctsVIPhw7Ednr0bUZsr4fh80PSvx4TXxBD
D6/7xM56XCsjVumx5Syxmx5/mInVegzfQ+ynR93txBo92q4njtQjcjmxVg/b
TGKdHtZaYkmPaeHEuXpc8CfO02O5J3G+HqvmEBfW5JlKXKyH2wRisx5fjSYu
0aPREOLSmvfbj7hMj9xviSv06NeVuFKPT+2Jq/T4+DVxtR69mxErDDA0JLYw
wEZBbGVA2dtK0r8B5pfESgMuPCW2M6B5JbG9AcF3iB0N+FRODAMKrxI7G5B+
gVhlQNKfxG4GbCghVhtw5xixnwFOR4g1Bpw8QBxpgN9eYq0Bdv8j1hnQcBex
ZECd7cS5BrT7mTjPgEkbifMNWL2OuLBmfg1xcU2eVcRmAzosJy4x4KxEXGrA
cgNxmQEhmcQVNXnSiStr3ncKcZUBxkTiagOOxxMrstEkltgiG15RxFbZKA2n
/WdjcijtPxs3g2j/2UgIpP1no18A7T8bLxfT/rNx3I/2n40tPrT/bKzwov1n
Y5kH7T8b69W0/2zsX0D7z0bFPNp/NlrNpf1nY8Zs2n82Ns6i/Wfj/QzafzYW
Tqf9Z+MvV9p/NiZOpf3XnE+h/dfMT6b9Z+PtJNp/Nn5yof3XfN5E2n826kyg
/WfDPJ72nw3dONp/NmaPpf1no78T7T8HX39P+8/Bh9G0/xw8Be0/B/dH0f5z
cG8k7T8Hj0fQ/nNQPZz2nwNLauSgxzDafw7GD6X952DpENp/DtY40v5z8Odg
2n8OGlBrcvD9INp/DtIG0v5zcM6B9p+DDtRSDgIG0P5zcLw/7T8Hnanzc5DQ
j/afg7v2tP8cTKI252B/X9p/Dr6jLs3B+j60/xy0pa7IwbLetP+aPqmrcrCy
F+0/Bx2pFRK29iSuL8GB2kLCie+ILSXMpraS8Oxb4lYSdNTWEmypbSQcs6Pf
Hwne1LYSGlPbSSj8hrhXzX5qewkNqB0k/NqDft8keFIPl9CaGhJOdSd2kpBA
7SzBkXqShBe29PspYRf1dAn+1G4SelHPk/BvN/r9lbCb2ktCOLWfhBHU/jV5
qTUS/upKHCphNXWkBF/qWAkDqbUS6lOnSLjchd6Hmu8HtV5CNLUkYTL18pq+
qXMlvFcSr5VwkTpPQgH1Zglp1PkS3KkLat4HdaGE9tRFEqo70/sm4Sr1IQn7
qM0ScqmP1+SjLpEwn/qshNHUpRK6U1+S0IS6TEJVJ+JyCVeoKyQcpr4nYQt1
pYRs6icSIqirat4P9SsJLtTVEgZRf5DQlVphRHPq+ka870jvvxGV1JZGXKa2
MuIYdSsj/kdtbcQGahsjjNRKIxKpbY0IprYzwpO6lxHTqe2NGEftYIQjtaMR
PamHG9GJGka0pHYyogG1sxFvbej9N+IptcqIO9TTjbhK7WbEWep5RhylVhux
j9rLiJ3UfkZsovY3YjW1puZ9UocaoaOONCKBOtaIcGqtEUupU4zwodYZsYBa
b8RMasmIKdTLjXCmzjViNPVaI4ZS5xkxgHqzEb2p8434hrrAiC7UhUZ0oC4y
ojV1sREtqA8Z0YTaXNM39XEjFNQlNfehA73/RryhLjXiOfUlI55QlxnxgLrc
iLvUFUbcor5nxA3qyprvE/UTIy5SVxnxF/UrI85QVxvxB/WHmvtKrTDBTF3f
hMPUFiYcoLY0YR+1lQlF1K1M2E1tbcIuahsTdlArTcintjVhC7WdCRupe5mw
ntrehJ+oHUxYQ+1owo/Uw01YRQ0TVlA7mbCM2tkEI/UkE3KoVSYYqKebkEXt
ZkIG9TwT0qnVJqRSe5mQTO1nQiK1vwkJ1BoT4qhDTYihjjQhmjrWhEhqrQkR
1CkmhFPrTAij1psQSi2ZEEK93IRg6lwTgqjXmqChzjMhkHqzCUup800IoC4w
wZ+60IQl1EUmLKYuNmER9SET/KjNJvhSHzfBh7rEBO8v7r8JXl/cfxM8v7j/
Jnh8cf9NcP/i/pug/uL+m7Dwi/tvwoIv7r8J87+4/ybM++L+mzD3i/tvwpwv
7r8Js7+4/ya4fXH/l33p+oItBFsKthLcSrC1YBvBSsG2gu0E9xJsL9hBsKPg
4YIh2Emws+BJglWCpwt2EzxPsFqwl2A/wf6CNYJDBUcKjhWsFZwiWCdYL1gS
vFxwruC1gvMEbxacL7hAcKHgIsHFgg8JNgs+LrhE8FnBpYIvCS4TXC64QvA9
wZWCnwiuEvxKcLXgD4IVy4X7L9hCsKVgK8GtBFsLthGsFGwr2E5wL8H2gh0E
OwoeLhiCnQQ7C54kWCV4umA3wfMEqwV7CfYT7C9YIzhUcKTgWMFawSmCdYL1
giXBywXnCl4rOE/wZsH5ggsEFwouElws+JBgs+DjgksEnxVcKviS4DLB5YIr
BN8TXCn4ieAqwa8EVwv+IFixQrj/gi0EWwq2EtxKsLVgG8FKwbaC7QT3Emwv
2EGwo+DhgiHYSbCz4EmCVYKnC3YTPE+wWrCXYD/B/oI1gkMFRwqOFawVnCJY
J1gvWBK8XHCu4LWC8wRvFpwvuEBwoeAiwcWCDwk2Cz4uuETwWcGlgi8JLhNc
LrhC8D3BlYKfCK4S/EpwteAPghUrhfsv2EKwpWArwa0EWwu2EawUbCvYTnAv
wfaCHQQ7Ch4uGIKdBDsLniRYJXi6YDfB8wSrBXsJ9hPsL1gjOFRwpOBYwVrB
KYJ1gvWCJcHLBecKXis4T/BmwfmCCwQXCi4SXCz4kGCz4OOCSwSfFVwq+JLg
MsHlgisE3xNcKfiJ4CrBrwRXC/4gWLFKuP+CLQRbCrYS3EqwtWAbwUrBtoLt
BPcSbC/YQbCj4OGCIdhJsLPgSYJVgqcLdhM8T7BasJdgP8H+sv8fsYJUiw==

             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961]], 
            LineBox[CompressedData["
1:eJxd1nt4y+f/P/AYps6ZY00R09FSdBR1mmcp6tigKKpSiqJIz+k5adM0TdLJ
nFbTEdNNUXRzKnOIw4c6TWdMnYOipsg222rDfv1d397v++5r/7ge191Xn3l6
XnGt6/yVUxe+J5PJbjWUyf7/n//3n3PE//3pqP1Thj5dR91Lv83sgqSo4ydw
8X6t5RjVMGnnxmsPat0Gfde1tKbXr6i1Kwp+LzrvHfmo1m64sO2kuX3gk1or
MKT7yt63I6pq/REK3l17ffb5s1q7Y2iz5EZfapi7Y83EhptbNGb2QJnv4LaO
Tb/WuifKL085XDqY2QsDqxf31t94Wus+WNY1dFhZKrM3Do3dtXJ5d+ZPMDTj
7qwuP1fWuh+uTY85UpTJ3B9PP5u66t4gZh+MCRn1Sv+S9RmAlmNmdVq+g3kg
Puw9vNeyCOZB+P3Rj+9P92T2xTT1Z771nz+u9WAMCEg8rtzLPASFQ1MqP0xh
HopOvw3o4TeWeRiKm6Q7C9owD8d42z/rPSvY3/enKP3pR899+5lHQNE/d3qv
HGbg5IGRYxNCa60F3g7P/1w3gL37oXfS+20GtGDvfnjtVvQwtZLtOxJBm/sP
HHe61tqRGG/sNDlrC3sfhbyCgoiuWvY+CqeOvreruYq9++Np+Vu3oX7s3R95
3281bOzG3kfD87cPE7o2Yu+j0SEwpo/92cPa9zHYdnTe2mU/1Vo7BqG9z/Z2
LWHvY3EMH7b+YTN7H4uvdsx9Ms7I3gMwJeTm5cNR7D0ARS8XRjYIYe/jsOrx
wLJOY9n7OGxeMTj5XT/2Ph7Xg25O29SFvY/HDz98uuXPZux9AnJf32v49p/a
74d2AvJPZSbtesq+LxPRPilnnOwGe5+I0PcNTV6WsvdJOD/JY1PMIfY+Cb8c
VfU07mDvkxHz/Ey7HvnsfTKif/BtPOEz9h6I7vt2P3ihZe+BOHHf70jzWPau
RK+UeRVfL641lGgyqMft7XPYzyvRyfu3oM7KWtuVmHK0uvcbf3Y/BbLVntEj
hrD7Kbj4qNmMir7sfgq6xF8d8ORjdj8Fzxfq1vi7sfupNd//j9u+bsXup0K3
f0hmvSbsfip2FLQ7O7seu5+KLisin9Z7zf79mYb7Z57IXzlrjWko2FGu7fO0
1tppkP3r/GL3/Vrbp+GvTa0uR91k90HQdutdEvczuw/ChZeebw+yf9+0QfDz
fhw68Ay7D8KhHYP3vTjO7qej55HGT+8eYvfT4Xlp8dsG+9j9dGjWH24wbze7
nw7nht/cnxWy+xkY/enJddu2svsZyG/4YvPqTex+BrbP+zx/xwZ2PwM9bEmv
nq9l9zNRf4exyxwru58J62N5gdPM7mcit/vEdruy2f1M3JWfb78qk90HY3bp
rzPWpbP7YMxJCP3sWDK7D8aa2B36xhp2H4yuh/Y2jYtl97PQM3yyTBbF7meh
Y7Mr47YvZ/ezELnl+xsrl7L7WXDf0Wnn1MXsfjbW2DaeVIaz+9k4OnJ/7yVh
7H42ir7Of29jKLufjbXnb8x7NIfdz8GH5/9ZNnYWu5+DsAZjp9tnsPs5KMyL
mxIYxO7nIPDEoq/+mMLuQ1D9viOlKJDdh2B0jwlDEiex+xAstyZ0nzWB3Ycg
NCg0b8I4dj8XJQmVVYFj2f1c+GUcNCwcze7n4qdBzkvmUex+Lu6HNfI+6cfu
Q9FjjbWLC9h9KA5cbtFm7qfsPhS9Gp7NsQ9j96EIG7G2Xr+h7H4eemYflX03
mN3Pg3LWJflwX3Y/D42+WXr82kB2Pw8n/fpvShrA7lWQX/piZC+fWitUqLpf
MvpJP/b7VEjZONp/9ye1Vqnw7/Q5d9O92e9XoemWRQfn9K21TYWxMxvG+/Vh
eSqkXn56yrt3rR0qLHc7PsnTi+WHQa1scapnL5YfhkeH3X/x6cnyw7C17b9D
x3qy/DC4b+hUFObB8sOQ/WKtI7MHyw/D3b8ur9vVneWHYcO8z0x3P2b5YRj1
5kJ6O2bZfDS/W+Q73Z3lz8cfXZcmfdmN5c+v+fd+RLPHH7H8+YjoOOvgIGbt
fLT95+SYVV1Z/nzMPDozu0rB8ufD7a/isYHMjvlQfN0++GAXlr8Ai8fEmdyZ
FQsQbh39/frOLH8BqjTGgubMqgVwq9g3KKcTy1+A7w7tHNWY2bYAC6J2bsl1
Y/kL0Kilv1c7ZscCqE0Tjn/dkeWHQ7H5yqD+zIpwNJd9GHv2Q5YfjuvPsqfN
Y1aF422nTQf+6cDyw7G/gzNtA7MtHJ9c6LBqKLM9HENTDpx3uLL8cPTsENwu
h1m2EDNPpc30YVYsxITd1tgH7Vn+QjQafSVoDbNqIc6tDXWMYdYuxNN/usje
tmP5CzGv9bmv9jPbF+LAo0tb1cyOhRgwee7b3syyRWi/Zfb6521Z/iLcyJo5
Zw8zFmG1y2eDY5hVi6C/d7PzYGbtItR7ePC1jNm2CFX7Bx4634blL0LXr/6d
uJ7ZsQhd9L7fLGCWLUZY78Lv+zErFqPSkrOoPjMWY+WEjd9fa83yF+M3dfuc
7czaxXAdsOd2GrNtMQJeGWzTme2L0SCgX2lvZkfN7/MrHtuIWRaBk6cXt37Q
iuVHwNTAXXGMGRHY0vGDBRuZVRE4e7rkp0RmbQQcff4Lm8Vsi8DPVV2aDGG2
R6CDbKe9I7MjAu3e6lLefcDylyAw4JrPA2bFEuxa1vX+GWYswasMr8QiZtUS
bDlW/8/VzNolUL+pnpjEbFuC0lhb4nxm+xLMTPkxZgKzYwm8Zq3zGSDlL8W3
PUft7yLlL8X6h/NeNpHyl+LX6Ttv/yVn+UsxK7BjwkNm7VIsOXOjpIzZthST
2o/KP8ZsX4oWyoqOu5gdSxFvTuyXzyxbhk9nV900MyuWof6QqfIUZixDbodn
lyKl/GV48bRLy1ApfxlaDNNdDpTyl8Hn1/81GSnlL0OPS+eO+Ej5y5CeYrnf
Q8qPxPkO3nEdpfxIdOleHdNSyo/EhbCAm/Wl/Egc27+1oLoly4/E/O47Lz9n
tkXCdNkt+CGzPRJ9n14ZcoPZEYltV0/GXmaWLUebfm/eO8OsWI4f3m57cIQZ
y9F4f6MP9jGrluOfjFjzTil/ObbFhAZulfJr7ndPmL1Ryl+OtSXXt6+R8pej
/ND3Qy1S/grgkq15lpS/ApHTEjulSfkroJ/YfUmClL8C8Qe3vlBL+StQ8Ne7
nUul/BX4cfCMzeFS/gq0fH79TKiUvwKHvU4qZkn5K1E9fP7OaVL+SvzetM3C
yVL+SkRs95s4TspfCfMv8+f5S/kr8bfpTf4IKX8lvs201R8q5a/E8atVnw+U
8leifbp5TD8pX41pjfsp+jDL1Uhw29Kpp/R51LjZrWB4d2ZvNSY75ekfSZ9P
DXXoWUdnZqUab/8rDusofV415KV2mSuzWg3fw78faSN9fjVG5k9Y9wGzVY3d
O8qNLaQ+amwP3LO+KXOxGtrbVUddpH5qxI0+8LYhc5kajnuDpteX+qph+Oib
UzJmpxrtI3wD3rVg/aNwYm+/B/8yy6NwPOGW9TWzIgp35mqn/c3sHYVrH8R5
/smMKOiat271B7MyCmcWHWr2G7MqCgM2X3R9yayOwti4AwOeM2uj0P/go/nP
mK1RGN3+x81PmW1R2FWv8tkT5uKazxtTPOYxsz0K668W7qlgLouC88cZ3R8y
O6KQ6uW/4z6zMwoTv383xCH1j0b0u/bld6X+0biz6GPdHal/NPxvHB9wW+of
Dc8jmX/elPpH49cyuf2G1D8al9s1WVcu9Y/Gh3vaxl6X+kfj7YnbIb9I/aOh
D28aeE3qH43gdOX4q1L/aIQdmDv5Z6l/NAZNeTL7itQ/GqHuBSt/kvpHY1zy
JEuZ1D8aHepvLr4s9Y9GmwMzbv8o9Y/B+bM+LSXLY1D1+b8Bl6T+MbDrVuZc
lPrHYNj7M8suSP1jcCAtqZNkZQx69yxQn5f6x6Bre9u5c1L/GPzVepiHZG0M
7mweaymV+sfA7/aaP89K/WOwJ+2PBZKLa/JPDbl+Ruofg9nzRgRKLouBe1z5
hf9J/WPQLvvuRMnOGPSJ7HXltNQ/FtH+X86RLI/F3eWNnp6S+seiKFGZJNk7
Fv92DWopGbEoG/H7tpNS/1gsO9HUX7IqFr/ZMh6ekPrHYtGtwQbJ2lj8tbit
l2RrLPR9/7lql/rHwtzgR63k4lgM35jQV7I9FpW6u47jUv9Y2Do8WyvZEYuP
VhkmSHbWfP6fv2wgWRaHJ1+0sh+T+sdh0cgbqZIVcfis6uZwyd5xkM9pIJOM
OKirR54+KvWPw/LLepNkVRw2ZZVMlayOw5AZl9wka+PQovneyiNS/5qfrzf7
gGRbHKJa7c2SXBwHvW3PDMn2OFSY/Dwll8Uhpuectz9I/eNwftLLK5KdcRg5
4LftkmXx6LoqKEOyPB6PY5qHSFbEY998+SDJ3vG4M3xqa8mIh3lsqfOw1D8e
xs4RlyWr4tHxhx57JKvj0Sjy7SrJ2nh8/fO9KMnWeLz36H9Bkm3xCLj/ra/k
4nj8G5TUSbI9Hrq2vvUll8Vj+6flTw9J/eMx2XvaT5Kd8Whi2XJIsiwBsv5H
vpYsT8ChUfkWyYoEfOA6NEGydwJ8R62eLxkJOL1q42TJygRce6scKlmVAP8T
RR6S1Ql4PGJ7O8naBDha+jWUbE1A/b9WvCqR+idgaEXvCsnFCWhSrbkq2Z6A
lokT/ie5LAFfXbcdkOxIwOydsYWSnQl48d3JLyXLNDh8yZArWa7BxgZHtZIV
Ne9pYbGSvTVQZakjJEODe7rHIZKVGiS8OT5FskqDwI2vx0hWaxDb1TpMslaD
O8u1/SRbNUhJOuvB+2swY878Lry/Brbhk9vx/hpULjI25/018PNp0ZD31yCp
w503B6X+Gsy2/f5KsiwR9xdPfC5ZnojV3SofSVYk4tSXp+5K9k6Ec9vt65KR
CFffT36SrExEx/HHz0tWJaLbC/1pyepENButPSZZm4hf0veUSLbW/L578r2S
bYlI+f7rXZKLEzE0eEGhZHsibMOmbJVclgjrjaWbJDsS0erA7g28fyIcCzuu
4/2T8Nq4x8r7J2HghSUW3j8JTx4GGHn/JESum6Dn/ZNwo0it5f2T8EW9gym8
fxKax3VK5P2TMP73r+N4/yTsWT4mmvdPwtcV76/k/ZPw6dyHy3j/JDR+fDOC
90/CjnVVC3n/JHxjar+A909C+2ezVbx/EqIr9s/l/ZOBnT3m8P7JeJS0J5j3
T8bCdRNn8P7J6Dnq3TTePxkXr5yawvsn425efiDvn4yDL7Mn8f7JGD0oawLv
n4zyq2vG8f7J+Kvf3rG8fzL6nngwmvdPhvOPrv68fzJm+atH8v7JaOt9Cbx/
MvoN9h3B+yfj3aPi4bx/Cu7aBw7j/VPQN/jcEN4/BYpPIwbz/ilY69Lal/dP
Qb0p5wby/imYss80gPdPwakrM3x4/xT8FNi7P++fgtZXmvfj/VPQrX61N++f
Av2qZ315/xSYulf24f1TMCLpeW/ePwWTRvzrxfun4FevD7idKTj6pk8v3j8V
l5YG9eT9U7FsgM6T909F5077PXj/VFgrXvbg/VORovyEW5mK/B6J3Xn/VOT1
O/sx75+KP4d25Nam4n15nDvvn4pbKVe78f6p6Dd1MHdxKpaEbf2I909FVGor
7rJUHE8ydOX9U4G+/yl4/1RMiE7hlqVhvdu7Lrx/Gjxd9NyKNEyXt+D2TsM3
H+R35v3TUP60N7cyDT8nnOrE+6dhw8YQbnUa/Aa+duP90/DMcwO3NQ0/zBrG
bUvDxe0POvL+aej5n5nbnoZzI3y5y9KQNvXJh7x/Gqo7b+B2puFA7iRuWTrq
Gxtwy9NR9ffRDrx/OoaXJnJ7pyOxYhA30nHFt9qV909H9+8Pc6vS8ffwdG51
OhafH82tTUf/MS24renYaStvz/uno/hcAXdxOnZ/F81tT8cX40Zyl6XjXkZr
bkc6NIGP2/H+6biw5TC3TItDkVZuFy3WbF3MLdei3RBwu2qxzP1DboUWXWb+
2Vayhxbdzv7E7a1F6ZI93L41eT6fcUOLN51WcAdoUdUxkFupxaCPP+EO1uKO
dxtulRaeA6vbSI7QYp/XHW61FnObneLWaDH+0nZurRaPFn/ObdTixtVEbqsW
8uYLuPO0+L7xJG6bFl1PD+Iu1OL1gG7cxVo0m9WSu0SL+T3etOb71fTb+JS7
VIvq3de5y7Twm3uGu1yLe7b93A4tzsV+w12phfvVddxOLYYfNnBXa2H+SMMt
02Gny1JuFx1UESHcch1WDw/kdtVhgn4kt0KHQ74DuT106DmzJ7e3Ds1ud+b2
1aHqVGtu6BDbtDF3gA7L9rxrxffXYV/RK+5gHSbLnnGrdFBuu88docOzTeXc
ah0WV1zm1ujQPe4st1aHTZOPcxt1mLviILdVhwZX9nDn6TA+oZDbpsM/c7Zw
F+rgTP2Su1gHt1truEt00Eblctt16DMim7u05veP1HGX6fB+YjJ3uQ7f3o/j
duhq/n9ZzV2pQ6XfMm6nDsEDF3FX6xAwI4xblgE/Wwi3SwZutArmlmfgu6Jp
3K4ZSIgM5FZkoEI5gdsjA0eCx3J7Z+BSxihu3wz8dmkENzLQZPAw7oAMNDzl
K+yfgetLBwj7ZyC9bz9h/5qfl/cV9s+ApqmXsH8GnApPYf8M5AZ2F/bPQPz6
bsL+Nf1fKYT9M1C1pLOwf41fdRT2z0DHdR2E/TNwalx7Yf8M9G/VVtg/Ayee
txL2z8DZW3Jh/wxsu9VC2L/mvaqZsH8GPm/RVNi/Zg80FvbPwHNdI2H/DCy/
0lDYv6bvJw2E/TNh2vSesH8mvDvUE/bPxB+2/z7g+2di/oB33IpMyH95w+2R
iTUZ/3J7ZyJryD/cvpnQv63mRk3ehb+5AzLRe+tf3MpMfJT1J3dwJg6rX3Gr
MrFl4R/cEZnIXvA7tzoTnZf+xq3JhFuik1ubCV/rS25jJrz2vOC2ZmLftefc
eZlYVV+wLRNpvlXchZnwj33GXZyJbw/8yl2SiWX/PeW2ZyJksuDSTIzaWsld
lonnb59wl2fCM1SwIxNnTz3mrsxEXh/Bzkys3PSIuzoTXVsLlumht1Rwu+ih
biJYrsdRy0Nhfz3GtBas0OPxVw+E/fVI8hLsrYfj2H1hfz3+DhIMPWwvHML+
evxgFqzUo5eX4GA9fr58T9hfjy/iBUfoEaIQrNaj8aW7wv41fVMEa/XY30ew
UY+sh3eE/fW486XgPD0KgwTb9CiTCy7Uw+/ybWF/PSpXCS7R47upgu16mNoL
LtUj7O4tYX893LcJLtfjdJRghx7enwqu1GNWM8FOPfrevinsr8c3uwTLslCk
FeyShUHTBcuz4NtLsGsWtr4nWJGFyFs3hP2zkL1fsHcWnloF+9a8LxeMLMyY
IDggCxN7ClZmYV4TwcFZyHpWLuyfhf2XBEdk4XGxYHUWWq4TrMmCR5JgbRY8
VYKNWWg6VrA1C//rIzgvC8r2gm1Z+FYmuDALx3+9LuyfhXXXBJdk4aMTgu01
/XYJLs3CmC8Fl2XhSrbg8iy8jRPsyMLJcMGVWegYJNiZhQb+gquzkOAjWGZA
1MeCXQyoaidYbkCFi2BXA6b/+4uwvwFDXwj2MGD1fcHeBsy4JtjXAP05wTDA
9ZjgAANa7BWsNGBBoeBgA9psEqwyoPNawREGpJkEqw34RCdYY4CPRrDWgKyV
go0GdF0s2GpAw3mC8wzoO1OwzYD8QMGFBkwIEFxswGA/wSUGhA8RbDfgfH/B
pQYs6S24zIARPQSXGzC+q2CHAcaOgisNqG4r2GlAnlxwtQGLmgqWZSPsfcEu
2ciuJ1iejetvrgn7ZyOwWrAiGy/+EOyRjb0vBXtn46tngn2zseOJYGTjxkPB
AdnwdAhWZmPDbcHB2ehxQ7AqGz9fExyRjfwrgtXZ0F0WrMmG9qJgbc3vPyfY
mI0LZwRbs9H2tOC8bCScEGzLxstjgguzkXpEcHE2FIcFl2Sj/KBgeza27hdc
WvN59wouy0b0d4LLsxG7R7AjG8ZdgiuzUbRTsDMbju2Cq7PhXihYZkTCt4Jd
jCgvECw3YuxWcX8jTm8R9zdisk3c34iKTeL+Rhi+Evc3widf3N+IF1+K+xux
d4O4vxEZeeL+RoR8Ie5vxIj14v5GeK0T9zfio7Xi/kZ0XSPub4TnanF/IwZ/
Lu5vxBSruL8RUavE/Y3Y8Jm4vxGlueL+RryziPsbMVS03Yg0s7h/zb1J3N8I
V9HlRqzIEfc34pxR3N+InqKdRnyeLe5vxBuDuH8Olot2ycGDLHH/HISIds3B
Lb24fw5CRXvk4FGmuH8O1KJ9c/Bfhrh/DlaLDsiBp2hlDk7pxP1zECZalYP3
REfk4FutuH8OJonW5ODvdHH/HBSINuYgSLQ1B41E5+XgSJq4fw5iRRfmoI/o
4hw8SxX3z8EO0fYcLBNdWnMvuiwHf6SI++fgsGhHDjJFV+ZgsmhnDjqKrs7B
02RxfxMOiXYxwSxabkKoaFcT+otWmNBYtIcJ95PE/U04LNrXhLWiYYJadIAJ
k0QrTeglOtiEJqJVJvyaKO5vwgXRahN2idaYYBWtNSFWtNGEWaKtJowQnWdC
d9E2E1qILjThb424vwkO0SUmnBdtN2G/6FITtoguMyFXdLkJSaIdJkSIrjRh
hminCaNFV5swQLTMjI9Fu5jRTrTcjEaiXc14nSDub8Yz0R5m3BXtbcZPon3N
OC0aZpSIDjCjSLTSjC2ig81YL1plhll0hBk60WozEkRrzFguWmtGuGijGXNE
W82YKjrPjPGibWaMFF1oxhDRxWb0E11iRi/RdjPcRZea0Ul0Wc0eosvNkIt2
mNFEdKUZDUQ7zXgXL+5vRrVomQV/iHax4IVouQVPRbtaUCFaYcE90R4W3BLt
bcF10b4W/CwaFlwWHWDBBdFKC86KDrbglGiVBXbRERYcFa224LBojQUHRWst
2CfaaMF3oq0W7BadZ8FO0TYLCkUXWvCN6GILtoousWCLaLsFm0WXWvCV6DIL
Noout2CDaIcFX4iutGCdaKcFa+rsb8HndfbPxao6++cit87+uTDX2T8XOXX2
z0V2nf1zYaizfy70dfbPRWad/XORUWf/XOjq7J8LbZ39c5FeZ/9cpNXZPxep
dfbPRUqd/XORXGf/XCTV2T8XiXX2z4Wmzv65SKizfy7i6+yfi7g6++cits7+
uYips38uouvsn4uoOvvnQl1n/1ysrLN/LlbU2T8Xy+vsT1xNLPusrl2I5cSu
xApiD2JvYl9iEAcQK4mDiVXEEcRqYg2xlthIbCXOI7YRFxIXE5cQ24lLicuI
y4kdxJXETuJqYtkqsj+xnNiVWEHsQexN7EsM4gBiJXEwsYo4glhNrCHWEhuJ
rcR5xDbiQuJi4hJiO3EpcRlxObGDuJLYSVxNLLPWdQNiF+JmxHLiNsSuxG7E
CmJ3Yg9iL2JvYh9iX+JhxCD2Jw4gnkisJA4iDiYOIVYRhxNHEEcSq4ljiTXE
KcRaYj2xkdhCbCVeS5xHnE9sIy4gLiQuIi4m3kdcQnyE2E58mriU+CJxGfFV
4nLi28QO4griSuIqYifxK+Jq4jfEss/J95/YhbgZsZy4DbErsRuxgtid2IPY
i9ib2IfYl3gYMYj9iQOIJxIriYOIg4lDiFXE4cQRxJHEauJYYg1xCrGWWE9s
JLYQW4nXEucR5xPbiAuIC4mLiIuJ9xGXEB8hthOfJi4lvkhcRnyVuJz4NrGD
uIK4kriK2En8iria+A2xbDX5/hO7EDcjlhO3IXYldiNWELsTexB7EXsT+xD7
Eg8jBrE/cQDxRGIlcRBxMHEIsYo4nDiCOJJYTRxLrCFOIdYS64mNxBZiK/Fa
4jzifGIbcQFxIXERcTHxPuIS4iPEduLTxKXEF4nLiK8SlxPfJnYQVxBXElcR
O4lfEVcTvyGWrSHff2IX4mbEcuI2xK7EbsQKYndiD2IvYm9iH2Jf4mHEIPYn
DiCeSKwkDiIOJg4hVhGHE0cQRxKriWOJNcQpxFpiPbGR2EJsJV5LnEecT2wj
LiAuJC4iLibeR1xCfITYTnyauJT4InEZ8VXicuLbxA7iCuJK4ipiJ/Er4mri
N8SyteT7T+xC3IxYTtyG2JXYjVhB7E7sQexF7E3sQ+xLPIwYxP7EAcQTiZXE
QcTBxCHEKuJw4gjiSGI1cSyxhjiFWEusJzYSW4itxGuJ84jziW3EBcSFxEXE
xcT7iEuIjxDbiU8TlxJfJC4jvkpcTnyb2EFcQVxJXEXsJH5FXE38hli2jnz/
iV2ImxHLidsQuxK7ESuI3Yk9iL2IvYl9iH2JhxGD2J84gHgisZI4iDiYOIRY
RRxOHEEcSawmjiXWEKcQa4n1xEZiC7GVeC1xHnE+sY24gLiQuIi4mHgfcQnx
EWI78WniUuKLxGXEV4nLiW8TO4griCuJq4idxK+Iq4nfEMvWk+8/sQtxM2I5
cRtiV2I3YgWxO7EHsRexN7EPsS/xMGIQ+xMHEE8kVhIHEQcThxCriMOJI4gj
idXEscQa4hRiLbGe2EhsIbYSryXOI84nthEXEBcSFxEXE+8jLiE+QmwnPk1c
SnyRuIz4KnE58W1iB3EFcSVxFbGT+BVxNfEbYtkX5PtP7ELcjFhO3IbYldiN
WEHsTuxB7EXsTexD7Es8jBjE/sQBxBOJlcRBxMHEIcQq4nDiCOJI7v8H29Pw
Ww==
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 
              0.49019607843137253`]], 
            LineBox[CompressedData["
1:eJxd03tcTPn/B/BxWbLCILstlrEbWuwKsbm/JIQQklAMSkWXSbfpfqbrVBPJ
raUlhNa1dc1lGcS26xYbch8rNnLJZclld3/9Ht/5nM+n9/7j8Xycfc/rvObV
dJkXPMWnoUKhuPmJQvH///7vv5rh//vXZP5XgVNLXlmfsbxntgWe6u0jNg7+
02wlWh84pXPKu2+2Fexb3Ole5frAbGv4xhZI5y/8ZXZHdOqifrJZxayC7YNL
fmeiH5r9Fc4u+Pflg1vs3gbvbYc8+Hk0czdUlg9VX5n2zGxbmL65kGF57KnZ
PZBgCM6v/Ia5Fzqi7EXCD0/M/g4xMcZlby2Z7RC9y2WcZ3K12X2Qeety9sH/
HpvdFyed5i62TGDuhz7j4kI9GjLbw9+3lXpF+iOz+6N/z6xm+62YB8DpYvbL
7ZuqzP4ev3f98y/fAcwO6HYpK+3KOfZ9DMTEaa0O3l3APAieky430zRmHoyt
n2u+CN7Mvq8hKMIXl0rGMg9FSdCKnR4v2Pc1DCsG93zVOo95OMbOPHPj2lhm
YFzLOQeXva/8nyWgjfaiVfddZitGIOr3Z2UJ3uz5CDzsebZ38pfsuSMuRR+q
7njdvL/kiNgjN0f0W83+HkYi++RPH4qms+cj8eOx1+FSe/bcCT6x5zcb7pr/
niQnXE3a0uHEFvb3NQodxv/b+FMNez4KUw2Xe7nJf3+j0buD1QeDBXs+GgVD
x4VuvMb+XscgxjOrb1Kh2dIY3D34PqBTDHvujPOpvzyeP4k9d8Za39ONnbqy
52PRrM+wDbs/mn8P0liMe3a9d+4V9vsYhxMWHzY/382ej8OOUb9HF2ay5+Mx
aqjjpv1+7Pl4zBzmsOTTMey5C0538Vet7caeuyBo5tKiWU3Z8wlIUbZomnj5
rvn5BFg9/y9byjVbMRHfaFf2WKdmzyeizdt5p8/0YM8nYduzO63/enPH/HwS
Cl/GaJ+UmK1wxeirf7c5vcJsuOJX28ub5yxg/78rPo+xWrN9oNlGVxQndnub
25LdT4bx+itP6we3zfeT0eeaw7/tfzFbmoxjpxqtzVlltnEyOiX5xoSEmK2Y
grytsxdum8Dup6DF2dtFdj3Z/RTEvW7burYZu5+CH05dO/H60S3z/VSMbI2F
Hc6ajam4vWvBl3N3mi1NxZzqqe5Hss02TkW/lNavO4ezeze03HO/f8pMdu+G
+4+2HLwHdu+GMd0nB/WyZfdu6Oy+ssBTye6nYX3R1rf+726a76ch+3IXN5f7
ZkvT4Dr1k1cfzpttnIYNx2+6hxwyW+GOhCsvnTdvZvfu6Pl079XsHHbvjsqk
dpO+ldi9O6486IqwIHY/HX/8szNsjhe7n470mdUvqlzY/XTM0an//nQou5+O
zkWHXx7/lt17YMeAc8sadmb3HlCvWbPjvJLdeyDnaMKEjo3YvQciRnntfPT3
DfP9DFjk3evT55HZmIG/Dt9e9OyW2dIMKAZub/flJbONM7D8/obWh06z+5nY
MyHP79hhdj8T4ccznL8pYvczMeDvto3ebGb3M1FpM9KySx67n4V/Shzfbclh
97PQddXXCcnp7H4WvMJ3hxyQ2P0slOrGnByoZfee+Knr+fjmGnbvieJVK8ts
/di9JzwW+H5Yomb3nnA6pvMcPIPde0H9eId/zyns3gutyqcWeY5n914Y9PmW
8nNO7N4LyzxPZkcNY/ez0aKwaq/agd3PRsWEfV2kvux+NqocvS5d6cXuZ2O5
TnF+Tnd2Pwedhz636/gVu5+Dbzc27tnsS3Y/B16VDd7bWLP7OWjvWfMksC27
V+NGVPq8P1uarVIj2L2gVPqUfZ4ag7YVrh3TxGy1Gj3fNlnQvyH7fDVS9+4/
7vzv9f85X40po/ZOkN6bbVTDPt9w4sYbs01qjJ5RVeH+ymzFXNg1+czr1XOz
VXMRfGzDV7ufmI25GL+62iL9kdnquYh5ffJdwkOzpbn4qP/kUc59lj8XLypH
lBtNLH8ufg3yOmlxh+XPReetQ0/532T58zAkN+z5nxUsfx4qp9T4hl5l+fNw
atbOae3LWf48SE8XPbp6ieXPw9HXvrMKL7L8eei3o2111nmWPw+DjOV3Us+y
/HkovncqKec3lj8fW38O+rboV5Y/H02er+1/9zTLn4+nl1p/7FTC8ufDI2H2
w6CTLH8+qnQb51wwsvz52GTvVTHkOMufj9gWg88c+oXlz8eH/Q82OR1l+d7o
fu9Kza3DLN8bsy9065N4iOV7I8h/0dN+xSzfGxdqk/e8OMDyvRE6Pqb1kf0s
3xv9PdzXL93H8r0xfsS710F7Wb437u/6d5fHHpbvA5ewVYEuP7N8HxSGepeP
LWL5Pli6T53hupvl+yBgY/FA9S6W74Nbvj8v1e5k+T4o8Mwc8sMOlu+D0bEL
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
W7u58xOgzlnAXZSAN487cxsToLlwcxfvn4B5XddwmxLw/fWZ3DUJ6Fn+JbdC
gmOD+ztlW0gY4bKNWymhcEMot7WEbc+Gcask2Hax5Late9795g7+fUnweLGd
20HCm8B4bki4lTWF21nC3yNsuV0l7I/5b7tsDwntvq3gVkvIcd7D7SfB5kQW
t0bC4IyF3FoJh1c7c0t1ebe7c+sl7JhswZ0toXHVo22ycyWkrzrHnS+h69Qi
7kIJKquV3EUSOpRFcxdLaBU/l9soYXS7sdylEmZl9eEukzDgTnvuCgnNFZ9w
myS4VT//SXaVhMu5N7lrJKQ1KOWulXCw035uhQ73H23kttCh1HMZt1IHrxCJ
21qHS1003Cod9H5qblsdvsBkbjsdJm5y5HbQoUuWPTd0OFTbjdtZh0X3vuB2
1eGAYwtuDx2crBtwq3V44PV3Id9fh2WtHnNrdPD55i63VocNW8u5JR0KU3/n
1uvw70kjd7YOY2cc5M7VYdzoXdz5OlSmbuYu1MHK+kfuIh1ev1nBXaxDsSqL
26jDrpwU7lIdho6L5y6r+3ynSO4KHQZKGm6TDlXv/LmrdNi7ez53jQ7B6724
a3Vo+ut0bkUiomymcFskony/C7cyEYOixnBbJ+JOgCO3KhGNlw7ltk3Ef7cd
uO0S0dfDntshEcqPvbmRCOvSntzOiag43J3bNRHVl7/m9kjE+5YqbnUiDgV2
FPZPxKOn1sL+iXBf0k7YPxFXJ7QR9k/E+J6thP0TsbGrpbB/IsoGNxP2T8SV
gCbC/nX5BxsJ+ydiaYcGwv6J0Kz+dyvfPxEJPT5yGxPx8I933KV1/XPecpcl
YsmCv7krEuE88RW3KRGTxr7grkpEjftz7ppESBFPuWsTMWtrNbciCaaqR9wW
SYgYVMWtTEL62ofc1knIbP6AW5WEl+n3uW2TMPCzP7nt6j5/t4nbIQmB7ne5
kQS/Zne4nZMwp/QWt2sS7ufc5PZIQobfDW51Ep45X+f2S8KOfhXcmiR4217j
1ibhcLer3FIS3L+7wq1Pwp/Dyrmzk2Dp8Qd3bhJSoi5z5ydBsekSd2ES+pWX
cRcl4Zql4OIkFLpcFPZPwvzlF4T9k/Cb6bywfxLy7AVXJGHDknPC/klY/+ys
sH/d9+cmuKbu+zj+u7B/EqbaCVYk4+stvwn7J+OJSrAyGVJ+qbB/MvbaCFYl
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
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxd13lYzen/P/DsZUn27DEhhLKG8ESU/SCEUCRJtO/bqU512s9elsgeQvbQ
kD0zluxZJzTJnnVC+J7f9eu+79f1mX/meszd3ev9fD/fr2vottR71vK6BgYG
DxsYGPy/f///f6rG7LN/GtZ63/sxtf8BcVUmFuHRzIbw+pRR82oGswlqFGeu
z+nK3BrG+7IN8t6+q7UpFPtnjXx0grkTKkrSB95KYDaDf1TzSeEzmbvDJeJN
z8IOzOboOM17cNizt7XuiacLKz5oc5ktMOeBq9lrL+Y++Hnz964ZA5gtcdzd
zkr1/k2t++PCs4YdQvYyW0FqOfbfEx7M1ri0pdq5fjfmgfCNCG318s7rWg/C
oAF3jMoSmAfj2ZjkmCGDmIfg3rOLvz7ff1Xrodjvk/f2TCjzMKw5dGNusgmz
DSa4uHy+v+5lrYfjSdeNX+q2ZB6BqKEnOzRaXlnrkTDLD+qzesiLWtviVdaC
UW+nMo/C0WNzSke4MY9GG+NFd2aFM49B+roxx61VzECs8eRdt3JrLQUO1+Qt
GXyanY+Fdra6y4w77Hws7Hs+29zlNTsfh5O39zbPNqh9Puk49P8j48W5Nux5
x0Odav0hpQ87H49NA473eTuandvB17dOwZNZ7NwOWD/q9lx3dj4Br8/aFE8O
ZecT8DNvduW+FHY+Eee6u20MymbnE3E9cYtMs4+d22OGZU7m91Ps3B7mm93j
111j5w64OPNCF/fH7NwB8pd/vZnxmp1Pwq7g6oop1ex8Ely9m4yR1Gf9TMaN
T8n95zavtXQyninb71nQnp1PgefPTuWLu7PzKXjwqJ2vRx92PhXDdyy55TCQ
nU9FK5/YRW1GsPNpcOluaHptLDufBl1uh6b+k9j5dPTtmjC+/kx2Ph2JlQXF
MU7sfAY+5J7b8XoJO58Bv97zX45dwc4lkHS7tkG2ptaQ4MW/ptcOBbKfl+CR
wY3k6xG1LpLAI6//03tx7P5MnB/SuOxKMrs/E2kTHur2Kdn9mehpXNAmMovd
n4kBLo6rbTax+7NgsN1gf9l2dn8W3E7nvgnMY/dnQXPzpk31QXZ/Fo68z96x
4ji7PxtGu4smnT/N7s9Ga1XiUOOL7P5svMi8FTPhCruvP59jOtbzJrvvCI/R
C5IjStl9RzQ/ZRkQ8YTdd8T0ofltPMvZfUckvc1ImPCK3Z+Dsue/nxhXsftz
0Fx9YtjFL+z+HBis/bVr1Q92fw6uT0ud8duA7f9c7JqwdVxMw1pjLlaf/p39
oUmtpXMRblAaIWlR66K5UG68/z27Lbs/D24FPQc/6Mjuz8PBzrMnNOjG7s+D
aoXrlK492f15uFinaJlFX3bfCTU9JuaZWbH7Tthy2Wq84RB23wmS6K72/wxn
952QNrXFve2j2f35KAlwbek8nt2fD82I86Z1Hdj9+QjKHN84ayq7Px9Wb0Y2
6jKT3V8A911OVpo57P4C/P6g2PF9Pru/AGNszFNmLmb3F6D3Xd3vrKXs/kK4
bNnX44Y7u78Qg2K9u373ZPcX4s63ds1be7P7C6E82bldV3923xn/DO2zoGMw
u++MgRbtfhiGs/vOWNzndafKKHbfGYsm331WEMvuL4JkY3+f8AR2fxGkZV6V
A5LZ/UUY0Ly39900dn8RvrRoZ+GtZPcXY/XyesO+a9j9xXh29frp4Cx2fzFO
t/CpeLGe3V+MGYUV1yZvYveX4MDLsdk5W9j9JZjaKSvw5XZ2fwmOd2oQ0WMX
u78Eq8p33HbMY/ddcFm9bmvw/lqbuUAS8K1p+kH2+1zQoNHdwVlHau3igg9d
h4/RFbDf74JXxl0l8pO1znFB97sBKWtOsXkueLOmTZtJZ2pd5oJmnS+ZmJ5n
813xsMRmy8OLbL4r9mT9fqO+zOa7IqGbpvXYK2y+Ky7bS2yfX2PzXZF6zCsx
7Aab74pZ2b9MG91m813xyv1Lq6S7bL4rKjSm6w34/5+XYsOGBjdWP2Tzl+LO
g36lJY/Z/KVwyrx9s3cZm78Ulu2bPQ95xuYvxbm/C/qcKmfzl6JDYPzf3yrY
/KWQRbyu6PuSzV+KwHGWGx1fs/nL8EkuaRnwls1fhmtverolv2fzl2GR97jD
mR/Y/GV4YPKt+4ZPbP4y/AxbWpL5hc1fhoqTcx8l/8fmL0PjFqvdA7+x+cvQ
++z3tHk/2Hw3/N2kpZ/1TzbfDWvax1jX+83mu6HC+MarKwa1f75xccNbswmF
6XVrLXVDcOH9cw71a53jhqOF47v+aFDrIjd47X//enujWpe5wb9XHftJRuzP
S8tRv/Osaf82rrXZcsQs9OsY1rTWWI4zNTuuNjJm85fD/MPL6PTmbP5yBGhe
TjNuweYvx4gZhrMTW7L5y9HZznn3t1Zs/nJ0Ndq/ZnkbNt8dS7wiT/zVls13
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
lYk7tf4/QYQBOg==
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxd1X9Yk/X+x/H5oyTz5DoHTzserFVU08xm4XGm5sv8AZrlVLSZiBNQpiAO
GDBgwEy0aWbLsGZhzaJapbnEjIxj60i6UmulnaZSzfw1lXIlXyNF/fq9vt73
/dnr/NP16NPbl8/rvnad27MWT53XVaVSHb5Opfq/f/7//2Kj3k89UpH4/tlR
1/4FmuevHdA5TnICNFNHWZMP/nrNatzct0fGmfmSE7Hrg98yl/36yzVrMCIn
ekdbgeQkdGv96vh/TrRdsxZnzzn735Mu+Q4cj+iSZ249c83JaK1sfaVHN8l3
49Das6lew+lr1iH4crcz/ceduuYBKNh5V+5f/zh5zQPx6P0LKrd1jV7zINSe
uDi5+02S9cgr+OjyRY3kwbipcdin6++U/AB2VReePHWf5Acxqe38mchQySn4
ddB95qWjJQ/B9EP3nv9mouR/oUtjQfW+aZKHInbx0ZOlGZINWH/3AyO+zpE8
DK99/H7D9/mSH8K7utHZz9skD8c9+kv7L1VKHoGVCV3ybl0qeSRuWtSypX2F
5Idx8c9xE59ySx6Fx/YlHQ2+KBmofsk26sv6a3YCKQsu3O96XXofDe3ywPPd
fdL7aLTMuW3S6E3S+yPo/dK6x7FFen8EE5YFV3f7SHofgxrTjOuf/UR6H4Of
JvT84MdPpfexuP3n0ysv7JTex2LGW+Wrf94tvY+D4XTPRs8e6X0c/nFq+Jlb
v5bex+OWza47y76V3sdj4d6uo9/4TnpPhT61v/bNsPSeippdR16oPiy9p8Gy
bE3O4B+l9zQseDhj8qcR6X0CrosVXTfgqPQ+AY5/1N1bfFx6n4jaQ56Z9Sel
94nYNOyOvm+fkt4fxVMfzz5dd0Z6fxShaZFhub9I75Nw45m1C287K71PQuCR
naEdMen9Mex/SdM4/nfp/TH8dvnbiU3npPfHcfGz0zsT/0d6fxzqGx8bOfu8
9D4ZT4+97Ys1f0jvk7F5c89F2zqkdyNavl59xxd/XjOM2JA18/s9F6T/3ojj
za8v+vTiNQeMOFTxbHNDp3Q/BRPXuNyOS9L9FDx8Zst7qZel+ynot2PUruuv
SPdT0Nzr8OrtklVTsWLDX97LVl37/WIqLv7N+1HXLtfsnIqT2Z1pHsmBqcBX
z55J7ir93qfh1mdvTX5HMqYh+MiD1ru6SffT0Ks1e/zLkgPTMPqzD/6e0F26
T8fEoYcnLpaMdPgOvTc+JNmZjsy7J1ruvU66T0ffK0sSlkhWTUcUvSq/kYzp
8E7df1O/66X76fDsSrkpR3JgOtb/DZ++JVk1A2Nsv2cfl4wZ6Hlp8UPaHtL9
DOy5OKzqCcmBGXBuzcp+RrLqCXjcO7TNkvEErv/+rydOyfdPYEu3R44kJkj3
T6Dwu5KRIyWrTNjWP/XObMkwYey/jzYtl+w04Uh08B0++d6Eg9bfnbvl+5l4
ryrSfky+n4kv93/9iuoG6X4mPp3zxfN9JQdmouzeu397QLLqSewN+b6dIBlP
4mPH2sfmyPdP4ve1wbJi+f5JnNDsnbdcvp8F+/YzAzzy/Sx0+zn1oE++n4Xn
Vp5c0iTfz0Jm3y9Sdsv3GZg86nfVd/J9Bk79UN1+RL7PwCDt5qRf5fsM7PC3
L/tTvp+NAYOuDO/eU7qfjd1Hdk+4SbJzNja11H98i+TAbPzthwFrtZJVmWi4
9PRxnXyfibazwxv18n0myv864XqDfJ+JcFHKiYfl+znQ5f3lyXHy/Rws+9Jm
eVS+n4MHnnvjliny/RxcMRQumiHfm9Fj+8zFsyRrzXj5xqV3mOU/z4wP8//z
TI5ksxmYvGGzRf7zzTjUMXdNvmSvGV8d7mawyntmlG5MbSiWHDHj9qGNh0rl
/bkYc6Hux3J5fy5Wu3o0OuT9uXh8W/uTNfL+XIxaqzm4RN6fi32ju+tr5f25
eLVWm7Vc3p+LKxP9hS55fy4+7PjWvFLez4J77fLBq+T9LJwIv3P8WXk/C4l9
Llc/J+9nIda9/xW3vJ8FVdW23DXyfhZSuvbd/oK8n4UPU/1/1Mn7WXhybeD2
F+X9bNyjqR72kryfjftuvQEeeT8biaOs/1on72ejrOiDfi/L+9kY3OeT87K9
2djwY/5/XpH3s3Fml2dJvbyfjT4/dRuyXt7PwdF/5v4gW5uDMYnWylfl/Rzc
sPWz3q/J+zloPNr+smxnDn6+a10/r7yfg7vvHeKRHchBc0bqjRvk/Rx8njm+
TLZqHhwrN7TK1s5DzPzZ8Nfl/Xl4/3yPtbLN8/CN6ZuobOc8HDpTPPQNeX8e
trdgiezAPGR2Lt0lOzIPSZdrezTI+/Mx+ZvlY2Vr5yM/M1glG/NxcHNto2zz
fAQHnTsu2zkf01tT+7wp78/H7U83jpYdmI83LmXnyY7MR+bI2jWyVbkY8tqI
j2Rrc9G1S+NB2cjFhraeF2Sbc7GmeZ7mLXk/F7N3/Jwi25uL8NTXJssO5KKw
10cW2ZFc1O8Z45StsmDJwdkvytZacF2XpPdkw4LH3nphh2yzBV+2hkPKvgVn
Ky8fUfYteOWBv/+u7FvwxDp9l7flfQtsY2b3lq1aAM3X7ybJ1i7AtPa7+8vG
Aox54ccU2eYFyPjsh1GynQvww3f3T5TtXYClJT9Nkx1YAOf68xnK/gLs21Q9
T9lfiFCRc5GyvxCFg7qXKPsL8ar3ZoeyvxBpvf1PKfsLcfyxEy5lfyHKWrav
VvYXYkDpg3XK/kIs7zFjnbKfB7Tc86qyn4fGhk2vK/t56Jza9payn4d990ff
VfbzcHbGm+8r+3mofuOeLcp+Ho43Fn2o7Odh3S8rmpT9fLzktH6i7Ofjg4X9
dyj7+Xi94qOAsp+Pc1P77VT286/+/8Psz5X9fNzQt2K3sp+Pla6SL5T9fKzY
OWWPsr8IA7ap9yn7izD7vq1fKfuL8MnBkSFlfxHGTtn8jbK/CKqbe+5X9hdh
RfXkA8r+IlSfcn6n7C/CwVWv/VfZL8BQ98bvlf0CJNzwTljZL8DGi2sPKvsF
cGbYDin7BWhVjzus7Bfg0tmEVmW/AEd3BhRHCpA8cdEPyv5ibErp/aOyvxiV
A95WjMUYFxzyk7K/GNoNnyh2LkafUcMiyv5ibLlzs+LAYjwT7HdE2V+Mf7+2
TLHKijmJJxWrrTi38pGflb+PFXvnehTrrSj6LaoYVlxYlXJUttGKjKcqFZut
CPbdodhqRdvLnYqdVowYM/SYbLcVQ40Fir1WNFzYoNhvxZ6ybxUHrNj05xXF
ISse2jzguNJrRVXLVMWxqz1ZdsWqQrT7X1GsLkTm/mbF2kIMaTusWF+IVf/8
UzEKUVWTeELpL8T4lEGKzYXISx+v2FqIvR0Zip2FaDEUKXYXYuSA5Yq9hfji
iEexvxBbi95VHChEv7PbFYcK0d3ypeLI1Z5fwopjhbhr9QnFqiLkms4pVhdh
+swrirVFMK7veVLpL8L5+/soRhEGJd2m2FiElHydYnMR3ug/WLG1CDWzhyl2
FmGkerRidxH2TUhT7L16f/Nkxf4i/LtguuJAEd7LnaU4VIQXu85VHCnC+HHz
FceKoBuSp1hVjGnfL1asLsZqvU2xthgzxtmF/mJE/uEQ+otx25Yaob8YX9y8
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
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxdzXHQHHddx/GlBrxhAl5p7NxALGeJcGJkDgjlqIH+UgJc20Cv5cEeNMgC
AQ94gENCOUMsqwR6hVAODPYZjLjVOD5gytxAdI5p7OwwD8wpgZ41lBMCbiXV
E1M5bZw+0DDjOD47eq/9Z+e17/3M9xff9O4b33JRFEXffXwU/c/7f5/5VV94
xYMHtnzhR1dtfAhved3SHeMf//uGS+Hzu/+m8axG4XKY3/Lkrz3prQ9veEso
/+pdF63dem7DlfDCp/9T6cMH/m3DW8OHDvZP3XntDzdcDXds/fLFP/jb2YYv
Dwcef8cly9f984a3hS9Wn7brL64o/Mxw/Vd+odV8RuFaOHrr0n2XX1z42WH5
k7cvXxYV3h529e6+9vL5Qxt+Trj2i7f0Kg8WrofRO9+ZPHx/4eeG2SUXPWnw
1cLPCzd+7ZNH56PCzw9/vLb96sfdXXhHePC1f979y7sKvyB87xNP+Obj7ix8
RXjs0q886czhwi8Mj/zg2OTKDxVuhC9tWrr95w8UflFY7n9p3773FL4yvPFV
t72g+rbCvxa+N/j6m65+Y+Gd4Q+/356uvbbwi8Plew78+K4bC78k7Llo+6dP
X1f4qvDle9a+e9PLCofw0JkHXvOsqzachPBnl1x25iUvKvquMH7uawafeX7R
d4VXf/xbD1zxnKJfHZ5+/0Ot8i8X/erw5if+ybefsa3oLw2Xffdt73/X04v+
0jD407V3PPzUou8Of/Xeu5/22UuLvjuE0ZWX3vqUor8slJ5658997MlFf1l4
c/fq73/liUV/efjX+z/Ve8bPFv3l4bJ/eNd/fv5niv6K8L5HrvzATVHRXxFu
ue38zc/66dmN3gwPb73lvyo/2XDSDD99f37vsx8t+jXhmY9u233z+aJfE655
9O5tn/uPol8bnvD6y59yyY+Kfm249sSu++48V/Trwq7PPvCcK35Y9OtC59Bf
P+Xhfyn6nvCxe3/69nseKvqeML/9kR3pD4r+ynDv624/8JkHi/7KcOsVH7zh
c/9Y9FeFX5rd+52vf6/orwr3PXbPrsedKfr14YGPfv+e5neKfn143/qjt901
LXorvOh09vATv73h0ArXP/sNLz70reL/Vjj4mfPf3Hx6w1krfPWPnn/RsfuL
/Q3hV7qPvfiavyv2N4TnVX/yo8fuK/Y3hLXW0uF7vlnsbwjnXnrjx2/7RrG/
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
             "]]}, {
            Hue[0.5585438199983166, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxd13t4y/f7P/A4rnOYjKKOi3PNqaip83NW1GmiiqI01TMt6Tk9p22Spmk6
ddhW5hDTTQ1bWTdlDtnYVueyos5BURRhDp3VZ9/+rl9fr/crt39cD3fu3Hnm
eb0vbY+lK72DG8tksqvNZLL/9/f//2Of8P2UW0nO3z+d0PAPKLiwIMZ47EmD
nTA87O6KuD8eN1iO6Z8rWhfurmmwM6z3wiIjVj5qsAtymr1p1+vVgwZ3xZYi
1/bXm1Q3WAEv3y8W77l9u8E94XTg5pitO5l7Y0Vp5ZsjGua++HPWzpCNU5ld
cfTxwYEV3Zg/hM+kur3vv7zV4IHwfN9vXIuzzIPxo9PCBSk7md2gVVQYBpuY
h8J9SFH7J8uYh+HtrSlun81kHo6Lv09vdX8oszv+2lI3+kJH5hF4o9nlPOo/
W4M/wuuT+tGv7jOPxKL2Awb8fY7ZA30Xdbnvcoh5FLJPen/tvYN5NN48bpmR
9wXzGPxyz7a4VMc8Fg8OX/ryaAzzOKS/0+u+JZB5PCb9vHbkJz7ME3Bw553s
zZOYgZspvU5vH9lgLXBv+I+XfT5k84+x5uKkKRu7sfnHOJSZFRj3PptPxNov
nnSvbMbmE/EkOuXfxJc3G+afoHdwpfNoW4O1n+Cpf/LaOyfZ3BML1wxSLStl
c0+8d/LGkKPfsPkkyF/mRt9Zy+aT0Kbu9ie/ZrL5ZAT2VC+eE83mk9Hjft8W
q5ey+RS0LuzeJXoOm0/BeHfV9SeebO4FtepbuWwkm3vBZ8OrG5v7s/lUFF54
U3GsK5tPxXiF09Xlcjafhu0trYM/a8rm0zDEZdzivv/caJhPxzeuB8cNedJg
7XSEbvm5ZtsdNp+BkQOW/pl+mc1noCTTHHr4LJvPxGT/E1sW/cHmM6GtfZYw
5xCbf4qZzlf6f13C5p8iKGl+d89dbD4L+8fFPBxRyOazcONmxYzYjWyuxO3z
iwbUrWswlJiqrMo/kcder0TPW8N3XjM02KpEyMwWx4do2f5s4J85vr8msv3Z
2Pi/pKrPYtj+bOStrnD+IpLtz8bqBNedFaFs3xtD85SZXkvZvjfOZz0xP/Vj
+95oN+Cjij/ns31v5Bw+EX/Wm+3PwbLzu7c3/ZTtz8GogvG7g6ey/Tl4O8vL
Zvdk+3OQ/Vf3nYVg+z44O6HMmD6W7fugtmJYU60H2/dBW4/4fYXubN8HFu8P
pte4sf25mNHFEDd3ENufi35bB7650Z/tz8WOI313ZPdl+3Mx+XHOkk97sf15
6La1qtEwBdufh9oLB/VDu7H9eagY1f7+9M5sfx6mba0dqO3I9udj/+KWYaed
2f58POrSc++wtmx/PvxfXx/0Qxu2Px/tYmc2n9ia7ftC0WHNioct2L4vAueY
tm53Yvu+qNuSfkvTnO37YtvCyoTFTdn+ApQEnC7xacz2FyCqW6+ni2VsfwE8
z97N0vzvesP+Atytdb24ra7BsoX4YM/xT2++aTAW4qvDw/0+/KfB2oVIn9M/
Wvea7S9E0yl57z5+yfYX4eNdQyyBL9j+Iqi2byy9/5ztL8L4oMeXNc/Y/iJM
affVqg52tu+Hi+fnhFufsH0/vI449ybuMdv3wy/n91z9qIbt+2HrhNnbGz9i
+4tRbv+mrvIB21+MZ37d0vZXs/3F+PJK0rlt99n+YrgU7tvy5T22vwTbXavW
rbvL9pfA/6sWqg1VbH8J/tzT9seiO2x/CZrpvp145Dbb98epDJc/rt9i+/74
ZuW0102Ytf64rfp8zVAb2/dHl21754XcZPsqFOd/0/TrGw1WqDAF3/pXXWfv
p8Iv77QeNIhZpULq8fHuKdfY+6twoMmG8eeuNtiiQs/1QR0HMlvrXz/9QK75
SoNtKhTakpc9v8zuB+DYw/G6xcyKAIwdNH7n6Up2PwDrvpz240RmVQDSyw9G
HbzE7geg6fTQQ6OZLQHwsBlXHLrI7gcA1UeWeDLbAhB9+m3Y2Qvs/lKccU4O
X8KsWIqOl3aOe1bB7i9Fn2/dj2Uzq5Zi0JWb13owa5fi5cS1YUf+YveXoumo
yVNVzNal6NuyNqAps20pdhz79oud59n9QNR4TT41l1kRiP+s+6obMyMQw3x/
Pb/3HLsfiDWezaODmbWBiHX57/vOzJZAzFj4PPp8ObsfiMGqx9vNzLZAREUc
8pjKLAvC/5weyJ2YFUGo27yj6/Gz7H4QNnjd9TIzq4JQccU1azazNggd+3y9
34XZUj8P6nz11hl2v37+yH5xF7MtCNOft9+UyCwLxrKvm3X3YlYE497HR6e5
MCMYJfX/fzw8ze4H46r3uBWHmLXBaPciaeoaZksw6oK168OYrcEwOu+dDWZb
MLya3g7uxCwLwfS2M078fYrdD8GiuWtizjIjBIu37J+3i1kVggPd+oabmLUh
2NGxwBLObAnBwuOuf09ltobg8cIp8wcw20LwyfOfjrZmloXihxuGIc9Osvuh
2HG905oLzAjFqoROdw4wq0LxfYym81ZmbSh+WrrSzchsCcXZ8Und1MzWUGxW
zLviy2wLhcrpP/+JzLIw6A/s3j6Q3w9D6x8ufNeR3w9Do3a9Apvw+2GIvKo5
8fQEux+GEQ+eXLnGbAmDx7jyz04wW8MweOx6WymzLQzFjV6d2M4sC8ejX61e
XzIrwpE4SjY3mxnhuPbhvYcJzKpwDHtwulk4vx+OTU9Hb13I74ejVnepdAa/
H45ly2O8JvD74Yj8qvGMYfz+MlS/u/FIH35/GV5pNFs68fvL8J/3s/ut+f1l
+HNV+ueN+f1l6LztQOHr4+z+MvwRO7/tY2brMpgC+l29zWxbhr2eHesqmWXL
0cY0OPoss2I5mnp9NvoPZixHYIDa+xCzajnKv++7r4RZuxwrh3QO2cXvL8d6
nPAr5PeXw+/ayYKN/P5yGG+Udfyc349AB2X6pTx+PwLflVovGPj9CDSKj5Jr
+f0ItOtk1Cfy+xHYX9ZqeAy/H4GiHS4dI/n9CKyefmFIKL8fgTFdUpID+P1I
hFyeW7uI34/EvA4HCufx+5G4vOe99Nn8fiQs/n/qZ/D7kTg6JHjfFH4/Er5d
4tt+wu9H4sG6dZ+P5/cj8WPX0Amj+f0VyKnc8t5H/P4KjB1S12gYv78CoaGe
LoP5/frXT52u/JDfX4HJvz8u6svvr8CB9W179OL3V+B32Xf7PuD3V8Bt8e7l
Xfn9lSh41H1sJ35/JZrGv+vagd9fiTYttIPb8fsrsWrPpk/l/P5KfDdIn92a
318JjxJVZQt+fyXCfgiAE7+/EqvTrYeb8ftqdJtw0LsJs1yNROOGf2X886jx
77jtpf8ra7CbGj/Mcc+pY4YaLzesj3jDrFTj/ir3pbXMKjVWuoaFv2JWq/Hu
NxszXjBr1egUOOG758z5apwp/u22ndmiRvrXmz58ylysRvKD6RmPma1qjN01
894j5nI17P79Fjxktqkxa1vA5Wpmuxo/ds4Juc8si0LwzMGye8zyKDjr7n5T
xayIQlTR5Pl3eP4o3OzzuN1tnj8K7icTrtp4/iik7jbuvsnzR8Ha8vecGzx/
FIqHX1h5neePwqzQIP9rPH/9vaMK36s8fxS69vtlwRWePwqHutwPvMzzR6H/
4YXxlTx/FMKKzuRf4vmjMOra270Xef4ozP3+m2sXeP5oBO/Vt+aWR8Oy3X9S
Bc8fjQ4hr7P+4vmjUXCq7fHzPH80JvyQ6MytjEb2Hy+Dz/H80ZBt8T5UzvNH
w5CzuDO3NhrNzXdTzvL80fjd+5eqMzx/NHr33DObuzgat8o2HD3N80fj7JqZ
o7nLo/F2jOWnUzx/NLyrlo3gtkcjr0n2/pM8fwz2LD77Mbc8Bn+9/uDMCZ4/
BtNaz1vC7RaDsc2Uz4/z/DHIDHucw62MQfWl9/pwq2JwuPEXR8t4/hj8sik4
mFsbA7eFAS2482Ogux6590+ePwZvS9WLuYtjcDJA2ZLbGgP//i9++YPnj8G/
IzxXcttikJvcvw+3PQY/leRd/53nj0U/v0UF3PJY9Pg2dS63IhbuSTZnbrdY
fBSpvniM54+F+pfOG7iVsfU/D5/251bFYnhafD9udSx2pzV7dpTnj0XV/fCD
3PmxiHy4NofbEoshE2J9uYtjcaZnnSu3NRajZnf79zeePxaqRifOcNti0fbW
i23c9lj8I1+dxC2Lw2HFGm9ueRymtawZwK2Iw4fD1zbndotDO/+U27/y/HFI
+3njEW5lHJYffrCJWxWHkfMWpHKr47Cm5NZibm0c8oISJ3Dnx+HYxI49uS1x
2Jy0txl3cRy+zZr40Mrzx+FN9yNnucvjUO6j+JnbVv95o5ds4rbHoW3zaD23
LB4f2+as4JbHo917b+dzK+JxuzJkIrdbPB4dNQ3iRjwWmpZ24lbGI7xbdTNu
VTzyvm7/9xGePx4lUXdt3Np4rGnnfZY7Px51E+Yd5rbEw/tazW7u4ni8/Ee+
mdsajzMVhz7jLo/H9XNP0rlt8bicuiWK2x6PS7knA7llCWhUsWIetzwB87z1
U7kVCYjt03Ict1sCVuTVuXEjAbsfzu3DrUzApYPtOnOrEnB067A2Uv4ExPj8
0FTKn4CuuwxvDvP8CRjy1U92bksCogaPus9dnID25vducFsTUPV82AXu8gSE
7t92ituWgC4zlxzjtidg51DVQW6ZBm6y7SXccg0SQ9x2cys0WND3zTfcbhr8
49x4Czc0GNZ5cgG3UoOaIcdWc6s0yAxIyuVWazDwZIieW6tBxPrsdCm/Bnqn
q4lSfg2eBvrHSvk1uNSs3UopvwZb5r0Il/JrEHiqUbCUXwPdw1EqKb8G7h9/
tUjKn4h3I3vPl/InIr9DhbeUPxEPnxV9KuVPRODhrdOk/IloP/nQZCl/IkyL
30yU8idi6Z35E6T8iXh7pGKMlD8Rve+u9JDyJ+KXma4jpPyJiH5bN1TKnwiN
7PFgKX8ihi5/PUDKn4jnC7r0l/LXv599fl8pfyJeLNzVS8qfhMEnO/aQ8ifh
XtL67lL+JHh959ZVyp+E11uudZLyJ+Gvoo0dpfxJ+L2jur2UPwm5k+a1k/In
QZf/6ftS/iRk+vm2kfInoaBtTGspfxKeKja3lPInYf2bynel/EkI79jLScqf
hD/+Tm4u5U+CQX6nqZQ/Ccefz28i5U/GuV5XGkn5k2FzC5dJ+ZPRfmfT/w7x
/MmY0W/XW24ko26cfx23Mhmdc7v9y61Kxuvd9/7hVifDdeqBWm5tMkIbF7zm
zk+GJjP9FbclGW3i1C+5i5Oxz7jsBbc1GftXRP7NXZ6M5lc1z7ltyeimMz/j
tiejtmeRnVuWgpfRJ59yy1Pw69BXT7gVKZj8gatktxR8+Vb1WMqfgqv5lhop
fwombLn3SMqfglv2YZLVKfhtlv6hlD8FJdnXH0j5UzA9ZIxkSwrOHNhcLeVP
Qb9570i2puBSi7j7Uv4UVO+6f0/Kn4Ib7/tLtqdgp/zqXSl/KrZlLJIsT0XU
eFuVlD8VLXqGS3arf73TqztS/lQUnjVIVqZi69wuklWpmJn0420pfyqiu8+S
rE3F/V5Pbkn5U5EdmS/Zkor+N0dILk7FF4tv2KT8qcg4kyO5PBWZLh6SbfWf
v9eDm1L+VCy5uFGyLA2ru8yRLE9D0rWWkhVpKG7y5w0pfxoyU3SSkYbnwzwl
K9PwfbvmklVpaNXqxHUpfxpkLfIla9PQtW6+5Pw0GM/1kGxJQ13i42tS/jQc
vntAsjUNG5qZJJenwXZioWRbGpb0GyTZXu/WjSTL0rF55cWrUv50KD/eLVmR
Dud4vWS3dLxs5C8Z6Qi8PEqyMh0jnrWXrErHlvF/X5Hy18/3nZOsTccd5R7J
+emoabRGsiUd960xkovTcUg3T7I1Hd94jpZcno6etd0l29Lx3xdNJdvTMavT
o8tSfi3CE85LdtLi7o4DkuVabNqxTbKLFttX5klWaDH3ZYJkVy2GuQdKdtOi
cd9Zkj20OHxsjGRosbZFf8leWtiedZCs1GJEXDPJvlrMXvWiUvp+tVCMqZIc
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
/j/t5UbA
             "]]}, {
            Hue[0.7946117974981064, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxd03t8y+f/PvA4TVHEnMqKGKOMLaboHOZyKEURFHWOKk0PSM/pOW3TNGmC
oqYb9glqq8MIK8qYMIeyos61tcS56AiKjtq+/T1+ud/vu6/9s8dz9165cvV6
pGvA8qmL60skkr8aSST/79///x/H8N1j78S32f18uPM/4EjnvuVfz33mtAvy
3OMC2z2tdFqKE2td90f6PnW6DdRY671H+dhpNzTvYHiXVvjQaXd09ZE03buI
WYbNraZ7f9+O+VMkhEZfGFTywOnuqF8dNWTvKuYeOH6kqF/rF6VOe2D69Del
tlnMvbF7Us6mHeduON0H22Oke6eNYv4CpzvZPvH+/brTcqy8sLWq+Xjmfric
p4ofdeOa01/hsvlmq9QQ5v5omzT1C1UDZk90GfKbh2XzVacHoN1Y/ybXRzMP
RPWQ12OPVF5xehD+GNVU3/Q7Zi8U7OjinTSO+WuE9bm24dqHy04Pxlddezwt
3c88BNZXX61ThDMPxV5H4oEmcuZh+HDb6+7VF5ec/gY9kj69m3GAeThSmjeP
f5XEDPyvzfgv3451WgtE/nq/9dI27H0Ehny9aV3/eyXO9xG4IklTfF7gtGQk
fgx8f39gJnsfiU/+cLs0eC57H4UO3z717dSfvY9C9q3DvU43Y++j8a7LwaBh
xRed76Nx9NCrvt10Tku8cWLkGGPb4ezdG093/n7oWc0F5/sYxNXT9jMddVo7
Bo//bbH0rJa9j8Wh+54XjWPY+1jo76am7G7B3n0wo2r9hE9unne++2D8LHvW
/m1OS8bB90R8w8Ao9j4Op9573mjhzd7HI6z7/EX/a8/ex+N/Sb4DJZXFzvcJ
GJylfut+wmntBLQyXZlx9zv27guz5m7NsEj27ovJgcEJnSex94l4W7hteGRv
9j4R7Tr7Z/RxYe+T0N9uGz/k0R/O90lYmBfpvfqM05LJiHvsuCHbzt4n437w
68blJvauwMQydfSh5U5DgbN/tpu6w4/9/7Xvd5Nm5Q122qbAqpDjZzd2ZfdT
sLTZprnGJux+ClzS30L58pzzfgpafH2tjVuZ07YpWL5mx+2fTjstmQpti8bN
G+9zGlPR7OiaoL4/sPupyP/Mv01rE7ufin88p6+0atj9NMQOmLTl3yXsvta4
FfJmOrufhp9f2HxXe7P7aXiSOOVV0QB274c9a4dMXN+D3fvhm4uzjW/as3s/
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
Q+MOnFU6jHz8TrRahwG/ctbocGklZ60OHwVyNuhwajDnbB0krTnn6rC98h/R
Fh0KznDO16F1HmerDodTORfq8IOSs02HX8C5SIdnXTmX6DC6IedSHXY+qub2
16FjMecKHTL3cnbo8Hg952odBqVwlmRAFcTZJQPRCs7SDEwfzNktA/U+4yzL
QLiUs0cG/lfzlts/A+mPOXtloP0Nzqj9/FOcfTIwqICzIgMHtnL2z8D5tZyV
GYjVcVZlYHc0Z3UGlgZx1mTAOouztvb7+3I2ZGDXcM7ZGZjXn3NuBlJ6crZk
oKU75/wMuLTibM1A0EecCzPQs+YNt38GxrzkXJQBWwXnkgysuc25NAOF1znb
MyC/wLkiA29OcXbUfp/fOFdnYNEBzhI9Gu3h7KLH0584S/X4eDNnNz0033OW
6fFJDmcPPapXcJbr0cLA2UuPOWmcoUdZImcfPbJjOSv0iIrg7K9H5lLOSj2K
VJxVegwI5KzWo3gBZ40epjmctXpEzORs0CN5GudsPfZM5pyrRwNfzhY94nw4
5+vR0puzVY9TIzgX6vHdN/z+emQN4ffXY70Xv78etgH8/rX5/fn99Vgg5/fX
40pffv/a98/5/fWo14vfPxOHevD7Z0Lfnd8/E0Gf8vtnYq6M3z8TgZ35/TOR
7M7vn4ntHfn9M/HAjd8/E1+15/fPxMq2/P6Z+Kc1v38mIj/m98/Eeym/fyZW
t+T3z0T/Fvz+mbjryu+fiU3N+P1r+zTl98/EwCb8/plo7cLvn4l3H/H7Z6Ky
Eb9/Jh415PevfW/A7197X5/fPxOteJdkQl6P3z8TMyX8/rV7/fea2z8TR/7l
7Kj9/A+cqzMxnLfEgKwazi4GlL3nLDXAk7ebAWvecZYZ8OYfzh4GKHnLDbhY
zdnLgFG8YcCRt5x9DBjMW2HA0Tec/Q0YzVtpQMlrzqrafN5qA6qqOGsMMPPW
GtCTt8GA0684ZxsQzDvXgJa8LQYUvuScb0Agb6sBrXkXGnDqBWebAfG8iwz4
ineJAZUOzqUGbOdtN0DFu8KA3rwdBjx7zu9vQAFviRGJvF2MGMNbasTHvN2M
sD/j9zfCytvDiFTeciP8eHsZ0Ys3jPjvb35/I27wVtR+Pm9/I0y8lUYE8VYZ
MZq32ohPeWuMqM9ba8S9Sn5/I07xzjYin3euEWbeFiPCeecbMZO31YhveBca
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
/YnnEiuJA4lVxGGi/w/LmjQk
             "]]}}}, {{}, {}}, {{{{{
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 1.0000000000000073`}], 
                   Offset[{0, 0}, {1530.2291666666667`, 1.0000000000000073`}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    1.0000000000000073`}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    1.0000000000000073`}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    1.0000000000000073`}], 
                   Offset[{0, 0}, {1607.8688474378841`, 0.9646170498241218}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1607.8688474378841`, 0.9646170498241218}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.8688474378841`,
                     0.9646170498241218}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.8688474378841`,
                     0.9646170498241218}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 1.0000000000000073`}], 
                   Offset[{0, 0}, {1530.2291666666667`, 1.0000000000000073`}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    1.0000000000000073`}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    1.0000000000000073`}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    1.0000000000000073`}], 
                   Offset[{0, 0}, {1607.8688474378841`, 0.9646170498241218}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1607.8688474378841`, 0.9646170498241218}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.8688474378841`,
                     0.9646170498241218}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.8688474378841`,
                     0.9646170498241218}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{34., 6.500000000000007}, {1607.8688474378841`, 
                    0.9646170498241218}], 
                   
                   Offset[{34., -6.499999999999993}, {1607.8688474378841`, 
                    0.9646170498241218}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999998}, {
                    1607.8688474378841`, 0.9646170498241218}], 
                   
                   Offset[{9.999999999999998, 6.500000000000002}, {
                    1607.8688474378841`, 0.9646170498241218}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.01`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 Offset[{22., 4.884981308350689*^-15}, {1607.8688474378841`, 
                  0.9646170498241218}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.8619567620339355}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.8619567620339355}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8619567620339355}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8619567620339355}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.8619567620339355}], 
                   Offset[{0, 0}, {1607.8688474378841`, 0.8906669674275378}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1607.8688474378841`, 0.8906669674275378}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.8688474378841`,
                     0.8906669674275378}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.8688474378841`,
                     0.8906669674275378}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.8619567620339355}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.8619567620339355}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8619567620339355}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8619567620339355}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.8619567620339355}], 
                   Offset[{0, 0}, {1607.8688474378841`, 0.8906669674275378}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1607.8688474378841`, 0.8906669674275378}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.8688474378841`,
                     0.8906669674275378}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.8688474378841`,
                     0.8906669674275378}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1607.8688474378841`, 
                    0.8906669674275378}], 
                   
                   Offset[{35., -6.499999999999992}, {1607.8688474378841`, 
                    0.8906669674275378}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1607.8688474378841`, 0.8906669674275378}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1607.8688474378841`, 0.8906669674275378}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.05`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1607.8688474378841`, 0.8906669674275378}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.8533333333333344}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.8533333333333344}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8533333333333344}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8533333333333344}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.8533333333333344}], 
                   Offset[{0, 0}, {1607.8688474378841`, 0.8202444955939657}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1607.8688474378841`, 0.8202444955939657}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.8688474378841`,
                     0.8202444955939657}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.8688474378841`,
                     0.8202444955939657}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.8533333333333344}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.8533333333333344}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8533333333333344}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8533333333333344}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.8533333333333344}], 
                   Offset[{0, 0}, {1607.8688474378841`, 0.8202444955939657}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1607.8688474378841`, 0.8202444955939657}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.8688474378841`,
                     0.8202444955939657}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.8688474378841`,
                     0.8202444955939657}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1607.8688474378841`, 
                    0.8202444955939657}], 
                   
                   Offset[{35., -6.499999999999992}, {1607.8688474378841`, 
                    0.8202444955939657}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1607.8688474378841`, 0.8202444955939657}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1607.8688474378841`, 0.8202444955939657}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.15`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1607.8688474378841`, 0.8202444955939657}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.5330462787930635}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.5330462787930635}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.5330462787930635}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.5330462787930635}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.5330462787930635}], 
                   Offset[{0, 0}, {1607.8688474378841`, 0.5331151613267731}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1607.8688474378841`, 0.5331151613267731}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.8688474378841`,
                     0.5331151613267731}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.8688474378841`,
                     0.5331151613267731}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.5330462787930635}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.5330462787930635}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.5330462787930635}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.5330462787930635}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.5330462787930635}], 
                   Offset[{0, 0}, {1607.8688474378841`, 0.5331151613267731}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1607.8688474378841`, 0.5331151613267731}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.8688474378841`,
                     0.5331151613267731}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.8688474378841`,
                     0.5331151613267731}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1607.8688474378841`, 
                    0.5331151613267731}], 
                   
                   Offset[{35., -6.499999999999992}, {1607.8688474378841`, 
                    0.5331151613267731}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1607.8688474378841`, 0.5331151613267731}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1607.8688474378841`, 0.5331151613267731}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.25`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1607.8688474378841`, 0.5331151613267731}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.3997334611892754}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.3997334611892754}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.3997334611892754}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.3997334611892754}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.3997334611892754}], 
                   
                   Offset[{0, 0}, {1607.8688474378841`, 
                    0.39963986451672373`}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1607.8688474378841`, 0.39963986451672373`}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.8688474378841`,
                     0.39963986451672373`}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.8688474378841`,
                     0.39963986451672373`}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.3997334611892754}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.3997334611892754}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.3997334611892754}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.3997334611892754}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.3997334611892754}], 
                   
                   Offset[{0, 0}, {1607.8688474378841`, 
                    0.39963986451672373`}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1607.8688474378841`, 0.39963986451672373`}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.8688474378841`,
                     0.39963986451672373`}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1607.8688474378841`,
                     0.39963986451672373`}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{30., 6.500000000000006}, {1607.8688474378841`, 
                    0.39963986451672373`}], 
                   
                   Offset[{30., -6.499999999999994}, {1607.8688474378841`, 
                    0.39963986451672373`}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1607.8688474378841`, 0.39963986451672373`}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1607.8688474378841`, 0.39963986451672373`}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.5`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{20., 4.440892098500626*^-15}, {1607.8688474378841`, 
                  0.39963986451672373`}], {0, 
                 0}]}]}}}}, {{{}}}}, {{}, {}}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> False, 
         ImagePadding -> {{All, 61.78949935912988}, {All, All}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["time", TraditionalForm], 
           FormBox[
            RowBox[{"freq", " ", "oblique"}], TraditionalForm]}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 440, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           RowBox[{"{", 
             RowBox[{
               RowBox[{"ba", "\[Rule]", "5"}], ",", 
               RowBox[{"bn", "\[Rule]", "1"}], ",", 
               RowBox[{"z", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vs", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vh", "\[Rule]", "1"}], ",", 
               RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"u", "\[Rule]", "0.5`"}], ",", 
               RowBox[{"pa", "\[Rule]", "0.2`"}], ",", 
               RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
       
        FormBox[
         TemplateBox[{"0.01`", "0.05`", "0.15`", "0.25`", "0.5`"}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm],FormBox[
        FormBox[
         TemplateBox[{"\"healthy juv\"", "\"stressed juv\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Normal", ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
      
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {2, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}], ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#3, ",", "Above"}], "]"}]}], "}"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.771926963413995*^9, 3.771927116207806*^9, 3.7719272329130383`*^9, 
   3.771927320186487*^9, 3.771927428850464*^9, 3.7719276224088383`*^9, 
   3.7719277832197037`*^9, 3.771928503694642*^9, 3.771928740362295*^9, 
   3.7719289411047792`*^9, 3.7719292213105803`*^9, 3.772450215424735*^9, 
   3.772450545591446*^9, 3.7724508003962*^9, 3.772451092151373*^9, 
   3.772452590715131*^9, 3.772453220189859*^9, 3.772453473166091*^9, 
   3.772453601665497*^9, {3.772453768593382*^9, 
   3.7724537776044817`*^9}},ExpressionUUID->"f9b3371b-72fd-4e16-a083-\
1cb9125aa120"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", " ", 
   RowBox[{"\"\<lsIinvade.pdf\>\"", ",", 
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}], "}"}], " ", 
     "]"}]}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",\

 CellChangeTimes->{{3.77192030520675*^9, 3.771920306952876*^9}, {
   3.77192039013865*^9, 3.7719204489881163`*^9}, {3.771920620320675*^9, 
   3.7719206575708523`*^9}, 3.7719207860267*^9, {3.771920834617701*^9, 
   3.77192084729725*^9}, {3.771920881239547*^9, 3.771920911276531*^9}, {
   3.771921016040662*^9, 3.771921085307107*^9}, 3.77192114681842*^9, {
   3.7719212667321157`*^9, 3.771921387491234*^9}, {3.771921674139854*^9, 
   3.771921693308975*^9}, {3.771921754466983*^9, 3.771921806690325*^9}, {
   3.771921994156003*^9, 3.771922052489451*^9}, {3.771922121745726*^9, 
   3.771922194443919*^9}, {3.771923312788409*^9, 3.7719233135293503`*^9}, {
   3.771923468098785*^9, 3.7719234689191637`*^9}, {3.771923557033332*^9, 
   3.771923557504673*^9}, {3.7719241761512327`*^9, 3.771924176588418*^9}, {
   3.771924948515418*^9, 3.771924948627267*^9}, {3.771925390103427*^9, 
   3.771925390665495*^9}, {3.7719257984582663`*^9, 3.7719257988852158`*^9}, {
   3.771925918061273*^9, 3.7719259181278667`*^9}, {3.7719260653517647`*^9, 
   3.7719260657888813`*^9}, {3.771927226271327*^9, 3.771927226708168*^9}, {
   3.771927311785166*^9, 3.771927311839714*^9}, {3.771927427371111*^9, 
   3.771927427808107*^9}, {3.77192766748708*^9, 3.771927668070649*^9}, {
   3.7719284221708927`*^9, 3.7719284225865393`*^9}, {3.7719286850282707`*^9, 
   3.771928685533546*^9}, {3.772450639296316*^9, 3.772450653110259*^9}, {
   3.772451696112672*^9, 3.772451698114333*^9}, {3.772453386456786*^9, 
   3.772453386984427*^9}, {3.7724535063960657`*^9, 3.772453507228335*^9}, {
   3.772453676614298*^9, 
   3.772453677064023*^9}},ExpressionUUID->"55e85f03-e924-4e2e-97c0-\
598cd3b313fd"],

Cell[BoxData["\<\"lsIinvade.pdf\"\>"], "Output",
 CellChangeTimes->{3.771926964352046*^9, 3.7719272061421957`*^9, 
  3.771927275046516*^9, 3.771927321186894*^9, 3.7719274364448442`*^9, 
  3.771927623424699*^9, 3.771927784271923*^9, 3.771928516574511*^9, 
  3.771928573562497*^9, 3.7719287415423326`*^9, 3.7719289421908607`*^9, 
  3.77192983847888*^9, 3.772450068588676*^9, 3.772450321428781*^9, 
  3.77245055680698*^9, 3.772450642649556*^9, 3.772450845795733*^9, 
  3.772451705631372*^9, 3.7724532806386538`*^9, 3.772453483605029*^9, 
  3.772453602685361*^9, 
  3.772453788946148*^9},ExpressionUUID->"da01431c-88a3-471a-bfbf-\
36ceeb0dceae"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "individual", " ", "plots", " ", "not", " ", "in", " ", "a", " ", "grid"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"begin", " ", "looping", " ", "here"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ulist", "=", 
     RowBox[{"{", 
      RowBox[{
      "0.01", ",", "0.05", ",", "0.1", ",", " ", "0.2", " ", ",", " ", 
       "0.4"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"blist", "=", 
     RowBox[{"{", 
      RowBox[{"1.5", ",", "2", ",", "3", ",", "5"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lsOstart", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lhOstart", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imax", "=", "2000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"h", "=", "1"}], ",", 
      RowBox[{"h", "\[LessEqual]", 
       RowBox[{"Length", "[", "ulist", "]"}]}], ",", 
      RowBox[{"h", "++"}], ",", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"Length", "[", "blist", "]"}]}], ",", 
         RowBox[{"j", "++"}], ",", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"subs", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ba", "\[Rule]", 
               RowBox[{"blist", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], ",", 
              RowBox[{"bn", "\[Rule]", "1"}], ",", 
              RowBox[{"z", "\[Rule]", ".5"}], ",", 
              RowBox[{"vs", "\[Rule]", ".5"}], ",", 
              RowBox[{"vh", "\[Rule]", "1"}], ",", 
              RowBox[{"vI", "\[Rule]", ".8"}], "  ", ",", 
              RowBox[{"u", "\[Rule]", 
               RowBox[{"ulist", "[", 
                RowBox[{"[", "h", "]"}], "]"}]}], " ", ",", " ", 
              RowBox[{"pa", " ", "\[Rule]", " ", "0"}], ",", " ", 
              RowBox[{"pn", "\[Rule]", " ", "1"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"test", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"lsO", "\[Rule]", "0"}], " ", ",", 
              RowBox[{"lsV", "\[Rule]", " ", "0"}], " ", ",", 
              RowBox[{"lsI", "\[Rule]", " ", "0.8"}], ",", 
              RowBox[{"lhO", "\[Rule]", " ", "0.8"}], ",", 
              RowBox[{"lhI", "\[Rule]", " ", "0.2"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"QHAT", "[", 
             RowBox[{"LHO_", ",", "LSO_"}], "]"}], " ", ":=", 
            RowBox[{"Simplify", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Fasols", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"lhO", "\[Rule]", "LHO"}], ",", 
                 RowBox[{"lhI", " ", "\[Rule]", " ", "LHI"}], ",", " ", 
                 RowBox[{"lsO", " ", "\[Rule]", " ", "LSO"}], ",", " ", 
                 RowBox[{"lsI", "\[Rule]", " ", "LSI"}]}], "}"}]}], " ", "/.",
               "subs"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"isolate", " ", "dominant", " ", "eigenvalue"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"AA2", "=", 
            RowBox[{"AA", "/.", "subs"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"LL", "=", 
            RowBox[{"Eigenvalues", "[", "AA2", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"isolate", " ", "Dominant", " ", "eigenvalue"}], ",", 
             " ", 
             RowBox[{
              RowBox[{"substitute", " ", "in", " ", "q"}], "-", "hat"}]}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Lambda1", "[", " ", 
             RowBox[{"lsO_", ",", " ", "lhO_", ",", "LHO_", ",", "LSO_"}], 
             "]"}], ":=", " ", 
            RowBox[{"Simplify", "[", 
             RowBox[{
              RowBox[{"LL", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "/.", 
              RowBox[{"Qh", "\[Rule]", "  ", 
               RowBox[{"QHAT", "[", 
                RowBox[{"LHO", ",", "LSO"}], "]"}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "take", " ", "partial", " ", "derivatives", " ", "to", " ", 
              "calculate", " ", "gradient"}], ",", " ", 
             RowBox[{
             "substitute", " ", "mutant", " ", "for", " ", "common", " ", 
              "type"}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"DlsO", "=", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"Lambda1", "[", 
                RowBox[{"lsO", ",", " ", "lhO", ",", "LHO", ",", "LSO"}], 
                "]"}], ",", "lsO"}], "]"}], "/.", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"LHO", " ", "\[Rule]", " ", "lhO"}], ",", 
               RowBox[{"LSO", "\[Rule]", " ", "lsO"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"DlhO", "=", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"Lambda1", "[", 
                RowBox[{"lsO", ",", " ", "lhO", ",", "LHO", ",", "LSO"}], 
                "]"}], ",", "lhO"}], "]"}], "/.", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"LHO", " ", "\[Rule]", " ", "lhO"}], ",", 
               RowBox[{"LSO", "\[Rule]", " ", "lsO"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"try", " ", "and", " ", "graph"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"lsOtab", "=", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"lhOtab", "=", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"DlsOtab", "=", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"DlhOtab", "=", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"delta", "=", "0.08"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"lsOtab", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "=", "lsOstart"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"lhOtab", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "=", "lhOstart"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"DlsOtab", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"DlsO", "/.", "subs"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"lsO", "\[Rule]", "lsOstart"}], ",", 
               RowBox[{"lhO", "\[Rule]", "lhOstart"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"DlhOtab", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"DlhO", "/.", "subs"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"lsO", "\[Rule]", "lsOstart"}], ",", 
               RowBox[{"lhO", "\[Rule]", "lhOstart"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", "=", "2"}], ",", 
             RowBox[{"i", "<", "imax"}], ",", 
             RowBox[{"i", "++"}], ",", 
             RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"lsOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"lsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}], "  ", "+", " ", 
                   RowBox[{"delta", " ", "DlsO"}]}], "/.", "subs"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"lsO", "\[Rule]", 
                    RowBox[{"lsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", 
                   RowBox[{"lhO", "\[Rule]", 
                    RowBox[{"lhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lsOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"lsOtab", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ">", "1"}], ",", "1", ",", 
                  RowBox[{"lsOtab", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lsOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"lsOtab", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "<", "0"}], ",", "0", ",", 
                  RowBox[{"lsOtab", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lhOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"lhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}], "  ", "+", " ", 
                   RowBox[{"delta", " ", "DlhO"}]}], "/.", "subs"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"lsO", "\[Rule]", 
                    RowBox[{"lsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", 
                   RowBox[{"lhO", "\[Rule]", 
                    RowBox[{"lhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lhOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"lhOtab", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ">", "1"}], ",", "1", ",", 
                  RowBox[{"lhOtab", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lhOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"lhOtab", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "<", "0"}], ",", "0", ",", 
                  RowBox[{"lhOtab", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"DlsOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"DlsO", "/.", "subs"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"lsO", "\[Rule]", 
                    RowBox[{"lsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", 
                   RowBox[{"lhO", "\[Rule]", 
                    RowBox[{"lhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"DlhOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"DlhO", "/.", "subs"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"lsO", "\[Rule]", 
                    RowBox[{"lsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", 
                   RowBox[{"lhO", "\[Rule]", 
                    RowBox[{"lhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], 
               ";"}], "\[IndentingNewLine]", "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"ListPlot", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"lsOtab", ",", "lhOtab"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"PlotLegends", "\[Rule]", 
               RowBox[{"PointLegend", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"LsO", ",", "LhO"}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"Graphics", "[", 
                   RowBox[{"Rectangle", "[", "]"}], "]"}]}]}], "]"}]}], ",", 
              RowBox[{"PlotLabel", "\[Rule]", "subs"}], ",", " ", 
              RowBox[{"ImageSize", "\[Rule]", "460"}]}], "]"}], "]"}], ";"}], 
          "\[IndentingNewLine]", "}"}]}], "]"}], "\[IndentingNewLine]", 
       "}"}]}], "]"}], ";"}], "                                ", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.772450608221574*^9, 
  3.772450621759281*^9}},ExpressionUUID->"ab2be162-f256-4bef-b373-\
b4651b9ed74e"]
},
WindowSize->{1921, 894},
WindowMargins->{{30, Automatic}, {Automatic, 47}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 18, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3664, 97, 159, "Input", "ExpressionUUID" -> \
"dae59257-83f4-40a7-8359-3ea76e2c326f"],
Cell[4225, 119, 2324, 64, 133, "Input", "ExpressionUUID" -> \
"b419f1f4-43d7-432b-956e-3865eca957af"],
Cell[6552, 185, 308, 7, 32, "Input", "ExpressionUUID" -> \
"d2439a89-a167-41e0-abf6-28fd2c6ca69d"],
Cell[6863, 194, 534, 17, 32, "Input", "ExpressionUUID" -> \
"04ebd907-0190-44c3-8647-75b81461511b"],
Cell[7400, 213, 581, 18, 32, "Input", "ExpressionUUID" -> \
"8d81e881-d293-423a-932b-e977e12f23ab"],
Cell[CellGroupData[{
Cell[8006, 235, 145, 3, 32, "Input", "ExpressionUUID" -> \
"51e46bda-5212-4bac-a486-25bf56a41d20"],
Cell[8154, 240, 2739, 40, 32, "Output", "ExpressionUUID" -> \
"b80b260c-c42a-479f-896e-c850c46a4f22"]
}, Open  ]],
Cell[10908, 283, 567, 16, 54, "Input", "ExpressionUUID" -> \
"72666374-6073-4376-bf00-7480537d551a"],
Cell[11478, 301, 26604, 632, 348, "Input", "ExpressionUUID" -> \
"84779083-38e0-472f-a5e7-f8db19158bd0"],
Cell[38085, 935, 19208, 393, 957, "Input", "ExpressionUUID" -> \
"3a9b002c-cbaa-4179-afef-73bb20ec8de6"],
Cell[CellGroupData[{
Cell[57318, 1332, 216, 5, 32, "Input", "ExpressionUUID" -> \
"444ef7f8-d9b3-4e45-9e1d-69db0f5708f6"],
Cell[57537, 1339, 718601, 13085, 345, "Output", "ExpressionUUID" -> \
"f9b3371b-72fd-4e16-a083-1cb9125aa120"]
}, Open  ]],
Cell[CellGroupData[{
Cell[776175, 14429, 1976, 33, 75, "Input", "ExpressionUUID" -> \
"55e85f03-e924-4e2e-97c0-598cd3b313fd"],
Cell[778154, 14464, 641, 10, 32, "Output", "ExpressionUUID" -> \
"da01431c-88a3-471a-bfbf-36ceeb0dceae"]
}, Open  ]],
Cell[778810, 14477, 14971, 351, 1020, "Input", "ExpressionUUID" -> \
"ab2be162-f256-4bef-b373-b4651b9ed74e"]
}
]
*)

