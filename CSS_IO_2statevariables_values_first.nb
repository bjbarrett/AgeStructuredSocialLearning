(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1292337,      23788]
NotebookOptionsPosition[   1288627,      23701]
NotebookOutlinePosition[   1288982,      23717]
CellTagsIndexPosition[   1288939,      23714]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"css", " ", "zebrafinch", " ", "model"}], ";"}], 
  "Chapter"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"n", 
     StyleBox["s", "Text"]}]], 
   StyleBox[" ", "Text"], 
   StyleBox["is", "Text"], 
   StyleBox[" ", "Text"], 
   StyleBox["number", "Text"], 
   StyleBox[" ", "Text"], 
   StyleBox["of", "Text"], 
   StyleBox[" ", "Text"], 
   StyleBox["stressed", "Text"], 
   StyleBox[" ", "Text"], 
   StyleBox["juveniles", "Text"]}], 
  StyleBox[";", "Text"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
   "nh", " ", "is", " ", "number", " ", "of", " ", "health", " ", 
    "juveniles"}], ";"}], "Text"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
   "NNA", " ", "is", " ", "number", " ", "of", " ", "adapted", " ", 
    "adults"}], ";"}], "Text"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
    "NNn", " ", "is", " ", "number", " ", "of", " ", "nonadapted", " ", 
     "adults"}], ";"}], "\[IndentingNewLine]"}], 
  "Text"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ba", ":", " ", 
    RowBox[{
    "benefit", " ", "of", " ", "adaptive", " ", "behavior", " ", "on", " ", 
     "fecundity"}]}], ";"}], "Text"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    StyleBox["bn", "Text"], 
    StyleBox[":", "Text"], 
    StyleBox[" ", "Text"], 
    StyleBox[
     RowBox[{
      RowBox[{"benefit", " ", "of", " ", "non"}], "-", 
      RowBox[{"adaptive", " ", "behavior", " ", "on", " ", "fecundity"}]}], 
     "Code"]}], "Text"], 
  StyleBox[";", "Code"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"pa", ":", " ", 
    RowBox[{
    "probability", " ", "an", " ", "adapted", " ", "adult", " ", "produces", 
     " ", "stressed", " ", "offspring"}]}], ";"}], 
  "Text"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"pn", ":", " ", 
    RowBox[{
    "probability", " ", "a", " ", "nonadapted", " ", "adult", " ", "produces",
      " ", "stressed", " ", "offspring"}]}], ";"}], 
  "Text"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"vs", ":", " ", 
    RowBox[{"vitality", " ", 
     RowBox[{"(", 
      RowBox[{"opposite", " ", "of", " ", "mortality", " ", "rate"}], ")"}], 
     " ", "of", " ", "a", " ", "stresed", " ", "juvenille"}]}], ";"}], 
  "Text"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"vh", ":", " ", 
    RowBox[{"vitality", " ", 
     RowBox[{"(", 
      RowBox[{"opposite", " ", "of", " ", "mortality", " ", "rate"}], ")"}], 
     " ", "of", " ", "a", " ", "healthy", " ", "juvenille"}]}], ";"}], 
  "Text"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"vI", ":", " ", 
    RowBox[{
    "mortality", " ", "cost", " ", "of", " ", "ndividual", " ", 
     "learning"}]}], ";"}], "Text"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"lsO", " ", ":", " ", 
    RowBox[{
    "frequency", " ", "of", " ", "oblique", " ", "learners", " ", "who", " ", 
     "were", " ", "stressed", " ", "juveniles"}]}], ";"}], 
  "Text"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"lhO", " ", ":", " ", 
     RowBox[{
     "frequency", " ", "of", " ", "oblique", " ", "learners", " ", "who", " ",
       "were", " ", "healthy", " ", "juveniles"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}], 
  "Text"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Recursions", ";"}], "Subsubsection"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ns", " ", ":=", " ", 
   RowBox[{
    RowBox[{"Na", " ", "ba", " ", "pa"}], " ", "+", " ", 
    RowBox[{"Nn", " ", "bn", " ", "pn"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nh", ":=", " ", 
   RowBox[{
    RowBox[{"Na", " ", "ba", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "pa"}], ")"}]}], " ", "+", " ", 
    RowBox[{"Nn", " ", "bn", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "pn"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NNa", " ", ":=", 
   RowBox[{
    RowBox[{"ns", " ", "vs", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "lsO"}], ")"}], " ", "vI", " ", "z"}], " ", "+", 
       RowBox[{"lsO", " ", "qO"}]}], " ", ")"}]}], " ", "+", " ", 
    RowBox[{"nh", " ", "vh", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "lhO"}], ")"}], " ", "vI", " ", "z"}], " ", "+", 
       RowBox[{"lhO", " ", "qO"}]}], " ", ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NNn", " ", ":=", 
   RowBox[{
    RowBox[{"ns", " ", "vs", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "lsO"}], ")"}], " ", "vI", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "z"}], ")"}]}], "+", 
       RowBox[{"lsO", 
        RowBox[{"(", 
         RowBox[{"1", "-", " ", "qO"}], ")"}]}]}], " ", ")"}]}], " ", "+", 
    " ", 
    RowBox[{"nh", " ", "vh", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "lhO"}], ")"}], " ", "vI", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "z"}], ")"}]}], "+", 
       RowBox[{"lhO", 
        RowBox[{"(", 
         RowBox[{"1", "-", " ", "qO"}], ")"}]}]}], " ", ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"qO", " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "u"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"Na", "/", 
       RowBox[{"(", 
        RowBox[{"Na", " ", "+", "Nn"}], ")"}]}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.75922536820514*^9, 3.759225374361019*^9}, {
   3.759226978263508*^9, 3.7592270511939898`*^9}, {3.7592272071577883`*^9, 
   3.759227502951234*^9}, {3.759227549246399*^9, 3.759227595035541*^9}, {
   3.759227633556774*^9, 3.759227779349925*^9}, {3.760182138805376*^9, 
   3.760182140164405*^9}, {3.7601825668532953`*^9, 3.7601825760529423`*^9}, {
   3.760260971894476*^9, 3.760261003261483*^9}, {3.760343678985106*^9, 
   3.760343727470407*^9}, 3.7603437708077*^9, {3.760343806968362*^9, 
   3.760343810862163*^9}, {3.760347725058481*^9, 3.76034772570505*^9}, {
   3.7609513639818087`*^9, 3.7609513682270327`*^9}, {3.765256219711523*^9, 
   3.7652562443580437`*^9}, {3.7676090976881447`*^9, 3.767609173472151*^9}, {
   3.77122177981454*^9, 3.771221796535448*^9}, {3.771652005656386*^9, 
   3.7716520084194613`*^9}, {3.771743399294156*^9, 3.771743400406986*^9}, {
   3.771744015554516*^9, 3.771744047235196*^9}, {3.7717440985156116`*^9, 
   3.771744107244638*^9}, {3.7730527795739927`*^9, 3.773052791132103*^9}, {
   3.773053024916357*^9, 3.7730530415317507`*^9}, {3.77305322644351*^9, 
   3.773053652381461*^9}, {3.773053797018681*^9, 3.773053870179845*^9}, {
   3.773053930863761*^9, 3.7730539588979893`*^9}, {3.773055762687145*^9, 
   3.7730557631809177`*^9}},ExpressionUUID->"dae59257-83f4-40a7-8359-\
3ea76e2c326f"],

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"Transition", " ", "Matrix"}], ";"}], "Subsubsection"], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "leave", " ", "Q", " ", "in", " ", "matrix", " ", "below", " ", 
    "different", " ", "than", " ", "one", " ", "up", " ", "above", " ", 
    "recursions"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AA", ":=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", 
       RowBox[{"ba", " ", "pa"}], 
       RowBox[{"bn", " ", "pn"}]},
      {"0", "0", 
       RowBox[{"ba", 
        RowBox[{"(", 
         RowBox[{"1", "-", "pa"}], ")"}]}], 
       RowBox[{"bn", 
        RowBox[{"(", 
         RowBox[{"1", "-", "pn"}], ")"}]}]},
      {
       RowBox[{"vs", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "lsO"}], ")"}], " ", "vI", " ", "z"}], " ", "+", 
          RowBox[{"lsO", " ", "Qh"}]}], ")"}]}], 
       RowBox[{" ", 
        RowBox[{"vh", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "lhO"}], ")"}], " ", "vI", " ", "z"}], " ", 
           "+", 
           RowBox[{"lhO", " ", "Qh"}]}], " ", ")"}]}]}], "0", "0"},
      {
       RowBox[{"vs", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "lsO"}], ")"}], " ", "vI", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "z"}], ")"}]}], "+", 
          RowBox[{"lsO", 
           RowBox[{"(", 
            RowBox[{"1", "-", " ", "Qh"}], ")"}]}]}], " ", ")"}], " "}], 
       RowBox[{"vh", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "lhO"}], ")"}], " ", "vI", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "z"}], ")"}]}], "+", 
          RowBox[{"lhO", 
           RowBox[{"(", 
            RowBox[{"1", "-", " ", "Qh"}], ")"}]}]}], " ", ")"}]}], "0", "0"}
     }], "\[NoBreak]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.759229336797518*^9, 3.75922941064526*^9}, {
   3.7601910668877563`*^9, 3.760191069968646*^9}, {3.7609532359902973`*^9, 
   3.760953296684855*^9}, {3.760959349527267*^9, 3.760959368606543*^9}, {
   3.761035121392744*^9, 3.76103512193158*^9}, 3.761045760902514*^9, 
   3.7614723052140512`*^9, {3.765256247405995*^9, 3.7652562817340727`*^9}, {
   3.767609177679335*^9, 3.767609192766227*^9}, {3.77072038029767*^9, 
   3.7707203911646214`*^9}, {3.771743546774617*^9, 3.771743560995676*^9}, {
   3.7730538721810493`*^9, 
   3.773053883914093*^9}},ExpressionUUID->"b419f1f4-43d7-432b-956e-\
3865eca957af"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
   "convert", " ", "to", " ", "frequencies", " ", "and", " ", "make", " ", 
    "sure", " ", "they", " ", "sum", " ", "to", " ", "one"}], ";"}], 
  "Text"]], "Input",
 CellChangeTimes->{{3.773054253326069*^9, 3.7730542659081*^9}, {
  3.773139853462866*^9, 
  3.773139874016992*^9}},ExpressionUUID->"55472e31-a868-41bf-a1a9-\
36348d7a5642"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NN", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"NNn", " ", "+", " ", "NNa"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.767609229418394*^9, 3.7676092418263702`*^9}, 
   3.767609303794414*^9},ExpressionUUID->"d2439a89-a167-41e0-abf6-\
28fd2c6ca69d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FFa", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"NNa", "/", "NN"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Na", "\[Rule]", 
        RowBox[{"Fa", " ", "N0"}]}], ",", 
       RowBox[{"Nn", "\[Rule]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "Fa"}], ")"}], "N0"}]}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.7652563372065363`*^9, 
  3.767428186086334*^9},ExpressionUUID->"04ebd907-0190-44c3-8647-\
75b81461511b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FFn", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"NNn", "/", "NN"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Na", "\[Rule]", 
        RowBox[{"Fa", " ", "N0"}]}], ",", 
       RowBox[{"Nn", "\[Rule]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "Fa"}], ")"}], "N0"}]}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.7652563533747797`*^9, 3.767428186606475*^9, 
  3.771743861492507*^9, 
  3.771746605927393*^9},ExpressionUUID->"8d81e881-d293-423a-932b-\
e977e12f23ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"FFn", "+", "FFa"}], "]"}]], "Input",ExpressionUUID->"51e46bda-5212-\
4bac-a486-25bf56a41d20"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.7652563766032677`*^9, 3.765274508624042*^9, 3.765275857873808*^9, 
   3.765530995977647*^9, 3.7674247653006496`*^9, 3.76742486162066*^9, 
   3.767428181159596*^9, 3.767436671148477*^9, 3.767522013505011*^9, 
   3.767609318926516*^9, 3.767692007553767*^9, 3.767692633641698*^9, 
   3.7676933847351027`*^9, 3.767693416809304*^9, 3.767693530049163*^9, 
   3.767693808398802*^9, 3.767694070658029*^9, 3.767694133378681*^9, 
   3.767694403481168*^9, 3.767694884489552*^9, 3.770366808156866*^9, 
   3.770374263532011*^9, 3.7707039017014627`*^9, 3.770713388367136*^9, 
   3.77071341874806*^9, 3.7707134918134413`*^9, {3.770715208381282*^9, 
   3.770715231783855*^9}, 3.770716897503373*^9, 3.770717068147419*^9, 
   3.770717204630273*^9, 3.770717251548367*^9, 3.770717431067676*^9, 
   3.770717525857126*^9, 3.770717803463581*^9, 3.770720363977283*^9, 
   3.770720408646554*^9, 3.771221810947377*^9, 3.771651935044628*^9, 
   3.77165241205829*^9, 3.7716524916458406`*^9, 3.771654499656795*^9, 
   3.771658930114113*^9, 3.771658998373848*^9, 3.771659353564712*^9, 
   3.77166030951224*^9, 3.771660369808*^9, 3.771660434647965*^9, 
   3.771660564321527*^9, 3.7716613543784237`*^9, {3.7716613877613688`*^9, 
   3.771661413627882*^9}, 3.7716614555948277`*^9, 3.771661497517908*^9, 
   3.771661545728176*^9, {3.771661586857608*^9, 3.771661619448851*^9}, 
   3.771661665177449*^9, {3.771661717830427*^9, 3.771661742417799*^9}, 
   3.771661835870933*^9, 3.7716618807771606`*^9, {3.77166201300522*^9, 
   3.771662040755192*^9}, 3.771662145647277*^9, 3.7716621857896852`*^9, 
   3.7716622257282543`*^9, 3.771662295863245*^9, 3.771662337204023*^9, {
   3.771740443496616*^9, 3.771740466258691*^9}, {3.771740504617218*^9, 
   3.7717405514048*^9}, 3.771743574373577*^9, 3.771743865955285*^9, 
   3.771744113046269*^9, 3.771744326276844*^9, 3.771746194093068*^9, 
   3.771746478882195*^9, 3.771746519374106*^9, 3.771746557822513*^9, 
   3.771746609763937*^9, 3.7717467208174973`*^9, 3.7717469379021273`*^9, {
   3.771747885704548*^9, 3.771747908866817*^9}, 3.7717481374945593`*^9, 
   3.771748264394051*^9, {3.7717483423507977`*^9, 3.771748368132701*^9}, 
   3.7717485206056757`*^9, 3.77174855232647*^9, 3.771748717358222*^9, 
   3.771749132968192*^9, 3.77175026190968*^9, 3.771750296992206*^9, 
   3.771750400791872*^9, 3.771750431067029*^9, 3.771750848010991*^9, 
   3.77175092122514*^9, 3.771751907849412*^9, 3.771752998523596*^9, 
   3.7717531334503813`*^9, 3.771754703702783*^9, 3.771755232894843*^9, 
   3.77175589905567*^9, 3.771758922503375*^9, 3.771759498026425*^9, 
   3.77183510295203*^9, 3.771909454189793*^9, 3.7724496018333073`*^9, 
   3.77252108880879*^9, 3.7725212451485233`*^9, 3.772521411706188*^9, 
   3.772521487554552*^9, 3.772521601056044*^9, 3.772521858421586*^9, 
   3.772522302651141*^9, 3.772523210401243*^9, 3.7730537940464478`*^9, 
   3.773053924099951*^9, 3.773053976127838*^9, 3.7731204848819513`*^9, 
   3.773139843150485*^9, {3.773139885892315*^9, 3.77313988928494*^9}, 
   3.7731404004035997`*^9, 3.773388167982724*^9, 3.77338874339642*^9, 
   3.773390085729266*^9},ExpressionUUID->"44b4e3a0-374c-4ef7-9098-\
123a3eeb079b"]
}, Open  ]],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"solve", " ", "Q"}], "-", 
    RowBox[{"hat", " ", "for", " ", "common", " ", "strategy"}]}], ";"}], 
  "Subsubsection"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fasols", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"FFa", "\[Equal]", "Fa"}], ",", "Fa"}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.771743481027957*^9, 3.771743503268949*^9}, {
   3.7717438367194157`*^9, 3.771743837517026*^9}, 3.771746450189302*^9, {
   3.7730537398200893`*^9, 3.773053745061562*^9}, 3.7730539107134333`*^9, 
   3.7730542885424223`*^9, 
   3.7730547185751953`*^9},ExpressionUUID->"72666374-6073-4376-bf00-\
7480537d551a"],

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"Graphing", " ", "for", " ", "non"}], "-", 
     RowBox[{"Softmax", " ", "Version"}]}], ";"}], "Subsubsection"], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"begin", " ", "looping", " ", "here"}], ",", " ", 
    RowBox[{"try", " ", "matrices"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PSTYLE", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Directive", "[", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.3607843137254902, 0.4758169934640523, 0.018300653594771243`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.5411764705882353, 0.7137254901960784, 0.027450980392156862`],
       Editable->False,
       Selectable->False], "]"}], ",", 
     RowBox[{"Directive", "[", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.1450980392156863, 0.43529411764705883`, 0.3843137254901961], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.09673202614379087, 0.2901960784313726, 0.2562091503267974],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.1450980392156863, 0.43529411764705883`, 0.3843137254901961],
       
       Editable->False,
       Selectable->False], "]"}], ",", 
     RowBox[{"Directive", "[", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.005228758169934641, 0.33986928104575165`, 0.6196078431372549],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824],
       Editable->False,
       Selectable->False], "]"}], ",", 
     RowBox[{"Directive", "[", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.47058823529411764`, 0.2627450980392157, 0.5843137254901961], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.3137254901960784, 0.17516339869281047`, 0.3895424836601308],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.47058823529411764`, 0.2627450980392157, 0.5843137254901961],
       
       Editable->False,
       Selectable->False], "]"}], ",", 
     RowBox[{"Directive", "[", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5934640522875817, 0.00784313725490196, 0.32679738562091504`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
       0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`],
       Editable->False,
       Selectable->False], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3607843137254902, 0.4758169934640523, 0.018300653594771243`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          
          "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[
        0.5411764705882353, 0.7137254901960784, 0.027450980392156862`],
        Editable->False,
        Selectable->False], ",", "Dashed"}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.09673202614379087, 0.2901960784313726, 0.2562091503267974],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          
          "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.1450980392156863, 0.43529411764705883`, 0.3843137254901961],
        Editable->False,
        Selectable->False], ",", "Dashed"}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.005228758169934641, 0.33986928104575165`, 0.6196078431372549],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          
          "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.00784313725490196, 0.5098039215686274, 0.9294117647058824]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824],
        
        Editable->False,
        Selectable->False], ",", "Dashed"}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3137254901960784, 0.17516339869281047`, 0.3895424836601308],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          
          "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.47058823529411764`, 0.2627450980392157, 0.5843137254901961]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.47058823529411764`, 0.2627450980392157, 0.5843137254901961],
        Editable->False,
        Selectable->False], ",", "Dashed"}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`],
              RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5934640522875817, 0.00784313725490196, 0.32679738562091504`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          
          "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8901960784313725, 0.011764705882352941`, 
               0.49019607843137253`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[
        0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`],
        Editable->False,
        Selectable->False], ",", "Dashed"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ulist", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.01", ",", "0.05", ",", "0.15", ",", " ", "0.25", " ", ",", " ", 
     "0.5"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"blist", "=", 
   RowBox[{"{", 
    RowBox[{"1.5", ",", "2", ",", "3", ",", "5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lsOstart", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lhOstart", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imax", "=", "4000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lhOtab", "=", 
   RowBox[{"lsOtab", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"imax", "-", "1"}]}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"delta", "=", "0.08"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lsOtab", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", "lsOstart"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lhOtab", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", "lhOstart"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.771759559000457*^9, 3.771759615469256*^9}, {
   3.771759726993932*^9, 3.771759729097726*^9}, {3.77175989229853*^9, 
   3.7717600620428553`*^9}, {3.7717601567392397`*^9, 3.771760276644022*^9}, {
   3.771760385976563*^9, 3.7717604900527897`*^9}, {3.771760521520499*^9, 
   3.7717606032643967`*^9}, {3.771760759579132*^9, 3.7717607671635237`*^9}, {
   3.771760939440736*^9, 3.771760942915742*^9}, {3.771760983405039*^9, 
   3.771761042658512*^9}, {3.771761095065835*^9, 3.771761095469221*^9}, {
   3.771761641461412*^9, 3.771761731664544*^9}, 3.771762208530805*^9, {
   3.7717626750146923`*^9, 3.771762675721612*^9}, {3.7717629119233227`*^9, 
   3.771762980718687*^9}, {3.771763011972727*^9, 3.771763033314149*^9}, {
   3.7717630740743523`*^9, 3.771763085312744*^9}, 3.7718348913171883`*^9, {
   3.7718350130915117`*^9, 3.771835026277795*^9}, {3.7718354579441843`*^9, 
   3.771835550611166*^9}, {3.771835901926805*^9, 3.771835943833003*^9}, {
   3.771837552745574*^9, 3.7718375528234653`*^9}, {3.771837607096043*^9, 
   3.771837689054022*^9}, {3.771837725899572*^9, 3.771837765342527*^9}, {
   3.771837829594181*^9, 3.771837870859414*^9}, {3.7718379018889008`*^9, 
   3.771837901943965*^9}, {3.7718432872748413`*^9, 3.7718432892883997`*^9}, 
   3.771844088572277*^9, {3.771844676626608*^9, 3.7718446770866737`*^9}, 
   3.771846773199141*^9, {3.771846914174591*^9, 3.7718469143395443`*^9}, {
   3.771847010760941*^9, 3.771847012603986*^9}, {3.771847071288076*^9, 
   3.7718470715444736`*^9}, {3.771909408327351*^9, 3.7719094268229837`*^9}, {
   3.771910203288121*^9, 3.771910206166931*^9}, 3.771910681528813*^9, 
   3.77191119988941*^9, 3.77191261078356*^9, 3.771912997288344*^9, 
   3.771913134391333*^9, 3.7719131646278048`*^9, 3.771917924900419*^9, {
   3.7719219485813923`*^9, 3.7719219548344183`*^9}, {3.771922238592491*^9, 
   3.771922247534726*^9}, {3.77192232924713*^9, 3.771922334837224*^9}, {
   3.77192258549887*^9, 3.7719225860936947`*^9}, {3.771923200543964*^9, 
   3.771923201262726*^9}, {3.7719234528557463`*^9, 3.771923457016815*^9}, {
   3.771923563086006*^9, 3.771923563692271*^9}, {3.7719241843634367`*^9, 
   3.771924186332108*^9}, {3.7719249310334663`*^9, 3.7719249360160027`*^9}, {
   3.771925356893792*^9, 3.771925363383741*^9}, {3.771925398587359*^9, 
   3.771925399294873*^9}, {3.771925789425233*^9, 3.771925790087775*^9}, {
   3.771925901839037*^9, 3.771925905842873*^9}, {3.77192608229423*^9, 
   3.771926083654954*^9}, 3.771926910316381*^9, 3.771926984635784*^9, {
   3.771927016092647*^9, 3.771927016169551*^9}, {3.7719270953836403`*^9, 
   3.7719270977680473`*^9}, {3.7719272152122726`*^9, 3.771927215942236*^9}, {
   3.771927289880609*^9, 3.7719272947284527`*^9}, {3.7719274096857243`*^9, 
   3.771927410336795*^9}, 3.771927525653035*^9, {3.771927696231996*^9, 
   3.771927697130603*^9}, {3.771928402135045*^9, 3.771928409052596*^9}, {
   3.7719286788437862`*^9, 3.7719286795374947`*^9}, {3.7719291176530523`*^9, 
   3.771929127887188*^9}, {3.77245008606068*^9, 3.772450086216529*^9}, {
   3.772450427507666*^9, 3.7724504336724873`*^9}, {3.7724506862552347`*^9, 
   3.77245068686171*^9}, {3.7724509689656343`*^9, 3.772450972357811*^9}, 
   3.772451860705267*^9, {3.7724518916337214`*^9, 3.7724518917008047`*^9}, {
   3.772452569670454*^9, 3.772452569893961*^9}, {3.772452759373477*^9, 
   3.772452765988222*^9}, {3.772453358849107*^9, 3.772453359489106*^9}, {
   3.7724534893758593`*^9, 3.7724534945945053`*^9}, {3.7724536586371737`*^9, 
   3.772453660278757*^9}, {3.772521234327004*^9, 3.772521235069036*^9}, {
   3.772521387762926*^9, 3.7725213896858587`*^9}, {3.772521467108858*^9, 
   3.772521472293736*^9}, {3.772521581716049*^9, 3.772521582704822*^9}, {
   3.773055971598888*^9, 3.773055979134344*^9}, {3.773139144188202*^9, 
   3.7731391550188932`*^9}, {3.773390079063525*^9, 
   3.773390083234778*^9}},ExpressionUUID->"84779083-38e0-472f-a5e7-\
f8db19158bd0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "\[LessEqual]", 
      RowBox[{"Length", "[", "blist", "]"}]}], ",", 
     RowBox[{"j", "++"}], ",", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"h", "=", "1"}], ",", 
         RowBox[{"h", "\[LessEqual]", 
          RowBox[{"Length", "[", "ulist", "]"}]}], ",", 
         RowBox[{"h", "++"}], ",", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"subs", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ba", "\[Rule]", 
               RowBox[{"blist", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], ",", 
              RowBox[{"bn", "\[Rule]", "1"}], ",", 
              RowBox[{"z", "\[Rule]", "0.8"}], ",", 
              RowBox[{"vs", "\[Rule]", ".8"}], ",", 
              RowBox[{"vh", "\[Rule]", "1"}], ",", 
              RowBox[{"vI", "\[Rule]", "0.8"}], " ", ",", 
              RowBox[{"u", "\[Rule]", 
               RowBox[{"ulist", "[", 
                RowBox[{"[", "h", "]"}], "]"}]}], " ", ",", " ", 
              RowBox[{"pa", " ", "\[Rule]", " ", "0"}], ",", " ", 
              RowBox[{"pn", "\[Rule]", " ", "1"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"solve", " ", "for", " ", "qhat"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"QHAT", "[", 
             RowBox[{"LHO_", ",", "LSO_"}], "]"}], " ", ":=", 
            RowBox[{"Simplify", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Fasols", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"lhO", "\[Rule]", "LHO"}], ",", 
                 RowBox[{"lhI", " ", "\[Rule]", " ", "LHI"}], ",", " ", 
                 RowBox[{"lsO", " ", "\[Rule]", " ", "LSO"}], ",", " ", 
                 RowBox[{"lsI", "\[Rule]", " ", "LSI"}]}], "}"}]}], " ", "/.",
               "subs"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"AA2", "=", 
            RowBox[{"AA", "/.", "subs"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"LL", "=", 
            RowBox[{"Eigenvalues", "[", "AA2", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"isolate", " ", "Dominant", " ", "eigenvalue"}], ",", 
             " ", 
             RowBox[{
              RowBox[{"substitute", " ", "in", " ", "q"}], "-", "hat"}]}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Lambda1", "[", " ", 
             RowBox[{"lsO_", ",", " ", "lhO_", ",", "LHO_", ",", "LSO_"}], 
             "]"}], ":=", " ", 
            RowBox[{"Simplify", "[", 
             RowBox[{
              RowBox[{"LL", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "/.", 
              RowBox[{"Qh", "\[Rule]", "  ", 
               RowBox[{"QHAT", "[", 
                RowBox[{"LHO", ",", "LSO"}], "]"}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "take", " ", "partial", " ", "derivatives", " ", "to", " ", 
              "calculate", " ", "gradient"}], ",", " ", 
             RowBox[{
             "substitute", " ", "mutant", " ", "for", " ", "common", " ", 
              "type"}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"DlsO", "=", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"Lambda1", "[", 
                RowBox[{"lsO", ",", " ", "lhO", ",", "LHO", ",", "LSO"}], 
                "]"}], ",", "lsO"}], "]"}], "/.", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"LHO", " ", "\[Rule]", " ", "lhO"}], ",", 
               RowBox[{"LSO", "\[Rule]", " ", "lsO"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"DlhO", "=", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"Lambda1", "[", 
                RowBox[{"lsO", ",", " ", "lhO", ",", "LHO", ",", "LSO"}], 
                "]"}], ",", "lhO"}], "]"}], "/.", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"LHO", " ", "\[Rule]", " ", "lhO"}], ",", 
               RowBox[{"LSO", "\[Rule]", " ", "lsO"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", "graph", "*)"}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", "=", "2"}], ",", 
             RowBox[{"i", "<", "imax"}], ",", 
             RowBox[{"i", "++"}], ",", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"lsOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"lsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}], "  ", "+", " ", 
                   RowBox[{"delta", " ", "DlsO"}]}], "/.", "subs"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"lsO", "\[Rule]", 
                    RowBox[{"lsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", 
                   RowBox[{"lhO", "\[Rule]", 
                    RowBox[{"lhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lsOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"lsOtab", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ">", "1"}], ",", "1", ",", 
                  RowBox[{"lsOtab", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lsOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"lsOtab", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "<", "0"}], ",", "0", ",", 
                  RowBox[{"lsOtab", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lhOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"lhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}], "  ", "+", " ", 
                   RowBox[{"delta", " ", "DlhO"}]}], "/.", "subs"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"lsO", "\[Rule]", 
                    RowBox[{"lsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", 
                   RowBox[{"lhO", "\[Rule]", 
                    RowBox[{"lhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lhOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"lhOtab", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ">", "1"}], ",", "1", ",", 
                  RowBox[{"lhOtab", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lhOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"lhOtab", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "<", "0"}], ",", "0", ",", 
                  RowBox[{"lhOtab", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}], 
              "\[IndentingNewLine]", "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"lsOtab1", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"h", "==", "1"}], ",", "lsOtab", ",", "lsOtab1"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"lsOtab2", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"h", "==", "2"}], ",", "lsOtab", ",", "lsOtab2"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"lsOtab3", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"h", "\[Equal]", "3"}], ",", "lsOtab", ",", "lsOtab3"}],
              "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"lsOtab4", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"h", "\[Equal]", "4"}], ",", "lsOtab", ",", "lsOtab4"}],
              "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"lsOtab5", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"h", "\[Equal]", "5"}], ",", "lsOtab", ",", "lsOtab5"}],
              "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"lhOtab1", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"h", "==", "1"}], ",", "lhOtab", ",", "lhOtab1"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"lhOtab2", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"h", "==", "2"}], ",", "lhOtab", ",", "lhOtab2"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"lhOtab3", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"h", "\[Equal]", "3"}], ",", "lhOtab", ",", "lhOtab3"}],
              "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"lhOtab4", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"h", "\[Equal]", "4"}], ",", "lhOtab", ",", "lhOtab4"}],
              "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"lhOtab5", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"h", "\[Equal]", "5"}], ",", "lhOtab", ",", "lhOtab5"}],
              "]"}]}], ";"}], "\[IndentingNewLine]", "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"plotcode", "=", 
        RowBox[{"ListLinePlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "lhOtab1", ",", "lhOtab2", ",", "lhOtab3", ",", "lhOtab4", ",", 
            "lhOtab5", ",", " ", "lsOtab1", ",", "lsOtab2", ",", "lsOtab3", 
            ",", "lsOtab4", ",", "lsOtab5"}], "}"}], ",", 
          RowBox[{"PlotLabels", "\[Rule]", "ulist"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "PSTYLE"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"time", ",", " ", 
             RowBox[{"freq", " ", "oblique"}]}], "}"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Placed", "[", 
              RowBox[{
               RowBox[{"PointLegend", "[", "ulist", "]"}], ",", "Bottom"}], 
              "]"}], ",", 
             RowBox[{"Placed", "[", 
              RowBox[{
               RowBox[{"LineLegend", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Normal", ",", "Dashed"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<healthy juv\>\"", ",", "\"\<stressed juv\>\""}], 
                  "}"}]}], "]"}], ",", "Top"}], "]"}]}], "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "subs"}], ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", "440"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"p1", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "\[NotEqual]", "1"}], ",", "p1", ",", "plotcode"}], 
         "]"}]}], ";", "\n", "       ", 
       RowBox[{"p2", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "\[NotEqual]", "2"}], ",", "p2", ",", "plotcode"}], 
         "]"}]}], ";", "\n", "       ", 
       RowBox[{"p3", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "\[NotEqual]", "3"}], ",", "p3", ",", "plotcode"}], 
         "]"}]}], ";", "\n", "       ", 
       RowBox[{"p4", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"j", "\[NotEqual]", "4"}], ",", "p4", ",", "plotcode"}], 
         "]"}]}], ";"}], "\[IndentingNewLine]", "}"}]}], "]"}], ";"}], 
  "              ", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.771761812051703*^9, 3.77176181908092*^9}, {
   3.771761850106616*^9, 3.771761861708253*^9}, {3.771761907077829*^9, 
   3.771762106029364*^9}, {3.7717621715307407`*^9, 3.771762177469591*^9}, 
   3.771762253859755*^9, {3.771762315458227*^9, 3.771762338731399*^9}, {
   3.771762411624033*^9, 3.77176241270258*^9}, {3.77176257154659*^9, 
   3.771762600504231*^9}, {3.7718343622941847`*^9, 3.771834368334687*^9}, {
   3.771834670025382*^9, 3.7718346715552797`*^9}, {3.771834711032114*^9, 
   3.77183471292659*^9}, {3.7718347950394707`*^9, 3.771834863732511*^9}, {
   3.771835349041153*^9, 3.7718354390314217`*^9}, {3.771835670385035*^9, 
   3.771835671891288*^9}, {3.771835744834778*^9, 3.771835875545814*^9}, {
   3.771836164761355*^9, 3.771836167740024*^9}, {3.771836306670479*^9, 
   3.771836327887785*^9}, {3.771836421727963*^9, 3.771836487541486*^9}, {
   3.771836521349866*^9, 3.771836533387006*^9}, {3.7718370788613*^9, 
   3.771837155241748*^9}, {3.771837189553125*^9, 3.7718372467488728`*^9}, {
   3.771837294204218*^9, 3.77183732526527*^9}, {3.7718375266456347`*^9, 
   3.7718375278719254`*^9}, {3.77184373132896*^9, 3.771843800496122*^9}, {
   3.7718438396812162`*^9, 3.771843856701432*^9}, {3.7718446449366627`*^9, 
   3.77184464544153*^9}, {3.771845500403132*^9, 3.771845500470737*^9}, {
   3.771845542748015*^9, 3.7718455428769407`*^9}, {3.77184558139386*^9, 
   3.771845581664909*^9}, {3.7718456891039133`*^9, 3.771845689394421*^9}, {
   3.771846681508287*^9, 3.7718467135836887`*^9}, {3.771846786159821*^9, 
   3.7718468083200903`*^9}, {3.771846895172864*^9, 3.771846908450461*^9}, {
   3.771848910073514*^9, 3.771848940031598*^9}, {3.7718492000192966`*^9, 
   3.7718492001646*^9}, {3.771849447964603*^9, 3.771849458065893*^9}, {
   3.771909404032105*^9, 3.771909404135954*^9}, {3.771909512153026*^9, 
   3.771909513543029*^9}, {3.771909565569906*^9, 3.771909605797138*^9}, {
   3.771909645896594*^9, 3.771909651497752*^9}, {3.7719097072751293`*^9, 
   3.771909983423626*^9}, {3.7719100235667877`*^9, 3.771910071603797*^9}, {
   3.771910122322419*^9, 3.77191016519521*^9}, {3.771910345044536*^9, 
   3.7719104787535257`*^9}, {3.771911427271446*^9, 3.771911436597061*^9}, {
   3.7719115565489397`*^9, 3.771911579141932*^9}, {3.771911617076353*^9, 
   3.771911626110903*^9}, {3.771911666499917*^9, 3.771911668163102*^9}, {
   3.771911707607823*^9, 3.771911771519895*^9}, {3.7719118023140783`*^9, 
   3.771911824657051*^9}, {3.771911865292059*^9, 3.771911885869913*^9}, {
   3.771911932708817*^9, 3.7719120861353607`*^9}, 3.771912138565319*^9, {
   3.771912178277562*^9, 3.771912228983034*^9}, {3.7719123108854837`*^9, 
   3.7719123731540403`*^9}, {3.7719128692897882`*^9, 3.7719128991418858`*^9}, 
   3.771912993402151*^9, {3.771913029356372*^9, 3.771913033563232*^9}, {
   3.771913412216846*^9, 3.771913463587307*^9}, {3.7719135224359217`*^9, 
   3.771913592121986*^9}, {3.7719165027011757`*^9, 3.7719165489613667`*^9}, 
   3.771916861290464*^9, {3.77191699063885*^9, 3.771917166772743*^9}, {
   3.7719172063528233`*^9, 3.771917226973331*^9}, {3.771917259578505*^9, 
   3.771917322387807*^9}, {3.771917362756042*^9, 3.771917376446905*^9}, {
   3.771917425218449*^9, 3.7719174616584587`*^9}, {3.771917498062125*^9, 
   3.771917508201275*^9}, 3.771917554601947*^9, {3.771917597129075*^9, 
   3.771917617790677*^9}, {3.771917657044664*^9, 3.771917681781898*^9}, {
   3.771917735223394*^9, 3.7719177912704372`*^9}, {3.771917829805253*^9, 
   3.771917833200515*^9}, {3.771917950889271*^9, 3.771917952614449*^9}, {
   3.77191799548853*^9, 3.771918004777988*^9}, 3.771918130639504*^9, {
   3.771918164961522*^9, 3.7719181797779503`*^9}, {3.771918214046332*^9, 
   3.771918260960163*^9}, {3.771918389709721*^9, 3.771918425137147*^9}, {
   3.771918464266389*^9, 3.771918526647739*^9}, {3.7719185569918623`*^9, 
   3.7719186054357862`*^9}, {3.771918645294442*^9, 3.7719186480842857`*^9}, {
   3.771918680336918*^9, 3.771918708884655*^9}, {3.771918888726653*^9, 
   3.7719189177029*^9}, {3.771919214046085*^9, 3.77191925666144*^9}, {
   3.7719193426707478`*^9, 3.7719193517034693`*^9}, {3.771919417497871*^9, 
   3.771919433572154*^9}, {3.77191952253128*^9, 3.7719195505657187`*^9}, {
   3.77191959097814*^9, 3.771919594987268*^9}, {3.771919649806168*^9, 
   3.771919669638111*^9}, {3.771919723721496*^9, 3.771919727633911*^9}, {
   3.7719199547809277`*^9, 3.771920032781562*^9}, {3.771920062918748*^9, 
   3.771920279945692*^9}, {3.771920513828822*^9, 3.771920514625888*^9}, {
   3.7719211064736977`*^9, 3.771921107563698*^9}, {3.7719211757646914`*^9, 
   3.771921175810416*^9}, {3.771922354528968*^9, 3.771922365857222*^9}, {
   3.771922403267703*^9, 3.771922403942194*^9}, {3.7719228923538237`*^9, 
   3.771922958494206*^9}, {3.7719230138020077`*^9, 3.771923015072083*^9}, {
   3.7719230611430187`*^9, 3.7719230714480886`*^9}, {3.771923417161256*^9, 
   3.771923432133807*^9}, {3.771923809167465*^9, 3.771923812418151*^9}, {
   3.771923848117194*^9, 3.77192384820459*^9}, {3.771924052310245*^9, 
   3.771924064384804*^9}, {3.771925652590252*^9, 3.771925652714769*^9}, {
   3.771926808402711*^9, 3.771926808524535*^9}, {3.771927509974517*^9, 
   3.771927513496436*^9}, {3.772449710728341*^9, 3.772449710825979*^9}, {
   3.772451832076716*^9, 3.772451832179821*^9}, {3.7724526878696327`*^9, 
   3.772452688149428*^9}, {3.772452736492669*^9, 3.7724527549849653`*^9}, {
   3.772521109339058*^9, 3.7725211131153173`*^9}, {3.772521826132236*^9, 
   3.772521850882009*^9}, {3.772522097108165*^9, 3.772522099352467*^9}, {
   3.772522284201914*^9, 3.772522290140717*^9}, {3.772522929825735*^9, 
   3.772522939364987*^9}, {3.773054868221046*^9, 3.7730548841157513`*^9}, {
   3.7730555815481663`*^9, 
   3.77305558210909*^9}},ExpressionUUID->"3a9b002c-cbaa-4179-afef-\
73bb20ec8de6"],

Cell[BoxData[
 TemplateBox[{
  "SetDelayed","write",
   "\"Tag \\!\\(\\*RowBox[{\\\"Root\\\"}]\\) in \
\\!\\(\\*RowBox[{RowBox[{\\\"Root\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"0.2`\\\"}], \\\" \\\", \
\\\"lhO\\\"}], \\\"+\\\", RowBox[{\\\"0.2`\\\", \\\" \\\", \\\"lsO\\\"}], \
\\\"+\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"12\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"+\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"0.44000000000000006`\\\"}], \\\"+\\\", \
RowBox[{\\\"0.4`\\\", \\\" \\\", \\\"lhO\\\"}], \\\"-\\\", \
RowBox[{\\\"0.06`\\\", \\\" \\\", \\\"lsO\\\"}], \\\"-\\\", \
FractionBox[RowBox[{\\\"0.23333333333333334`\\\", \\\" \\\", \\\"lhO\\\"}], \
RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]], \\\"+\\\", \
FractionBox[RowBox[{\\\"0.3333333333333333`\\\", \\\" \\\", \\\"lhO\\\", \\\" \
\\\", \\\"LHO\\\"}], RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]], \
\\\"+\\\", FractionBox[RowBox[{\\\"0.023333333333333334`\\\", \\\" \\\", \
\\\"lsO\\\"}], RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]], \\\"-\\\", \
FractionBox[RowBox[{\\\"0.03333333333333333`\\\", \\\" \\\", \\\"LHO\\\", \
\\\" \\\", \\\"lsO\\\"}], RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]], \
\\\"-\\\", FractionBox[RowBox[{\\\"0.08333333333333334`\\\", \\\" \\\", \
\\\"lhO\\\", \\\" \\\", \\\"LSO\\\"}], RowBox[{\\\"Plus\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]], \\\"+\\\", FractionBox[RowBox[{\\\"0.008333333333333335`\\\", \\\" \
\\\", \\\"lsO\\\", \\\" \\\", \\\"LSO\\\"}], RowBox[{\\\"Plus\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]], \\\"-\\\", FractionBox[RowBox[{\\\"0.16666666666666666`\\\", \\\" \\\
\", \\\"lhO\\\", \\\" \\\", SqrtBox[RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\
\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}]]}], RowBox[{\\\"Plus\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]], \\\"+\\\", FractionBox[RowBox[{\\\"0.016666666666666666`\\\", \\\" \
\\\", \\\"lsO\\\", \\\" \\\", SqrtBox[RowBox[{\\\"Plus\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]]}], RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]]}], \\\")\\\"}], \\\" \
\\\", SuperscriptBox[\\\"#1\\\", \\\"2\\\"]}], \\\"+\\\", \
RowBox[{\\\"0.2`\\\", \\\" \\\", SuperscriptBox[\\\"#1\\\", \\\"4\\\"]}]}], \
\\\"&\\\"}], \\\",\\\", \\\"2\\\"}], \\\"]\\\"}], \\\"[\\\", RowBox[{\\\"lsO_\
\\\", \\\",\\\", \\\"lhO_\\\", \\\",\\\", \\\"LHO_\\\", \\\",\\\", \\\"LSO_\\\
\"}], \\\"]\\\"}]\\) is Protected.\"",2,136,11,32663310051849339849,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.773390085865685*^9},ExpressionUUID->"4b5efaf1-0a7f-421c-9873-\
86fa0e298351"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.7733901583059483`*^9},ExpressionUUID->"c5996c56-d548-4880-9eda-\
798c3eda8984"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}], "}"}], " ", 
  "]"}]], "Input",ExpressionUUID->"444ef7f8-d9b3-4e45-9e1d-69db0f5708f6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
            
            LineBox[CompressedData["
1:eJxdzTnMM0cBBuARNC63SOGCYkEIWShCy+1w/cMZAwGWcJkjsCQEzJnlNuEa
bkO15VduaQkp2tLllF+5pTuWzh1bfh0IhQjtM83omXdeva999oWnn39VCOGZ
V4fw3/vlMz966cl/vvjYS/969L+H+PfVU0/8+x+veBVf+ffyXeDH8Bq/Bpf4
dfj1+A14g9+IH8dvwhV+M34Lfit+G347fgd+J97iJ/C78Lvxe/B78fvwIxyX
Tji8nxyHD5Dj8EFyHD5EjsOHyXH4CDkOT5LjsCPH4aPkOHyMHIePk+PwFDkO
nyDH4ZPkOHyKHId66YgTzjh8mj5OOOPwNH2ccMbhM/RxwhmHz9LHCWccPkcf
J5xx+Dx9nHDG4Qv0ccIZhz19nHDG4Yv0ccIZhy/RxwlnHL5MHyeccfgKfZxw
xuEZ+jjhjMNX6eOEMw5fo48Tzjg0S5c44gYn3OOMJxy+zj6OuMEJ9zjjCYdn
2ccRNzjhHmc84fAc+zjiBifc44wnHL7BPo64wQn3OOMJh+fZxxE3OOEeZzzh
8E32ccQNTrjHGU84fIt9HHGDE+5xxhMOB/ZxxA1OuMcZTzh8m30ccYMT7nHG
Ew7fYR9H3OCEe5zxhMN32ccRNzjhHmc84fA99nHEDU64xxlPOHyffRxxgxPu
ccYTDj9gH0fc4IR7nPGEwwvs44gbnHCPM55waJcucIkrHHGNG9zihDvc4wFn
POIJzzj8cOkCl7jCEde4wS1OuMM9HnDGI57wjMOPli5wiSsccY0b3OKEO9zj
AWc84gnPOPx46QKXuMIR17jBLU64wz0ecMYjnvCMw0+WLnCJKxxxjRvc4oQ7
3OMBZzziCc84/HTpApe4whHXuMEtTrjDPR5wxiOe8IzDz5YucIkrHHGNG9zi
hDvc4wFnPOIJzzj8fOkCl7jCEde4wS1OuMM9HnDGI57wjMNx6QKXuMIR17jB
LU64wz0ecMYjnvCMwy+WLnCJKxxxjRvc4oQ73OMBZzziCc84vLh0gUtc4Yhr
3OAWJ9zhHg844xFPeMbhl0sXuMQVjrjGDW5xwh3u8YAzHvGEZxx+tXSBS1zh
iGvc4BYn3OEeDzjjEU94xuHXSxe4xBWOuMYNbnHCHe7xgDMe8YRnHH6zdIFL
XOGIa9zgFifc4R4POOMRT3jG4bdLF7jEFY64xg1uccId7vGAMx7xhGcc0tIr
XOA1LvEGV3iLI97hGu9xgw+4xUec8Al3+A73+IwHfMEZ3+MRX/GEb3jGDzj8
bukVLvAal3iDK7zFEe9wjfe4wQfc4iNO+IQ7fId7fMYDvuCM7/GIr3jCNzzj
Bxx+v/QKF3iNS7zBFd7iiHe4xnvc4ANu8REnfMIdvsM9PuMBX3DG93jEVzzh
G57xAw5/WHqFC7zGJd7gCm9xxDtc4z1u8AG3+IgTPuEO3+Een/GALzjjezzi
K57wDc/4AYc/Lr3CBV7jEm9whbc44h2u8R43+IBbfMQJn3CH73CPz3jAF5zx
PR7xFU/4hmf8gMOfll7hAq9xiTe4wlsc8Q7XeI8bfMAtPuKET7jDd7jHZzzg
C874Ho/4iid8wzN+wOHPS69wgde4xBtc4S2OeIdrvMcNPuAWH3HCJ9zhO9zj
Mx7wBWd8j0d8xRO+4Rk/4PCXpVe4wGtc4g2u8BZHvMM13uMGH3CLjzjhE+7w
He7xGQ/4gjO+xyO+4gnf8IwfcDgtvcIFXuMSb3CFtzjiHa7xHjf4gFt8xAmf
cIfvcI/PeMAXnPE9HvEVT/iGZ/yAw1+XXuECr3GJN7jCWxzxDtd4jxt8wC0+
4oRPuMN3uMdnPOALzvgej/iKJ3zDM37A4W9Lr3CB17jEG1zhLY54h2u8xw0+
4BYfccIn3OE73OMzHvAFZ3yPR3zFE7793/8BKC7ZYw==
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]], 
            LineBox[CompressedData["
1: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
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
            LineBox[CompressedData["
1:eJxd0FHIHOtBBuAPSWEvAs5FLhbJxah/ZZEgY426ttEzak676m8dT3/rVlMd
61+7aupZa6prjTpqPK426qipLiUXIwRcJdQRI6wQccSAqwRcSoRFA04l4iLB
s2CULUQRqT8yz3fz8XwvLy98X/iB11/74OeFEP7hLSH87/25s3/lU+/6zMcu
fOrNV/7vIf2LN1574x//+My99M1/f/XTn/zTM0fpv+yGt9/552e+kP7lH3zB
Z/7p0Zn76Vuvvvu/Xv+bM19Mj993//y//e2Z4/St/3nr7e//uzN/UfrR9/7u
H/3Z35/5KO0vX737+e2ZvyT98F+97eg9/3zmQfrZ//i9j8z/9cxfmp58/LT+
wzfPfCn9UPX7b/nrF2f+svT8n7zjk08+e+Yk/eLs9BOf/u8zf3l69g+fu9+G
vwJfxl+Jvwp/NR7ir8Fvx+/AV/DX4q/Dr+C06wKHryfH4RvIcfhGchyukuPw
KjkO7yTH4V3kOIzIcfgmchy+mRyHbyHH4Zgch28lx+Hd5Dh8GzkOWdcpLnCD
w7fTxwVucHiNPi5wg8N76OMCNzic0McFbnD4Dvq4wA0O76WPC9zg8J30cYEb
HMb0cYEbHN5HHxe4weG76OMCNzh8N31c4AaHa/RxgRsc3k8fF7jB4Xvo4wI3
OHwvfVzgBoe86xinOMcFrnCDWxy+j32c4hwXuMINbnH4APs4xTkucIUb3OLw
/ezjFOe4wBVucIvDKfs4xTkucIUb3OLwQfZxinNc4Ao3uMXhB9jHKc5xgSvc
4BaHD7GPU5zjAle4wS0OE/ZxinNc4Ao3uMXhB9nHKc5xgSvc4BaHH2IfpzjH
Ba5wg1scfph9nOIcF7jCDW5xuM4+TnGOC1zhBrc4fJh9nOIcF7jCDW5x+BH2
cYpzXOAKN7jF4XX2cYpzXOAKN7jFYdp1hGOc4BRnOMdTXOASV7jGDd7gFu9x
+NGuIxzjBKc4wzme4gKXuMI1bvAGt3iPw0e6jnCME5ziDOd4igtc4grXuMEb
3OI9Dj/WdYRjnOAUZzjHU1zgEle4xg3e4BbvcbjRdYRjnOAUZzjHU1zgEle4
xg3e4Bbvcfho1xGOcYJTnOEcT3GBS1zhGjd4g1u8x+HHu45wjBOc4gzneIoL
XOIK17jBG9ziPQ4/0XWEY5zgFGc4x1Nc4BJXuMYN3uAW73GYdR3hGCc4xRnO
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
VTzCxzjDJ3iMr+Ecn+IJvv7//h/lpTpo
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961]], 
            LineBox[CompressedData["
1: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
7sf901Bx5uRCdnEaHIL73uzL/dMw8H3hLHap6v1uWXSxD/dPg1HXQWBXpOH4
vc5n9bl/Gsau7zWZrUzDhIhJZ3pzf9X9s4OnsOvTEDX3Ymkv7p+Gvo4DrdiC
dDQ4SMt7cv90xP/QsWHrpMPj24b7etw/HdAY7sw2SEeB8tLrHtw/He1tVvmy
zdJR3bXlj+7cPx3+fwoS2UjHyWdTO7Ot0yFKf7SlG/dPR/QTbxO2UzouHP5e
osv90zGqMXQ+2yMd85LfP+vK/dPRZbGtPzssHb2ddmiwhekIiH2T14X7p0Ne
1tmULUqHz4ghlzpz/3RMOzVwGTs/HYfWt/6iw/3TsX3ZtQx2cTpmZfsNYp9I
Rzv9b+c6cX/V/fosWcYuT8eqg7nfO3L/dGz4fFDGrlI9v3b+SLYyHa8M3e90
4P7p+Owp8GfXp2OOtk9ndlM6nmHvv9rcPwPZOObA1sxAO+uc7+25fwbqckf9
w9bLQH5QwVS2QQbmDq583Y77Z+Bl0910tlkGNCZJzdkWGWg9vfsjLe6v+nm3
pXFs6wyM+73cmG2bgVFr+93X5P4ZyG27OYbtkoHD0x4MZXuonifuyoO23D8D
u0esj2eHZSDizM0RbGEGnm9WPm3D/TOwaNauTLYoAydH9ZnEzsvAWOX0D625
fwZm3tTbzC7MwK6YjTbs4gwsjiwTsE9kIGX+lsMa3D8Dm+L7rGWXZ6D/vum9
2RUZOL20U0Ur7p+BSUaxSWyl6j77xRPZ1RlYnTLjc0vun4HXjhv2sJsy8PF0
hitbkIl1K3v3YmtmYkrNzHstuH8mhrbukMXWy8QrV+9ZbINM/Cpe3ZJtlIkn
uxrOCLh/Jq781I1gW6jsfmMsG5mqf6t1b/y7i/pnQiP68yG2bSaG7Vnhx3bK
xICGJSPYLpnI039V94fskYn6r00H2H6ZMJqzcT07LBNPqy+bsYWZmLsj4nMz
OTUTY+yOH2GLMtF0JSKUnZeJoOcXJ7DzM9EyVPznN7kwE7HeLy+wizNhVXA0
hX0iEx1/aM1nl2ai69JnXdjlmXhfZP7oF7kiEzlPWuazqzKx6KHtWrYyE3Vp
vUawqzPhULPi+09yfSbuV+uXspsy0Tp2YRpbkIXzO1osZGtmobfj4D5snSy4
Z5W++0HWy8Lg+bf/ZRtkobPCLoZtlIVW3jPnsM2y8Pd+UXe2RRZMHyW8aiIj
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

             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 
              0.49019607843137253`]], 
            LineBox[CompressedData["
1:eJw91nlYjWvbBvBQhFIIURJCSCVTSE4qkiljUdKgpHE1z7WqVau5NdcmCSGZ
MhZC5iQKIXMIIQkhId96j6/r3v/s4/fe3c/1nOt8rn28I139V7p3V1BQeKKk
oPC/f///P61zDy98Galx+PPcrv8BOTm9FAx2k5Vh2bFy2Ipcsjq+Tzp0LTGT
rIFw2fVuVxLImgiy0q7sH07WxvTOlkG+vmRdTJm27N19V/IomPXVMF1iT9bD
bst3PWqXksfCzcxsgYsFWR+u99Z0/DMlT8AnhwVaBw3JBsiKb93trkc2hNUk
5WyDYWRjLPMY+FBBnTwZ0Ubeoa+UyCZY5GK2+c7vli5PwUFuyu5bX8hTcUU0
dszDd+RpiPx0+c2nZ+Tp0FR687x/HXkG/k5/29uiimwKb+GfjfEV5JnIzp3+
uPoUeRauK8cEjDlEng1zmVgnfTfZDE37hz7++x95Dj5ppefFCMjmyPoIpz58
8lzktAUMKYwhA5t2TamwCe4yF+AXRNp2etH5POikalWcd6HzeXgmuNkzw57O
5+OF8Uhtj+V0Ph9zb0t+LllA5xbI3BgvwBw6t4CO+pjnmErnlrB+ufPh0ol0
bgnhos6gzaPo3AoP7owpzhxK51YIL3nPqVCn8wXIcu124V8vOl8AY4u+6Yv/
feo6X4h63cybu390mbsQjbVtocotdG6NORdzEyPe0Lk1pqWUvfvxlM4XISMw
5j9uHZ0vwnm131mDq+ncBvxyo/Nll+ncBscnKg3ffJbOF2PGJ9udI4/T+WLs
/FaHpmI6X4LHQ/DlzC46XwKLbYZF/22l86WYWTTBgSei86X4XXvwX2QanS/D
7wzt9JgEOl+GvBO1X9Mj6Xw5vH+rGewNpPPluObZ36Dai85toVzz591f1y7D
FsbzPq6e7UB/bwtV/rvNvFVdrrDF9+yWQY8W0/0V6Nn4edVMS7q/At8H3h68
x4zur0DwuI2rtKfR/RWY1Me3M38S3V8J+58nVSaNpfsr8fl1c+A1Hbq/Eonv
To/xHkL3V+Lk7jNDtdTp/iqsK06weKBM91dh3qttOXnd6P4qlH1I7uPX0dx1
fxUOxZwV2HzrssJqSGuLdEyau4zVUGg7WaT3psvc1fgwef7oUc/p/mrc9NqT
MOEh3V8DlwDjs3Nq6f4aWLlPuuhwg+6vgZlKQwrvEt1fA/sJyT3LztL9tXhR
b2f44wTdXwuFp/w288N0fy3W/bRYKtpH99dixbyTBq0FdN8OViEKfPutdN8O
GZYLbG+K6b4d7PfujrbOpPt2CBprolCbTPft8dhEucaFS/ftMctz5rO/EXTf
HiufPdApDKL79pjj+5m/2pfur8NOBYGK2ma6vw63718uuOdM99eh8rrEdNd6
ur8OkPStjFxN99cjSdfYYsMyur8erud65y+ypvvr8XvLjuq58+n+euQPar80
14zuO0DQMCxk0XS674BnDmoPHY3pvgNGVz57GjGB7jvAdVV2ZIEe3XdEzRrD
wloduu+Io5nXlvYZSvcdYbXe3XvpQLrviMPfh375T5Xub0Dboe93P/ei+xug
PlxFaXl3ur8B/ZyDokr/fOy6vwFzl1pOGP+zywpOSNq/VanwS5fhhFJHaTf9
5i5znaCzZ+2Ak2/pvhP62ygaLH5J9zfi8K3r8z88ofsbUbb9to3oAd3fCLGF
janFHbq/EV5izr8/N+m+MyIfR0kuXOuyrjPSVA58TLtIz3NGauu8X07lXXZ2
hsuS1KOzS+n5zmhTq1EeeazLBc5YFufxrd8hmueMPo5F7kpFXW5wxhfVb6sU
d9N8F9yoKj7WN5/mu8Dz3MxQrf9ovgv+TFQXT5HQfBdItxf+XZVN813Q0hlU
HJ1G810Qca1b1qEkmu+CkiH1eW+5NN8FB97wb46Lpvmu6NTY3y8gjOa7ojHv
8fpLgTTfFaf2XSrU8qP5rig+1u9l9Baa74qWg0GKbzfRfFf0GXy4h50zzXdF
nlbCvRoHmu8Kz1NnPW3taL4brl4zLKtfSfPdsM649JTnMprvBrPvpusUbGi+
G0JsCyQ7rGi+G+7WvNywYB7Nd8ME3479bWY03w0dez/7FpvSfDf45Nbkb55K
8zfhqvrRyQbGNH8TZhUf12qfSPM3wbjh34qb42j+JrzXu35jz2iavwk7f1iE
80fQ/E3QbDu9kqNF8zchuzVkmfMQmi9/fq/bznYDab47xh4eGbdGjea7Q1b5
KH99X5rvjidlnic9etF8dxQG2JRF9KD57riZrLhd/O9D13x37Jwzdt2J312u
cMfZPOtXT352ucEd5lH9DPu0dVnBA4ey9UzmtnZZ1wNzY+c1RjZ3GR44+3bM
rHNNXXb2wJOAvPE933SZ6wHT5xFFa17SfA9cUdl+8MAzmu+BapXPE5Uf03wP
CMa5aXs/oPmb4fbxR1DdXZov9/Rj+pY1NH8zKrDP+MxNmr8ZeXu/xk+vpPmb
ERVwdsDpKzR/M1aOnPJo3kWavxkTT0pv1p6j+fLnHx/f4H6G5nsidTJUu5XS
fE88eDJ10a7jNN8TVn980xaV0HxP2MY7Xv9xkOZ7YpFi9I/9+2m+JxxqVvZz
20vzPTHpdYDSqN003xOGf4Lvvt1B87eAn9Pd52gezd+C0p83K+P/o/lb8FA/
84WdjOZvQbai6r4pYpq/BcenDR88SEDzt0A4e+voPxk0fwuafbyvNaXS/C04
0pHw/XEyzfeCzddn++4m0nwvXJ/Lq6vh0nwviI+kBN6Nofle+PdZOeJxJM33
Qoho0ot3YTTfC54qE/I6gmm+F/6Wmu0bEEjzveBfd/inkT/N94Zxch1vpQ/N
98a1ByoLIrfQfG94nrhoss+D5ntj/ZfN8x+50Xxv9LaI81F3ofne+AhR0RIn
mu+NEW7TWzIdaL437iuoTKuzp/k+iFh2PnjEWprvg90OPfb4r6L5Prirnnfu
ii3N90GzwepTOstovg/S5nfnxyym+T7od5I/7qU1zfdB4sna7EULaL4Plsyt
Kz1lQfN9sV1DkqM/j+b74voZ7XE7zGm+L2xDk5yGmdF8X7xY0Dpt60ya74u2
V6l7dGbQfF+EH0/ds28qzffF8JrJhtNMaL4vpN9vz7huRPP9kJtWdmbDJJrv
h0qB7ZH2CTTfD56FPfrl6tN8P7z/bl0zeyzN98Nqy10fX4+m+X5Ie7jNQTCS
5vvBKbJ6yLwRNN8PWcH3NX9o03x/SHmudkeG0Xx/rHs0vtpHk+b740zfZn/D
wTTfH7+HBM9uG0jz/aFmlzPufH+a74/LYdMmZajRfH9cDzO1clKl+f7Iz5N4
Tu1L8znY4mMt6Ne7y+ocbNvreLK5J70PB1lmjbW3FbtszMGfRX+enOhO78fB
RtXqmnyFLttyYNLA25PR+b7rfTnQNXJdG/unyxwOBgbufxLU0WUuB4Z6xYa+
7V0WcFBy9py1148uF3BwbufC0d5tXS7hQGPCyVL/r12u4OBQWsy/sNYu13Jg
eW9kW2JLlxs4qG40yBY3d7mVg7ueU6r2fuiyQgCqK+/ln2vqsnoAVow51bP+
bZd1A2C1NOP398YuGwfg84n+YUNedxkBUPDtG2T2ssu2AUgbav1+0wvKH4BX
TTvuCZ5R/gDEpLVNrHhC+QNwbMzk5q+PKH8AQm1t+o2vp/wB6NXTPMP1AeUP
QOr2gc476ih/AHIrniS+uEv5A3DbpeTLqDuUPwCzjp/YvaWG8gfglvYgyfFb
lD8Q5Sa9zilUU/5APD1wQ3NFFeUPxHu7wp2FlZQ/EDWDmlb8vkb5A/H6Rsvo
NVcpfyAGrdYacOwy5Q/E0ORHgwdcovyBSB2abxBSQfkDobD37dIn5yl/ICbk
zAyxPEf5A3Fv1NjtJWcpfyA+mltWjDhD+QORlDP1kbCM8sv/nlfwqmcp5Q+E
ZrdZD2NPUv5AbM0/e/TXccofhIyYJp+wY5Q/CN/mZfRoL6H88vPeUZyoI5Q/
CAdchIe7Hab8QdCYc6Is7SDlD0L9+9rUwQcofxDG93qmvWc/5Q+CcdQDn+lF
lD8Izz0vB1ftpfxBODfmmJHLHsofhAqj07kduyl/EPqP/lks20X5g/DsiMhl
2k7KH4TRgjOlD3ZQ/iDExuwpisyn/PJ8Y0VGI7dT/mCcH3t9YdU2yh+MEe2i
5pCtlD8Y+p8WD9X7j/IHI13P9kZdDuUPhk+cUjtfRvmDMSXnUcEcKeUPxobj
8y58F1P+YKy5cGZZiYjyB2MRbtj4Cil/MHou/nXYQED5g3Ev4nloSxblD8bK
VwPzj2VS/mC49jXTjcig/MFQfK3wa1465Q/GghMD9VTTKH8wDIdP2v44hfKH
4KCiqnMxn/KHIFsQ6RmdTPlDEK1lecw2ifKH4NOEuTPH8Sh/CEzcrX/9S6D8
IQjjW7Q8jqf8Iah10NIo41L+ENgcueiRE0f5Q/BvodGr8FjKL3/eE7cExxjK
HwLfHh4W86MpfwiKp1uMnBBF+UMQW66mqRFJ+eXPL3w7WiGC8ocg4Ox7tIRR
/hBsTZzn/TyU8ofii/7wHbUhlD8UgeHH6q8EU/5QzH4wR+NsEOUPxZsp3Zcd
D6T8oXjZc1HCoQDKH4pn5q6H9nMofyimmBXe3OdP+UPhcM370T4/yh+Kzd21
7+33pfyhSNqic/KQD+UPReqFV1HHvSl/KGJ7vxh91ovyh2IeL3v/lS2UPxQ6
20J713pSfvnfP9fGs82UPxSiDnWbZg/KHwa1w+9G/3Wn/GH4VDG7So2sGwaT
34dm6m2i/GGo0HrjN8uN8odhck2mx0pXyh+GU3vXD/dxofxh6KGmKOA7U/4w
WCy0Plu4kfKHQd3+47bLTpQ/DBF9Sg0bN1D+MPR7EcnpSS4Jw3dFFacJjpQ/
DH1WWLUtd6D88nnTehmHraf8Ydh1aka/gnWUPwytHpfSq+wpfzgi1uXu+WFH
+cORr1Vir0fWDUfjAaVdq9ZS/nCsDtgay1tD+cPx0iTk46nVlD8c9f12vfmw
ivKHwy7QxEuXzAlHnfqcULuVlD8chU+e9RSsoPzhEP2aNrTKlvKHI/a8d7ES
uSQcSruLS+cvp/zhMDEbbR6/jPKHw3RK39kXl1J+uedsP9Cd3BoOtYFDM62W
UP4IGGy5/DR1MeWPQOC7Nzk1NpQ/AmNG1pwdTDaOwKOMu1YbF1H+CIRGW0/Z
b035I2A2KCu+bSHlj8D9hUqG88icCARUakzPXkD5I/C+p37OcyvKH4HPY48s
MyIXRMCqXWd9vCXlj8C/ltZTdRaUPwK1Wrtdx5NrI+CoV7Y+bj7lj8DW2aV5
D+ZR/gjMHmYw1oisEInhP/e2pYDyR6IyrlypcS7lj8SXWiU7kI0joeqv+3a7
OeWPxHvzwyV/5lD+SCyOXXPCkewcid3lFS3nzCh/JM7dy9+gS+ZGgtewqzNx
NuWPRNVsXk3TLMofCZ2gzlvLyCWR2Dfvzs+TMyl/JPqmVtjokGsj4WIjucI3
pfyRGL9D0+3rDMofiVXHhus5kRWisOh0mNLN6ZQ/CsqfOhVnknWjgMRs3aJp
lD8Kcft6r9UkIwpuwSt2p06l/FGob17W888Uyh8Fl++fov3JnCh4LNVRajSh
/FHITLmXt44siMJIZaX5tZMpfxQi2w59XUguiULY9FsHK4wpfxT+cNz9ZpFr
5X/fET3tpBHljwLvwXCFyeTWKHgeWVN9yJDyR+N+zbTciWT1aKRr33MpnkT5
o6HWb8G4CWTjaPgVF78tNqD80egVp5tvQLaNhtPWqsVHJlL+aPxKqvlkQuZE
wwLrEkonUP5oxE6X9ppDFkSjzPxE1OXxlD8at4UfntqQS6IRfNV//D19yh+N
RddiNzqSa6Px9c6amLfjKH805gZMjw8gt0ZjXaD7lr9jKX8Mfr2aMDWNrB6D
PX3uvhhC1o3B7037vfaOofwxUMjrfm8aGTGISTAZck2P8sfAsZ9wmh3ZOQaa
qyIM3o+m/DEwil7UEUXmxiD/uut2NbIgBp7c8RqFoyh/DEb9Utwwk1wSg7Tk
jaE1Iyl/DPQi9zp5kGtj8EbbRqNTl/LH4Pn+c1IZuTUGP63DXhqRFWJxpHfr
9xsjKH8sGp/tvrOJrBuLvZL+QQpk41io3D9Tn6dD+WMxbKhet1lk21gUFdV9
eDic8sdirWStJJTMiQWvZPqfQWRuLNYIFEee0qb8sTjDXdnNjlwQi4TEk9va
tSh/LEJtrrZsJVfEIspE+9cccm0sys3tTr8cRvlj8XjgYMNkcmssxn/rWDOR
rBCHlpPFRneGUv44HKysPh1G1o1D4Ni+33TIxnGYvnrA42ualD8OUxyFvv5k
2zisvjHzoCbZOQ47d12QXBpC+eNQ6vFojC+ZGwfrXnDSJAvisKPxsNmVwZQ/
DkY3Xl/gkEviMP5N/tvh5Io4DKradeTmIMofhwiPE0MjyQ1xSOy2bfR4cmsc
zk7Xra7XoPxclH9RG5BKVubi+xbTtplkdS6CdLwCPg7ssiYXh+6EpWwn63Kx
Pmm6qS1Zn4sVoTFxPcjGXHhpjt1QOqDLpnIPUKn1JoOLHzNVH+qSrblIy+4d
8KA//Z5cRM16nZdBtufiNy92nQXZmQv9+ot7OtS77MmFbpmUe4zM4WJYRWOT
Fzlc/vz8bc9Gk7lcLOy/f8MztS6ncHH25d/NOWQBF5ovM36vIOdyIW60GaJK
LuBi70XDM5X9ulzEhYPN5Nc8cgkXuYuWCueRy7gIi4u73KlK/XGxc/u18HJy
JRclFqNLIsm18vu/czxnkuu5GDR9/M52FeqXixELn9mXkZu42OJanhVObuXi
WU7tvJnkdvnvVTsmoKMv9R8Pyxs3tMrJyvFQHViNWLJ6PB73NX8BsmY8hj8z
+dGDrBuPXuEXeNf7UP/xmC7qSE0nG8fDddcfRVuyaTyGPHvRpkFGPDiTK+wf
96b+4/HU6qxRAdk2Hq+CW8M9yPbx+HaDO2US2TkeszqznNqUqf94RITM/XWW
zIlH46yy7jxyuPx9O3Ujl5C58ShR2+00iJwSj2dOW44870X9x+N4SIF3ETk3
HiGhoaJAckE8kjW1Rs8hF8XDb88FbWVyifz9v8ti7/Wk/uPxwO/+wh3kingI
O0vCvMmV8bg61EXVlFwrf78yHWUlcn085q/W23xXifqPh8XrQ+MLyE3x4D1s
X+ZHbo1Hfy3LB2bk9nh4q9ae70tWSMA17vNeTxSp/wQsKj1WUkxWT8A6Z2FZ
JFkzAa+lFTqLyboJOPyI/0qLrJ+A4wOMe3zqQf0nICStB/c82TQBrh+W2gvI
SMCsmY7prmTrBATXR2tOI9smoCT+X2cvsn0CxlpOM3/SnfpPwKgEzv3DZM8E
RLYoXkkgcxIwMG1hbztyeAI27cwqnEjmJqB71WSpAjklARMbUh/f70b9J8Be
8UvQAXJuAh7lXnKOJxckwHuuQ4EduSgBjx9omhiSSxKwJ3z9ICVyWQL2hnIX
PVWg/hNwwb751nFyZQLSHivsSifXJkD9/cirbuT6BMQXnJhuRm5IwNdFI35o
kJsSoLPuRveWf01d/SfAwEvL8Tq5PQFRc+O67SQrJML3wsavkWTlRMz6qm+4
hqyeiMp/C08YkTUTET9pIq8PWTcR05/O2/6ms8v6ifiT9KezgmyciMHl1UV5
ZNNEPNUbszWcjEQciIi4u5psnYh7PPMVk8m2icga8WFQP7K9/PlG30Z8/Ntl
50QM23fHr5LsmYjrsZ3d9pI5ibhW+q0+kRwuz2Nn8M2FzE1EyGY9W5BTEhHd
av9ZhyxIxN7fC2v//ulybiJasjhfn5ILEvHfgZVryslFiVi5xL99G7kkEcvd
rJ9EkcsSEVTv/NeBXCGfzzdzMiNXJqKfufNfbXJtIsacWfH47+8u1ydCsSin
7Tm5IRHpBacXV5CbEuE1Di92klsT4bT/xOFEcnsi/CN3nnYnK/AwtU74byFZ
mQfNuv7cCWR1HgojDs9SJWvyUF343bC1g/rnwUwj1PEeWZ+HErcLl06RjXmw
7OPqspVsysMd+88zYsngwTr8l5Ur2ZqHAZ4D0xeQbXkI+FPbcyLZnod3T6+V
qZGdechLSCto+0X983Br+rFzj8gcHkz731e7QA7nIeNHmqyQzOXhpcxnRRo5
hQcDn4HgkAU8nC0b6rqWnMvD0aRhpWbkAh6Sdh41H00u4iElP6q9N7mEB/c7
gxpb26l/Hg4v1+lWT67gwaNlyvIL5Er5++HHrb3kWh6OSJVissj1PHDbuzuG
khvk9ycJvJzITTxoHV1etIDcysP80kYNI3I7D8rjvx0ZQlZIwtXdIyIUyMpJ
2B6mxnn/k/pPwri9npK7ZM0kDHp5581Zsm4SXqR8ddtD1k8C50Bgv2yycRLu
d//dGE42TcLXb1PfuZKRhCmZVRpLydZJWJjk4TuDbJuE+pknWkeS7eXnhzfm
q5Cdk+CdNij05w/qPwkrhiaGvSJzkqBgvXbXLXJ4ElA450cZmZuEjQ5NgYXk
lCR0mvbUFJAFSXi2Z+GbKHJuEvbv3fB4M7kgCbce//qxilyUBOuo27NALklC
3LqsPQbksiRoPm+ePpRckYR7vfJblMiVSXD3Wlv99Tv1nwT7STdrXpDrk/Cp
z7H2anJDEn4vu7jgDLkpCQ/vHzm9j9yahFl9p62QktuTMPG9smoiWSEZTT9e
N3PIysm4vzCu1YmsngyfSMmQpWTNZEwqfeYym6ybDOGRQTXjyfrJ6Lb9p5Mm
2TgZt+bO7d+LbJoMvedFb763Uf/JGGDx5Ukj2ToZEefuf7tHtk3G4BEaky6T
7ZMRc9aLf4zsnIwRm3O77yJ7JmNZqGO+kMxJhmV56Pp4cngyDNL2TQ8gc+U+
fMTEhZySjMBA22UryIJkzM9bnDqPnJuMnt5uryeTC5KxMWe94yhyUTJmr2z7
NoBcIv99Ldr29yCXyX+/dJ3Ytm/UfzJcymdw3pArk5HSoMh9QK5Nhl/w4kPX
yfXJuLr5zs8ycoM8n/aGjcXkpmRUbzr5ehu5Vf483k5eJrk9Gf0N38+LIyvw
kZuwWiuArMyHav+D6m5kdT6s7peNXEPW5GPCDMtlC8m6fLzrrSmbSdbnY1B6
Z/tEsjEfn1wuheqQTfkIyzdU608GHxVl/S71IFvz0U9gmP3jK/XPxxCv9aHv
yfZ8TPvqFPaU7MzHHtPeohqyJx/nj469donM4cNoWtLAU+RwPsz+fo3YT+by
8W+P+a88cgofhQYzhAKygI9jLQfm8ci5fCze79MnnFzAh1/4oo/e5CL57/Vg
QONGcgkf7lv/a1tFLuNj+K/D2tbkCj4uJOg5mpEr+Xg/qvqYMbmWj4cjwnXH
kOv5ODz0d+FQcgMfNb310Y/cxMfY+Xe/dCe38hHnc+v0zy/UPx/1qZ9ymskK
KSj90jPjJVk5BdwVLdIHZPUU1BwIP3mTrJmCWruoDxVk3RTkKlRPPUXWT0Fi
ISQHyMYpyJIcUd5JNk3BmaDPQhkZKfCY/tAog2ydguMjzV/Fk21T8Kbqd1EY
2T4F1wY3JfqSnVPQZ+aTQDeyZwpOHj8Uso7MkedZa5qxnByegvnmq09Zkbkp
WF/3+NtsckoKhtzeY2lCFqRAzyC7SJ+cm4K2mQEjRpALUmCcOXb/IHJRCsYq
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
PVSVepbtvxD+zmXnz7D9F8J8/Yzvp9n+C9ERbzmJ2VGI11eeepSx/RfCZvDf
naVs/4VI8d/1/BTbfyE+19zQZvYR4oIZx/Ek238hhl8UbT/B9l+IHn6GDcfZ
/gthuh56zNFCWOy6uuUY238hnD3Plhxl+y9ESJ3OrxK2/0IoaXyaz5wh/z3X
j846wvZfiOgX5x8fZvsvhO6rcn3mXCF27RkWfojtv/z3CLxfeZDtvxAxuR+G
MRfKv78tdn4H2P4L8Xbu0MvFbP/lfYdPGspcIsSMcCFnP9t/IRz3zr9RxPZf
iE6O+WjmciEe2STE7mP7L8TJA32f7GX7L8Q69XpT5kohEjsac/aw/RfiRatR
eyHbfyF+x55ax1wn/16mhZbvZvsvf/8iH13mp0J8DMpJ2sX2X4i+09o+7mT7
L8SpbO4q5ib5vhnMKi9g+y8/P6UzlrlViKEvJwp3sP0XYoDLxr/5bP+FUP5y
yov5jxCvlhs/2s72X4R23LBmVhRBPSPudB7bfxFW/LWdyKwiwhz32fnb2P6L
sC/XbACzhggHOCv5W9n+i7CnKvLvf2z/RZiQcjyYWVeEv1kdzbls/0Xoc2Op
B7O+CI56Bxpy2P6LoCFWd2Q2FmFT3+h6Gdt/ERL4H9cwm4qwV2lDnZTtvwid
/NurmCE/1zCvk7D9F6Hw5P41zNYiPAlXqxez/RehN8fXgdlWhDMlF1+I2P6L
YLW6jzuzvQiXwqw+Ctn+i9DdLCCQ2VmEtKvpHQK2/yKkm4kTmT1FqK9OUmX2
EeH1HpfcbLb/Ipzo0NNjDhahodvtkiy2/yIkfV9vzhwtwvyBVdWZbP9FMMob
6sjME+Fh3cLmDLb/IkxRWhXDnCHCjvCZaswC+d/H/NqZzvZfhM8ewmnMuSIs
Tf13I43tvwg758zfyFwgwosXdt9T2f6LMKvGPIO5SARtv++jmQ+KoDsqsjyF
7b8IqqtvrmE+IcJt/3ef+Wz/RfBurE5jLhehp17kWOYKEe7t/nQpme2/CAOe
jnFmrhRB2XpkZxLbfxF+uz/PY64VYWKpgxlznQi3LuQ85bH9F6FHL2EM81N5
n4MXjGBuEGF29MmLiWz/Rfh57dkm5iYRjqSeU2Zult9ft+pQAtt/EY7XbF/J
3CbCouRt7fFs/0Vw1Vq8g/mPCDyjAwuYFcT46H6mhcv2X4zETWE5zMpivL3X
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
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
qtVwrlXzcf7YWPt1Y7nOng9p26tu7T24Nta8H+89e8ssNn8+ng8b5dPVn81f
gN+VpyfvCmHzF2D3tZ/9/oxj8xdgqVXnnwe0bP4CHLjmcLD/KjZ/AXQXxo07
9hebvwDq68MKHXLZ/AUInPfF2niQzV+AotHj3EedYvP9cKKbeWbRBTbfD43H
ZQ0fe4PN98PSdg/fXS5j8/0womxc6IRnbL4f2nSeYjS9ZfP90HmZ/O9J1Wy+
H/qOOrXzZr1Kbr4fbi3dMXxqM64l/tjlP2bFnbZcS/1xv6lhnWdXruGP86p/
pt2VcS33x96GBYXTh3Ct8kfo1XYP7jpxne2PP4cc3zDdjWujP5ZmDvxZOoPN
90c9vz8knvPY/IVY++P1utuBbP5CdLtbdckjis1fiMFtE1NvaNj8hehedfDO
xOVs/kLEtl2768paNn8hoht3++mcw+YvRMGqfqbCfWz+QpxqHGmFY2z+Ikiv
Ztw4fo7NX4Sb/vW+2JWw+Yuwp1nv5H2lbP4iRP3tFtrtEZu/CMlPlp7a9IrN
X4S+z555ta5i8xfhcLvhY5fV/o+bvwjnd7vH12nMtSQAjQuPf45szbU0AK63
3+5+3ZFrBODtkbGZc2y5lgeg6Zk3e24N4FoVgJR3z1+MGcF1dgD6127rcsyF
a2MAvgYOPNd9KpsfgPBlJa5r5Wz+YjglO5bXX8TmL8bKSTfCwsLY/MUwHdHU
rYhn8xdjbq8hKeP1bP5iNL22/d3RDDZ/Md73HTu84yY2fzEejg7x1e1k8xfj
fAfH6eZDbP4SdD+7o8XUAjZ/CbpVTFl6vJjNX4I6603H2v3N5i/B+3Zz0+Mf
sPlLcGuatH75MzZ/CY4v/fe34e/Y/CW4/8Zxz4ZqNn8Jbvyx53xVvefc/ECc
LRg8ZXIzrqWB6F94c+KetlwjEPJ67Xb90pVreSB0+hDP6TKuVYFA2fsJewdz
nR2IrlNDEn46cm0MxMtZ8Y8mTuS6PBAj13n5bZzO5ivg01jyy4u5XFsq8GBA
6+39l7DfR4HgNtWj4pRcyxRQDMovKUxkv58CQWm17Bss5dpNgVpe9kEua9jv
q8C/v81blLqZa4UCqZYDWl/czX5/BdaM++5b5wjX6QrsrLXPcaiR7aOAzv3e
tpBLXBsUaJhviNhxk+2ngJf+S27pQ65NCiya3sKm/n9sXwW+OX6s6Puea7MC
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
5J3qt6/L9o/B7hd91eNZZ8dgSfsdWVGsDTGIaGOat421MQZRC1fWL2FtisHG
vuFrP7Auj4HP/cP929Rj+8egmafrxyGsJbGwfl/b7M3aMhZB2+McYlhLY9H8
p6t5LWtZLDLSzB2OsEYsvB68fGhi7RYLqwY3hj9nLY+F7PIYj9r12f6x6Njb
qlcb1qpYfDINuvcn6/RYLMi7u3AU6+ya3++w76uprA2xeLMyPdCftTEWaRt8
f0SxNsWiWfWI7amsy2Px944XwetZm2NR+HVp4C7Wkjj0/Xx+ez5ryzhYDMz9
o4i1NA7OaRde3mAti8N9jyFN/mGNOKzUbFv+nLVbHNr52Ud+ZC2Pw4VOJ2/8
5PePw1nzqq0NLNj+cTC0PfeuOev0OJiK3ha1ZZ0dh63BQV07szbEoffEEa1t
WRvjEOnZfFM/1qY4qOBybjDr8jjss2mkG8HaHAfvXn0/jmEtiUet8zMaTWBt
GQ/5x6c3JrOWxiNW/sN1OmtZPAb0XBk3izXiMeH07EVzWbvFY/nC9638WMvj
caZslyaAtSIej5KOHlXw+8dj8G3poVB+/3ic9SmKVPL7x8Oy0qdJDL9/PHxG
6kLi+f3jcdzesDuR3z8ey4b3OJbE7x+Pkva2G7X8/vG4ob7qncrvr0JFXMPP
S1lbqDD/VeGSdP7zUOHm9fPnV7K2UqHHuoLvGfzno8L5KeOs1rC2USHt/utW
a/nPS4XW/7b7to61vQo7fxlQtIH//FRYd04duZG1swr1Qka2yuY/TxW6WP31
12bWnioMddxvuZX/fFVQ/JOkyGHtp0Kv5x0KtvGftwr5doFft7NWquDZeHrX
XP7zVyH4yZGRO1lra37+66luu/h7qBC/t3ribtZZKuj0PiP38PdR4f3k/jZ7
WeeqsLGgfe19/L1U+PnghInv/Jqfv3pLxn7+fipstvCZYGBdrELfr7E/+Dap
0LN/5LYDrEtVmPfk8qiD/H1VqHxTeZfvShXajx7qd4i/twq77GRv+K5SofG+
ToF5/P0TsGdFaCXfFgmofh3ldZi/fwJcnfTFfFslYJDxbe8j/P0T8HtQ9Qq+
bRKApLev+ZYlIDeyxZij/P0TUOKybR3fSED33PL/+HZOQJ1Wkv75/P0TMKbj
4Bi+PRNQK/Hsab7lCSgfcekn334JKP4n3uEYf/8EpAU1DedbmYCKc1v28K1K
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
BA==
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
tPzK+s9AXFWD73fWfwZiFJWTW1n/GSjp8jb7J+s/A/7TvfN+s/4zUHX9ye5O
1n8Gag5qZSm4U/8ZyM2MSuxGLs3A37ZG757ksgwEjUy16E0uzwCv15bxSuTK
DBgl723rT67KQE/DJZcHkmsz0D/AM1qF3JSBD24as4eR2zPQp3tC/XCyQiYE
vffJRpEV5VYQzhlDVs7E7XnOz8eSVTOh+WGityZZPRN49fvPBLJ2Jn5Xf46b
SNbLxI/4bj10yIaZ0BjiFD2VDPn9CwNa9MimmXDy0HSaQbbMhOfnEzdnku0y
kXv72gRDslMmegb58eaQ3TMxQPPOEyOybyZqX79VX0AOkZ9HlG5eSOZl4taJ
6ILFZH4mMn/pVJuQBZnYfrxymCk5OxPG7aIly8l5mUiv2OJjTi7IRNLQbaIV
5EL5+3MrPmHJ+s/E+8Vmt6xY//L5Xee+sGb9Z2LZQ9lHW9Z/JsKOejfYsf4z
MSbwQaM96z8TI17f+uLA+s/EMy/3qvWs/0wcT738yIn1nwm7oMpLzqx/AcyN
r+e7krsLoP05M9GNfQ8CDJu8zMWdrCTAzHOdczzZ9yHA934X+3mRVQTwT894
5c2+FwHafBLyfcijBJh676i7H/t+BDggHai9jawpwKidpR8C2PckQJXgZnYQ
WUcA3U7d5SHs+xIg07z3z1CyvgCTytbvDmffmwAa2UaLI8lGArReO/4hin1/
AlybfiWSRzYW4OyRaJVY9j0KYPms7UAc2VyAS3N0Zyaw71OAyYsM/kskW8uf
32C4CZ99rwIUm1TdTCY7CDA6Iss4lX2/AhTdWXY5jewqQFj3rvoZ7HsWwObd
nf2ZZC8BHFqPDxay71s+v7Q4UkQOEEBrX3O1mH3vAjx+77ZESo4QYOD+Mftl
7PsXIPj3BIVscrxA/j0nrtnO9kH+vH2XHckhpwkQui74zw62HwL85z7SdCdZ
In/fJfOFu9i+yL+XG3XPdpNzBVB/qT18D9sfeR8GXe32kvMFqO3KE+9j+yTA
jiVH7uaTjwpg+yNN4QDbLwFWNk6ZfpBcJL//VeZUwPZNgJYD5amHyCUC1B2q
Pn2Y7Z8A0wMrK4+Qrwuwzufc76NsHwWwq+UPP06+J8873GbmCbafAvTQ0lxR
SK6Q9z36r8tJtq8ClLTVBZ0ivxYgVticeJrtrwDGl0dJisg1AszX99t1hu2z
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
YpgDJFD0XLKdOUSCR/lPCpkjJMi3HVvGzJOgepLeO+Z4CTTvKvxg5ksw451Y
aQDbfwmG9qsbxyyQYMivbrOZJRKUmHxYwZwtzytOcGXOleBg7NdQ5jwJEk6M
zmTOl8Ds7OB85gIJxk57VMx8VAJhse195kIJkqvz3zMXSbBxaUkbc7EEb4N3
9lZm+y/BzF7LRjOXyvtK/E+P+br8e43rYsxcJoFf+oA1zPckuKhb58FcLn9f
bcII5or/77dXJnOlBEVKZnuYX0vQ4uV4mrlK/vxKC24w10jwe2vTM+ZaCdyG
+tcyN0iQGXf9F3OTBK9n1vYZyPZfAscjb0Yyt0vwwGm/DnOHBNmPFsxjVpDi
RfAxC+buUrjd++rIrCjF/SXdtzIrSbHO8Wsks7IUIxOOpTOrSFE1bdFOZlUp
Fj07epR5lBT7qxsvMqtLMfdOj7vMmlL0+tX6gllbivdvLtYy60gR/NH+J7Oe
FNbhj3sMYvsvn99bQ4XZUIpNv83HMRtJ0f+MpR4zpGjKmzqf2ViKvpqfzZhN
pVi6L2wts7kUsbFf3JgtpUjS1A9gtpZieL19DLOdFC2z1mcwO0hxb/P8HcxO
Uti9/nOQ2VUKs2ZZEbO7FA49la8we0mxLGDzfWZfeX+ynS+YA6R4c+vUR+YQ
KfSdDn5njpD3eS68k5knxeHxer0Hs/2X4sO/6yrMfCkO7JijzpwmxXwL4WRm
gRQD3G/PYpZIsXt+9ULmbClk496ZM+dKUeJ6aQ1znhRdbKKcmfOliF40zpu5
QIrQ8EPBzEel2GChEstcKEV5d5c05iIpchulMuZiKW5ZHctjLpEiNerQYeZS
KewvpBQxX5fi3YpVl5nLpOga33mL+Z4Un/IyHzGXy/ut7/WKuUKKB4fdapgr
5d/fuKONzK+lqJVV/mCukuKRWcM/5hopquM+K6qw/ZfK/z24M5C5QYqBCdIR
zE1SGJabajC3SpG3t2Yyc7sUO+d66DN3SFHx4pkRs4IMJhenmDB3l2Hp6K0W
zIoypBhl2zAryTDK5qgjs7IMHnsPb2JWkWHeBrE3s6oMN264BTKPkiF9wPhI
ZnW5Ax/EM2vKMFbPJY1ZW4Y+wdViZh0ZAmNW7mDWk6E94eBeZn0Ztl+oP8Rs
KMNd61EnmY1k8E2eXcwMGV6lLf6P2ViGJ6I5N5lNZZA8ULvPbC7Dff+mJ8yW
Mhw8eeIls7UMV0sc3jPbyTDnxs/PzA4y7P/D+8rsJMMQQXsrs6sMo0+t/8Ps
LsMDwekuQ9j+y3De/mcvZl8ZWudN6s8cIMMwd3MV5hAZ0HP9COYIGQaabFBn
5slQbGk5gTlehs/W03SY+TK8ieg6nTlNho0t1wyYBTLc+xA4j1kiQ5dA1cXM
2TJse3LElDlXhvFaeiuY82Q4nL1/NXO+DJMtldYyF8jgHOi6nvmoDLt1j7sw
F8pwa/8Xd+YiGWz+Dt3KXCzDhg2ztjGXyCD+ujSEuVQGw0dmkczXZdDXWRTL
XCZDT83JScz35N/T655pzOUyLAh7KmCukOG/MVlS5kr5PjWZ5TC/ln+//Vt3
MVfJ9ys3cx9zjQyeJWoFzLUy7Mrcc5S5QQZrA9WTzE3y91MRe4a5Vb7PSe/P
M7fLoO6rf5m5Q4Yrx8OvMitkIc/53E3m7ll4f/jzHWbFLFgfUHrIrJSFwG0T
njArZ8FLb+ZzZpUsDPpj+IpZNQvfm6a9Yx6VhQW66tXM6ln4/LjbZ2bNLMS3
v65j1s7CppIjX5l1spA6x7eZWS8LxzIm/WDWz4JBxctfzIZZWD4hppPZKAv/
7R7dZSjb/yxMWFfYndk4C7f8Zysym2Zhv8L5vszmWQhT0x3AbJmFSx93DGK2
zsIun39DmO2y0Pfp2uHMDvLnnXpkFLNTFholLWOYXbPwbcwMDWb3LGz/7DGB
2SsLmd2yJ/6//w/tJs0O
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
Gl9so1OUn/dqqNl+WiTDrdbx6Xm0TAbvXO2qM3SmDH+HvOlbTGfJcG/nD9tb
dLby+9raxT2g98iQ79ox9zmdI0PCjz633tCHZZgwLL22gc6TYVFr74YfdL4M
jfKrX1uf5vsvw7lXGV860oUyVH/4+FqLLpJh9O579/rTV2TQaZx7aihdKsPl
4tXiUfQtGZ40ajub0OUyvFoRYTSdrlA+n+sZDXPoShmWq244uIh+KsOmR+0c
7Olq5fdtdG/nTNfJMFZz5z5Pul4Gn8rj0zbR72W4+XlfeTjdoPw9/oxdHk83
yfBMaFuVRjfL4D+y/+IM+rcMTd6vi3fQKnLMfHDaMIduK8eyB5mpebSaHMNf
iV4X0BpylPvsn3iJ1pQjtOal4DqtpbR0/uW7tLYcltXvfj2m+8mR2PvayFpa
Rw7tpJfL3tJD5FAPmBfyhdaX42SfdvKftKEcJ470ymldwPdfjg9rkk6o0+Pk
2L7S+XQ32kQO+yuHT/ShzeToedwjR5eGHEPN9spH0BZyLPBZGzqGtpTj8vLD
y01pKzkMvscbm9PWcuRZ/Pw3h7aV49eETqU2tJ0cUwuvCZfTDnKYFo40X0M7
ymGhPafJjXaWY96hgTu8aTc5ns8pMA+iPeUYc7n3i0jaW45hT+f6J9D+cixc
vqh1Oh0kR2PThEQFHSZHH+d/attpgRzJS45H7aVj5Xjks7TxMC1UPj/7Lyvz
6RQ55h5JuXSOFslxVMVwQDEtk8O/9qHfDTpTDtdn0st36Sw5pm1yV39MZ8ux
d9iqedX0HjnGewbFvaFz5IjPv1DwkT4sxyjPia++0nlylDXXq/+h8+VQPft4
eNszfP/lkHXQNO9IF8oxY7JkcTe6SI4/Wa6retNX5LgRIHXSoUvlqFIf6DiM
viWHUN5lmRFdLsfq+etnj6cr5Bi01mS0GV2p/LxW4Voz6KdyZCyY9nkOXS1H
R/e4Emu6TrmXx5KMZXS9HBvdTjquot/L8cnr0GAXukHZJ2lK9Xq6SY7NZ30U
vnSzHDF/588Kpn/L8Xd+5adIWkWBgK09pfF0WwVu3u9snEqrKbD0+bVrUlpD
gU9ZFsu20JoKfH6XWpNNaykwfVeOy35aW4GF4i0vc+l+CujEudvn0zoKzLfo
W3aWHqJAZ9FJk0u0vgJThkzdXkIbKmB3+uyfMtpYgaSfxssq6HEK5G7ed7CK
NlHAevKg5mraTIFCwb5pb2go0NzOLOoDbaFA+Zo3hY20pQKP9I58+UFbKeD5
XK6rcpbvvwKXu+2xak/bKlBr8dxbg7ZT4OjnOendaAcFPore79emHRWYLb95
dgDtrICV5/uSIbSbAuERtndG0J7K5zWqw11j2luBoc+6lE2g/RXwqtlQbEYH
KZAm0s83p8OU+02aucOSFiigpn89dgEdq8DK7DPOtrRQgfiXfaetoFMUMB75
tbsjLVJgWP7cly60TIElBwflrqczFbhhFunjQ2cpcEHqZhxIZyuw5V7tf2H0
HgW+92rcFk3nKLA7fLuVkD6swCHtt19T6TwFlv+o2iyl8xWYbBBgspkuUH6/
k0V3t9OFCphvvuiyhy5S4F9FYNMB+ory79d8DD9KlyrwbLR+65P0LQV2TRgR
dZYuV/4eV/z4eZGuUMAyZovXVbpSuY+024sb9FMFtNa5zimnqxXY/2jLkQd0
nQLvC/I7P6HrFfCoKnCvpt8rMFz18MVXdIMC+e2kmu/oJgX6Z/o6NNDNCrQN
W7j7K/1bgQwPo1c/aZUMbNbW0lU5x/c/A64T2q1oR6tloMmrfao6rZGBp579
znWhNTOwonxenRatlYFFkzar9aG1M7DUvIP+QLpfBvZFZZsPoXUyMClxrd1w
ekgGCl8vdTei9TOwZXDkprG0YQb+XqkOM6GNM/BwniByCj0uA1XjnMLNaZMM
JDcnBcymzTIwpeM/DysaGej17PIKG9oiAz2rqmYupS0z0N1jnqE9bZWB0gbt
zo60dQbKy2a/c6ZtM3DE4WmxO22XgTtNVRkbaYcMpP03e50f7ZgB06RhY4Jo
Z+X30Y1oDqPdMuDUvPBsFO2ZgSXWOwPjlf4/gel5Sg==
             "]]}, {
            Hue[0.5585438199983166, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxF1ndYzf/7B/DKCiE7hCRkF6EIT1lJqKyMdKJIS3uX0951dkUIoQgZERnZ
2dnZJzNZWcn+ne/1+9z38U/X43qd+9zv1/t5ntelz/I1Dm5aGhoaD5tpaPzv
7///q5/4/3+V//3VwICEmJFWf57+Z21MMatYn/qTrIsr10YPuv+d3AkxHeKr
hn4j66FqoYcw+TNZH3am1we/+Ug2QIxO+dk578mGkN9yHH+sjmwEJ9G3pGG1
5P5YrKuRvf0l2RhvU7SdjJ6TByHEquLKDiV5CK6O+lFt8oQ8DC4ntgWefEg2
wdEJ1ZK598mmuH35dP/3d8kjkFh9qG/6bfJIKGuMokxuks2QoZ/X/8F18iiY
9r3UMeUqeTS2bgs3H3+ZPAaTu2UnN1SSzfFndf/Gg+fJFvAvto0IPUseix9V
Ns0nnSaPg/fC6Iy2FWRLfGri0qzmOHk8cmTJy8vKyRNwKWR7ruwIeSK2xSVt
CjpMBvT3dFy9pPQ/C4Hv52a9nXqAzidBNGRuj1H76HwSQkVLPhjvpXMrXC8s
W9RnN51bwevTHYdeu+h8Mi6vMr/eu4jOJ+OMdfTZfjvofAo+X1tmbLKNzqfg
7aei+glb6XwqjPpbd3TYTOdTkdtzbOLqTXQ+DXopORMTNtD5NLg9kI7atp7O
p+NJ88BlF3PpfDqaz8wp+ZRN59ZI/hBs2EtB59Zo13LDztkyOp+Boul7JsZJ
6HwGPu53rS4X0bkNdgSJPBsz6dwGlgVd680z6Hwmips2LI1Ko/OZGHrPsuhc
Cp3bYuGmDlfaJ9O5Lbp82H/MJZHOZ+H7YB//0ng6n4WJrkUvdOLofDaEuk9a
ucfQ+WycfpH76PxaOp+D0XnR9gOj6XwOcs5PcsmKpHM7fJYXN/kR/p9hh067
15usDKPP28H7w9+nd0P+c4UdcmfebzkzmObtMV+O7acDad4emrZOu8cH0Lw9
9vt6dD3mR/P22LWg9NF4X5p3gGfQhm+nfWjeARPHyRbP9KZ5B4xX6je950nz
DrhicaXOzYPm50Kcad2i0Z3m56LeY4ZDxiqan4tPQdln+62k+bkonKaz8JQr
zc/DTwuJlmAFzc/DV2ujCs3lND8P0U+vJm8X0Pw8CA/snD/bmebnIyrvVe8f
TjQ/H0Wex5Xbl9L8fEw8Gy5euITm58Pva9jg1otpfgF2XOtXeMqR5hdgbFyj
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
/DOPHZqCtl3elBzm/FNQ3jC2LTs5BROUH70Ocf6q88tNr5Zy/qrnKQsexs5P
wdA9VuKDnH8KRpe5fTvA+afAru7RYnZZCjou23ZqP+evep8jjw1kV6Zgi6iX
dB/nn4IeWy7+KeH8UxC47uhqtjIFrvs/3N3L+afgpPGKqez6FMy16ly6h/NP
Qc0Mrf5sjVS0Fw3I2c35pyLIM7Y1WzcVAnNdYTHnn4oPjte+7eL8U/He7KgX
2zgVjy1uvNjJ+afi7gPdZWzzVESLgquLOP9UtLj/by7bOhVdzXdWFXL+qTgz
OmA22zEVESscr+7g/FOh47BwFts9Fanrva9t5/xTMfNJjh07NBU3j9+9tY3z
T8X5Z0aO7ORUfP8pfFzA+adi9JHaFeycVKy+s+jtVs4/Fa46NwPYhan41HvO
ny2cfypO372WxC5LxbLfszuyK1Jh5HJ102bOPxXDHkwfyq5KxeJJx8rzOX/V
eZDxTLYyFU8dUx9u4vxTYXn7qRe7PhWbbvX/t5HzVz3fdCcJWyMN6/rH9Gdr
pyF4tah8A+efhtttU+zZemmw67a6No/zT0Nd1jAh2zgN36Pu6bFN0vD7s8v+
9Zx/Gqq0rtiykQbfcx1r13H+adBeOCaebZeGJ/fM+rAd0+Dg1epkLuefhpuW
h5zY7qrnDRr9J4fzT8Op6Skb2KGq53lVPIEtTMPDtE3KbM4/DUn+znFsURra
PKzrz85Jg21LXFZw/qr7T3HyZReqzu+jC7skDdmd3xyTc/5pyLGd58quSMPp
20IddmUazLW9S2WcfxqKp3R1ZlenYfnbqJZsZRr6umw6KOX802DZNlzArk9D
2DKdNuzGNHQ5Ne+ohPNPR2mhvTtbOx1L0zS7snXTEfhs+Xkx55+OskGBwWyD
dPR7MXIA2zgd7SX51SLOPx1a5WWpbHPVvtrw8Wykw7DwZX0W55+OVSnfC9h2
6Tjbe+8itmM65Jqt27EF6ZhZ2fJcJuefDlfdnRFs33R4hNWNYIemo3bbxboM
zj8dTuOmbWUnp2P6s2VL2aJ0aE7r0IWdkw5lJ+eqdM4/HV01pqSxC9Oxvfzk
NHZJOrz+Vmmxy9KhFxt8Mo3zT4d+k72R7Mp0FCNsLLsqHeW/bzWmcv7p+P7r
+GG2Mh17mo0OYdem483zsWPY9emYveLy9xTOPx19574qY2tkYHpCajhbOwMj
rx2yZOtm4EFTj3/JnH8GrmttPc02yEC3AkEi2zgDVhc227BNMmAzy60d2zwD
27vtvJ3E+WdgaIc169jWGRjS+4CAbZcB28FBA9iOGZD0PfghkfPPgNN3n0Ns
9wysyCmIZvtmYOvPudPZoarzTpG6bGEGTJ70eJDA+WfgvsOIArYoA4I1J3zY
ORnQHHnSgp2fgQGbRjZjF2bA63D3G/GcfwZSYwI2sMsy4NZsvAe7IgPfbYPH
sCszsNi1VzN2VQaKF5ndiuP8M2Ax/vBmtjIDE/ps92XXZqBNdw2w6zPwbvzZ
duxG1fvd9ulpLOefiS4eSSVs7Uy8KYyPYetm4uLaWge2XibutN1vxDbIRPtQ
ZUMM55+JlU/9L7JNMiHzcM9jm2di8qSKNWxk4mN62GS2dSZeh0q7su0yMWNE
m3dCzj8TLWtfVrAFmbh7SV/Bds/EwDb7PNm+mZj4fPMkdmgmWsd96MoWZsLK
SPFhLeefiQkaOefYokx0c/iSx87JRM6CHYHs/EwMsj1gyy7MRI1/l37skkwE
6VT9ieb8M2G+9OlddkUm+u+YXMKuzMT5kb9T2FWZGGWj7cquzoSh2aoJbGUm
LlnqdWPXZuJPSfevUZx/JrSfel9nN2airEv7XWyNLCwvapLE1s7CszdTVrB1
sxA15PZEtl4Wvp0v0WcbqM51H/yI5PyzcMxlzj22SRYuddItZZtnoVtCDykb
WZC38/NjW2chpYOuHdsuC+vefx/GdszCFU3jtmxBFrL2bXofwflnIV2w7Crb
NwsPA1bsZodm4Z79ngy2MAujl0/wYSdnoaFNxzlsURbmnRxsws7JwpuapPbs
/Cysfdb/SzjnnwXj4dp32CVZMB8z+DC7LAuWnlm57ArV+7Q0i2RXZmFF727O
7KosHEocb8WuzsLs2vx+bKXqfR+1asmuVTnI8H0Y55+F4ZKJN9iNWeiTmlvK
1hDhTPXwdeymIrj91FzL1hYh2qudK1tHBNnuhTPYuiIsHP9gGLuTCEl5ik5s
PREabNN/hpL1RZDeOKpkG4gwf0+fC2wjEaa7V+xmG4sQlqCQsYeI0CljawTb
RATzFq+Xs81U51ECG7a5CA9C241gW4pwIuFLNzZE+DxcR4s9RYS8povqQvj3
KEKd+P5Ntq0IjSszytl2IjzuGFjAnidCwcCMDLajCLZjq4PZS0U4Vz1PwBaI
8CxHy4btKoJ/u5qRbHcR9G9+7Mn2EiEhZJg221cEw+y8z8HkQBFcL1o8ZoeK
EL+jWSU7UoSiy//2s4Wq91M1YCM7XoRvDlEp7GQRDn/4F8hOF2HXpL0CtkiE
mXWptmyZCFeSJObsHBHGHz1nxM4TIdXQqD07XwTB8t1/gsgFIljpu9SxC0WI
/DLhHrtYhP7p086yS1ROC9nHPihCT8WNjewy1e9n7rx09jHV79vjXxi7QoQ7
sTdXsc+q9k29Op9dKcKFJR8ns6+ofg9rzEewq1TnQwoN2LdF+DN+Qjt2tQhv
5vz8E0h+JMLGdo/esZWq/Ac9f8h+IcJgu3aX2bUibB0mOMp+J8KA4DtF7HoR
JtzzyWV/Vc03GZLCblT1e5dOGPu3an+c7mq2hhgfx49ZxG4qhjxTOIOtLUa3
Qe8s2Dpi5J0LG8TWFeNLl4E92J3ESL39ozVbTwyf0re/A7j/Ysz1+/uebSBG
fIXpU7aRGLVLEqrYxmJo/mk8xR4iRp1T+gG2iRjLLCZuY5uJUWDTPpttLkbh
LK0UtqUYz/+2j2BDjKU94M2eIsYBQboz21qM9hkN9mxbMSyco6ew7cQIUvQd
w54nxrbPLweyHcUYZHZOn71UjIYep9qxBWKs9byvxXYV4/KLNg3+3H8xVtks
e8P2EmOR86VHbF8xxr+2r2IHijF4+9cz7FAxygX7D7MjVfd5lLqLLVTtexy1
iR0vxq/BaVJ2shjWGfuT2OliVFR+iWCLxNDePtuXLRPD4P1pV3aOGNkr7Rax
88Twf9gwi50vxtDOh6zYBWKUPs4Ywy4UI/xf1BB2sRj2UxP7sEvEyArf3oV9
UPV79HjSml0mxpFnQzXZx8RI3yNr8OP+ixG5vsM79lkxdEJ21LArVXm3m3uP
fUUM5xGdr7KrxJix9/1p9m0xRs9/VMauFuPCF+Ue9iMxmi/5VcBWiuG3ZPB6
9gsxHp/zFbNrxZB6Xk5ivxNjQq9x0ex6Md7sPRnI/ipG2y+OnuxGMRKPNl/O
/i1GzP1KR7aGBFv6bprDbirBM6+UaWxtCTakJI1n60iQOTvXjK0rQZXoxGB2
Jwlq+n03ZOtJkPLcqjtbXwKt/M3t2QYSXDPt2JJtJIFyTbYG21gCX9Nhjb7c
fwm6zL73kW0iwcUNktdsMwmuNzo/ZZtLcGHMxHtsSwnyR5pcZ0OCwnMjLrCn
SBBzYdpJtrUEXTt6HWbbSlAeu2Uv206CX/VvdrDnSXDa3Cqf7SiBw6hdOeyl
Egw6bSRmCyQwLt+TwnaVIOK3dSzbXQLR8i/hbC8JRl/aHcD2lSBMN9SLHShB
WQcHN3aoBBv3jFvGjpRA/7TZQrZQgpDB4+3Y8arvvzhvBjtZ9bzhEVbsdAlW
99w3ji2SYIHkmxlbpvq9lFkPY+dIMNB35wB2ngSjcrv3Yeer9nXK7c4ukKD+
VL9O7EIJ3OIq2rCLJXhisboFu0T1ezvfW5N9UIJJOi9+ruH+S9D0XelX9jEJ
EqzlH9gVEtg3ja1ln5XAQivyGbtSAtt+cY/YVyR4apd9l10lwVr3sir2bQk+
zXl1iV0twYy3BufYjyS43Mv9JFspwbdr5UfYLyRIU/Y4yK5V9c08eQ/7nQQj
jmkUsesleG2XsJX9VYKZjzpvZDdKMGfK/hz2bwm6rVksZWtI8dGqbSa7qRQu
268ms7WlGC3MiWPrSOF52CearSvFsJF2YexOUnx+YBnI1pNijsJsDVtfim6z
xniwDaRY+HqKG9tIiumznARsYymWrRIuYQ+RAr32LGCbSFGx+JU920yK580G
zmKbS1GvHWzNtpRixqyrk9mQQnps2ET2FCnWY91YtrUUbmfajWbbStF/eJYp
206KoT56Q9nzpOjhucuY7SjFJl1rI/ZSKXbM+NCbLZDCQXNjD7arFK8MF3Zl
u0vxOLdbR7aXFFftX7Zl+0qROfpoK3agFN3NcpqzQ6XIGL1Wix0pxYRBa/76
cP+l2PNr1U92vBTC7NUN7GQp4usCPrPTVZ+vSfzAFklh5rGlji2Tqv5/d/4V
O0eK5Befn7HzpPDbN+ApO1+KO+dcH7ILpNjcbuc9dqEUbyO/32IXS9Hwy7aK
XSJF74idV9gHVb+/2nYX2WWqPMyizrGPSRE28/MpdoUULXqtOcE+K8WTdV+O
siulsNm39jD7ihSH7DoeZFep3of7nhL2bSme1drtZldLMeDUzyL2IykianZt
Zyul+GbhupX9Qoq7R/vms2uliJ1Xl8d+J0Xo98O57HopnGXpCvZXKX72cJey
G1X5rLURsX9L0WXvyAy2hgxX8vqmspvKkG3RPYmtLcOr4K7xbB0Zpk/rEcPW
lWFZbr9odicZvrqMjmDryVAvnhXK1pdhcQ/PILaBDEvqM/3ZRjIMa3JkDdtY
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
Zw==
             "]]}, {
            Hue[0.7946117974981064, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
Enx2K83fBMtcHdd7Upq/CZFd7xf8ENL8TYhotf47Ipvmb8LK4rbU5ek0fxO4
/aUPklJo/iY0OPauvZJI8zfh5dflXn05NH8TTBpSBQ7RNN8TXQd7zikJp/me
yPutbaUWQvM9cXLq5mshgTTfE3WLRdmv/Gi+JyrXOOWt8ab5njjnc/bBXQ+a
7wnvsadm2rjRfE/s8Ik9+HwDzffC5Zlu4zY70nwvjJpyN6eXPc33wmk/2x+7
bWm+F1SN8ycuW0XzvRBzPkDv1wqa7wWr4+Vf9v9H870gnMTb4GJO872QZdEe
pG1G873R3rF6VNNCmu+Nu0fbLU/Np/neeKHu1cabR/O98bnBpL+bEc33hiDS
gLtoJs33xvnawZaTptF8b9xSeGE/dCrN98bqGXk7VPRovg8iZ/upKkyk+T5Q
cN2Z33M8zfdB0+JsY+WxNN8HGQFnXqpr0XwfSGcfiRs/iub7YO0WLZX5w2m+
D66ZPg12GErzfTD88aUTseo03xdvjO6V7R9A831x/9/Y2IeqNN8X38c3fVPp
S/N9EXPfU8VMmeb7YpG6cnmSIs33Bf/o4o7rPWm+L3a+PVau3oPm+2Lrotaf
7v/qu+f7QcPtRW5ZR7e1/DDh7OLtg9u7DT882DCiNeR3t539MP/l5m1Pf3Sb
44ehPV3jlnzrdoEfyoT6uaebu13hh1OG455O/tztRj/UjDlisu8Dzd+MmKGL
T417T/M34+/fmNkH39D8zTh0R6Fs+iuavxldG3KnVb6g+ZvxYbJqju1zmi/7
/YnWz788ofmbMTbPpSOtnuZvBq/O5r3eQ5rvj63atjn379N8fyCxsEfcXZrv
D2l65sipd2i+Pzz14xte19B8f4wQt5lsv0Hz/dH1OdHQoZrm+0PN7NqxUVdp
vj+G20Uee3OZ5gdguYfnhOJL3VYLwBTlAFXORXqeALQqJTrYnO+2QQCcpu3r
NeUcPV8Ajuh966lytttWAVhnlWX56TQ9bwA+xJQ9rj3Z7YAAzPl1ZWdZCT1/
AAyn9M8pKu42PwA3D/U9s/Uo5QlAdINpK/9wt4sD0PbdfGX6QcoXAPvia6dT
i7pdGwCpVcS4jH2UNwDr100UCfd0uyUAFlEnW/N3Uf5AuLkq/XeogPIHote2
sdzzOyh/IIZ6Dt5xP5/yB0Ky82/ml62UPxBhyX0t++RR/kC8PZxwXy+H8gei
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
XMDDGE7Wg6XkIh6sEtM/zScX8xCWO2HQLHIpD+HvFyyfQq6Q5Xt+XKpDruah
YpLD9xHkWh7WVw3bMIhcz0PE25vPVMiNPDgqWvnIk5tkfb1NUvlzmPrn4VzC
srJv5DYebEfHRH4gy6WiZU6XxUuyUipsco5NfkxWS8Ugo80j75I1UqHsNGLU
dbJWKl5xc6ZcIuumIj/gsuVZskEqVIZxYo6TjVLhWHq0/AAZqdhzxaDPLrJ5
Kja0vPfcSrZKRcfE0w+EZLtUuG6LsU4nO6ci6YDWs0Syp+x5fsSHRJMDUjHM
JmlUCDk8FYHPVer8yJxUeD1ry/Ug81Kx9KGh7wYyPxX7eXmWduTcVPT5MMjE
mlyQCj8d7lwLclEqanfcNVtELk7Fg+/P1xuTS1Nh+S2LO5NcIfv9gutn9cnV
qbAyCeqYQK5NxbHZgRba5PpUOMw8sG84uTEVjf17qKmTm2Tvo259cj/Wv+z8
cpFyb9Z/KqKsq/LkWP9pcB+7bdafQ9R/Gu4MGND4g6yWhuPjVaVfyBppcNoe
YfeerJWGca/mTnhJ1k3DL8Ec+adkgzT8jnD6UEc2SoN+Ttaz22SkQXPIqafV
ZPM0+K46+66SbJWGiIeJf8vJdmkY4PBX8wzZOQ3K11RXHCd7puGNfmHKIXJA
GqLqttfsJYenYef45pEFZE4arlZEhW8l89Jw2NvghZjMT0MPjd9W2eTcNPRv
On0rlVwge3/jnGyTyEVpiDO7/z6WXJyGkKae3AhyaRr21D/WCyZXpGGdCl5s
JlenIXGbdr4XuVZ2ft/LzZ1cn4ZBYxRmbiA3piFT65naOnJTGv5lP/9tQ25J
w377n+9Wkttkfz+r70sLslw6Wj0GvjVj/aeDZ/r9O1j/6Ujbn6tizPpPx33T
75Nns/7TEfj+05pprP90OGVtSZ/C+k/HtDVB13VZ/+loTHiqpsP6T4dLTK6L
Jus/HSH3c84NZ/2nw2b2tdFDWP/p8IxTTx/A+k9H731+cv1Y/+nQvV4Rq8T6
T4fWpM5eCqz/dKyboirtOkj9p2Pgurf6HWReOgasC6j9TebL5rVvj/xOzk2H
3ninKc3kgnRMb8lv+kAuSsdd3vLDb8nF6ZCaOoS/JJemo6+gdPlzcoUsr5LN
xMfk6nRkOI1SfUCuTcfijQodteR6WT/q7V9ryI3p6Ij79Lma3JSO8qc3v10h
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
ne1/DuSqfjb/z/8HR2bk4g==
             "]]}}}, {{}, {}}, {{{{{
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 1.00000000000001}], 
                   Offset[{0, 0}, {1530.2291666666667`, 1.00000000000001}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.00000000000001}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 1.00000000000001}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 1.00000000000001}], 
                   
                   Offset[{0, 0}, {1650.1491666666668`, 0.9648710232873318}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.9648710232873318}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.9648710232873318}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.9648710232873318}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 1.00000000000001}], 
                   Offset[{0, 0}, {1530.2291666666667`, 1.00000000000001}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.00000000000001}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 1.00000000000001}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 1.00000000000001}], 
                   
                   Offset[{0, 0}, {1650.1491666666668`, 0.9648710232873318}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.9648710232873318}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.9648710232873318}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.9648710232873318}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{34., 6.500000000000007}, {1650.1491666666668`, 
                    0.9648710232873318}], 
                   
                   Offset[{34., -6.499999999999993}, {1650.1491666666668`, 
                    0.9648710232873318}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999998}, {
                    1650.1491666666668`, 0.9648710232873318}], 
                   
                   Offset[{9.999999999999998, 6.500000000000002}, {
                    1650.1491666666668`, 0.9648710232873318}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.01`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22., 4.884981308350689*^-15}, {1650.1491666666668`, 
                  0.9648710232873318}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 1.}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.8243744069135209}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.8243744069135209}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8243744069135209}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8243744069135209}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 1.}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.8243744069135209}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.8243744069135209}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8243744069135209}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8243744069135209}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1650.1491666666668`, 
                    0.8243744069135209}], 
                   
                   Offset[{35., -6.499999999999992}, {1650.1491666666668`, 
                    0.8243744069135209}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1650.1491666666668`, 0.8243744069135209}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1650.1491666666668`, 0.8243744069135209}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.05`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1650.1491666666668`, 0.8243744069135209}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 1.}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.8946239252586715}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.8946239252586715}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8946239252586715}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8946239252586715}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 1.}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.8946239252586715}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.8946239252586715}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8946239252586715}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8946239252586715}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1650.1491666666668`, 
                    0.8946239252586715}], 
                   
                   Offset[{35., -6.499999999999992}, {1650.1491666666668`, 
                    0.8946239252586715}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1650.1491666666668`, 0.8946239252586715}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1650.1491666666668`, 0.8946239252586715}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.15`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1650.1491666666668`, 0.8946239252586715}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9578713566784549}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9578713566784549}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9578713566784549}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9578713566784549}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9578713566784549}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.7541163901862942}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.7541163901862942}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.7541163901862942}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.7541163901862942}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9578713566784549}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9578713566784549}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9578713566784549}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9578713566784549}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9578713566784549}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.7541163901862942}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.7541163901862942}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.7541163901862942}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.7541163901862942}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1650.1491666666668`, 
                    0.7541163901862942}], 
                   
                   Offset[{35., -6.499999999999992}, {1650.1491666666668`, 
                    0.7541163901862942}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1650.1491666666668`, 0.7541163901862942}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1650.1491666666668`, 0.7541163901862942}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.25`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1650.1491666666668`, 0.7541163901862942}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.7788513670529555}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.7788513670529555}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7788513670529555}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7788513670529555}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.7788513670529555}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.6838484579666546}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.6838484579666546}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.6838484579666546}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.6838484579666546}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.7788513670529555}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.7788513670529555}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7788513670529555}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7788513670529555}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.7788513670529555}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.6838484579666546}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.6838484579666546}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.6838484579666546}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.6838484579666546}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{30., 6.500000000000006}, {1650.1491666666668`, 
                    0.6838484579666546}], 
                   
                   Offset[{30., -6.499999999999994}, {1650.1491666666668`, 
                    0.6838484579666546}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1650.1491666666668`, 0.6838484579666546}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1650.1491666666668`, 0.6838484579666546}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.5`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{20., 4.440892098500626*^-15}, {1650.1491666666668`, 
                  0.6838484579666546}], {0, 
                 0}]}]}}}}, {{{}}}}, {{}, {}}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> False, 
         ImagePadding -> {{All, 74.19999999999999}, {All, All}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["time", TraditionalForm], 
           FormBox[
            RowBox[{"freq", " ", "oblique"}], TraditionalForm]}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 440, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           RowBox[{"{", 
             RowBox[{
               RowBox[{"ba", "\[Rule]", "1.5`"}], ",", 
               RowBox[{"bn", "\[Rule]", "1"}], ",", 
               RowBox[{"z", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vs", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vh", "\[Rule]", "1"}], ",", 
               RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"u", "\[Rule]", "0.5`"}], ",", 
               RowBox[{"pa", "\[Rule]", "0"}], ",", 
               RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
       
        FormBox[
         TemplateBox[{"0.01`", "0.05`", "0.15`", "0.25`", "0.5`"}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm],FormBox[
        FormBox[
         TemplateBox[{"\"healthy juv\"", "\"stressed juv\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, 
                 GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Normal", ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
      
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {2, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}], ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#3, ",", "Above"}], "]"}]}], "}"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
            
            LineBox[CompressedData["
1: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
fIlX+P7/+38AAjcJ9Q==
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]], 
            LineBox[CompressedData["
1:eJxdzk/oHFtCBeCLROhFFgX+Fg1mUUqQRoKUGp1Wo6/U6LQax3KM2mrUcsxo
q9FXatR2jFpqdFqNWqPR6UXAWgTpRXgUmEUjEUoI0osIzSNgg+FRQpR+ELQW
EXoR/yBjkPru5vLdw+HcL/rEux//5OeFEP7p80P43/tzp3/nvY/+86fO3vv3
d/7vIf3wY//2/l/9zVuP0n88985nPvz7t47Sj7z37mc/eP+tz9L3//o//vbT
H7z1OH31BV/4/F8/fOsL6d/d/a+//M/Xbx2n1b989oN/+O+3/uL07T8+d1/E
X4In+EvxJfxlOMFfjr8CfyW+jL8KfzX+CJ7ir8Ffi78OX8Ffj78Bv4PToUsc
vpEch28ix+GbyXG4So7Dt5Dj8K3kOHyUHIcZOQ7fRo7Dt5Pj8B3kOFwjx+E7
yXH4GDkO30WOQzZ0ikvc4vDd9HGJWxw+Th+XuMXhe+jjErc4XKePS9zi8L30
cYlbHL6PPi5xi8P308clbnGY08clbnH4Afq4xC0OP0gfl7jF4Yfo4xK3ONyg
j0vc4vDD9HGJWxx+hD4ucYvDj9LHJW5xyIeOcYpzXOIat7jD4cfYxynOcYlr
3OIOh0+wj1Oc4xLXuMUdDj/OPk5xjktc4xZ3ONxkH6c4xyWucYs7HD7JPk5x
jktc4xZ3OPwE+zjFOS5xjVvc4fCT7OMU57jENW5xh8OCfZziHJe4xi3ucPgp
9nGKc1ziGre4w+Gn2ccpznGJa9ziDoefYR+nOMclrnGLOxxusY9TnOMS17jF
HQ4/yz5OcY5LXOMWdzj8HPs4xTkucY1b3OHwLvs4xTkucY1b3OFQDB3hGCc4
xRnOcYFLXOEaN7jFe9zhHoefHzrCMU5wijOc4wKXuMI1bnCL97jDPQ6/MHSE
Y5zgFGc4xwUucYVr3OAW73GHexx+cegIxzjBKc5wjgtc4grXuMEt3uMO9zjc
HjrCMU5wijOc4wKXuMI1bnCL97jDPQ6/NHSEY5zgFGc4xwUucYVr3OAW73GH
exx+eegIxzjBKc5wjgtc4grXuMEt3uMO9zj8ytARjnGCU5zhHBe4xBWucYNb
vMcd7nFYDh3hGCc4xRnOcYFLXOEaN7jFe9zhHodfHTrCMU5wijOc4wKXuMI1
bnCL97jDPQ6fGjrCMU5wijOc4wKXuMI1bnCL97jDPQ6/NnSEY5zgFGc4xwUu
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
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
            LineBox[CompressedData["
1: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
/7rvfzdpJutfisGZl6ey/qXwPDcArH8p7MZmTWT9S3E0R38c61+Kph2KMax/
KdZ0HTKS9S/Fge3Xh7H+pcjuKPuL9S+FidFcC9a/FG6hpgNY/1JsftesH+tf
ilHT3/dh/SdDafO2F+s/GbYZTcas/2Scbm3QjfWfjOPrRndl/SfjjMTbgPWf
jODuOzqw/pPh9rq+Les/GV0u2emz/pPRJiG/Jes/GQeqO7dg/SfDZUuqgPWf
jPFbO/66S/tPRtjuzd+pfZPxO23sV2phMoq61XymjkhG/55pjdSiZDz2mfaB
WpaM4TdaN1DLk2FmefsNdY7uec0qek2dlwzz3+kvqQuTMbZf+Avq4mS8kq19
Tl2WjG5tfZ5SVyTDPtb/MXVlMs4ei3pEXZWMuE2K/1FX6+5/LX5AXZuMu/uq
71HXJeOIWr+aukH381Nwh7opGed9RLeoBTK061B5g1pfBtni7tepDWRw6Bdw
jdpYhq/zLl+hNpXh8j8jLlNbyJBuv+UitZUMqtudL1DbyHBxavp5asiwJaTD
OWp7GfRna85QO8og2dX/NLWrDN3WlZ1k/cswPmFhBetfho/nGv9l/cvwb7/c
46x/GeSRs8pZ/zLcK/5xjPUvQ+z+I0dZ/zLcdA0pY/3LUKi1+Zv1L4P1/Oal
rH8Z+q+9fpj1L4P02s5DrH8Z/ucTf5D1L4OBycoS1r8M625PKWb9y1AQO+QA
61+GW7+672f9y+A3te0+1r8MdtbNilj/MihP/djD+peh7uaP3az/FFgtbsas
n4LiMW0LWf8paO3WvYD1n4KBJyx2sf5T4DzVdifrPwV/3XPJZ/2nYENA6A7W
fwpq3mu3s/5TELugfBvrPwWuMc/zWP8pUHp0YXZNwaYGu62s/xRY9gjfwvpP
gf2l/ZtZ/ykY9+VlLus/BRkZFsyiFHSLX7uJ9Z+Ct+UHNrL+U+Bv07SB9a+b
93Qqc57u+RxQ5rD+U2Cc+Syb9Z+Cw0HjmMtSIJyv0LL+U9Cze72G9Z+CE+Wz
mKtSsGXUHjXrPwXW6zsw16bAZlWwivWfAkWLGiXrPwXu02YyN6WgqccRBes/
FU8jBjDrp+J/i3LkrP9U3NzZgdk4FU9WSLJY/6lYHvw7k/WfiuMPopmtUnE4
/VsG6z8VJjHRzEjFz62/0ln/qUh9m8TsmIoBK9sxu6Zi8XN1Gutf9/2iTJl9
UxFltD+V9Z8Kp6JJzBG6n299LYX1n4qwvZ7MslSomzfJWP+put8vs5hzUtHR
2oI5LxV9mp9OZv2n4kyWG3NxKobf/Sll/afiaNVm5opU3AmZzFyZCrPyJxLW
fyqctyYzV6fCvvsw5tpUfDW5I2b9pyJ2dzxzg+77lg5hbkpFi4l3k1j/abg8
WsKsn4afG0YzG6QB3s8TWf9p8JBnM5umYbrRHGaLNLx+8zuB9Z+GAMNSZps0
NE9ax4w0fBo1kNk+DSVmtSLWfxpKZ2xidk1D7mYXZvc0GJoZMfum4eWlm/Gs
/zR8zVExR6RhYpIzsygN/0q6McvSsGPTvTjWfxr6VWxmzknTvZ+ezHlpsO03
mLkwDYcXN8Sy/tMQkVzGXJaGwcUJzBVpiLk8h7kyDaOquzFX6T5/7UkM6z8N
9vsOMNemISMglrkuDfqdHJgb0nA3tRdzUxqGPXwdzfpPx/yWx5n105H+I5PZ
IB2zKzyYjdPx02EMs2k6Bm5tw2yRjiWHHkax/tNhIz3MbJOOUMM0ZqTj6lJP
Zvt0dFk8ntkxHb1bdGV2Tce9lfWRrP90TFp9jtk3HU7dtjEL03W/r8YwR6Tj
kZcrsygdO36OZpalY9+oLszydNjpNUSw/tNR6n+VOS8dXmv3MRem48i3dObi
dPTttY65LB2mF+YyV6RjWvPhzJXp6HfGgLlK9zzbfwxn/adDXX2buTYdKQOP
Mtelo+ljLnNDOvbYJjA3pSNEbzWzIAOjps5h1s/AlSYrZgPdef/uzMYZWF7x
M4z1n4G5V58xW2Sg45zLzFYZODT6MLNNBpal5DIjAxYzJcz2GZjlH8DsmIGG
zy7Mrrr5z6cwu2fgxhhLZt8MbPmvG7MwA4afmzFHZCDL800o6z8DwUPuMcsy
MNjhLLM8A/3PlTDnZOCudgtzXgbOlacxF2YgxDqSuTgD/s19mMsyYNd3EXOF
7vukTWWuzMD76SOZq3TPc64Zc3UGlFsNmGsz8NdEAXNdBhRmDSGs/wwkzqtl
bsrAiZNVzIJMGESdZNbPhF3YQWaDTAw6soPZOBMbxmiYTTMR/FnKbJEJ7ecI
ZqtMvB7tx2yTiRXFK5iRiQc+jsz2mVi+dCqzYybuSa2ZXTPhWD+Y2T0TZ1J6
M/tmwnZlZ2ZhJi76tmSOyERo4ddg1n8mnE3eMssyITr9hFmeia6b7zLnZGJ4
4WXmvEx8enqSuTATivl/MxdnYuirIuayTHw9uJ25IhMDd+cwV2ai/lImc1Um
EntKmKszYaGOZq7NRB+bIOa6TBS2XMPckImOP9yYmzKxsacLsyALG9znMetn
YfmV6cwGWbBxn8RsnIUk4zHMpllQf7JktsjC5c/mzFZZSOnVm9kmC5arjJiR
BZMrHZjts3DCtRWzYxbiWv4OYv1n4cKNL8zuWehQ0cDsq7t/+SWzMAsLmp4w
R2RhvF0NsygLjbtvM8uy8HXYNWa5bl5VJXNOFh5nnmLOy8JZ33Lmwix8X1HK
XJwF/YBi5rIshObsYa7IwpWafObKLGwZv5W5Svf5kg3M1Vl4BjVzbRZi6zKZ
67JwqyCFuSELiXFi5qYs9PaPZxbIMVkYxawnR3JqKLO+HFnHhMzt5Wj67cds
IMeqpT7MhnIEX/BkNpbjksNKZhM5ujxbwmwqx/vMRczmct2fdwuYLeQw7DOX
2VKOA81mMVvJkfFlGvNoOdx+g9lGjhvGk5gnyrFx6jhmyLEmfgzzNDk+XhrB
bC/HW4thzA5yGGiHMDvq8nQdxOys+35b+3PvqxxbJ5gyL5dj238m3PsrhzCv
B7OXXPfnVTfufZZj/eSuzP5y9DU34N5vOXK7dWAOkWNPt7bc+y5HO/PWzDFy
SGz1uPdfjhrvZsxiOe5t+BXI9kGOqfe/M6fL8WTgV2a5HKL4z8xqOV49/cic
I0fdwvfMuXLYX3vLnCfHnUX1zPlyeL14yVwox4mkF8xFcpQNec5crHseNU+Y
D8txNruWuUyO2BUPmcvl6DW0hrlCjsBW95nPyLH45V3mSjm23L7NfFmOfpdu
MlfJceTCdeZbcoy6fo25WrcPj68w18jh8O0Sc60cOb0uMj+TY+T0SuY6Ob6E
nWOul+Nk8RnmBjn8P5xibtQ9zwknmZvk+F/6CeYfuv14fpxZoMD46eXMegrM
KzrGrK9AZM+jzO0V2Jr1N7OBzu1KmQ0VWJp5mNlYgUPdDzGbKJBeUMJsqsCF
ScXM5go43N/PbKHA95h9zJYKHBtQxGylQMCtPcyjdZ+X7Wa2UcB+aiHzRAUm
tShghgKnKncyT9P9fFU+s70Cnbx2MDsosHvcdmZHBYSG25idFZjfuJXZVYGh
97YwL1fg06nNzO4KyEtymb0UeJ2/idlXgXe5G5n9FZBt2MAsVCBvYw5ziAID
8rKZIxRosUfLHKM7L9MwixSIuahmFivwoVbF7b8CYd+V3P4r0NiDs1yBFRMV
3P7r3gdPObf/ChSkZ3H7r4DPsUxu/xW49DqD238FzppyLlRgxpJ0bv8VsNWk
cfuvwOZbqdz+K+DUnXOZAo4rUrj91z2/XTJu/xV48yGZ239dn3acKxVorpFy
+69A9isJt/8K9JvK+ZYCqi1ibv8VePwjidt/BX6u4FyrwP2Tidz+K7DOgnOd
7n1TJHD7r0DSTxG3/wo0+HFuVOBJTTy3/7r8jpx/KDD8XBy3/0oE23LWU6Lr
0Vhu/5VoYc25vRLjjsRw+6/EHmvOhkrMPxbN7b8SJuBsokTryihu/5Vo48TZ
XInuDyO5/Vfqfn/nbKnEyB8R3P4rMTyT82jd9+/H2UaJe3+Hc/uvRNh8zlDi
aV0Yt/+6+WLO9kq0N+PsoETZiVBu/5UwdOfsrETP5pxdlTi1M4TbfyWaz+Hs
rsSd98Hc/ithvZGzr+75TePsr0TCuyBu/5VYkcs5RIm9szlHKLHqWyC3/0qI
9nIWKXV/X+UsVuJqZ84yJRrPCbn9V8InlrNcCdMxnNVK9Hi7ntt/3ftQyDlX
iX9Wcc5TwsWUc77u5z0M4PZfiU6bORcp0XcF52Il5vThfFiJzNp13P4r8WQH
53IlpvlyrlCieCjnM7r5jf7c/iuR9Q/ny7rnlcS5SonlcznfUuJAd87VSrx/
4sftvxJ9DnCuVWJEDOdnSgyczblOia/GnOuVKKhby+2/EpZHOTcqkZTKuUm3
n8s5/1Bi03DOAhUWteCsp8Ktu2u4/VfBcB/n9ip0SeJsoMLFJZwNVZgwgrOx
Cm5tOJuoMOaJL7f/Khz9h7O5Ci80nC1U+FfI2VKF8Q6crVRwteA8WgWjlpxt
VAh44sPtvwqeFZyhQv0WztNU6BDH2V6FEys4O6ggsOXsqEJVH87OKlgIOLuq
0ObJam7/VQg8w9ldhWUFnL1UOJvK2VeF4gDO/ip0X8hZqMLXsZxDVHDuzTlC
hQEtOMeosPalN7f/KvSr4ixWYdbfnGUqPNrCOV2Fx1LOchXmreesVqG/K+cc
FdyncM5VodlfnPNUaG3EOV+Fdb+9uP1XYdQrzkW6vm9zLlbhfgXnwyqUFXEu
U+FNDudyFaIlnCt072cQ5zMq5LhxrlTBfC7nyyo0n8C5SoURgznf0vXVnXO1
CrGtONeooP20itt/XX/POD9TYdctznUqbDrDuV6F6sOcG1RYupNzo+75azk3
qWCVzPmHCqIIzgI1DNZy1lOjdhlnfTXezeXcXo2J4GygxtmRnA3VSB3A2ViN
NGPOJrrPt+NsqobNb09u/9V48oGzhRqn/+NsqcaD+5yt1Bh4jfNoNXad5myj
xpIyzhPVmLSPM9Rw3s55mhq52Zzt1eiSwdlBjb8TOTuqkRLB2VmXP4Czqxql
XpyXq9FpGWd3NZQLOHupMcWes68axpM5++tszVmoBoZyDlEj05xzhBotTTjH
qLG1K2eRGu7tOIvVmNGCs0yN+d89uP1XI/YjZ7kaV15zVqth+4xzjho3ajjn
qiG9zTlPjeVXOeerseA850I1vCs4F6mRc5RzsRqvDnI+rIZrEecyNZ7v5Fyu
ez5bOVeosXAD5zNqjFZxrlRjRAbny2rMTOZcpUZkAudbuvc7mnO1GoPDONfo
3k8h51o1JvhxfqbGC2/OdWrsdedcr0byMs4NakQt5tyohngB5yY1djhw/qFG
9UzOAg3Mp3LW0yDRlrO+Bp/GcW6vQewYzgYa9BjB2VCDi5acjTXIsOBsosEq
c86mGswx5WyuwTQTzhYazDfmbKmBvyFnKw02GnAercH99pxtNBjchvNEDVJb
coYG35txnqZB9C93bv81aP+ds4MGe79wdtRgaSNnZ93zeM/ZVYPnbzgv16Di
FWd3DQpecPbSYPMzzr4abH3M2V+D4oechRpcecA5RIOmas4RGgy9wzlGA+FN
ziINTlRxFmtgcpWzTAPxJc7pGnyu5CzXIPgcZ7UGP05zztEg6yTnXN33OcE5
T4Pb5ZzzNZAd41yowYwyzkUadCrlXKzB40OcD2tQXsK5TINtBziXayDfx7lC
g+S9nM/o5u/mXKmBsoDzZQ3yd3Ku0vW5g/MtDZ5u41yt+755nGs0sNvCuVaD
uFzOzzQ4tZFznQYdNnCu18A9m3ODBsc0nBt1/ak5N2kgVXL+odtnOWeBFmuz
OOtp8SKDs74W/umc22vxJZWzgRYpKZwNtegn42ysxUkpZxMtVks4m2rRWczZ
XPf5RM4WWoQncLbUYqSIs5UWjXGcR2vxTyxnGy2SYzhP1MI1mjO0GBbFeZoW
bSP5/dfidTi//1rcCOP3X4vjofz+a1EUwu+/FtuD+f3XYlMQv/9aZAfy+6/F
BiG//1psWc/vvxa7A/j916JsHb//Wlzy5/dfi6d+/P5r8Xstv/9a9OUt1sJu
Db//Wvj68vuvhcqH339dX6v5/df14c3vvxZDeOdqscqL338t8lbx+69FrSe/
/1r0512ke189+P3X4pA7v/9aCHiXaeHkxu+/FrtW8vuvxY8V/P5rsZh3pRYH
l/P7r0UX3lVahCzj91+L6qX8/msB3jVa7FnC778W3Xk/00Lqyu+/Fp9d+P3X
5efdoMXjxfz+a7GUd5MWtxfx+6/FQt6CbNxy5vc/G6689bPxv4X8/mfDi7dB
Nt468fufjUjextloydskG6oF/P5nw5y3eTZKHfn9z8Ys3pbZqJ3P7382wnmP
zkZn3jbZ2DeP33/dz+ONbLycy+9/NlJ422fjL94O2ahy4Pc/G6G8nbPRm7dr
Ns7N4fc/G0Le7rrP8/bKxsXZ/P5nI4K3fzYG/fH/AYG7VSI=
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961]], 
            LineBox[CompressedData["
1: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

             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 
              0.49019607843137253`]], 
            LineBox[CompressedData["
1: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
Uzdp87c/u0fNS8IsO+e71HpJ0MyvvU1tkARjN/9KaqMkLEtsfYuanwSz7dsq
qE2T8D7B6ga1eRIWja25Rm2ZhACJpJwaSbjjaXmV2lr782X1Zaz/JAwX7yll
/SehjXL9ZdZ/EqorB19i/Sfht0XjBdZ/Ekx2lJxn/SfBTkd9jvWfhJ8zN5aw
/pNwfvmcYtZ/Ek73NTvL+k/CdHmXM6z/JLRX/j7N+k9CV8N3p1j/SdjX4ulJ
1n8S3GdXn2D9JwHVdwpZ/0lw3H63gPWfhBkJD46z/pNwUvziGOs/CdckH/NZ
/0m4Fd6SuSEJ6xb2yGP9J8H524ijrP9kvHOwOcL6T4ZbsGcu6z8ZwRayw6z/
ZLSMLTjE+k+Gqd2zg6z/ZNjsNGA2T4b+kqk5rP9kTHIMOsD6T8aPY4f3s/6T
IZ3zdh/rPxnhnYYw2yVD8s0jm/WfjH1fcvey/pOh97tpD+s/GW1aTGcOTsbE
L/LdrP9k+F17lsX6T8aeiLHMsmTo/pDuYv0no37sq52s/2S8N53KnJ2MKxcy
d7D+k7HxbwvmwmR8vrY+k/WfjOwB5dtZ/8n4+9OCuSIZ6TMzt7H+kzHrZwfm
mmT86hS5lfWfjPuhDRms/2SYjVrP3JSMtWYPt7D+U9DTaSmzXgo6X6hIZ/2n
wHzBfGajFMQ2XdvM+k/R/v65gNk0BaeiK9NY/ynwXrSC2TIFv/99msr6T0H/
R+7M1im4JPqqYf2noL5bLLNdCk5GdWV2SkFwUZaa9Z+CpMvjmL1TINCUq1j/
Kfjaby2zIAX5638qWf8pyFiuZpal4NBHc+a0FOgNu65g/afgWcuNzNkpUHp2
YM7VPs/aw3LWfwpWPV3EXJyCvU++yVj/KRhpt425IgV3p89krkpB4vYPKaz/
FDg4pzPXpiBINJO5IQXd235OZv2nQPF0JzNPBnv9xcy6MnwW6DLryfDbqiCJ
ur0MphM8mA1kmOTHZzaUoc/zu1L2fZHhTGwys7EMAxbPYubL4Du7BbOJDPec
Tyey75MM6enBzGYydKsfw2wuw7FFnxOoLWT4WZbHbClDyDx/ZisZbleNYYYM
512bJNTTZTD4eorZWgZ1lIDZRobJvJnMtjK082/PvEQGnXuVYvZ9lWH2gAzm
VTK0Xbme2UkGof8I5nUy/N34Q8S+zzLUTLvE7CmD7JOC2VuGhEAnZn8ZlpcP
Zw6WIaXhdzx1uAzVT64xC2So1WxjjpUhsos3s1gG9wVTmaUyiOd0Y5bJcI73
Jo5aJUMnryLmNBl8FArmDBmaXN2YM2Uorp/EnCXDh3+7M2fLcLLpXSx1jgyO
oZeYc2UYnLmdOV+GTa4hzIXa+a8tZj4tw7cbw5mLZfjXsx3zBRmit7+KYfso
wxHX88zlMuBcJnOFDDdyIplvy9B6wGrmKu3319SK+aEMs471Yq6RobL0ZzT1
Cxk6rHnIXKv9/LAi5noZvnffztwgQ6C5kPmzDOMvrWVu0u7n3ZnMv7T9OQxh
5snRf3VHZl05TCo+Cdn+y7H32D3m9nJU6BcxG8hxtWIns6HWLSXMRnLoZ3ox
G8txbc8yZr4cK7tNYjaRo3XdAGZTOQb078hsJkf3s18FbP/lmHz6CbOFHO3/
KWO2lOND5VFmKznWvM1ghhxPV4uYp8vxZbAvs7Ucg+evZraRo1OZNbOtHJM2
WzAvkWNxEZ/ZTo5Pozswr5Ljws/vUWz/5Qju+pp5nRwlIbeZ3eRYMewcs6cc
f8xymb3lCAjaxuwvR7x+EnOwHLzaMOZwOY7pezAL5IgMsGeOlWOcyRxmsRzn
uk9glsrRymYIs0yOunM9mVXa9xuqz5wmx2qfX5Fs/+W4t+cdc6b2+/LPE+Ys
OcaXVTBna/vPP8ecI8fm6nzmXDl2WO5lzpdjfsVm5kLtvNulzKfleL87irlY
jm7PfJkvyDFnsQtzqRy5TSuYy+XwujmPuUKOIw+nMN+WI+ufscxVcoSKhjA/
lMN1QB/mGu3Pf+rK/EIOz/d6zLVy/O7xJ4Ltv3b+TY3MDXLEfaxl/ixH28zH
zE1yeIfcZv4lR5uIK8w8BfrsL2bWVaA9r4BZTwGTyIPM7RU42z+L2UCBCQ3p
zIYKND6TMxspMPenmNlYgT2WAma+Au7pQcwmCvD4XsymCtwqdWE2U2CByoHZ
XIFXwmXMFgq0lc9ntlRgeMlMZisFrnSezAwFlkePY56uwMIu5szWCliUmDLb
KCBI7stsq0BBSE/mJQqsiu7KbKfAl73tmVcp0K6uFbOT9v1a/w1n+6/AjZIm
ZjcF0pZ9YvZUoFPremZvBS7eeMnsr4BN3hPmYG0/udXM4dq8S5XMAgV2fb7G
HKud/79SZrECZZvPMUsV2NepiFmmQEpGAbNKgV44ypymwIfvOcwZChwu28uc
qcDfQzuZsxSI37eVOVuB+sI05hwF7j9UMucq8NMwhTlfgR9OCcyFCsQVxzGf
1n4fRwuZixX4VRjOfEGBOQuDmUsVeP3Tj7lc+3yFXswVCjyK92C+rX2fLq7M
Vdr3s3wt80MF7Fc4MtcoUOSxkvmFAn7Jy5lrFRhfspi5XoFyHVvmBgXqltow
f1ZgcYE1c5MClwfNYP6lgN7eKcw8JaosJjHrKvGzYgKznhJjwsYxt1dq358F
s4ESut/NmQ2VGFQ+jNlIiYicIczGSlzfPIiZr8RLpQmziRJJ6X2ZTZWQH+zN
bKbEmfJezOZKPP1mxGyhRNnw7syWSszw6cpspYTJWQNmKGFp1JF5uhILw/WZ
rZWY+laP2UaJx+taM9sq8b1Wh3mJEq5BLZjtlPjd6W8Y238lZEd/MTsp0eTw
g3mdEvrdmpjdlNh5+wuzpxKqrY3M3kqc8vrI7K/ExzkfmIOV6DTiHXO49rzX
W2aBEn6d3zDHKuHd6TWzWIlL3V4yS7Xvx+Q5s0yJhglPmVVKCFc8YU5T4nnU
I+YMJb4cfMCcqUTa82rmLCVy+FXM2Up0WX+XOUd7nnubOVeJVTqVzPna7+Pq
m8yFSoiKbjCf1n4/TK4zFytxSFHOfEGJnm2uMpcq8UlYxlyuhLFOKXOF9vud
cIn5tnZ/elxkrtKeHzjP/FCJuunnmGuUGPyimPmFEv0lZ5lrlTg7+gxzvRKv
np9mbtC+782nmD8rEbLkJHOTEoWGJ5h/affzfgEzT4WjWceZdVWY5n+MWU+F
i9b5zO1VMOmXx2yggg3vKLOhCqbPc5mNVNh95TCzsQq5xw8x81UYu/cgs4kK
AzJymE1VcFcfYDZToVGxn9lchUOqfcwWKiSkZzNbqhCQtZfZSgXHo3uYocK4
C7uZp6vwrjqL2VoFn8ZdzDYq5BlwbKvCrpE7mZeoMGrZDmY7FRZGZnL2X4VP
+7Zz9l+FVtXbOPuvQoQ+x24qzJ2ylbP/Ku3/X2dw9l/b3/EtnP1XwfxrOmf/
VbhuyXG4ClGRmzn7r53/chpn/1Wo7cKxWAXRmlTO/qvQJk/D2X8VVrfhWKVC
uIOas/8qrChUcfZf+/mGHGeq0Mdfydl/7fu5o+DsvwrLJnCco8KUHXLO/quQ
3Y7jfBWEgTLO/qtw7kUKZ/+1728px8UqLClN5uy/CvKJHJeq0OlYEmf/Vbgw
nOMKFfbul3L2X4XDphxXqVCZncjZfxX0h3Jco8L8wwmc/VdBOYbjWhVuFUk4
+6+CjjXHDSr8e1vM2X8V/nHmuEmFDx9FnP1XITWGY54a7XpwrKsGcuI5+6/G
qGkct1ej6kEcZ//VMAvk2FCNgV04NlKj+HAsZ//VaJzPMV+Nwg8xnP1Xo62C
Y1M1asZwbKbG2AfRnP1XQzeaYws1Zgzh2FKbVynk7L8aelEcQ43IoRxPV2NB
tYCz/2oEiDm2UeOtJce2auTURXH2X42jWzm2U6NpIcer1Ahpw7GTGiPORHL2
X43ugRy7qTF4BMeeaqx9E8HZfzXOZHHsr8a4NRwHq1Ham+NwNTY9Cufsvxr9
t3Icq8bz1RyL1djfh2OpGv7Pwjj7r4bVHo5Vavxx5zhNjQJzjjPUcP4Wytl/
NX6e4ThLjSgRx9lqvLHlOEfbfy+Oc7Wf9yqEs/9quB/luFCNOVEcn9Y+nw3H
xWrE9OL4ghp364I5+6/9/pzkuFyNe4kcV2ifdzXHt9WoHcFxlRoddTh+qMaH
u0Gc/VdDdIDjF2pUCjiuVePmMo7rtd/XYRw3aJ9Xl+PP2ud7GMjZf+3zHeP4
lxpXkjnmaXDcjWNdDTCNYz0NXHpz3F6DAT8COPuvQdhdjg01WJ/HsZEGT2Uc
G2tQv4ljvgax8zg20WCvGcemGixuz7GZBnH1/pz91+C/axxbaOB3iGNLDYbK
OLbSYI0vx9Cg61KOp2sw2ZJjaw2e9+LYRoNff/04+6+B5AXHS7Qu49hOg++H
OF6lwT0Vx04a9AvjeJ0GVWs4dtPgmzXHnhpEmHPsrcEGI479NTjB4zhYA483
vpz91yDyFscCDT6e4jhWg5LdHIs1eJfCsVQD/1COZRosWc+xSgOpLcdpGvSy
4jhDg7+DOM7UYKwhx1kanOVxnK3B5nc+nP3X4Px9jnO1/ZdynK8B7zjHhRp0
zuL4tAYbFRwXa9BFyPEF7fN5cVyqwWhHjss1ODif4wrt+53E8W3t5w/nuEqD
o705fqiBZSeOazT489ebs/8a6HzkuFaDWc84rtegtJLjBu0+XOT4s/b7UcBx
kwa5+zj+pYFxBse8VJQkc6ybiq1CjvVSkevPcftUNLlybJCKgJUcG6Zi4AKO
jVLRbhrHxqnoO45jfio2DOXYJBXP+nBsmopEQ47NUrG2Lcfm2vt/vDj7r33+
Ro4tU/GnlmMr7ec95hipmHab4+na57/CsXUqRhdzbKPNO86xbSpKczhekooF
uzi20+Zv5nhVKiplHDul4rqI43Wp+BDJsVsqxgRy7JmK7Rv/3/8HkrXhvw==

             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
5/5r3p9DyP+5/5kwmR76//v/AV4rYdU=
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJw113dYzf//BvAkZIekiE8IIWRECDeFIoQoCmkT7T1Pe9fZp4yEkJ1dZggh
JCuEELKTlf07v+t7bv90Pa5Xz/M89/t+v64rfV18F7irq6mpPWylpvb/P//3
r3HK/37WqX6qoV/VwJ2KlrQmTuz97dS7Da2F/w6vsBO1o7WRe2365c8daV2M
PL7xm2UXWh+b7EbqJmnTBujVI2314R50P4TUVQ251ZM2hPmg6RaNvemBOHft
+M/2fWkj/AwcM3+gIT0E44YemTFlEG2MmSF4uHgIPRw51g86rR1Gm2Bw+5Sn
cSb0SPwUz14oG02PwvUhw9x2jKVHIzB7pHbJeHoMbrxd7nrJnDbFj2cn5t+Z
Qo/F/OR5T55Oo8dBvrRvh/fTaTP8WTy+5psVPR4zXmyy+DebnoDqp8vmtp5H
T8TR9VHN7RfQ5rh5u9U0rUX0JNSebTm0mwM9GYJ2cYe0Hekp8Lic+lB7OQ1Y
ZQ7c2m2lygKgpZ1Huy5uPJ+K7VK7Lh09eT4VCaZ/j7VZzfNpMBf5/VVby/Np
qA4urW/25bkFDhq+Wv0xgOcWKF+gKaoP5rklgo2M7WvCeG6Jc1NdTl2J5Pl0
zNx3/PyJGJ5Px/RP01fvjuP5DOxr0f1AXiLPZ2D4rPG5ySk8n4lRO8v/C0jn
+Uw0+V2e6ZTFcyuEei7Vmi7kuRU2X0wPN5bw3BrDzX0Susp5bo3Tr3WHf8/l
+SzUuG0Kf7Ce57PQeFTH42Q+z2fDY5n084bNPJ+NTOvh/aIKeW6DHXU/Py3Z
wXMbNP7Sch27i+dzIGtICe6yl+dzUOoZOvjtfp7PRcC+7zHnD/J8Li679w1Z
d4Tn81C6q2NnvxKez8OQTnetLU/w3BYfpdKBPU6rDFucO+a6raGMv2+Lya7L
L5acV7nMFrXfN6WlXOT8fLyxtvxod5nz85G62fO7QSXn5yP/+MAtb69zfj5u
l+d/PHyT8wuQ4fr+SdRtzi/Arb0mgRb3OL8AK4an7NR8wPkFiHneOaGylvML
0XHKm3/ZTzi/EN4DxxrYPuP8Qvg0davv/ILzC2HnWzj7+ivO2+FIraZ9xhvO
2yHkvUvrme85b4fSS7eXtGjkvB2uasTNP97E+UXQOZD+3v8r5xehk0334UbN
nF+E/yosuz36yflFWJ8+aaPwD+cXY7u3YeU0taeq+cXod7RPwWd1lQWLsW7Q
Ar2trVQuW4zhjfXj5muqrGaPqIN/fv1px3l7pCScd9/ZkfP2KHyzLHihFuft
seLplyG/u3LeAS63ipO3due8A5zyj6da63LeAa9FE0d+6Ml5BwT6LhOIenN+
CfRXzwoZbcD5JdgwcFi32/04vwRGJ0zsAwdwfgkW7hdM62LE+aVo+mV1Z+8Q
zi/Fr3ZHO1sP4/xSuB/78unZCM4vRbs5o6IiR3HeEUmpG/Z1NeW8I7QUK9OK
xnHeEW46xR0mTeC8I6Tax8yqzDnvhLedt3d0mcJ5J1z8tiejaSrnnRAw6PfB
OEvOO0HDrzyh80zOL4Npp3F/11tzfhnM9if1G2TD+WXI9X3WWDyX88vQ7mHs
qvHzOb8cVu+EmWULOb8cLztYL52xmPPLMbR7bfUVB84vx9PZMd/mOHJ+BYZ7
uF24sYzzK+CZcn6KrTPnV+A5brrfcOH8ClSKzo+b4855Z3x9WXXksqfKBs7Y
2dOkznI1P88ZkUG6x06vUdnZGXo7z04Y58vPd0aPB67e+/xVLnBGuWyctWEQ
9znj893g27khKtc5K++PQ8cO4dy/EpKmHl+iI7l/JeKefEz9EM39Sof0rFwm
4P6V0LhefepqPPevxBVPu+VmSdy/ErtMHu7dmsL9K+Ek2LqnYzr3r4SF3pul
IZnc74IxRu9KHmVzvwvMLV9dtBBxvwtW+eglFUm43wU5Xc5+bi/nfhd0Uu/d
zSeX+12giF7z/Po67nfBxyEf3YZv5H4XHNZ7ocjcxP2uMDiXHfV6M/e7olJj
WLfphdzvCr8hLZw2bed+V+x4bmPfXMT9rthntaCV7W7ud0X/+ws9tu/lfldU
REojfu3nfldMibGfNu8g97vhirTu1ObD3O+GNg8C3zcd5X43FF9fdHNaKfe7
YdGSq6tEJ7jfDXoX9Y49PsX9bvC5mFw6pIz73VDl5+AffI773RCDO49Pl3O/
O8Z2t1Rvc4n73fFu1LuHcy5zvzsSp3ZfI7nK/e5It2lz6N417ndHw7l2B3pW
cb87Nod4eThVc7874jesurXhNve749FV++aHd7nfAxP/Rt3Ru8/9Huia0997
8UPu90DERHmp6BH3e6Cur8HZq0+43wOlZzvEazzjfg+M/bXj98R67vfAl06T
Rwa85H4PFG/sZbCjgfs98X1H1uUHb7jfE/eyng7r+J77PZHdyX3O5I/c74mJ
Vh5GPp+43xNZx0af2fCZ+z3hP06/65Wv3O+Js2q+fb99535PfNoZ+d7gJ/d7
4fhAccis39zvhWuX1E8F/OV+L4RO6HM2T+2Zar8XFqaaJpxRV1nghU8661rW
a6hc4IXEHRuntWmjcpkXMhaLMbitynVeCF9/5Y91e5XVVsHFKi9iVUeVDVZh
U9r8YymdVcYqRL6YcbiwC/evwv2J1/zLunH/Kjy4YNb4oDv3r0JK98cjvvTg
/lUI6d51ZIee3L8KvppDvvTT5/7V0E6LDDfrw/2rkZTmdNbGgPtXo9XC/pUr
+nH/auQnDVznb8j9q3Gxx6mh8QO5fzVaLJ4cJzLi/tVIftZi/aYh3L8aTw+v
CN9jzP3ekOoV65cM535vnDgwO+mcCfd7Y29AxqGro7jfGxu2Vey4NYb7vTH2
lZPLg7Hc742Zg7Y8f2LG/d6wL2oaWj+B+70x+1/RxFfm3L8G6t0Mur2ezP1r
8K3XoYOvwf1r8HDrqZ6vp3H/GkxIWj/7lSX3r0GXt0XT62dw/xr4205rW2fF
/WugKyiXP5jF/crfl2Z+uGXD/Wsx9+t3rcq53L8WMxzd/p6z5f61yLo64ljJ
Au5fi6C8kol77bh/LTa7L8ssWMz9a7Grd/ROsQP3r8X+XyGShKXcvxZfk3bN
CnTifh/EZofeWLmc+31QNGpyv3nO3O+Dkw+WW0x04X4f5IyfMHqgG/f7oIfN
yKbOHtzvA40l2wTNntzvA4fG74+frOJ+H/x7k97xojf3+8JtdVmH3Wu53xft
a37WZvtyvy8GvNgQ4+/P/b4YnN62aUEg9/tiVevCcaODud8XRU9uzOsayv2+
2Pe0cUJjGPf7oq6394/KCO73w503WzKKolTW8sPr578/xcfw+/jhdsMjYyeB
yiZ+mNh7t/mYeH4/P1g3XO7bPlFlWz/gy6bauiR+Xz90GC5ZeyRFZT8/1JS3
vZOaxu/vhy2DV3dzzFBZ6IfrnXoNNs5iHj8c8UzQ+Z2tcrEfJnm1q70iZD4/
rE7sEZErVrnKDx98u35ykzKvH071dp1qIle50Q8FZ/y9fyqY3x/lF7b7ns9j
fn/Mebx6bsZ65vdHw5eBmgs2Mr8/nEZZbuyxifn90fP30E61BczvjxufZzpu
2sL8/vjyrUXSykLm98eKPuUZ/bYzvz9un2r2fbaD+f0hcW03avNO5vfHu3uu
1ct3M78/rur7ze+1l/n9MWvtuv139zG/P6ZNmvteWMz8/rhn9r3drIPM74/2
li3aqh9m/gDYRNS8KjnC/AFoOfz1Dp9jzB+A/g2brPuXMn8Ajnuuunb3OPMH
IGbzwdFpJ5k/AI5nGqImnGb+ALQyCN/55gzzByBp8c3SvLPMH4CLg1fsm3me
+QMwSCpM+VLO/AFoc/7W9IKLzB8AOx3F61kVzB8APQPrwC+XmT8AHQsdnm+4
yvwB6KcYM8HyGvMHQOs/m7A315k/EC9FnfJzqpg/EHnBb3ePrmb+QGTHLthy
9xbzB8JYeigu7A7zB8LzYswsvXvMHwhbe8M/JTXMH4itR7TX2T9g/kAsiC7r
+/Uh8weiR2iuVPSI+QPxV9Hxs/ET5g/EdzXRpEt1zB+IFX8lQc7PmD8Qojap
uc3PmT8Qwacf78x5wfyBaPex7c4Br5g/EM3ZkfLjDcwfhJ6ntgXMfcP8Qeh8
9uekp2+ZPwgX271vDnjP/EHoOOrj1pYfmT8IBt8Cp0gamT8Ioyd9uNq3ifmD
oKF903r/Z+YPwqq9OaUTvzJ/EB6u3Njr0jfmD4Lm/rV+85uZPwgrxgWVPPjB
/EHYdNbwi8sv5g+Cm9nn/m9+M38QSnYutPL7y/xBKJhxfOXXf8wfhF0u6/3C
WzxX5Q9GVKB38G91lbWC4a61yS9GQ2WDYLz+tMvlXyuVTYJh+6mlTWwblRGM
cZr/DfurqbJtMHrb+reOaqeyczC+tPCraW6vsl8w9gcLtwZ1VFkQjOq+Vl4f
O6ksDIb6+g6DVmmpXBAMiWRh3dMuKhcHQ++hWLqkm8plwWheBssqbZWrgtFk
WP1xuo7KdcE4YXdacbyHyo3BSB4WaT5cj/lDIG8X+7igJ/OH4PpKxHTVZ/4Q
TD9vqp/Qm/lDcLPmTklTH+YPQb67wm6lAfOH4Pj0Tx+v92X+EOxauzRjYn/m
D8HP19aDdhgyfwiuPR5b3mUg84cgICXXJXIQ84egyfSler0R84dg+wLFttlD
mD8Elxz7zz44lPlD0OJFiy89hjF/CDQUuwqihjN/CHqOkM2vG8H8oTgaM76N
xUjmD0V7787nCkcxfyjy32XHtxrD/KG418nE2t2U+UOR93G1TvlY5g9F9elj
b/qaMX8oup7OvhgznvlD8R+8dj2YwPyhSCk6KTc1Z/5QmHlrZOZMYv5QdOtQ
kt4wmflDEd/HVgIwfyg6TZ++XTGV+UPRZKJV/n4a84fi8ObB76dZMn8oTri1
66eYzvxheGY31PXNDOYPQ9elrQ6YWzF/GO55demQbc38YWiOqwh6PIv5w9Dp
4Na3w2yYPwz6XfT9o+YwfxgGntvV6spc5g9DRVPFTh1b5g9D9YOPy1zmM38Y
Hp3I7bd3AfOHob7OvPnbQuYPQ93GRU+mLGL+MKyY51STspj5w9B76ZXn1+2Z
PwwFQ/TUuy9hfuW+MedGL13K/OHI/Tw5PN+R+cPh36B566kT84dDa33eVMPl
zB+OL7mrL7ivYP5wtA3+uny7M/OHY8qlQ51ermT+cAw2/u+OoSvzh0NheeCg
ixvzh2Pskec7NrkzfziGDjQ58tCD+cOxf5rWQx0v5g9HcckfvfmrmD8ca8wC
AtJXM384Oge9qj/nzfzhWPzfPf+fa5g/HIM+Htcb6cP8ERiX1+GRhy/zR2Dr
rekn1/sxfwTkdnXHbvgzfwTqby6qUg9k/gjsUTNobRrE/BH4JS1Z4hHM/BFY
PTXvqjyE+SNw9uhEp4uhzB+B3K16Hb6GMX8Efhza87BfBPNHoKXI5+q8SOaP
QFZdzcPIKOaPwEVL9447opk/Ao8cs5xvxjB/hPLvvSt3fsYyfwQGtFKs7R/H
/JFYfdLbaHY880fit++51gEJzB+JdYXabXMTmT8ST2oejjiVxPyReJooinya
zPyReKS3/51GKvNH4mGLfQmD0pg/Enab2ky1Tmf+SDywMR2wOoP5I1HmVGyS
nsn8kTir2+S6M4v5I7HzbOCZS9nMH4k/2fssXuQwfyS27uv1qYWI+SORYzmm
oreY+SPhudr/spmE+aMwcoTN1wVS5o/CX/kkmzUy5o+CcN3p64ly5o9C+0FW
0RsUzB+Fjb0XOhzKZf4oDFno4Hw5j/mj0JxTJXu8jvmjsDxnzI+m9cwfBZ9/
v9Nbb2T+KGwTbJmtl8/8UZBt2zhx6Cbmj0Juk4ejeQHzRyHiUchum83MH4Wh
16YbO21h/iis1bN5vHor80chvp36ubBC5o9W9vnkXtI25o/Ggz3LDMTbmT8a
Tvmf12/cwfzREB/Wm11UxPzRyH8xc/jBncwfDWudb9NP7GL+aBzV2yA+v5v5
o9HtwAHtq3uYPxrzMvZV3tzL/NG4YtnuxL19zB+NDp7mdbX7mT8aIV4nzZ8W
M380fu5ucbP+APNH47ogYeOrg8wfDYN+pVteH2L+aNw4qvf0zWHmj0Hf+fpL
3h5h/hiEfBjX/u1R5o+Beujz76+PMX8MEk/J/msoYf4Y/I25EP+ilPlj4O3y
uu+z48wfg8jm0D+PTjB/DKxPvOp+/yTzx6B7p/3et04xfwzUJln+qzzN/DE4
F9X75oUzzB+DVW+Kn54qY/4YaGUEjTxylvljsGn247Ld55g/BnFqbsLN55k/
Bm7ukQXycuaPxVf9dZ/SLzB/LDYWmybGXGT+WJgLzzv4X2L+WLztUurrWsH8
sTjqn3HZ7jLzx2L5zf0e068wfyy6m62faXqV+WMxWXxujWEl88dixIF1d7te
Y/5YfJyVm6R2nflj8f3HiIj3dHEsmszvHr5/g/ljERfyz/RCFfPH4ue7//7u
v8n8sTC+srvjumrmj4VBrx7uCbeYX4DHN+5orLmtsqYAw084vl94h89DgGVi
/f8m3lVZVwD19xnr+t7j8xGgzLK3c5salY0E6PzVwu8dbSLA7wmBV6vuq2wm
wNcxfQIOP+DzEyDt2TE3xUOVrQQYbXhoa3gtn6cA/52IH+H4SGUHAZqs8jTN
H/P5CiCat2qE/hOVvQR4a+Je+Iv2E+DM8H+eD+pUDhPAY/XOiJKnfP4C5Nff
qZU9UzlVoPz/2bfsgOfsQwC3z1GiufUq5woQVv+gfvAL9qP8/Mq4NI2XKhcJ
cL7189jHdLEAo676Vhx7pXKJALtM8lyFDexPgOShVfO9XqtcIcDurCTJlDfs
UwC71kMG67xVuUaAZ32Hd3tH1wlQZK2+4Ow7lRsEOHle56XsPftWfp+DD2+s
+qByswBnu5/tPOkj+4/D20tjt3duZP9xCBbskTylteKwslpUc/AT+4+DnfHi
4IQm9h8H9xqv1Qs/s/84vPtlVtLvC/uPwxKF6YpPtFkcNJKvrTjzlf3H4V+0
7/HMb+w/Dm86p/su+c7+43Bpe0bsgGb2H4drKc/eNNLOcZhc/fvAiR/sPw7j
Y63uJP1k/3EQrxy9aN4v9h+H7QOGjtL9zf7jMHL+xjV1dGocDC2+axT9Yf9x
iB69/ZfPX/Yfh16je8w3/cf+45A39FirX3RRHAY8adIrU6tX9a98Xg1jsxNb
qFwShxbHP7pYqatcFoe+m9Jy27dUuSIOm477jbhOV8VhdJsuRkINlWviAPu7
8fNbqVwXh112xujaWuWGOBwSxDhX041xuDfarF7URuXmOGzbWH7VVlNltXjk
l2f36NxWZc14dExuUVFJa8WjQZbyKK2dyrrx2BWT4TCjvcoG8Ri9OXS8egeV
jeKxZcxRwSnaJB5jZxwYHtZRZbN4GJdWW4zqpDLisWFGYtlb2ioejtEjthV2
Vtk2HjVnJzU5aansEI/fc3SLtLuo7ByPDiONLl2lveKRNu/uvPiuKvvFo7Nr
xjSzbiqHxWP8z/2b3tOCeAjC9nhu0VY5NR59dV6vW9xdZWE8fjy5Nr6djsq5
8Vh77JzlKbogHjYLRpz07aFyUTyKJ0QW9NVl//F4cb1jUzVdEo/ZU+ceSNBj
//GYkLv18eie7D8er/cGRTynq+Jha2KUJO7F/uOhtdnwH/TZfzwcFlU1fKAb
4nE1WDRtQ2/2Hw+Pv9c6WPdh//HwPP125ldaLQFjHGy/FPzH/hNgOXVlVxsD
9p8AjXMJW77Rugk4+1V/W0Ff9p8A0RVRz1n92H8CxreY2fIzbZIAvWGbV6zv
z/4T0P2whomFIftPQNT1O0FvaKsEfE0OGy4awP4TsOq47bJxA9l/At71ONfi
Ee2cgF0GJvrxg9h/AqoH/d0z0Ij9J0CwIOfwFTpM+fuKGaN9BrP/BHQqSx7c
ZQj7T0Avj4OKQ7QwAc++Do1ZNJT9J0Bt76JH3+iCBGSuEx1RGLP/BGhumtrG
bBj7T8CsNZeq79ElCfBJStQNHc7+E3Bh8oOa7iPYfwLOnxqsfZiuSsD75ltX
5puw/wRcOTb+zwe6LgF3xCd2Z4xk/wlY/bn07qBR7D8Bx7rJYs7TzQko/rtn
6/LR7D8Rv3NWzvhBaybidWBXT8kY9p8Ip0H/tR5myv4TcfH7y/4XaYNEdGt5
uWz5WPafiE3jDB99o00SMcjOPjx7HPtPxOlXZbIBZuw/EWfmnxl1krZKxLmz
xbYLxrP/RGSP+/zxFe2QCK2Eeq3oCew/EXMsnx3qMpH9J2LJW+v722i/RNiU
hMWNN2f/iTA9cXVPJS1IRJfbmxxXTGL/iSg/OD/7Ey1MRLt7k6YnTGb/ifAX
lgm0p7D/RMz7azp1G12UiJLOP5NNwf4TEZrgteACXZIIjYbarXZT2X8iotcf
jHxOVyQi/6rlA/9p7D8Rx4I/nPlH1yRip0e7YVkW7D8RDyd87tvTkv0r8y1v
uWk73ZgI3Q6ywlHT2X8ils5TH32aVkvCJPVts6xnsP8keF+/+/YWrZWERuNP
Ostnsv8kmHrMqXxFGyThh8iyg78V+0/CXMWIez9okyTIjD2HxVuz/ySE3rPo
3G4W+0/C83e9o0W0VRLaiuaE6s5m/0lYfGzI33zaIQmB/Tp2HWDD/pMw2c3m
0C7aKwlXHk15NmIO+0+C05nJmw7TYUnw0Cx4YzaX/SchNeV4+Uk6NQkZD+qH
YR77T4KLT/DA83RuEgbEnts33Zb9J0Fbt9+lS3RREsTd3vhaz2f/SRjYy2/n
FbokCRE72gbNXsD+k7BErUPVVboiCQfMK0/NXsj+kyCatmnSVbomCcaX7s+b
Zcf+k3B3btWXCrohCa2H3TOeuYj9J8E+cVpzOd2chPQZHvbTFrP/ZCSOkc86
Q2smY+HjAdUT7dl/MoZv9fpwjNZNRsiBA5tGO7D/ZBxvbfdyH22UjGO+W84N
XsL+k+GU+nFMIW2WjGsnsib1Wcr+k+FueaNWQVslo2Ro625dHNl/MnJnJdal
0Q7J6GG9frq6E/tPRmb+hmkRtFcyFKL79z7Rfsnob7a11apl7D8Z3qGzKp/Q
gmSoaRgYL17O/pNxdWXQgEpamIxu9YqSqSvYfzIS9j54cZQuSMaw4sy9Q53Z
fzJEe/90LqCLk1EwNrqj9kr2n4yLu5duT6HLkvHW/MWDn3RFMqJee+9e68L+
k+EnmKRbR9ckw7agqO8CV/afjInHfl06Tzck4716UntTN/afjMtC8bttdHMy
Hk0K8NZxZ/8peH3UPzWZ1kyBV9hji2+0VgoU11vlu3uw/xRE3xmjuE0bpOBT
WMkIC0/2n4JtQY88D9AmKRhq1zjlPy/2nwK1wEklmTRSIPmtdfMHbZWCue+O
pnusYv8p2NQx8kU17ZCCFr+Lnk5ezf5ToNE/M3YX7ZUCh9O+Z7p7s/8U3Lmf
v1lAh6Ugeb7bwLe0IAXFN9vNXbSG/aeg7m6t7hlamILGvYYpRmvZfwp0gozz
RHRBCt7qTJ73ky5KQYjd1p0uPuw/BWYnthVdoUtSYLor22aUL/tXPo/5O2R5
dEUKLuw3S1TzY/8pWKzI0PWka1IwemfDgmt0XQry7HNHj/Zn/ynIePHseC7d
mILHHlqv/9DNKZhR5nXaJYD9p8J5x+iJl2jNVJRtKVkxNJD9p+JP2ynGObRu
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
SorOBntKJLSNFDWrM3ZsoW2laNBzSz1A20kxdbSFYxntIIX2AVODG7STFDfi
rO49op2l6J+aKnhHu0mhtV5d/xftpXx+Sed3tr3J+y9FuGbNYF3aT4r7d202
DKSDpNibN7yFKR0mRfcPaQ4WdJQUJ929t8ynBVI8S37yeAWdKIVbZVNHHzpV
isvbDoyIojOlmBVqZJlOC6WozXOdnUtLpRjv6Dt9O50rxbs/9qMO0xuUfZUO
7nqOLpCivLSx/gZdKIWrQemuR3SRFMtb5ri+pfdI8XhtTOcfdLEUOs6Sfa2r
ef+lmH3jPrTpEimebFt2sS99Uoql54dMGUGXSRH422a3OV0uRc9eVe1m0RVS
CB6fWWZPVyr7+jWo0I2ukuJOT+3H/vRtKS7V5rSPpWukEN7ZbpxJ1yqfT47b
1Dy6TgrLtNvW2+l6KY6aqc84RDdI0Vfzh2kZ/U75/tuX612jG5XfN9r30336
ixQPzrc69ZJulqLtWnHUZ/q38n7uNzBRu8X7L8PNYyfudaA1ZPAq8gnUozVl
iMqzbDmQ7iCDYZ5VyihaS4blu5P+Taa1ZdC+0nrNbFpXhqEv7lba0/oypD5T
6+dGG8igm5/j7UcbyvDoddbOKNpIhk9ZrWtTaWMZpFYaLWW0iQwjr4v6bKbH
KL//5dLhe2kzGXQeJo8upc1lcF7XctgFGjKUSCf0uklbyvBqzti/tbSVDD3Q
4m4DbSPDg4fbtnyhbZX7U4e7qd3m/Zchd8u2nh1oBxnax3a/2IN2kkHLK9Wj
P+0sQ1m+5u/htJsM15YWJE+gvWTIvrKk9Qx6jQzq3aZEzqf9ZHg8b+kLJzpI
BqHkiKUXHSbD7FdL8wLpKBk6zbZ7HkMLZNh9ZHe/dDpR+T5oe9vL6FQZus7Z
EFdAZ8rwfrz15t20UIbbeyOPHqWlMowNmHT2LJ0rQ8rM3LOV9AYZpr+QHbtH
F8ig8XPK1md0oQyBQwsS39NFMrjrlDk203tkqJm706jlHd5/Gf6tcH/bkT4s
w4zKP1t16RLl+9kxakF/+qQM06Svvw2jy2TA5XkiM7pc+XntS/pa0BUypB8a
WjSHrpTBrtNhQwe6SoapLksVLvRtGfa9G6S2lq6RIfzZgBWhdK0Mmn7LDsfR
dTLYlt77l0HXK9//+xunyukGGe7Xl4QX0O9k6P5iZNEuulHZ56Mu1w7TX2T4
fnFlw2m6WYYz0iE/K+jfyvfZJFj9Fq0mR1TErBaPaA05Js859O0lrSlHYnjJ
s0a6gxwOFS4XftJacuz+eTxf4y7vvxzLLl/26UTrypV9K0x1aX05xn4f9rkv
bSBHuwLpjqG0oRzbwm4vMKWN5Pjb5duXybSxHEZfW2Rb0SZy2G1V67OAHiPH
Y9nPQkfaTI55k5v7udPmcni2Vs/1oSFHf1sDjTDaUo7zwY6ecbSVHLcunzib
TtvIMVJh3U1K28qh3bej00baTo4uWztt2E47yGE4f/Gt/bSTHEft37UopZ2V
eR/WDDpHu8lh/bP/9Ku0l7Kfy3eW3KbXyLHJ/pv7I9pPjq27s1a9pIPk6Hhh
q9tHOkyOFhtg30xHyWHRd83UFvd4/+WYNnl4/3Z0ohy972T/7kqnyrGzTHat
F50pR/jtWXJDWijH89oji4fRUjnabHrcaSydK8e9msrTk+kNcvScmuoxky6Q
IyRFt7UtXShHkF3SRge6SI4067vGK+k9cui16HZ4FV0sh6CTxegA+rAcun/X
7oqgS+SYtGi9XgJ9Ug57cbUggy6T45FxrzoJXS6Hkyxq3Aa6Qvn5pn+TC+lK
OXT8dlzfQ1fJ0X1zbKcj9G05tvTOnnGKrlHmHfMg5AJdK0c3Y+9N1+g65fs4
w6rsDl2vvB+nwu4/ohvk+Hi+5dsX9Dvl+57S+OU93ShH/LAZ37/SX+T4eqd9
0x+6WY6cPKsXrWp4/+XIT295syOtpsDzwxZHutMaCkh7a4l705oKeJ739RxA
d1BAlr/KdBitpUBdgcbvMbS2AuuOzDxhTusqsPPs+EBLWl+B7K1P+9vQBgp4
j55xbSFtqEBbCx9fR9pIgUcbndu50sYKdGxrmL+aNlEg1OLMkAB6jAJHW40v
DqfNFBisnjs8jjZX4Hv9s22pNBTQsTPQEdKWCsz9uDhWQVspMM0262k+baNA
ULsr5ttpWwVm7e4m2kvbKaB93O/xYdpBgW4lrwxP0k4KRBrEup2nnRWI9pq0
8QrtpoDVP6MbN2kvBbrOtfpZQ69RQL9kc586pf8PgmTAfA==
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxN13lYzOv/BvDs2XOEkGMQhVDWLHFHCFGUlHVKJalM+17TPtVUs5d9LJE9
S8SxhBxxLNnDwdgS4oQQwm9+19ez+KfrdT098577c3/e15U+Xqvn+TQ1MDB4
0MLA4P9//u9f3aT//dT9/mmAlR3News+PP5tQ7R9/jIz6zmxEQ6XH8mxvUts
jCXZu5LHXCI2gShm3D8RJ4lN8W75j5tfi4kFOCnw73x6G3FfWLqtaX2+gNgM
cRmGaJNDPACNoqUzcpKILdBnl9UZxwjiQdBmX5o1fRWxJYrcPqljhcRDsWPN
Gdea+cRWCL02d6p0FrE1Xo7cbulrRzwc466vvBs2hngEOu8t6350CPFIDBvZ
7dpgM+JRsD754d71HsSjsWrEuX5FnYjHoPphyfq9hsQ2GDQpc/yTX49+eyy+
Gnr9sPtCPA5Te29+cfUd8XjICo//SK8mnoBDnTrMX/mI2Bb9J502CL9DPBEt
E2Q9d14lnoTkgpPnm18gBmov3jXLOP3bYiByy5blw0rJuR3Cb7w/0FhMzu0w
uSrD/t1Ocj4ZZ7I/uTbbSs4n41pyTJ/x68n5FMyZUV2rUpPzKVjqF/OzYx45
t0fxmCubd0vIuT1cwvYOWJFMzqfij4KWT+ziyPlUOL09bzE+gpxPww6PMo95
InI+DaH/FtxM9yfn0+F5fMfXu97kfDqWuj0dPnUZOXeAYs+5V1c8yLkDIBol
DXYl5zOQURGdPcyJnM/A521dFreaSc5nolnRX+EN9uR8Jsy3jnFpCnI+C1ba
hSFm48n5LLwJe+mydDQ5d0TMv4mx+63JuSP2dVas7jaEnM/G2Pppx9QW5Hw2
crJFzweakfM5uD8wOvFmb3I+Bx7V83oqepJzJ3xSrZjl042cO+HzoMxCx87k
3Bn/5T49M73jb8MZa67XjHNrS37fGeaXHfdGtvrtMmes7fP26O5m5P5czNRW
fH//6+Hv+3NxyOB9z5mNvy2ei8m/4k8eavjtsrlwvSrOGPrptw3modOjL32P
vyf35+HEl7Pj3N6R+/PwfWd+bNM35P48/Nfss/LUS3LfBS/W9xqZ9Zzcd4F/
ddMOPk/IfRes+9v+9pxH5L4Lbkf1nTT9Abnvig0Hg5vOqSL3XfGhjfqu121y
3xW1m0Oi0m6Q+66Y3GqVtuQauT8fOUuc2328TO7Px7nSJTG2l8j9+Rh8ZOgu
1QVyfz7geHRxQzm574a7leNd/c6S+27oOHKG6/PT5L4bNEF7+wScJPfdcLSP
KPnXcXJ/AV6t+Md2Yym5vwD+t8xMHY6Q+wtQrG35svEQub8ATi27rzxxgNx3
xx/lPYPS95P77rC88vjswr3kvjtc+tiNGrub3HdHzGWBqs9Oct8DY9sv2995
B7nvgYva2ws6FpL7HogYMW+Z8VZy3wOb62UFfTeT+wsxcvaYu2M3kfsLcero
1f88NpD7C9Hz2OmjyevI/YUw/OrY4vAacn8RFkfn7n+bT+4vQvqbgNxhGnJ/
EYz7bYiJVpH7i1C+bd3sfxTk/mIMnVv0xExO7i+G+6CzndLzyP3FiBmx9di7
HHJ/Mcz9T5QslZL7S7C4yvrZ7Sxyfwk0p+70ds0k95dAeHvgzHsZ5P4SVBTO
tfNJJ/eXokmDyYsvqeT+Uuxd8KaLPIXcXwrbvdcPWyWT+0tx8U3Q1jticn8Z
3t1oPJecSO4vQ9tyh68jE8j9ZcjYVTzgbRy5vww+n3tb7Y4l94V4U9TuW1DM
bwuE2BcSttImmnyeEEef3lveKuq3hUJM2G537UEE+XwhoqqGKUrCf1srhKtX
oVIVRuYJ4bKy119Rob+tEyL1SladZwiZ74nGkvmmzsFkvifiBnuYTxGR+Z74
Wab7Nm41me+J/TO2i8cEkfme6Lr+2habQDLfE228amdNDCDzPdH300dfh1Vk
vifcp0957OZP5nsh5+5a7cqVZL4X1h0wzRf7kfleOBE9c/+6FWS+F14mN7tz
3JfM98KP/5IbHvqQ+V5Y8nhJ8xbEZV44p016OcybzPdC+0/WsqXLyfzluLag
1VuZF5m/HPPmva3925PMX46ndwWJBsTC5TDfPVRpKyTzl8P+8nuThGVk/nJo
/5MbnF1K5i9Hhx9J41oT65ZjcH7CUZclZL43zu6S+m1eTOZ7o75Fw8QPi8h8
b3T5MtdyGrHQG58+rO67YSGZ7w3fyf6dv3iQ+d54fWTtexfiMm+4+K7bf8id
zPdG38Cp6Eps4IOMo/s1sQvIfB/oKodsf+ZG5vsg5dgcrznEQh+UnH1w6q/5
ZL4P9oju7h9MrPVBhFfcwI2uZL4PNk2aIOhMrPNB7O5TkiwXMt8X7211C5oT
C3yxKelAsngeme8Lxy/hP3/OJfN9Efzn1rJEYrEvric/PtWUWOuLuqtN/stw
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
P/8fS1BT1Q==
             "]]}, {
            Hue[0.5585438199983166, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
RlPnxGPHo4J7Stp/PBJlHoHUefGIU65rTl0QjzaBor0K2n88mpXcnkqtM3rq
6Tdy2n88+l7tmUWtj4dmgNkg6jLj54l9y7Jo//HQ6QfHUVfGI8N9ZQ/qmnh8
miu4mUn7j0em4+coakECTviPs6M2ScBo6bPSDNp/At7Z6ROpLRPg3qThYGrr
BMz5EftCRvtPwMMng9dS2ycgsaD7dGrHBDhFTq5LjQR0W7yhKJ32n2D890E7
EbVbApTzT9pReyQgzUL8LI32nwD9QOFGap8EfOrvMY9alICTuZ4W1OHGz+8Z
eyeV9p+AXZJtKmppAu4E3JhFLU9A7+u/zKlzEjApodc9Ke0/AW6yGeuo8xJQ
9MF/MXVBAr7pY7tRFyVg9oyYVym0/wQo9i0voC5JgK7f0HBqfQJ+9akCdVkC
+reIa0JtSMDNKe/uJNP+E1Do6ZhLXZOAC1Vz/KhrE1AaP2kYtSARwrsNG1Gb
JMJ9i6I0ifafiGf5z7dTWyZixNWfwdTWifB5eteJ2i4RZo8C2lLbJ8LpePGr
RNp/ImbH3DpJjUQoR2rl1M6J6GXRzJvaLRHvHByGU3skou8NEzNqYSIibaUv
Emj/iUhJOXCKWpSIz5OjNdThieihr1pNLU6EZcqPidTSRPR/kWdNLU+ERcD7
7/G0/0Rk7rtVSp2biClDpxykzkvE+Xz3DOqCRLQq/LCSuijR+O/xzpOodYm4
PqvMhrrEuN/Pqh61PhGN2796KqH9J2Kuw8iz1IZElK5rvYW6MhEPBq+WUNck
wvHLxGXUtYkwL900nlqQhMu3A7tTmyTh0g9dI2qzJIgWp7wW0/6T8M28+Dq1
dRKmIOQgtV0SHpus1VDbJ2Hnpr6R1I5JeOU4YAk1ktDTYusEauck1I2O7UXt
loSWx4rNqD2ScKd90Nc42n8SlHWkj6l9kjDqWp2L1KIkzHn2eB91eBJKD3bU
UouT0PzAyVhqaRKyZ59YQS1PQv9ubWZQ5yRh25arw6lzk3Bi4UMb6rwkWL50
akFdYMx3v+H3WNp/Eprc7FhBrUuCf2CqnrokCRnLnU9S641/f+G8POoy4/tt
+I+a2pCEcdZ+EurKJKxb7utPXZME4cZjC6hrje8zw3UytSAZFvUGDqU2Scah
m4u6U5sl4+2Nm62pLZMhuS+rS22djCv/ZryPof0nY5/6toHaPhky80V6asdk
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
wr1K
             "]]}, {
            Hue[0.7946117974981064, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
HgnUufFw/DEoljo/HsfdZkRRF8TjdjOfcOpC3fOl/wVTF8ejMO+nP3V5PPws
l/pQV8bjwPOzntTV8UgKGOfO+o9Hz/zzLqz/eEQuWu7E+tf10+fvGtZ/Aoxe
7F/F+k/AWgfvFaz/BOSsgh3rPwGXtndbzPpPgPJb40Ws/wQcH/B9Pus/ATd+
/JjD+k+A9aQWs1j/CQgv7DuD9Z+AyDmzp7L+db+fFwrWfwIOHD0+gfWfgLGj
m4xj/Sdgxm87S9Z/AurvFoxk/Sdg9Pa+I1j/uv36bzRj/Sdgj2WXoaz/BKz6
L8uU9Z8AxSrLQaz/BFzpdmcA6z8BE09F9GP9J+B6F/M+rP8EdGjxvhfrPwGj
1h7swfpPQJdGUd1Y/7r9Ti7rwvpPwFGPsZ1Z/wmY96nvP6z/BCzq36kj6z8B
h6sN2rP+E/CzkWE71n8iJqzr1Yb1n4j+b8xbsf4T8cZjfgvWfyJsyr2as/4T
se99elPWfyLKdpU1Zv0notOTFnqs/0SsCZwjYP0nosN89Z+xtP9EtJj+7Be1
dSKyJ437SW2XiJPGG79TCxORdfX3N2qXRPTp5/qVWpSIwLb3PlMHJmKJp80n
anEiqk0r6qilidg1aGkttTwRB+Y/eU+dlgiXSJ931BmJ2J7b8i11biK27cl5
TZ2fiObes19RFyTi+dOPL6kLE5H7KuMFdbHu87vbPqcuT4TEts0z6spErJZd
fUJdnYjM38mPqWsSoVIuraauTUTVyP6PqOsT4Vnx7QG1QIZdNmX3qfVlGL5j
zz1qAxmaHpTdpTaSIcDVu4raWIZBh+0rqU1kMIiec4faTAaPwom3qS1luLl8
1C1qyNAL5jdZ/zIErjK/wfqXYVH2qArWvwyugknXWf8yFK6ZU876lyHz6Ioy
1r8MW+o8r7H+ZYj7G1fK+pfB/3pWCetfhqKl56+y/mVoFf3iCutfhv7T2jBn
yGAqG32Z9S+D31ynYta/DKn+2kusfxnW/LpykfUvw6MyPeZiGRY/nXCB9S/D
5EGhRax/GZarT51n/cuQ1FmPuUaGPztmnWP9y9BshPos61+GEQceF7L+kzCz
szmzfhJGLYk5w/pPwsC1906z/pPgbW7BbJyErQUpp1j/SXB8/e4k6z8Je07O
Z7ZMQly/AydY/0kY19mI2SoJIxPEx1n/SWjv8+YY6z8Jmkt2zMIk7A8rLmD9
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
SlQ3b8LdfyX+8dDj7r8KH+8KuPuvwvL5f7Xs/qswovg3c2sV1lj9YjZQ4cq1
H8yGKixe8Z3ZSIWad9+Yu6vgGvuV2ViFwn5fmPupcKv4E7OJCnLvj8xDVLjb
u47ZTIXNtz8wW6hwSv6e2VKFQdbvmMfrPq/hW2aokPDwNfM0FWz2vWK2UqF9
ZA3zXBX+W/aS2VoFo9EvmG1VGNPlObOdCn/+PmW2V8H2zRNmoQom9x4zO6rg
XFbN7KLC30uPmN1VeFj0kFmk6+/CA2Zf3b5X7zMHquBz8x5zqAqnH99lFqvw
42MVs0SFTvqcpSro9a5klun2n3CHWa7S/X13m1mtQuuoW8xpKmzZdZM5XYUD
N28wZ6gwvjHnbBWGjKxgzlXBb/115r0q6GeVM+erUPmwjPmQzj04F+j2W32N
+aQKw3eUMheqIHpXwlykwh5LzsW672PsVeYSFZ7eucJcrkKxKeebKgRGXWau
1H3/7xUz39e9H0vO1SpUaS8xP1NhWv1F5hoVpthzfqvLO3eBuVaFElPOn3Xz
qUXM9Sr0b8r5lwrr/M4zC9T49fIccxM1Htpz1ldD7+ZZ7v6rsXoeZwM13hQX
cvdfja0zOBup4XHxDHf/1bCx4mysxrSS09z9V2PMIs4magy6e4q7/2q0duRs
psbdDye5+69GYhhnSzU6t+E8Xg3/rSe4+69G5nDO09SQXzzO3X81xq/kPFe3
35dj3P1X478UzrZquJhytlPjbHEBd//VOOTMWajGOH3Ojmos2H2Uu/9qvJrH
2V2Nxp+OcPdfjdSNnH11n28y50A1Or45zN1/NWo1nMVqDJ3CWaLG5Q+HuPuv
xvGtnGW678t8znI14gWc1WqsPHiQu/9qeDlzTte9j+6cM9SYeeMAd//V+JvA
OVeNp1M571Xjw+/93P1Xo8cxzofUcPXjXKBGmTnnk2rMrsvn7r8at/I5F6nh
7sW5WI2WIziXqLH3y3/c/Vdj3jHON9WoCeNcqUbwVM73dfu14Fyths/1PO7+
q1GxkXONGl3Wcn6rxtR/Odfq8uv3cfdfjRFFnOvVqJNz/qWGZBVngQavhnBu
okH3X3u5+69B1xLOrTV4lM7ZQANXD86GGhwCZyMNTnXk3F2DyJd7uPuvwe8T
nPtp8K+Cs4kG7Zw5D9EgYwJnMw0eGHK20KDo7W7u/muw6ALn8RpEb+UMDZYE
cp6mwaVFnK00uPUv57kahLbgbK3B8ee7uPuvQdI5znYafNzG2V6Dl2Gchbr3
Z8/ZUYOAcZxdNGjbjbO7BqY/c7n7r0HpPc6+GtSd5ByogWYr51ANCsScxRos
XctZooFoBmepBo0Gc5ZpoN+Ws1z3Pj/mcPdfA687nNM0KDvJOV2D9O2cMzS4
LeWcrUGIJ+dcDeKXcN6rwd8JnPM1uNef8yENurXlXKDB6a87ufuvwblHnAs1
GHCZc5EGNQc4F2vQbAvnEg0i4jiX675f3pxvahC2knOlBn+sON/X4KYF52rd
uTHnZ7r923Cu0WDWjx3c/ddg3UvOtRpU3OT8WYPEc5zrNZDnc/6lQfVWzgIt
gpI4N9FiRShnfS0kbpxba/FpOWcDLXJmczbUYutYzkZaVA7m3F0L226cjbUw
aM25nxatf2dz91+LGe85D9Hi1CPOZlp4XedsoYXwPGdLLRIOcx6vxbscztAi
fhPnaVrYJ3G20mKdmPNcLXb6cLbWopszZ1stipZzttMicz5ney3yp3AWalE3
irOjFg6mnF20aGzM2V2LG4acRVpUtODsq8XfP1nc/ddi2WfOoVo8esVZrIXi
EWeJFh63OEu18LvKWabFjrOc5Vr8OcpZrUVEHuc0LQbu4JyuxdfNnDO0eKPk
nK1FswTOubr+Iznv1WJ3IOd8LcxFnA9p8cCZc4EWe1ZzPqnF5qWcC7XYt4Bz
kRbVMzkXazECnEt0/VtyLtfCcjjnm1q8GsS5UouCPpzv695fN87Vuu+DIedn
uvvShnONFt2bc36rRaiAc60W9d+3c/dfi5RPnOu1wDvOv3T36yVnQSrqqjk3
SUXtXc76qdC/xbl1KizLOBukQnyZs2Eqqs9zNkqF3WnO3VPxsoCzcSpkBzn3
S4VVHmeTVHTZxXlIKgTZnM1S8WsrZ4tUtNnE2TIV5hrO41PhLueMVBxL5Dwt
FV3jOFulIjmK89xU/BPO2ToVeUGcbVOx3I+zXSqMvDjbp6LGnbMwFZddODum
4oQjZ5dUnBZydk9Fhf3//H/ETkUS
             "]]}}}, {{}, {}}, {{{{{
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 1.}], 
                   Offset[{0, 0}, {1642.8894506169836`, 0.8945291181781517}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1642.8894506169836`, 0.8945291181781517}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1642.8894506169836`,
                     0.8945291181781517}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1642.8894506169836`,
                     0.8945291181781517}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 1.}], 
                   Offset[{0, 0}, {1642.8894506169836`, 0.8945291181781517}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1642.8894506169836`, 0.8945291181781517}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1642.8894506169836`,
                     0.8945291181781517}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1642.8894506169836`,
                     0.8945291181781517}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{34., 6.500000000000007}, {1642.8894506169836`, 
                    0.8945291181781517}], 
                   
                   Offset[{34., -6.499999999999993}, {1642.8894506169836`, 
                    0.8945291181781517}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999998}, {
                    1642.8894506169836`, 0.8945291181781517}], 
                   
                   Offset[{9.999999999999998, 6.500000000000002}, {
                    1642.8894506169836`, 0.8945291181781517}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.01`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22., 4.884981308350689*^-15}, {1642.8894506169836`, 
                  0.8945291181781517}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 1.}], 
                   Offset[{0, 0}, {1642.8894506169836`, 0.9648299425878404}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1642.8894506169836`, 0.9648299425878404}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1642.8894506169836`,
                     0.9648299425878404}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1642.8894506169836`,
                     0.9648299425878404}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 1.}], 
                   Offset[{0, 0}, {1642.8894506169836`, 0.9648299425878404}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1642.8894506169836`, 0.9648299425878404}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1642.8894506169836`,
                     0.9648299425878404}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1642.8894506169836`,
                     0.9648299425878404}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1642.8894506169836`, 
                    0.9648299425878404}], 
                   
                   Offset[{35., -6.499999999999992}, {1642.8894506169836`, 
                    0.9648299425878404}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1642.8894506169836`, 0.9648299425878404}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1642.8894506169836`, 0.9648299425878404}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.05`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1642.8894506169836`, 0.9648299425878404}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.871806832731015}], 
                   Offset[{0, 0}, {1530.2291666666667`, 0.871806832731015}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 0.871806832731015}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 0.871806832731015}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 0.871806832731015}], 
                   Offset[{0, 0}, {1642.8894506169836`, 0.8238490168463475}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1642.8894506169836`, 0.8238490168463475}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1642.8894506169836`,
                     0.8238490168463475}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1642.8894506169836`,
                     0.8238490168463475}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.871806832731015}], 
                   Offset[{0, 0}, {1530.2291666666667`, 0.871806832731015}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 0.871806832731015}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 0.871806832731015}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 0.871806832731015}], 
                   Offset[{0, 0}, {1642.8894506169836`, 0.8238490168463475}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1642.8894506169836`, 0.8238490168463475}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1642.8894506169836`,
                     0.8238490168463475}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1642.8894506169836`,
                     0.8238490168463475}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1642.8894506169836`, 
                    0.8238490168463475}], 
                   
                   Offset[{35., -6.499999999999992}, {1642.8894506169836`, 
                    0.8238490168463475}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1642.8894506169836`, 0.8238490168463475}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1642.8894506169836`, 0.8238490168463475}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.15`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1642.8894506169836`, 0.8238490168463475}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.7446054781180825}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.7446054781180825}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7446054781180825}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7446054781180825}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.7446054781180825}], 
                   Offset[{0, 0}, {1642.8894506169836`, 0.7420298951414085}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1642.8894506169836`, 0.7420298951414085}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1642.8894506169836`,
                     0.7420298951414085}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1642.8894506169836`,
                     0.7420298951414085}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.7446054781180825}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.7446054781180825}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7446054781180825}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7446054781180825}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.7446054781180825}], 
                   Offset[{0, 0}, {1642.8894506169836`, 0.7420298951414085}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1642.8894506169836`, 0.7420298951414085}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1642.8894506169836`,
                     0.7420298951414085}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1642.8894506169836`,
                     0.7420298951414085}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1642.8894506169836`, 
                    0.7420298951414085}], 
                   
                   Offset[{35., -6.499999999999992}, {1642.8894506169836`, 
                    0.7420298951414085}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1642.8894506169836`, 0.7420298951414085}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1642.8894506169836`, 0.7420298951414085}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.25`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1642.8894506169836`, 0.7420298951414085}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.5437600527615593}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.5437600527615593}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.5437600527615593}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.5437600527615593}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.5437600527615593}], 
                   Offset[{0, 0}, {1642.8894506169836`, 0.5437509907479162}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1642.8894506169836`, 0.5437509907479162}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1642.8894506169836`,
                     0.5437509907479162}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1642.8894506169836`,
                     0.5437509907479162}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.5437600527615593}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.5437600527615593}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.5437600527615593}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.5437600527615593}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.5437600527615593}], 
                   Offset[{0, 0}, {1642.8894506169836`, 0.5437509907479162}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1642.8894506169836`, 0.5437509907479162}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1642.8894506169836`,
                     0.5437509907479162}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1642.8894506169836`,
                     0.5437509907479162}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{30., 6.500000000000006}, {1642.8894506169836`, 
                    0.5437509907479162}], 
                   
                   Offset[{30., -6.499999999999994}, {1642.8894506169836`, 
                    0.5437509907479162}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1642.8894506169836`, 0.5437509907479162}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1642.8894506169836`, 0.5437509907479162}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.5`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{20., 4.440892098500626*^-15}, {1642.8894506169836`, 
                  0.5437509907479162}], {0, 
                 0}]}]}}}}, {{{}}}}, {{}, {}}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> False, 
         ImagePadding -> {{All, 72.0690626672044}, {All, All}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["time", TraditionalForm], 
           FormBox[
            RowBox[{"freq", " ", "oblique"}], TraditionalForm]}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 440, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           RowBox[{"{", 
             RowBox[{
               RowBox[{"ba", "\[Rule]", "2"}], ",", 
               RowBox[{"bn", "\[Rule]", "1"}], ",", 
               RowBox[{"z", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vs", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vh", "\[Rule]", "1"}], ",", 
               RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"u", "\[Rule]", "0.5`"}], ",", 
               RowBox[{"pa", "\[Rule]", "0"}], ",", 
               RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
       
        FormBox[
         TemplateBox[{"0.01`", "0.05`", "0.15`", "0.25`", "0.5`"}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm],FormBox[
        FormBox[
         TemplateBox[{"\"healthy juv\"", "\"stressed juv\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, 
                 GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Normal", ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
      
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {2, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}], ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#3, ",", "Above"}], "]"}]}], "}"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
            
            LineBox[CompressedData["
1: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
HN/DK3z///0/CWMKXQ==
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]], 
            LineBox[CompressedData["
1:eJxd13ucjHX/P/AhstWqqZa2bBosbYVGoXXKixbrlMFisOxYy84eMHuePV8z
O7K0NHJoaWnIYcN9N9W6W4VGpOVedxPSdiNDZEmMnLY75ev3+HV9ro+Xfzye
3vue17yut8vjoUPivHGzmut0uuMtdbr/9/v//xUc+M9hpwvC/nll4N9/gKNz
Tzz2ZZXqEDRYF34+uEK1Hlc6xXevKFIdhubKgXXL56gOx7LjJ/eNS1AdgVW9
1322a6xqA57dktDmUIzqjliV0vitPVp1JLJrvh23o6vqLqi/UT91QQfVUfjm
w8dbn2ir+nl8ueXaj95Q1V2xMaJ0zZ3mqrvjoj4p6cvfL/9tI1r1+HX1taDq
HrjVsVtwcaPql7DpVtykioDql/GHu1eLiw2qe8Ka80vy+m9V98LnxppuHx1U
3RvxHS698tg+1a9gfeLLa/bsUh2Ng0m1Gz//VHUfPPHPTXW3P1LdF2/2qv3A
sU11P3z25fm2wzar7o/vvxh8/4j1qgdgXLBh2YI1ql9F5oK6O7crVQ9EZOdZ
2zYvVw1YR9kj5rv/tgKcvr7q6tsV6nwQMs6/d/E/5ep8EJZt7Him93x1Phgt
trQ9VOdQ54OxI2Df4SxR56+h7WutDyUWqvPXcHtZ95hkuzqPwbAh/7QtyVHn
MRizdm/tsUx1PgTvDntg5as2dT4El9PLl++bo86HwvKxf2xymjofit0xEUWd
U9T5MNyYVPrtn7PV+TBU2To+cyVJncfi8VNvoClRncfip+NH24fPUOfDYd71
knd0gjofDuf+yFvvTFPnI/DMEzea3ZyqzkcgamSni7OnqPORmJ5w/MgFszof
if65Wb8WT1Lno3C1fXBux4nqfBRafLVk1bE4dT4azW5M+HTVeHU+Gvu7bH0q
bZw6fx1d9v769Iix6vx1zGn/RKfeJnU+Bks7JyzrPkadj8H00nM/vvS6Ojfh
+5+nFw0e/bdhwsU39jfGj1J/3oSGjo9vdoz82z4TfD9cGegdoe6PxcCJ9kGN
w9X9sTg3oOnV51QrYzH7X//wZ8aq+2Oh+2HJsn3D1P1xyL/86HPtVWMc+pqa
epcOVffH4Up9u+TzQ9T9cThmezV5omrdeLiXnWj8d4y6Px5XH262bphqZTz2
l7WLPfCauj8eJ99uWGVSrYvDlat/xJ0crO7HoXxI/37zVCtxOP+B4dH7Vfvi
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
Otl+J375t3x/J76XHXDiS9mNTnhlB51YI7vJiQrZujIUyA4pQ4psfRniZYeX
4XXZhjIMkh1Vhl6yjWWIkh1dhgjZKEOY7NgyhMg2lUEn21yG6wfl+5fhkmxr
Gc7ItpXhuGx7GY7IVspQL7u8DPtku8vwuezKMtTI9pRhm+zqMlTL9pZhneza
Mrwr21eGFbLryuCW7S/DItkNZSiXHSjDfNmNZSiVHSyDXXZTGXJk61zIlB3i
whzZehdSZYe7MFO2wYUZsqNcmC7b6MJU2dEuTJYNFybJjnXBJNvkwhjZZhdG
33N/F0bec38XRtxzfxdi77m/C0Pvub8Lr91zfxcG33N/Fwbdc38XcM/9ydX0
815yLdlHriP7yQ3kALmRHCQ3kXXz73UIWU8OJxvIUWQjOZoMcizZRDaTLWQr
2Ua2kxVyOdlNriR7yNVkL7mW7CPXkf3kBnKA3EgOkpvIujfo/mQ9OZxsIEeR
jeRoMsixZBPZTLaQrWQb2U5WyOVkN7mS7CFXk73kWrKPXEf2kxvIAXIjOUhu
IusW0P3JenI42UCOIhvJ0WSQY8kmsplsIVvJNrKdrJDLyW5yJdlDriZ7ybVk
H7mO7Cc3kAPkRnKQ3ETWldP9yXpyONlAjiIbydFkkGPJJrKZbCFbyTaynayQ
y8luciXZQ64me8m1ZB+5juwnN5AD5EZykNxE1i2k+5P15HCygRxFNpKjySDH
kk1kM9lCtpJtZDtZIZeT3eRKsodcTfaSa8k+ch3ZT24gB8iN5CC5iaxbRPcn
68nhZAM5imwkR5NBjiWbyGayhWwl28h2skIuJ7vJlWQPuZrsJdeSfeQ6sp/c
QA6QG8lBchNZ9ybdn6wnh5MN5CiykRxNBjmWbCKbyRaylWwj28kKuZzsJleS
PeRqspdcS/aR68h+cgM5QG4kB8lNZF0F3Z+sJ4eTDeQospEcTQY5lmwim8kW
spVsI9vJCrmc7CZXkj3karKXXEv2kevIfnIDOUBuJAfJTWTdYro/WU8OJxvI
UWQjOZoMcizZRDaTLWQr2Ua2kxVyOdlNriR7yNVkL7mW7CPXkf3kBnKA3EgO
kpvIuiV0f7KeHE42kKPIRnI0GeRYsolsJlvIVrKNbCcr5HKym1xJ9pCryV5y
LdlHriP7yQ3kALmRHCQ3kXVv0f3JenI42UCOIhvJ0WSQY8kmsplsIVvJNrKd
rJDLyW5yJdlDriZ7ybVkH7mO7Cc3kAPkRnKQ3ETWue91C3IIOZSsJ4eRw8kR
ZAM5khxF7ko2knuSo8n9ySDHkGPJo8gmchzZTI4nW8hJZCs5nWwjZ5Pt5CKy
QnaRy8kVZDd5ObmSXEX2kDeQq8nbyF5yDbmWvJPsI+8j15HryX7yUXID+QQ5
QD5LbiRfIgfJ18lN5Ntk3VJ6/8kh5FCynhxGDidHkA3kSHIUuSvZSO5Jjib3
J4McQ44ljyKbyHFkMzmebCEnka3kdLKNnE22k4vICtlFLidXkN3k5eRKchXZ
Q95AriZvI3vJNeRa8k6yj7yPXEeuJ/vJR8kN5BPkAPksuZF8iRwkXyc3kW+T
dW/T+08OIYeS9eQwcjg5gmwgR5KjyF3JRnJPcjS5PxnkGHIseRTZRI4jm8nx
ZAs5iWwlp5Nt5GyynVxEVsgucjm5guwmLydXkqvIHvIGcjV5G9lLriHXkneS
feR95DpyPdlPPkpuIJ8gB8hnyY3kS+Qg+Tq5iXybrFtG7z85hBxK1pPDyOHk
CLKBHEmOInclG8k9ydHk/mSQY8ix5FFkEzmObCbHky3kJLKVnE62kbPJdnIR
WSG7yOXkCrKbvJxcSa4ie8gbyNXkbWQvuYZcS95J9pH3kevI9WQ/+Si5gXyC
HCCfJTeSL5GD5OvkJvJtsm45vf/kEHIoWU8OI4eTI8gGciQ5ityVbCT3JEeT
+5NBjiHHkkeRTeQ4spkcT7aQk8hWcjrZRs4m28lFZIXsIpeTK8hu8nJyJbmK
7CFvIFeTt5G95BpyLXkn2UfeR64j15P95KPkBvIJcoB8ltxIvkQOkq+Tm8i3
yboV9P6TQ8ihZD05jBxOjiAbyJHkKHJXspHckxxN7k8GOYYcSx5FNpHjyGZy
PNlCTiJbyelkGzmbbCcXkRWyi1xOriC7ycvJleQqsoe8gVxN3kb2kmvIteSd
ZB95H7mOXE/2k4+SG8gnyAHyWXIj+RI5SL5ObiLfJutW0vtPDiGHkvXkMHI4
OYJsIEeSo8hdyUZyT3I0uT8Z5BhyLHkU2USOI5vJ8WQLOYlsJaeTbeRssp1c
RFbILnI5uYLsJi8nV5KryB7yBnI1eRvZS64h15J3kn3kfeQ6cj3ZTz5KbiCf
IAfIZ8mN5EvkIPk6uYl8m6x7h95/cgg5lKwnh5HDyRFkAzmSHEXuSjaSe5Kj
yf3JIMeQY8mjyCZyHNlMjidbyElkKzld8/8B4+9Dbw==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
            LineBox[CompressedData["
1:eJxd13tczOn7P/BxDmGcQxjn0NqWkHV6WacQQgjJRAjFdJ7SYaqpppqpsRvb
EkLIcQctObcOuznsbksfYq0du9aG2FgSwrff4+c+dPnH4+meq+v9mtf95qHb
4jUzl9ZVKBS/NVAo/t/v//9XxeiDE+9Ftjn47+iPf4At3x7rc3o1sw1upqy7
avsZsxJbh3QcX/fl049ugz2j3/fddILZDl/cynx+PY7ZHhWLLrfNm8ysQts3
t/u2asvcHS39E+va3nvy0T3xuyb0p/SDzL2x78/jjl9FMzsgeNon01tOY+6H
3rY/NqyjYnaEau/NO/P+K//oATAZR/ZsXcTshItTdzXuuYX5Myx6W7ktIZR5
IDo0fV3pMI15EAK7+rdq6sDsjC1HNzfqVo95MH5+uPutzx+PP3oIxlvCHS+e
Yh6KpneOV47ZxOyCocuu3v4lknkYjn3/i27ZAubP0bfs2cl3I5iHo925JiZT
V+YR8Fi7tWfzeswj0XmG+n74P48+ehRGRQ5Un7/KPBozq/7n/fAwM3Bk9eDb
f37z0TpgVar/h7w4dj4GW9uZBwxeyc7HwJoy5o1uFjv/Auf2tOuTNJKdfwGb
X+/sHeXAzseip+bMvtzW7HwspiS6xx7+8PDj+Tj0aWTas7j8o3XjUGw+89u3
t9j5eCQ28Pkv80d2Ph7Tvd5U2R5l5xNgnvq0S+ud7HwCWg2eXrg9k51PhIfq
4KJjenY+EccOPd7pFsrOXdF3RFMf72Xs3BW3RjVOKJvLzich1Pmo6p9J7HwS
1FEbNHNGsPPJmPHux0sDP2Xnk+H64cl2bXd2PgUPN/dY17MdO5+C3E4vJwxq
ws7d8K+r+qtt78s+nrvhseqO2v+/j1ZMRdqB5fnmMnY+FV+65OxvepedT8Mf
5+/qbl9n59Ow44SX7s0ldj4dpouLWq4oZOfT8W6nv6XHMXbujtmvdP/2OfjR
cEf6oVmhwTvZ593Rfnx2db3NH13ojnO91LNuZrL5GdiRNWH+YyObn4GDXz+v
NyqRzc9As82LPX6KZvMzcL3PHPXXYWx+Jr66UuC2cQ2bn4md2a2mlfix+ZmY
ceXd7rGL2XzNObbtf7CAzc9CltLp1MnZbH4W7q0PGPf9dDY/C9W2QwpfTmLz
s3BD3/TY3HFs3gOHq3ed+nsUm/dAU4NJs2UYm/fA7Jl7onXObN4DxxY++Cb1
UzY/Gza3riWe7MfmZyPl0Re2rXqz+dlQ/Pyqjqkbm58NZe/J4/t3ZvNzUOhz
8/RjOzY/Bx52A71+asPm52DvqPUdflGy+TlY0nHjq39t2fxcOJdWfBjQmM3P
xeF9ncalNWDzc/FmkePv9eqy+bmIGKN//PX7fz7Oe6LN5A0bJrz9aHjiUsQ+
2xZVH62r8YQ98RUvPrrQEyXK24MePWPz8xCtP+bz9imbn4eDvx2d1aOczc/D
uoft5vo8ZPPzkG/99kz+AzY/H/+cu/Cn/X02Px9NV91QfXOPzc/Hhm7a3xz+
YPPzMfJAr8grd9j8Apz5teMK3W02vwDzPnXsMLGUzS+Abdi2D11usPkFGGBV
bmhUwua9EFo2fL7iGpv3Qj2nJz/ZFLN5LwSl3AxT/czmvTC7S9jdCVfZ/ELU
3flk3drLbH4hnmQ/7XamiM0vxCeGrO7Nf2TzC+HUwbv/qots3htPpjy6UXKe
zXvDfXHD85PPsXlvXDqpM18tZPPe8NW1+WveWTa/CE/bz/R5fprNL0LbZYb8
9afY/CLsunDQMPYkm1+Eqd9NN749zubVSBgXojld8NEqNTLbm8sMx9jPU6O4
6+q9C49+tFqNKU86rx7+Hfv5alg23XvSLf+jc9R4Msv+gfII26fG/oVj2toc
/mirGkdOnh/e6BDb74OEaQ3tm1vYfh/s07pF2n/L9vsgAvvsBx5k+31w7dGb
y9MOsP0+6NP00rSg/Wy/D3bWnxKcvY/t98H1KvcGP+1l+31QXzXsej1mxWL0
NPy1H3vY/sUIGLJrSUIe278YpXljLl/ZzfYvRvv8/+V3YNYtRseTN6r8d7H9
i9FnZL2AizvZ/sU4fWzew+7M1sVIutV8YmIu278EB+vp1eU72P4l6N5+VEtP
ZizB4LQ7g4u2s/1LsOCKcv8IZt0S5N5aP/O7bWz/Elwc5NB4IHPhEpiroi2H
c9j+JSiaMrrfUGaFL6ZXvvc8u5Xt98UlDFJNYYYvfm74qe/tLWy/Lx4qOjUJ
YNb5YuPYf1/VZc7xxfFn/m2yN7P9vvhKZTfRhdnqi77ln2lvZrP9S9H1xGFz
BLNqKYr2jIvswoyl+PDpqK4/bGL7l8Lj9+yVGmbdUkyaqnDtzJyzFDNH7txx
dSPbX/P5y+qVMczWpQi+villILNiGRrGTfu37Bu2fxlMT9+mbGPGMmyoPODq
xaxehoiuzzp2YNYtQ+Xu4oqbWWz/MuQevnYii7lwGaZlvFixgNm6DOO77f63
K7NiOS74XBn54Gu2fzmM7w5OOMiM5bhl2/hdOLN6OR7dr5w1llm3HOPrvh6l
ZM5ZDkXTikN3N7D9yzGlrMO2g8zW5dBXNq+jY1b4odeUsz/MZFb54V4LzT+9
meGHSc8LPKvXs/1+mLk7TnmdWeeH/vEf6u9jzvHD+c5HHPXMhX4IsFsW481s
9UOHew7PhjErViBzvXtUO2bVCkx+FtL+RSbbvwLN3FafuMasXgGvvFkLDzPr
VuB4sbbqS+acFchK8NeHMBeuwKoDla/nMFtXYIWl3czPmRUrsfV4naQuzKqV
+Lt7t4x6fP9KzLinXP7wK7Z/JS5/2NyomFm3EnN7XVx5jDlnJUp7H0rdyly4
Eud3HPcxMFtr9h3weRTIrFiF2xFzunoxq1bheOfVbycwYxUaeuyKGMj3r4Kz
W4/1Xfj+VTgdP2BSU75/FeZtH7yu6ku2fxXuBVzye8BsXYV1h7OvlDAr/OHz
RcJ355lV/phUqel+hBn+6Fqgbb6DWe2Pe19dCf2KWeeP/sXHPPTMOf7Y1Sxv
dyjf7w+XgO6rlvP9/jh76sdN8/j+APTZO3OIG98fgH3VG4aO5vsDYFuiyx7I
9wdgw5PWi3vz/QE4/3RlYke+PwDu3x2t14LvD8CW/SNv1+P7A/CZw4KGr9ex
/avR53xM4lNm1WokXug/+z4zVtf8+10VdJtZvRpLyk13ipl1q2E5vyvjR+ac
1Wg5pUXqGebC1ZiYm3vpO2ZrzT4PD7cDfP8alFzopNzJ96/BySuNWm/m+9dg
1CDnWev5/jX4Z+KVn018/xo0X9FAn8T3r8HtbIfAWL5/Ddb2MWRq+f41MPbS
lwfy/Rok9E0JX8Ws1KD5nRbOS/nzaDB/a7ZqEbOTBh0Gnx0+jz+fBqOXt9LP
YnbXwOvI8Kqp/Hk1iK96tMGVWaPB1j63vcfy59dgWOXVaaOYzTWf/8q8dBjP
o8GORW+3OTNbNPh8Z3ldJ55Pg0oPt+T+zMUajDjfZEAfnleDn5erKrszV2gw
b6vpbheePxDlq+c/6MjzB8Jl0gbb9jx/IDL/N9e9Nc8fiJMFpywteP5AOC56
6GjL8wei3yWbCzY8fyBcPd1CG/D8gYjc8nh0XZ4/EJsH9OzxwczyB8J/9bAu
1cw5gShZEeL0mtkSiO27e8yrZC6s+XkfNn79H3NxINoEDnpcwWwNxMHqybOe
MlcE4lDUuF8eMyuCEKlL9n7IrAzCFw46xT/MqiC0r7s1/z6zUxAe/eMZ+Scz
gvD13d4zrMzuQXjxMtHlLrM6CJf7vvr0DrMmCJfGfhhym1kXhDlnek8t5fmD
MDbvdeANnj8Ic1Ma7Szh+YNweOJff1/j+Wv2Nevh/CvPH4SBA9UZv/D8Qcjt
PPTVTzx/ENoOnrjqKs8fjDrnBj6+zPMHw+/OlrBLPH8wJswe1KyI5w/GkW0b
D/7A8wcj94e4+Rd5/prPj89SXuD5g/Gkkbn4HM8fjE3TO2/8nucPRsvtlf6F
PH/N/oIS17M8fzAGrQ765AzPH4zuh4wdT/P8wegS+GeLUzx/MB6YnZud5PmD
YX9zfKsTPH8wfvzjdpfjPH8IxjU/MbCA5w9Bbuy+qcd4/hAEvtOuOcrzh+Bm
xZOvv+P5QzBozs0f8nn+ELy31Ks+wvOHoINi7FBuTQgCDi/THub5Q1C2aczZ
Qzx/CC492t2UOycEYzuvWWjh+WvmXwXkf8vzhyA6IkrJXRyCWTeCAw/y/CGY
tHLAzQM8f40PJ4/hVoSi/1gvy36ePxQzvk/pwa0KRVLp0437eP5QdHBe1Y4b
oRga/sf6vTx/KHSDP+nArQ7Fr4+H5Ozh+UMx6fUf/bh1odBn2R7P4/lD0eDW
tsncOaG4mZX4x26ePxTeMVvCuQtD4fn8eivu4lA07tj80C6ePxQbfh08k7si
FMZdzpU7ef4wZFx7kc2tDMPAIT4TuFVheD1r6fNcnj8MsVOe5HAjDGdL/p7B
7R4Gw/ARDbjVYWi24O6JHTx/GDZ+cyKIWxeGFffPOnKba873/V62necPw/i7
9XZzW8Jw4EH35dyFYVi3q39f7uIwbAhu8WQbzx+G4taFh7krwrD0xKeR3Ipw
jK8/Yyy3Mhx1X7Zrzq0Kx5n/Qm7n8Pzh+KTIO48b4Tj0dVE4t3s40v/c5cqt
DodT3NOO3JpwJG3LfLqV5w9HyIX089zmcMw9ee0b7pxwbNw5J5DbEo4lT5WT
uQvDMXlyVQ/u4nA4flfvwxaevyaPpt9v3BXhuP5+SQG3QosjvfM2cCu1uPr4
aSi3SouYDKc53E5apKQvHcoNLcZtTerA7a7Fg2+N1Zt5fi1u3tdYuTVatP3a
8SK3TotNM4/v5TZrcbdEuY47R4sZTT/Rclu0eNHSRs1dqMWzz7JduYu1GG39
6zNuqxZzTt3qxF2hxd/p2obcigh843ryWTbPH1Hz/9vNv3OrIvDkhd1lbqcI
jE7qd4wbEbAO+ymX2z0C/Y5Vf8mtjsCVH/LjuDUR+H7GMw23LgLL1AfV3OYI
xHYoc+fOiaj5+2jjGG5LBAoLzg3kLoxASJRXT+7iCNTL9W3HbY1Az3s3bbgr
IvDg/eG3m3j+SDyxPn/KrYzEsfjMP7lVkfirMvMGt1Mk4pc9u8yNSKxU7j7L
7R6JdNcj+dzqSHiHt97LrYlE3w4Xt3LrIpF4+uJ6bnMkTjRsbeTOicTgPXvj
uS2ReLMyNYK7MBKqHhYNd3Ek3I538OO2RsK518VF3BU1n19tmSvyr0XE3lvT
Rf61mP5hlKvIvxaPt96FyL8Wvj8dHSbyr4XTjYsDRf61uNC2iaPIvxb9XsT1
EvnXYtff/buK/Gsxe2XDDiL/Wlxrpmwt8q+FddnEZiL/WrRuv6+RyL8WMZeH
1RX518Jn6PPqjTz/Wvze+for7oqa/RN/e86tiMKp5MZPuZVR6H7C6yG3Kgrf
nL9+n9spCovWBVi5EYXHdn3vcLtHwTK3QSm3Ogp3Z9Yp4dZEoV97+2JuXRTM
BR5Xuc1R6DJzbxF3ThTONLC/yG2JgqI673vuwiiULXE/w10chZNBLU+K/FH4
dcnjYyJ/FJZqf88X+aOx6tWDQyJ/NLw/afStyB8Ne/+R+0X+aBQ0Sdkj8kdj
9tKHu0T+aLy/szBX5I9G/M2/t4n80XA7q9sq8kdjbL0Bm0X+aOxs92SjyB+N
h5rTWSJ/NLJNWzaI/NEYU56RKfJHY6hy3ZcifzTW67aZRf5otC4qTBf5Y1Ae
8tQo8sfgvF2/NJE/BimuwSkifwx8sy8li/wxWP+tY5LIH4Mlqmy9yB+DOub2
CSJ/DCK3b4kT+WOQ9d5JJ/LH4PrUn2NE/hgMGxEWLfLHwEvrECXyx2DUkfuR
In8MRufsjRD5Y9D0ZYRW5I9B0oqZ4SJ/LM4eGxQm8sfit02dQ0X+WDQuaREi
8sdCo2oSLPLHQjXWNkjkj0UDRbtAkT8WN+z7aET+mp/nM3qNyB+LH9d7rxb5
Y3EnUR8g8sfiwDuLv8gfi75X/lol8sfi+9P2wsWx8Ny1YKXIH4sRc3NWiPyx
sMt95Cfy6/DY53NhGx0+LMtYLr4PHX5PfbiM206HcbtchVU6dP1q/1JuBx1i
HdsKO+mQPi3el9tFh7Qb/y0R358OZ7avEHbVIfDLvxaL71OHR4k+wp46LPb+
y0d8vzq8f+cn7KfDjxOfq8X3rcPOrrHCWh3mrmwhrNMhoNmORdwGHcb8O0zY
rMN/lde9ubN08LENFM7RobtdS+E8HXT18heKvnQILpgnXKDD5m51hQtrvs9+
B7y4i3RwOzNfuFiHgZebCJfq0HT46QWiXx2i3gcKl+lwtG5f4QodQob8OZ+7
SocXhs3CijhUPpwvbBOH7yZ1FFbG4e+s3+aJ/uNgKdoirIrD4ctLhB3i8MLc
T9gpDuXN/vMU/cchzPm0MOJQ8sog7BqHvClzhN3j8LJHL2HPOHQIfTlX9B+H
K4N+FPaLg93sjcKaOPj8vFpYG4f568cJ6+JQP6eTsCEOB+//N0f0H4eKeT8J
Z8Vhf+Vu4Zw42BxOEM6Lw5oEtbAlDumLRwkXxMF9YmfhwjhY+76bLfqPQ27d
u8LFcRh5+axwaRz0EduFrXEwNE4SLotDRvBK4Yo4tDw0XbgqDsdPDhZWxGOx
yV7YJh7tVfWFlfFosbrcQ/QfD0vg/4RV8TD0OivsEI8Z+j3CTvEoN2QKu8TD
Z4BOGPGwrvEXdo3HKdd5wu7xCMifIOwZj/SDzsLqeNwe2EPYLx4DRrYS1sQj
+VIdYW08FCXPZon+43HN809hQzxmeVwXNsfj5bkLwlnxGL/tqHBOTb7HecJ5
8di7dZOwJR7zj6cLF8Tj38HxwoXxCGoVJlwUj/puK4WL43HnD2/h0pr9V2YJ
W+Oxrekk4bJ4LNkySrgiHm3jnIWravo51E9YkYCLjt2EbRLg9Ky9sDIBS6qb
C9slAG4NhVUJKLj7bqboPwFXD70UdkqA6fwTYZcEdGz1QBgJ2L7prrBrAtTe
N4XdE7DFs1jYMwGHDZeE1Qn4UH5O2C8BlQmnhDUJaOl2VFibgNKxFmFdAu6u
2CtsSEDhqVxhcwJ6D98qnJWAc399I5yTgBnfZQrnJeCbgxnClgSs+DlVuCAB
G1snCRcmoFl0nHBRAg40jhYuToB/gVa4NAHjDCHC1gS4aDXCZTXPk+wvXJGA
bfl+wlU1/X3wFVbo4bbMR9hGjydlC4WVekxPmi9sp8fOkXOFVXr0ae4h9a9H
21fuUv965L+aKvWvx7QWU6T+9Rg00lXqX49juvFS/3oMufWF1L8ezSdA6l+P
HT+MlPrXw3v+cKl/PfYrhkn96/GhYIjUvx4/xTtL/euRsXCg1L8eF1ydpP71
eDp2gNS/Hl9Oc5T612OYXz+pfz0CzQ5S/3pc/qG31L8eN5v0kvrXw8mrh9S/
HqtPdJP61+PTXiqpfz1aZXeR+tfjVJfOUv96/Lq/k9S/Hm/Gd5T6T8S9h3ZS
/4kYnNVe6j8Ru9zbSf0n4kGrtlL/idh7t7XUfyL2HGkl9Z+I7HUtpf4TMVqr
lPpPxPTlLaT+E2H0bi71n4ijC5tJ/Sdina+t1H8i/gxqKvWfCI2hidR/Iurv
bCz1n4jlRTZS/4lY+ryR1H8irnaXbE7EynkNpf4TodzQQOo/EebS+lL/iTit
kmxJxKrV9aT+a57v+7pS/4nY0UFyUSLuhNWR+k/Ey1KF1H8iLo2WbE3EoH0f
Zoj+a56vk+SKRIzKeC9cVdNHI8mKJDTRvxO2SYJffcnKJHxjqBa2S0KsUrIq
Ce83vRV2SMKbfpKdkjDv9BthlyQoZklGEm48fi3smoTzyZLdk/Btb8meSdAX
VQmrk9A/QLJfEtLbSNYkIevMK2FtEgavkqxLwoyOkg1JuH2lUtichFOxkrOS
8GCw5JwkTHj6UjgvCVfyJFuSsHSp5IIk1OspuTAJG+6/EC5KgnK35OIk+KyS
XJqEqM8kW5Mw6/V/Uv9JKD0nuSIJH0ySq5Jwcr5kRTIUfSXbJONc1XOp/2RU
XpJsl4x12ZJVyTBoJDsk49fxkp2S4WMv2SUZn754JvWfjM9+kuyaDO/dkt2T
cSBesmcy2i6SrE5G+gjJfslo0UmypuZ531RI/Sej2W+SdcmIPCXZUPP8WySb
k2EbLzkrGT2WSc5JRsspkvOS8bOTZEsyPNpLLkjG5vf/Sv0nI/eB5KJkLPlF
cnEySgoklybj+XbJ1mQUmCSXJUMVIbkiGb2XSq5KxsUZkhUGvB4l2caA046S
lQY06yTZzoD7jSWrDBj9+qnUvwEdH0p2MkBzS7KLAaMuS4YBcScluxow+IBk
dwPmbpXsacBf6ySrDbihl+xnwCdayRoD/l4lWWvA20WSdQYEeEg2GDB0kmRz
zf5RkrMMNf/flJxjgLmv5DwDdnSVbDGgbjvJBQbss5VcaMCmepKLDPj1zROp
fwMmP5dcakCDR5KtBny4J7nMgCG3JVcYsOea5CoD5lyRrEjB8AuSbVIw97Rk
ZQp2H5Vsl4L+FsmqFFj3SHZIwQ87JDul4PZmyS4psM+SjBSkfinZNQU9TJLd
U/B3smTPFPwSL1ldsz9asl8K2kdI1qQgOESyNgXP10jWpSBzlWRDCjyXSzan
YMQSyVkpGL1Ick4KfBZIzktBzlzJlhRUz5JckIIQd8mFKWg0VXJRCvInyf2n
YO0Euf8ULBgr95+CWZD7T8HikXL/KTB8LvefgvND5f5T0Waw3H8qIgbK/afi
+ady/6mI+UTuPxWd+8v9p+IXB7n/VHzZW+4/Fct6yv2nYkp3uf9UQCX3n4rx
XeT+UzHPXu4/FVEd5f5TccBO7j8V5e3k/lPh0lbuPxXrWsv9p+JVS7n/VKxQ
yv2n4p/mcv+p0DST+09FA1u5/1TsbCL3n4rpjeX+U1HfRu4/Fecbyv2nIq2B
3H8qFtaX+6/JU0/uPxWd6sr9p6JRHbn/VLz9UC71n4ZX7yXbpOHtO8nKNDSU
bZeGDtWSVWkY9FayQxo83kh2SsPa15Jd0rCnSjLS8Psrya5paC/bPQ1zKyV7
pmHzS8nqNDx8IdkvDZ/L1qTB/J9kbRoeP5esS4ObbEMaDj2TbE5DJ9lZaUip
kJyThup/JeelIVi2JQ1Pn0ouSEOA7MI0VDyRXJSGcNnFaagjuzQNGeWSrWlQ
yS5LQ/5jyRVpmCK7Kg0PHsn9G6GXbWNEL9lKIy49lPs3Yo1slRF2sh2MOF8m
929EoGwXI7rLhhH/+0fu34g02e5GjJXtacS7B3L/RhyX7WdEuGyNEUNla414
/bfcvxGnZRuMSJBtNmKy7CwjWsvOMeL3+3L/RuyRbal5HtkFRkyQXWhEe9lF
Rjz8S+6/5vlklxqxTrbViOWyy4wYJbvCiHayq4yo+FPu34Qrsm1M2C1baYJe
tp0Ji2WrTBgj28GEbrKdTKgr28WE+/fk/k34UbarCftku5tglu1pQqhstQkL
ZPuZ8IVsjQn9ZGtNaC1bZ0K1Ve7fhAeyzSYUy84y4aTsnJrvS3aeCZmyLSbE
yS4wYY3sQhMWyi4ywU12sQnDZZea0F+21YROsstMsJVdYcK7P+T+TXgqW5EO
q2ybdFyTrUzHRdl26SiQrUrHftkO6ciR7ZSOTNku6TDIRjqiZbumI0i2ezr8
ZHumw1u2Oh0esv3SMUW2Jh1fyNamY5hsXTqcZBvS4SDbnA6V7Kx02MnOSYdS
dl46Gsu2pKOu7IJ0vL0r95+OF7KL0vFEdnE6/pFdmo57sq3p+E12WTr+J7si
Hb/IrkrHJdmKDJyXbZOBM7KVGTgu2y4D+bJVGbDIdsjAPtlOGdgt2yUDO2Qj
A1tlu2Zgk2z3DHwt2zMDX8lWZyBDtl8G0mRrMmCQrc2AXrYuA3GyDRmIkW3O
wFrZWRnQys7JQKjsvAwEybZkYI3sggz41+o/Aytq9Z+BZbX6z4Bvrf4zsLhW
/xlQ1+o/A961+s+AV63+MzC/Vv9meMqub8acWvfBDA/ZtmbMrHU/zHCX3caM
abXuixlusu3NmFzr/pgxSXZPMybWuk9mTJDtaMb4WvfLjLGync0YU+u+mQHZ
I8wYXev+mTFK9jgzRta6j2aMkO1mxvBa99OMz2V7mDGs1n01w0W2lxlDa91f
M4bI9jVjcK37bIazbH8zBtW632YMlB1ixme17rsZTrKjzPi01v03Y4BsvRmf
1HofzHCUbTSjf633w4x+sjPN6FvrfTHDQXa2GX1qvT9m9JadS5xHvJ/YQpxP
XEB8iriQ+AJxEfFV4mLiEuJS4jvEVuL7xGXE5cQVxC+Iq4iriRXrars+sQ2x
LbGSuA2xHbE9sYq4J7EDsSOxE7EzsQvxCGIQjyN2JXYjdif2IPYk9iJWE/sS
+xH7E2uIQ4i1xFHEOmI9sYHYSGwmziTOIs4mziHOJc4j3k9sIc4nLiA+RVxI
fIG4iPgqcTFxCXEp8R1iK/F94jLicuIK4hfEVcTVxIovyftPbENsS6wkbkNs
R2xPrCLuSexA7EjsROxM7EI8ghjE44hdid2I3Yk9iD2JvYjVxL7EfsT+xBri
EGItcRSxjlhPbCA2EpuJM4mziLOJc4hzifOI9xNbiPOJC4hPERcSXyAuIr5K
XExcQlxKfIfYSnyfuIy4nLiC+AVxFXE1seIr8v4T2xDbEiuJ2xDbEdsTq4h7
EjsQOxI7ETsTuxCPIAbxOGJXYjdid2IPYk9iL2I1sS+xH7E/sYY4hFhLHEWs
I9YTG4iNxGbiTOIs4mziHOJc4jzi/cQW4nziAuJTxIXEF4iLiK8SFxOXEJcS
3yG2Et8nLiMuJ64gfkFcRVxNrMgk7z+xDbEtsZK4DbEdsT2xirgnsQOxI7ET
sTOxC/EIYhCPI3YldiN2J/Yg9iT2IlYT+xL7EfsTa4hDiLXEUcQ6Yj2xgdhI
bCbOJM4izibOIc4lziPeT2whzicuID5FXEh8gbiI+CpxMXEJcSnxHWIr8X3i
MuJy4griF8RVxNXEivXk/Se2IbYlVhK3IbYjtidWEfckdiB2JHYidiZ2IR5B
DOJxxK7EbsTuxB7EnsRexGpiX2I/Yn9iDXEIsZY4ilhHrCc2EBuJzcSZxFnE
2cQ5xLnEecT7iS3E+cQFxKeIC4kvEBcRXyUuJi4hLiW+Q2wlvk9cRlxOXEH8
griKuJpYsYG8/8Q2xLbESuI2xHbE9sQq4p7EDsSOxE7EzsQuxCOIQTyO2JXY
jdid2IPYk9iLWE3sS+xH7E+sIQ4h1hJHEeuI9cQGYiOxmTiTOIs4mziHOJc4
j3g/sYU4n7iA+BRxIfEF4iLiq8TFxCXEpcR3iK3E94nLiMuJK4hfEFcRVxMr
vibvP7ENsS2xkrgNsR2xPbGKuCexA7EjsROxM7EL8QhiEI8jdiV2I3Yn9iD2
JPYiVhP7EvsR+wv/H/TUBvU=
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961]], 
            LineBox[CompressedData["
1:eJxd2HlYzen/P/AzxpI9xDSW0RhLCBnMhPBEyJaDEEJSFOG06bSf6lSnOtX7
WGYyYzljSYwly5jsxzBkzx6DOfaMkG0kGd8+16/7vl+/2z+ux7x69ep5PzvX
5ZqvfRdP8K+hUqn+qqVS/e/v//enbND2EXej7La/GFT9HxDo3W7NgBnMNhjW
sP/yHQ2ZbXG3ppP3kiPPq22Heis/ha4KYbbHiIxN1i6dmFujlftml863n1Xb
ATUSBu9cvZy5Hew3mrtljmVuD/2UO+M+1GHuiF3thmT8c6y02o4IPJ74vXcC
cxeMfL1ugxrMTqh76cseJ1XM3ZFy9ePEw388rbYz7nd9dbxXCnNP+MAc3X40
87f4EKicNTZh7oWDdwZEBtz4p9q94Rc66uiudcx90H/q4ZC5C5m/Q+Nbw9/H
9mX+Hv80Xhj0ujazC24G/rHKcvVJtfvCO6SWw98bmfuhfmc3b/cI5v5o7Vtz
6duRzK54FBLz8O82zANQ/unxXNXrkmoPRMejtVqqTzEPwvdbzlSeNDMDNbrO
ajg7sto6wOAya5zdRDYfjFs/Zhbd7MbmgxGke7B1W102H4JWjh2apjx6XD0f
gk09nw6ZcbzaqqEoHKNe6bSezYdiysYuac8S2dwN92zKflk5h83d8Or1cKXL
MDYfhphaHm1/6sTmwzBg8y9979Vj8+EI+KbTP5XPH1XPh2NH2nrvB5errRqB
WHP7O0v3sfkI9Koz+HYNM5u7o9aq3v90T2Vzd3yRentvk8VsPhLlpatb5E5h
85F4ebfDf4/A5qOw9IZj0oUubD4KDyM+uzWtOZuPRtj04bP0KjYfjec9JiSN
KH1YPR+DE/ZHb68trrZuDEzuD9ul/cnmY9HEv3eHT7vYfCxGOO648tHM5h64
neQ2MCGbzT1wwL9nRnIcm4/DjS9nquosYvNxWNRx/8fPZrK5GnlzfvwY4lFt
qKF+V3P55EHs69WIOtFl0WbnalvUWPbXxvEB7dj+eCzq9qiVYsf2x8OtfdbR
NnXY/nhs6nplbKOKB9X74/Fm2aO7M59VWzUBZRXj9zS4W21MwOLA+bbNr1Zb
NwEzR/8+KfwU25+Ad7N833U5zPYn4rt9m6N77Wb7E/HwL89oYx7bnwjPBt1+
6bWG7U9E7AXt5o7L2b4n1BuiZs9JZ/ueWPH2Ve5jHdv3xK3BG+ftjGD7nvAL
s5oPL2L7k3B6Xr1ZDeey/UkITOt+6OcZbH8SzizNfjBvEtufBJexrg00Y9n+
ZEyZsEm7axjbn4zXBwZHdxvI9idj8B77kL+/Y/uTMe16+MkTPdj+FHhMTnx5
15HtT8GxM6XBPdqx/Sko22m6uq0V25+CzMCOe6Y3Z/temHT00Y7vG7N9L+x5
5haOumzfC27Wn/eHfc72vfDg+f1Blz/er96fCq/9geenlVcbU7HCLdWl3utq
66aieadZU63Pqm2Zigs3VtrdKmH707D/Q/vJlffZ/jRUZL5pgr/Z/jQMa3Zi
aO5Ntj8N3yc/fN7tGtufDkuTN22uXWT709F0Wf691efY/nRY9xydpD/F9qej
cl/CD4Y/2b43iq6eOb35KNv3RnDDM189PsT2vTFv+enjg/azfW/8vLLO2117
2f4MOEXqnw3azfZnYKD77ZcPd7D9GeiQ32b0hq1sfwZyG+WMiNrM9mfC/eKh
fvNy2f5M1K3xPmb+erY/E3UqUxYkmdn+TNQb5BmwczXbn4U6U2/ceP0T25+F
VrfLu4zKYfuzYJ515/TuFWx/FjwX33FyXsb2fXA2aUrhYaXaDj5YcWOZ/aws
9v18cLD31lW2xmr7+OCXxAXXL6Wx7++Dvp69xm1MrbbZB4263M1MTWb3fPBT
xh6HyKRqW32Qf79PTmQCuz8br1p9ZTDEs/uzEfFyYOrGWHa/al65oEdRNLs/
G/cC/NrYRLH7sxGmPlQ2Rsvuz0bF0bOj1yxh92fjzawVlz+EsfuzUfzzrh7+
oey+L54lD6t3M5jd98Vv3e41nqZh932hy4p98WARu++LJ597T4tayO77ouMQ
Vc2WQey+L9qdb7nu2Hx23xcrX0aWLglk930xt1PFql4B7P4chFYuWfx+Lrs/
B0dnH/y60J/dn4MOQdrQtX7s/hxo4rp1jJ/D7s/B1ZvtP871ZffnYGHO7EOT
Z7P7c1Dyflk3Dx92fw6i2jVsMXYWu++H7zvuxsSZ7L4fuoe+1frMYPf9kK0c
zQjzZvf9MKOndkT2dHbfD04596Lzp7H7fogf6VhxfSq774fIen8ur8Vs9cOq
zvFt+3qx+/5Y0Hjm4pAp7L4/jtv9Mm3nZHbfH69X7S14O4nd90dYcC/fQcw6
f0TPOO2c5cnu+2N2HbdPdyey+/5oXzticz9mqz/690SDnAns/lx8dIyuVTGe
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
T62YUE693IR31Dkm/Eu9yoS31GYT3lBvMOE1dZ4Jr6i3mvCSOt+EMuo9Jryg
LjDhOfVBE55RW0wopT5uwlPqQhP+oT5rwhPqIhNKqK+Y8Ji62IRH1LdMeEht
NeEB9QMT7lOXmHCPutSEu9RlJlip35jwN3W5CXeoKyWrlv7/rinZRnIDybaS
7STbS24t2UFye8mOkp0kO0vuLdlFsqtkSHaT7C55jGS1ZE/JXpK9JftI9pMc
IDlIskZymGSt5BjJOsl6yQbJRsmK5OWScySvkmyWvEFynuStkvMl75FcIPmg
ZIvk45ILJZ+VXCT5iuRiybckWyU/kFwiuVRymeQ3ksslV0pWLZM+/5JtJDeQ
bCvZTrK95NaSHSS3l+wo2Umys+Tekl0ku0qGZDfJ7pLHSFZL9pTsJdlbso9k
P8kBkoMkaySHSdZKjpGsk6yXbJBslKxIXi45R/IqyWbJGyTnSd4qOV/yHskF
kg9Ktkg+LrlQ8lnJRZKvSC6WfEuyVfIDySWSSyWXSX4juVxypWTVcunzL9lG
cgPJtpLtJNtLbi3ZQXJ7yY6SnSQ7S+4t2UWyq2RIdpPsLnmMZLVkT8lekr0l
+0j2kxwgOUiyRnKYZK3kGMk6yXrJBslGyYrk5ZJzJK+SbJa8QXKe5K2S8yXv
kVwg+aBki+Tjkgsln5VcJPmK5GLJtyRbJT+QXCK5VHKZ5DeSyyVXSlatkD7/
km0kN5BsK9lOsr3k1pIdJLeX7CjZSbKz5N6SXSS7SoZkN8nuksdIVkv2lOwl
2Vuyj2Q/yQGSgyRrJIdJ1kqOkayTrJdskGyUrEheLjlH8irJZskbJOdJ3io5
X/IeyQWSD0q2SD4uuVDyWclFkq9ILpZ8S7JV8gPJJZJLJZdJfiO5XHKlZNUP
0udfso3kBpJtJdtJtpfcWrKD5PaSHSU7SXaW3Fuyi2RXyZDsJtld8hjJasme
kr0ke0v2kewnOUBykGSN5DDJWskxknWS9ZINko2SFcnLJedIXiXZLHmD5DzJ
WyXnS94juUDyQckWycclF0o+K7lI8hXJxZJvSbZKfiC5RHKp5DLJbySXS66U
rPpR+vxLtpHcQLKtZDvJ9pJbS3aQ3F6yo2Qnyc6Se0t2kewqGZLdJLtLHiNZ
LdlTspdkb8k+kv0kB0gOEv4/roE/PQ==
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 
              0.49019607843137253`]], 
            LineBox[CompressedData["
1:eJxd13dYk+f7NvDUUXFHpUodFetCRcW6cJ9VRBxVVFRErBFQQFHD3pBAAgEC
PM7iqMYWFTdurCuOKioqbhRHVFSsC1fF2R/v8eZ+7vt79Z8en95enJw5j7RH
2/gsmDCrmkKhKK2pUPy/v///vyqGbBtxL8Z228sh1n8Ah09f5+4fzWyD28GB
SvOTF1YrMaTxF//BBmZbTCjYf21kR2Y73HX/tun7k8+tbomojt06ePkz2+PK
U3+k2DD/iD0p205nbnpmdTtoG252TfqFuQPs/nroHvbqqdUO2LkqMDN0GXNn
lL79nJs1kNkRZ6bWHHz5wT9Wd8Pp8e0rfzEyO2HA8N8C6/Rh7oGYb37+ocm9
J1b/hDe2oTnBmcw98etsTOw2gLkX7JZ7nHT/p9zq3ohv22Xu3RXMfVAnRH/8
7hjmvrj3zWfVZAWzM6690z133fPY6n5o0PNMr91zmfsjLrhTN1Nb5gFYeqxf
rXq3H1k9EJMP7epW+RvzINz4Y+UMPw/mwVg0OnvLuMbMQ/BhdsuMgosPrQbU
Yd/eXbXIag2QfXJ2zY8e7P1nfDq5+G6RHXv/GXW0R243ulNmfR+KAw6o/Xeu
1ZqhOFUS2eB+EHsfhnnNJrr69WHvw9Dq0pQjrt+wdxf8NAeuunMPrO8uCLS3
n99spdWK4TBsapjzMZC9D8ctG5+PHfuzd1cUn/HZsLwue3dFtTtrFo+8c9/6
PgJ3/z66ssdOqzUjkLv3XdroVPbuhvy0580XTmfvbmh7J7ra517sfST0n469
1Ndn7yPR2bn9QofH96zvoxB+aM9vt49arRmFioywv1b/zt5Ho9lKp/2zYtj7
aIy7++MMR0/2PgbbH7ron/Vh72PQZrG/rakpe/8FaUENav383mJ9/wXxa5vM
PV1itWIsKh7Y+fY8wN7Hou6jwo7Rq9n7OHRu/9xmaRJ7HwePiGnztf7s3R2N
lx0ucf7Farij4uzA+3t6sj/vjqHa/wa/aW612R3m2NWHnlZj9+NREn8/q9f1
u9b78eh6feHRNxut1oyH/bJOE+omWG0ej03NHu8Jnmi1YgJ+az07p1Vndj8B
ykba0prV2P0EPKq0/a1N6R3r/QTUUW2xC9hjtWIiJq5t8qBYshoT0d31xtaJ
86zWTMSd/Qf9ykex+4nQhNTvmNqJ3Xvg26TPrg612b0HRky573biyW3rvQe8
3GPuTzxrtdkDk1Z+9/HCVqsVk/DZfHJdj4VWYxLef5faOSSc3U9Cxk9TPqV7
sftJ+DliWkE42P1kmHTvujp2ZPeTEbuwdGJeA3Y/GQWDu40p+/eW9X4yJv2V
6XPzrtWKKbDs71ZXf9pqTEGm5eW9O7us1kwBGqg33l/N7qdgpE2HURnp7N4T
Ay3RFy9HsHtPnA62qPf5sntP9HD9ENdjPLv3xIQftwcNGsLupyIvdlrJta7s
firW2jyP+tCS3U+FenmjjmvrsfupeDXD9+bpz6XWey90OrU8b8Fzq+GFjHeH
TmTdsVrjBQelb0LbYqvNXtC630fnY+x+GpZ8XLFozW52Pw0/DOpjq9nA7qfh
WLWXiYUr2P00bN93Oy88i917o6iGW4wuid1741PC239fRbB7b1hck5wPzGX3
3shbfGL+bRW7n44/2/x4d9Jkdj8dz2MrH7QZw+6nw65Z9WeDh7L76VjV42T0
Jmd2/yuOzPvyo093dv8rCps1kHw7sPtfkVUnPnZLK3b/K463DdjR/zt2PwNn
nKs3rFef3c9AZJxd0g812f0MbB9utFF/uWm9nwGpQ9n2r++sVqiQOuziksIX
VturkHPj0P2zj62GCi/vT7/87T2rVSqcLBy6LfKm1RoVVjcKKWx5xWqTCpaP
X5PfnmN5Kjx8tn7cl1NWW1RYW6Be3/sYy58Jh6yxDVcdZPkzkbzyWMvu+1j+
THgNSwl6voPlzwRKe264uoXlz0T2vdeJjzaw/Jn4vKLD7h/+ZPkzMcGmdd34
1Sx/Jp63K5qkWMHyfVD6a+j8DUtZvg/O9fN3Dl7I8n3Qv8HRNd6ZLN8Hftda
Lg9IY/k+6Plpcpslepbvg3ZNxgy6o2X5PjivX/FheALL98Hf386ecyaG5fvi
7c2Wm+dEsnxfFJYOvtM+jOX74nKXDl0/qVm+Ly5KF089mcfyffGzf35ZxRyW
74vv26nNDQNYvi9cpp79ffgslu+Lmj95/b3Qh+X7IcHbT/9mBsv3w8tJu3vM
mc7y/ZDcMKjtOy+W74cj924WLPZk+X54dMJj0vDJLN8PT0/UmVnbg+X7oWhD
mdvd8SzfD96HpiWcHMfyZ+H6hcmRh39h+bNwyrHWtpOjWf4sfD500nRnJMuf
heWd31+s6cbyZ2F+5b1TA1xZ/ix8s355PY0Ly5+F93tKu14ayvJnYX3um4M9
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
uX8kBnSK+Vm2ORKLDnv/WSr3j0SDqB51ZFsiceav4vCbcv9I1Oxk++iG3D8K
/XKueclWRiGu1tvLJXL/KPRcNnK8bKco1Ivdc+m63D8KQz819ZTtHoWOPmPv
XZP7R+FV5cD5stVRVf8+PfH1qtw/Ci3Wnl4kW6ry226dZZuikPP0xokrcv8o
vJuY7yPbHAX/sznVZRdHwfdAzIbLcv8oDJsweKzsiii0jC96f0nuH43T9xrk
ylZG48cbLyfIto+GX6BXDdlO0TiG/gUX5f7R6JAfO1+2ezSar6/bUbYqGjc2
Xr9XLPePhuHaudWyNdHIuXZrumwpGiPuvvlBtikao7ZUu39B7h+NFbEf1ss2
R2NG7dPzZBdH42uGTx/ZlmgMz9+nkF0Rjf1L/yo6L/ePwZcz01fIVsbAa9SS
QNn2MfCJGN9ftlMMNjVNqycbMfjDo7vlnNw/BoYC5z2yVTEI6rAiQ7Y6BpNK
3Xxla2IQOaf/QNlSDLR/+TWVbYqBovrhV0Vy/xjcOD3wvGxzDK5Yrm+WXRyD
gb4p6bItMVi6a8gc2RUxmBH9aZRsRSxerN7hKFsZC49xXg1l28fC6+3z12fl
/rFI7zXrumzEVv3/fMFB2e6x+OBy/w/ZqlhAezNNtjoWg7uuDJaticWT6j94
yZZiMee19zDZplhkNZ3QVXZ+LIYcet9MtjkWdWa6VZddHIs9eYNfnpH7x6Jk
1tVS2RWxSFtc67RsRRyUk4r3ylbGIfdt53Wy7ePQ637jJbKd4tB3Z3KybMQh
o2V0qGz3OEz59MJXtioOlSPvechWx+Fj2zGusjVxaHyii7NsKQ4OyXGdZZvi
4He9fyvZ+XFwmeirlG2OQ0Hu6+qyi+PgtuTh+9Ny/zgMrtHvmeyKOFx/+cQi
WxGP+DnvrspWxqPGGs+zsu3j8fK88qhsp3gcGN9in2zEo+uS8K2y3eOxuVmr
XNmqeCwKbrhStjoeK0eNWiRbE4/Bv55Nky3Fo0WMpJVtikdA/G/RsvOr7Hkn
WLY5Hnfr+s6RXRyPrLy2vrx/PPaM/cGb94/H0q7jJ/H+CfiQ9NdY3j8BR1d4
uvH+CQg+32ko75+AEzrHgbx/Alx6zOjD+yfAMtHsxPsnICNqbBfePwGlfWw6
8P4J2NrjmT3vn4DTTT+04P2r7ld3bcb7J0DKMDTm/RPgs8mmAe+fAIeLW2rz
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
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
OFzovHtzzSL2Hwe/MQMemNqy/zgseDY+fYcd+49D78CXxWpL2X8cctqOtPZY
xv7j8GZNb9er9uw/Dpk6u74PX87+41DhUfsvfQX7V96/2dGYt47sPw5dTadH
z1zF/uOxd3fq721O7D8evYJFX386s/94nJ2zzHPhGvYfjwfLvzjnr2X/8UiR
OD/67cL+42G4+sjd+W7sPx6+TU0229zZfzx2vuy/+KMH+49HWab1wynr2H88
tp4Xv05bz/7jseTb69BaL/YfD9Oea7L0fNh/PPoU9DB192X/8Qg7peZ+yI/9
x+NCvYV+sz/7j0do/0Z300D2H49VXX9PiQxi//E4X5GyvSKY/cdj1+F8mUoo
+49H4+s1PaeEsX/l+c07hmHh7D8ek2za3yqJYP/xyD/VrdOnSPavzHtTtW5o
NPuPx+ziz9NWxbD/ePh/bEJ2LPuPx6uQLneq49h/PDpsd22tksD+lffTo9OV
kYnsPx7Sp91Grkpi//Fo7yYaKU5m/8rnrd5w7WQK+0/A+qfm6m9T2X8C5pvu
ea2Zzv4T8LLvo9VTMth/AqRh3+PWZrL/BKgqOs/MELH/BKS+My08LGb/CVgz
O6v0roT9J0CvaJzbTyn7T8Cb1aMr+8jZfwKeNuSdnaRg/wmI/7xr/dIs9p8A
Fa/55wKz2X8C5JGl56Ub2H8C/vj88tu/kf0noLpq5I0Lm9h/Ah4O9X/4OIf9
J6DY/XHWt83sPwHfYlNaq29l/wm4likaoJvL/hPgWt3h26ht7D8BjvIe4ebb
2X8CJqy6fMxmB/tPwKNK80Knnew/AT1XbbbzzmP/Cej+40N5+C72n4Dni20f
JO1m/wloteR9sSSf/f/v/Vyz2LSH/SfA+2+PLdv3sv8EFEnrDuTvY/8JmFpg
Fl1YwP4T0GLesm4HC9l/IjZEzlh7eD/7T4TeDJ2I4gPsPxEV2//YFRex/0TM
EP1rPnSQ/SfiocqUFUWH2H8i9j64k1ZwmP0nIubnk5jdxew/EZLBoVO3HWH/
iejZ50T1hqPsX+ngM3riEvafCK1redMTS9l/Ip6Io8eFHWP/iZjYx+vb+jL2
n4iju1MTVh1n/4kIsnn/yrqc/SdCpe+hPuYn2H8i/tU26Y0+yf4TMXTi2b+6
p9h/Irpcml7UsYL9J+LPqwyTH3RuIq6dL81+dpr9J+K528Mb1WfYfyJ+7u76
oriS/Seifz+/W5vOsv9E7DLttSX6HPtPRNtxvWesOc/+E/GmbWb17AvsPxG9
/TJHDati/4mI+zcquONF9p+IyU2ibe/oJuX5nIqC6kvsPxG3bt3dtPcy+0/C
mzbv1ydWs/8kvOzTa6jTFfafBJsW6y9Pvsr+k2C1THVRz2vsPwnboz9e+EAb
JOFF+Cz9C9fZfxL2teu3bvMN9p+EvWnJO3xusv8kvO+dc37GLfafBHVft9pe
New/CXa/295/S9slYdC5xOry2+w/CW2jfxel3WH/SdBIDEpadpf9J0Hvekeb
IbXsPwkmX690/0ZHJaHU6NLl0/fYfxIuzu0Wknaf/Seh4Owx3cUP2H8SdDZd
qdB5yP6TUOy9fNlLOj8JMyNDPxY8Yv9JsM8cHedTx/6TIFORdx//mP0nQbey
cMdPuioJ421TR52oZ//Kv7888UzEE/afhM/Hq6ynPGX/Sciab/b6L/06CbfG
F0WdeMb+k6DYr6sT+pz9J+GX3+bT41+w/2TU3zD2+EyrJSNC9Fxn/0v2n4x2
/07fX/uK/Sdj7rsbubqv2X8y7PZp+9TSBskYqLZ3fmYD+0/GNKvoidPfsP9k
yC33jP5JIxm/YWC6/y37T0avt60WrWxk/8lQizaL7PaO/SdjcNGL42dpx2Q8
3PSlg/979p8Mx4feXgM/sP9kiMId39ykg5Jx6s+ZkKgm9q88t9ykZ/SR/Sfj
xsU3T2tpUTLszQ+Vx35i/8n42fyxyOgz+1feh3hPxR06PxnH9WobI76wf+X7
GIWNG/SV/SdDZZN0SzVdkYyWJ/sM8vnG/pPhadXlao/v7D8ZL3y8ssro2mQc
2jcm1qGZ/Sfj8gs7yT/6tfI+1t89l/uD/SfD4dceHbOf7D8ZOzZd3FxPq6Sg
+exw88hf7D8Fx+bc6Nr3N/tPgZ9TfvsyWisF6lv2Dlv8h/2n4PmbK8EfaYMU
tFG0/Zz6l/2nYNFMyw36/9h/CipaiDxP0khBkN55r8Uqb4T+UzDM8cmOd7RV
CmZeutU2roVguxSMrMrY3KulYMcUyLVardlPu6Sg8LruqqmtBHulIG3ZXclt
OigFPsGaP9a2FhyVAp0pF+U/6KQUDNKsd01RFSxKgU3JjIDebQRnp6DtmIbj
e+jcFIjfHppk0lZwfgq2ZWZ8O0cXpWCf3pp3C9UEl6bA7rte/8d0RQq+HCiU
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
BQU=
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxd13t4jHfeBvAHRVrUICoObac2Ki2tqUONCu6StilRI4LQYCIhEyKZnCfn
JzOpTbHtOFVqtTsqJX1Ro9IVZRlqK12nqSqpVZ1uqbDUKNpYoW/e693n9/zc
/SfX5/rOd+7nfr7XXG2fmJsRO6+1oij/bKso//f3//8Jjvn/v4H//lWQZ/Rb
JjV9/1+HYNmdlMhO1zUbcPf7Hh8Mvqw5FMd7H7hU96PmMIycE9v07nea++A/
9yL7+U9rNsLpvWaadkJzX1z86LHI/kc1h6M+/8y+0fWan4T5tYTFVZ9rjkDC
g45q0z7NT+NqfnV2m92aB+Lnc0uXddqp+Vmsv9jjwIQdmk34Pe5qn93bND+H
kJsxp+O3aB4M4wuWGX0/0jwE//7ZMaz7Rs1DcSZ0Wb9BGzQPg7ft9vbpHs3P
Y7Lt2D+Pv6d5OFKjHt8f+2fNZowKuXPjZpXmEVh66vDh2nc0vwDzxWd3uVdp
HolNz46M+uMKzZHofO7yQ2vcmkchprp63963NI9Gqx9/6H93meYx2Gq51mvy
Us1A2N6/q7ve/K9VoMPVJsuwSm3+IqKrPlv++WJt/iLev31tWtIb2nwsMsbF
7+9Woc3HYvGmA3e/dmrzcdj7YWzUhnJtPg57Cr86raraPArL13dom1amzaOA
7BF9k0u1+UuofyDrLVuJNn8JRkf/7Y5ibf4ywtttub2ySJu/jJoe+87tKtTm
ryD3xBPnLhVo81fQvHRw8R80K9HY85e3xs13aPNo3H7us4Pb87X5q5ibeXR1
W83qqxhx48nYxDxtPh6lR/uuPZirzcfD1utU10GalQm4/M6xeZ4cbT4BL4Se
QphmJQahhbumvpOtzWOQ0KfbzF6alYnYPCCsfXWWNp+IWR1Tew7RrLyG60nn
LYcytflrOL6t2G7VrExCz0jD6Ht2bT4JHeLGOT2aFQsGVyaEvKIZFjgu9X3/
eob2eQvCe+3t5tHsa/l8WNXIWM3KZGRsxOX2mjEZeSNjf/Wla/uTUT4n3lyi
2TcZmUk7l0RqVmJxO2H1l/cWafux6Dz14InPNaux6L9m6xtLNfticcgw+vOp
mpUpUD75elFfsT8Flb4BqdfTtP0p+LFz7NoDmn0tn++6/OJqzUoc5tfONS/U
jDh8cy8xd6zYj8MN26jK3mI/Dt2+++j1Xxdq+1Px6+xp/zyhGVNxeGLghlez
OhUjRtSvcGv2TcWJF1M2Zor9afjz3fOPxon9afjm22cuDRf707D+xqWmPmJ/
GmYm5oxuI/an49JPJzZfXqDtT8eOzh8P+VqzOh0Xal79co9m33TMX1Ni3aRZ
icexB7ZdXSH243H73JfzysR+PMZsfGFvmtiPR9zixiszxf4MjPjroMZXxf4M
bO59duMIsT8DZ54NNz4t9mcgsnf1hN5ifyaW9JrxRCexPxMd27/37u+p2v5M
bOzbd+svmn0zcavztbifNCuv4/k7M5ec0YzX8T/BB185LvZfx5jZlyoOiv3X
kbt34OjPxH4CVi0Yv8gr9hMQt6Kp4yaxn4BHpz8d9r7YT8D8BzstWS32Z+G1
xW1n/0nsz4K5duvbb4j9WfhHnxO9SsX+LPzyQcadPLE/GzumbH/GLvZno9Dy
89ZUsT8bO7/a5EgS+7OxDX9cMkvsz0FmSkJgutifg+8+7Z0fK/bn4MjasxMm
iv05SA+efj1a7FvxW+H86nGajVbsc/zed4z4Pit6jBv+zQuarVb8fu9vdc+L
77eizazZhwdr9lixMaX5oUEiz4o/zVmVO0BzwIrvqkc8GCHyEzFsa/eD4SI/
EVvbplQ/IfITAata85jIT8SzWw4d6y3yE3HK/Gn3niI/Eeq/ThQ9IvJbvi96
9+/dRH4inJ16erqI/Ln45tGNr3cW+XPxdqsBz3US+XNxZUjp4x1E/lxEu1z9
HhT5czHQMWBse5E/F/0/z8ppK/LnYvz2xN1tRP5cNG7s8EhrkZ+EaM9bLkXk
J8FY17XN7zYtPwkZO75ceVezNQk1K34e2qxZTcK+/n+/8B/NniQYtr/74W3N
viT81eHLbtIcSEKMY/Wk3zQryTisFJt/1WxMRtz8c8/cEvnJOLXtmUE3RX4y
Roz/YeQNkZ+MNvvypvwi8pMxKT0z97rIT8aZCTPXB0V+Mnr9Zd+payJ/HoZ8
MbS7sHEe1t2ZnPCzyJ8H+2O1m6+K/HkYWdLcWlidB+MGf+IVkT8Pk/ufOfRv
kT8P20q/GCocmIfi4y/XXBb58/Hwoc59hY3zW/59/+36SyJ/PtSuc/oLW+dj
fas5nzSK/Pm4/MbascKe+The+83piyK/ZT75dKZwYD5ivDaDsJKCP6yeuuMn
kZ+Cnb3TZgojBR+tLW4rbE1B0pIZtRdEfgq2pZ2eL+xJwaxPj/QR9qXg7o4u
p86L/BT8pVRdIazYsOi7m5OFjTa8NjwmVBg2xJbN+/ZHkW9Dc98n1gurNlhu
WxcKe2zYNDjELOyzAa/eaSccsKH0l8cb/iXyU/EPw6zNwsZU9Nu4VhVGKsYc
2j9d2JqK4W/vMQmrqWjoltdB2JOKlJlnLv4g8lNxOebU34UDqbi+bfqHwsoC
HAybuFjYuACPnf/QJowFeO6Z2Bhh6wIM+vvY54TVBeg1ILWHsGcB2lbsvBcQ
+QuwaaXxonBgAUZ/usYvrCzE4ZOG3cLGhXjXpm4UxkI8uPCfK4StC7E9rocq
rC7EJ488nS7sWYgp3R+apecvxHd9P47R81v2CzuN0vPTsHLP48/q+Wl4qvHs
43p+GnbFj+qq56eh3f4RbfX8NGT2P9z0vchPw5B/Xb4i7EuDf+WKH4QDadjc
f88pYWURPj+WeETYuAhrm0sOCGMRRiR32CVsXYRptx7wCquL8MG38zbp+Ytg
ynrqL3r+IvwWN2GNnr8IBeMPva3np6N8wruVen46fi39W7men44jw01Fen46
Ot24mqPnp+M/U2+k6/npGDlwVKqen45+8+uT9Px09OyxYraen4Gb2Wtm6PkZ
cH/1TZyen4EpG8Zb9PwMfFVwY4KenwG11bFX9PwMFLRqGKfnZ2DszM7Q8zNQ
90BWpJ5vR6PhnlnYYEfnD7cP05/HjqrmJYOFTXY8l1I5SH8+O759pWagsMWO
dqGXntKf147Tsa/2F7bbMW7doXD9+e1IqJrbV9htx5p7YUa9jx2hqy89Kuy1
o43p6956PzuavSd7CvvtSGx3tYfetyX/6d6PCAft2BY+O1Tvn4mUtp921ftn
4slLj3XR+2di7K9rO+v9M+FPiHhY75+JQdO+6Kj3z4QnPKeD3j8TP3Z97iG9
fya+ym4O0ftnQvngm/Z6/0yk/767nd4/EwNvfdxW75+Jdje2PqD3z8SojLo2
ev9MjPzpaGu9fyYmnbnaSu+fiblf99CtZGH/7AmK3j8LDQ9X/n5O9M9CU+HR
e8KmLDwxprduZOHoHftdYUsW9kw91ixszcKBW4N127OwpvL9O8JqFrbvNeh2
Z+HhmDf/I+zJQlhje93eLOROXHZb2JeFyyMe0e3PwoD0D5uEA1k4uHWE7mAW
bu098Zuwko13Fth1G7IRLOqq25iNLb66X/X+2agNSdKNbHR/sotuSzauXTlw
S++fDcsQh257NgZ9ZdKtZmOC58pNvX82ehRv1u3JxkcvLtLtzcbG48/p9mVj
WLvbN/T+2fjhiwO6A9lYd/Mt3cFsvJc9S7eSg9lPPavbkIOKZkW3MQdnT37z
i94/By/9eYtu5GDDiDd0W3Jwbu0c3dYcfPk/I3Xbc/CHaT11qzkt/zfTdF3v
n4PE57/V7cnBhejdur056PDJ+7p9OSiZ69Ltz8GfJ6TqDuTANseiO5iDJW6z
biUXkSee0G3IxWthHXUbc9Fn+m9BvX8u/uj6UTdycXWFX7clF08V7dVtzUXl
4K267bn4Yts63WouHrq8TLc7Fz80lOj25GJ4ToZuby7iahN1+3JxZnmcbn8u
9reN1h3IRcyDkbqDuejyjkm3kocrH/bTbchDqyG9dRvzsHN4F6l/Hmo/bi/1
z8OZFfeu6f3zEP39Ld3WPEx5+6puex7efP+CbjUPNSHndLvz8P6Xp3R7Wj7/
3XHd3jx8ii91+/Kw+toB3f48fPHTHt2BPHT6w07dwZbnWb9dt5KPDbO36Dbk
45n4TbqN+Riz9APdpny8fOs93cjHsZXvSv3zUZq8Wuqfjx7zlkv985G38k9S
/3wsvfqm1D8f8zIXS/3z0e9Rl9Q/H8q1Mql/PqIuFEv98zH5XoHUPx9rzPlS
/3ysW5Ej9Xfgl4eypP4OjPFkSP0dGD55kdTfgff6LJT6OzCuVarU34H29+ZL
/R041WWe1N+Bj0YmSf0dcBYmSv0dyDw6R+rvwNtDZkv9HWi9JUHq78DtYa9L
/Vu+3z9D6u/A1KJ4qX/L8w6bLvUvQP3dqVL/Aow8GSf1L8DdnVOk/gXIrYmV
+hegy4eTpf4FeHmrRepfgLd9k6T+BUg/95rUvwBp7SS7W77PPFHqX4BfsmKk
/gWo/usEqX8BfK0l+wvQOG281L8A+z95VepfgOvdJSuF6KdGS/0L0eH6K1L/
QkyzSTYVYt+Fl6X+hVBSJVsKcfL6S1L/QjSXSbYXIrKbZLUQMzdHSf0L0Tta
sqcQky6Nk/oXYu9bkn2FGGmW7C/Emgtjpf6FqH5HcrAQIyZIVoowqI1kQxFm
7X1R6l+E94slm4pwfJRkFMHfSrKlCKX1kPoXYe9yyfYi2GdJVotQNECyuwj7
74yR+hfhqWOSvUVY+4FkXxGUAsn+Irw4WXKgCOMHSA4WoW17yUox5pwfLfUv
xkufSzYWY9MGyaZiZL8hGcWoskm2FCNkomRrMXYMlmwvxrKektVivNFKsrsY
yy+PkvoXo/qkZG8xtu+T7CvGts2S/S37VZIDxZi0WHKwGOdyJCslGJYs2VCC
CXGSjSUIe0myqQTLn5eMEnwSIdlSgszekq0lqH9Ysr0EH7eWrJbA+Fuk1L8E
Pa5I9pRgyQ+SvSXIPy3ZV4KGo5L9Jag5KDlQgsBuycESlOyQrJTCsVmyoRT+
DZKNpXCuk2wqxeLVklGKM29JtpSisFKytRRJTsn2UqwolqyWok2+3L8UtZly
/1JsSJP7l+Jwity/FE8nyf1L4Zst92953ply/1IUT5P7l2F9rNy/DL+8Jvcv
Q/oEuX8ZukXL/cvwfZTcvwzHX5T7l+GH0XL/MnSPlPuXIXWE3L8M3z0v92/J
Hyr3L0PPwXL/lu8fJPcvw/5n5P5l2DVA7l+G+qfk/ip+7i85RMXTT8rvQ0Vh
uOQwFef6yu9HRewTkiNUfPu4/L5U2B+TbFbR61H5/an4qrfkaBXv9pLfp4r0
npLj1Zb/Ppffr4pRPSTbVJgfkd93y7y7ZEfLfqj8/lWkdpNcqWJ5V/keKg50
kVyl4p5Bvo8KyK5RsbSzfC8V3z8suU7FCNk+FWs7Sa5X8YBsv4qcjpIbVFzu
IN9XRYrsRhX/fki+d8u+7CYVrWUr5Vj1oHz/cgyUbSjHP0Lk+5djgWxjOTrL
jijHrvby/cuRIttcjkdko+X728n3L4dTtqUco2THl+NOW/n+5dgt21aOUtn2
crwk21GOTrLVcpx5QL5/OTbJdpcjX3ZVOcbL9pTjMdk15bjVRr5/OY7KrivH
Rtm+lr6y68thle0vx2jZDeV4XHagHK1lN5bjQmv5/uU4LLupHNtlK05UyQ5x
QpVtcMImO8yJKbKNToyWHeHEQNkmJ8Jkm51oLxtO/NZKvr8TF2VbnDglO96J
etlWJz6TbXPiY9l2JzyyHU6slK068absSidKZbudyJFd5USqbI8Tc2TXODFN
tteJibLrnIiS7XMiUna9E0Nl+514RnaDE/1kB5x4VHajE4/IDjrRWXaTEw/J
VlxoKzvEBUW2wYXbinx/F27INrpwTXaEC1dkm1y4KNvswo+y4UJAdrQLZ2Vb
XGiQHe/CSdlWF76WbXPhuGy7C0dlO1w4LFt14R+yK104JNvtwkHZVS7sl+1x
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
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
7T8FtzbR/lNQuJH2n4KzP9D+U3B+A+0/BUXraf+V+ay0/xRUpy5PQct1tP9U
DFlL+09F6Brafyp+XE37T8W972n/qWhO7ZwK31W0/1TsWkn7T0U1aqRiXBbt
PxU5K2j/qahP7Z2KoOW0/1TcXEb7r8xDrU/FoaW0/1R0pjamYtsS2n8qvqK2
VM4X0/4r96mtle//He0/FR7UOan43UL7T8V8altq5f8XtP9UrM2k/aeiF3VR
Km5k0P5TEU1dmopW1GWpOJdO+0+FgdouDW2o7dNw1Uz7T0MKtWMa+lBr0vAm
jfafhh3ULmmYQ+1aeY8aaXiQSvtPwxZqbRrmUXunwYVal4a3KbT/NNio9WlI
pTakYRy1MQ0tqU1peGmi/afhGHVWGpZSW9Mwmzo7Db2oc9LwCXVuGkqTaf+V
z0udn4aV1IVpCKYuSoOWujgNHahL01CHuiwNT5Jo/2n4ldrOjG3U9makUzuY
oad2NMOLWmOGK7WzGU2pXcyoTu1qxpNE2r8ZF6k9zDhErTVjI7W3GRnUOjMM
1H5mzKDWmzGS2mBGL2qjGc7UJjMaUlsqn586y4wXCbR/M4qps80opM4xw0ad
a8YuapsZG6jzzVhCXWhGInWRGWHUxWbMpS41YzJ1mRla6nIz3Knt0uFKbZ+O
DtQO6WhB7ZiOz6k16ahH7ZyO6tQu6XgXT/tPRxk10vGI2iMdt6m16bhC7Z2O
c9S6dJyk9kvHYWp9OvZSG9Kxg9qYji3UpnRYqS3pWEmdlY7F1NZ0mKmz05FE
nZMOI3VuOhZR29IRTJ2fjoXUhemYS12UjlnUxenQUZemYxJ1WTrGUZenYxS1
XQY8qe0z4EHtkAF3ascMgFqTATdq5wy4UrtkoFuV/jPgUqX/DHSo0n8Gvq7S
fwbaVuk/A62q9J+B5lX6z8CXVfrPwBdV+s+AY5X+M9CwSv8Z+LRK/xmoX6X/
DNSr0n8G6lTpPwO1q/SfgQ+r9J+BmlX6z0D1Kv1noFqV/jPwbxztPwPvqYsz
8Dd1aQbeUZdl4C11eQbeUNtl4hW1fSZeUDtk4jm1Yyb+R63JxB/Uzpl4Qu2S
icfUrpkopUYmHlF7ZOIhtTYTD6i9M1FCrcvEfWq/TNyj1mfiLrUhE8XUxkzc
oTZl4ja1JRO3qLMycZPamokb1NmZuE6dk4nfqXMzUURty8Q16vxMXKUuzMSV
Kv1n4nKV/jNxqUr/mbhYpf9MXKjSfyYKq/RvwW/UNZjtmetacL7K98OCc9QN
LCio8n2x4Cy1E7OGuRWzswW/Ure34EyV7xdzN2ZXZjcL8qt8/5jdmT2YPZm1
zF7M3sw+zDrmmcx+zP7MeuZgZgNzJLOROYHZxGxmtjAvZc5iXs1sZd7InM28
nTmHeQ9zLnMes435BHM+cwFzIfNl5iLmm8zFzCXMpcxPmcuYXzOXM1cw231X
1TWY7ZnrMjswN2B2ZHZi1jC3YnZmbs/swtyN2ZXZjRnM7swezJ7MWmYvZm9m
H2Yd80xmP2Z/Zj1zMLOBOZLZyJzAbGI2M1uYlzJnMa9mtjJvZM5m3s6cw7yH
OZc5j9nGfII5n7mAuZD5MnMR803mYuYS5lLmp8xlzK+Zy5krmO0Ws98/sz1z
XWYH5gbMjsxOzBrmVszOzO2ZXZi7MbsyuzGD2Z3Zg9mTWcvsxezN7MOsY57J
7Mfsz6xnDmY2MEcyG5kTmE3MZmYL81LmLObVzFbmjczZzNuZc5j3MOcy5zHb
mE8w5zMXMBcyX2YuYr7JXMxcwlzK/JS5jPk1czlzBbPdEvb7Z7ZnrsvswNyA
2ZHZiVnD3IrZmbk9swtzN2ZXZjdmMLszezB7MmuZvZi9mX2Ydcwzmf2Y/Zn1
zMHMBuZIZiNzArOJ2cxsYV7KnMW8mtnKvJE5m3k7cw7zHuZc5jxmG/MJ5nzm
AuZC5svMRcw3mYuZS5hLmZ8ylzG/Zi5nrmC2W8p+/8z2zHWZHZgbMDsyOzFr
mFsxOzO3Z3Zh7sbsyuzGDGZ3Zg9mT2YtsxezN7MPs455JrMfsz+znjmY2cAc
yWxkTmA2MZuZLcxLmbOYVzNbmTcyZzNvZ85h3sOcy5zHbGM+wZzPXMBcyHyZ
uYj5JnMxcwlzKfNT5jLm18zlzBXMdsvY75/ZnrkuswNzA2ZHZidmDXMrZmfm
9swuzN2YXZndmMHszuzB7MmsZfZi9mb2YdYxz2T2Y/Zn1jMHMxuYI5mNzAnM
JmYzs4V5KXMW82pmK/NG5mzm7cw5zHuYc5nzmG3MJ5jzmQuYC5kvMxcx32Qu
Zi5hLmV+ylzG/Jq5nLmC2W45+/0z2zPXZXZgbsDsyOzErGFuxezM3J7Zhbkb
syuzGzOY3Zk9mD2ZtcxezN7MPsw65pnMfsz+zHrmYGYDcySzkTmB2cRsZrYw
L2XOYl7NbGXeyJzNvJ05h3kPcy5zHrON+QRzPnMBcyHzZeYi5pvMxcwlzKXM
T5nLmF8zlzNXMNutYL9/ZnvmuswOzA2YHZmdmDXMrZidmdszuzB3Y3ZldmMG
szuzB7Mns5bZi9mb2YdZxzyT2Y/ZX/n/AcAc1yw=
             "]]}, {
            Hue[0.5585438199983166, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxd1nl0zNf/P/DRWkKV0CDWhg9trE3bqFjK0x5ERQSJBhMisonJPtknySSZ
JJPkHUullnaIJVQJtcSeKhpbjT0IhlpiKWNtqOU3v/N17325/sl5nDuv9+v9
fD/PPUfHGXO9Zn2gUqku1VOp/v/f//tnHfR/fy3v/qrQasf1x9d3X31nO4xe
eDe7OonZHk3PL796ZBCzA34f/99VYz1mR9zTvxz6wV9X3rkdZmUeWfvRj8xO
ePxa9XNuIHMnDD18bZ3/N8ydcW6ecVK0HfNn+MnZ/us11Zff2RkDU8MvX93M
3A3fmEtV9fKYeyB1/9OJbwKYe6Fd6JCSLWB2gUvQoPJmHZi/ROi2eiGq19Xv
/BV2Ja7KD7vM/DXuuJQ/GrKP2RVX1nSdHLGCuTciytTBt7KYv8H+0/9sLQpj
7oOYN9dLZk5gdkOD7k9CxvZn7ou63jGNBndm7oc5I2bgyybM/fEw1F/X7MWl
dx6AS+pnd8/eYP4WrXqcGxZ1knkgbvXXP7iyl3kQ8q+3q27yKzPQyxqb/2LJ
O+uA/i7G+j/ksfPBUL/6qvJSIjsfjC77uh7eH8bOhyDQKWbu0GnsfAg6rbHP
neTJzoci9IJ19LMh7Hwomo+cOLj1N+x8GKo1Qd67u7LzYbj/afe9Ve3Z+XCE
JZbWD27Ozofjhxdz385uwM5HIKWr1z7zq4vvzkdg7eCpP/30+J1VI3HCt+VX
x2vY+Ug06Hd/lM9Vdu6O51ss9/qfY+fueDp/1vjo4+x8FF58GXLj9QF2PgoB
//0w4Oxudj4a33fe0u7fLex8NHbU7atR/8rOx+Dc6jqjmqxm52PwytX58uuf
2LkHHOxVmT2K2bkHJmpddiwqYudjEfHXfftv89j5WCiKO9pksvPv4O21qmXP
VHb+HR437JscFc/Ox8H+s19i7kWx83Eorj3kOD+cnXuitvWQhUHB7wxPjE5Z
2CskgP3eE380qun/w/R3rvBEfH7Dz+9NYfPjUa9xcujsSWx+PJrMLVrY0IvN
j8fHy7MHm8eyedv5iINtdo5i817Q4JNLB4ezeS8MG3Z71OPBbN4Lvn9u7z9w
IJv3wu01vkWl/dj8BJQ9COzj0ofNT8C+thu6nPmazU9AXOzaafNd2PwELLj+
+kFYTzbvDccDqn+md2Pz3qjKGKYN/ZzNe2PV2O47CjqzeW/sW5NqqezI5idi
cU7zz1t/yuYn4vCyacdT2rH5iVCrXdq+aM3mJ6K32Wt6dis2Pwmfh+Ohcws2
Pwm1o6o+u9yczU9CiKVlUIk9m7f9ft6pNolN2PxkFKQkrp/ZmM1PxiXlSqFf
IzY/GS5F9wbMsmPzk/FhkxSX5Pps3gefPHO+X1KXzftgxda6z6s+YPM+eP1n
alXbOmzeByXaLzuFvb3wbt4XXuc3zDr8+p3hi7Hr/ft+/eqddb44O9m/z9qX
71zhi9VpY193e8Hmp2BTarce5f+y+Sm45zcoyPM5m5+CMSHPfJ48ZfNTEDp8
R6npCZv/HsGDL9f1eczmv8e5T5Pbt37E5r9HvN3MVX8/ZPPfY/vGf8Zvf8Dm
/eC/9N+L8/9h835IStn3UnufzfshNOfknMB7bN4Pmw48evz9XTY/FV1GNhjj
e4fNT8VX4+36Tqth81Ph3f92WshtNj8V83vp7iffYvPTMHtZ9uDim2x+Gv6K
ih+z4wabn4aGzw3nLH+z+WnYNbyorAmzajoOZtZfO+Q6m5+OuIW3laRrbH46
evqV9dttYfPTceQnj4Q6zCo1Dvl81MXj6js7qWGdN6/Z0ivseWoM2Xy61aPL
76xWI6avqtkYZp0a7rUp59dWv7NJjdKSayM+Zq5Qo/epi/1jLr2zRY3dPq4L
rl1k+/2x7INDvbyYnfzRaUXYvUMX2H5/NIup88sgZrU//r0wftzuKrbfH3u8
Wu0awGzyx7STD09WnGf7/VE6ZpLWndnij/bzl8w/fY7tnwHX8KsNZzA7zcAY
a8P9T86y/TNw/OODJQZm9Qy0DYld5MSsm4HHfn2zdp1h+2egTc8Lvr7MFTMw
MuXoqxen2f4ZcLZ2m7KMWTUTB+5vmjqU2WkmRq/c+uTeKbZ/Jha4dmy4iFk9
E3teavKGMetmovPHG4KenmT7Z2JadXDhauaKmfjpxY4HU5gtM+FSxzW2GbMq
AOvX3GlxxMz2B2BxTcBePTMCMG7iSvVgZnUAzqe3evD2BNsfgAMLl/hUMJsC
cOZu3Lx05ooAzLg0pWAEsyUAK5dOGtSYWTULv7tdKT79F9s/C+dM+wuWMmMW
6p7/osVsZvUs7PhindPXzLpZ8Fn70WoVs2kWdL5pi08cZ/tnwfWh4cnPzJZZ
+GzUg9URzKpAxH16eN0wZqdADK1IeObIjEB4Xfkl+cExtj8QkyJG9zvIrAtE
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
rnJX2J6fnXCE26xFd7vTW7ktWpxLr1jObdWi48GBBdyqePy+c1Qit308zoVd
DuJ2ikebOs8ncbvEo9mOwuHciMfgR6tduT3jEe7k1plbHY/L5wY5cGvi8dOe
nXW5dfGoWrjq2QCePx6t3V7f4jbFY9P8vVXcZfH4aMOtI9wV8bBfEbmH2xwP
w8/Ty7gtNt9dV8Jttb3PxfGLuFUJSL00Po/bPgF1Q0pTuZ0S0KHlhGhulwS0
SBsXzI0EjJq6ZBq3ZwLK57h6c6sTkJnpOJpbk4D07OHg1iVg/6wd34j8CejW
MbKnyG97n8NzOov8CVicsK6tyJ+AE+rPPhH5E7D3t6uNRP4EfF9+5gOR3/b+
FR/+15/nT0SSc+gTbvtE3JvS8D63UyK+PlZ9g9slEcNf/X2ZG4m4HdP+PLdn
Ivz/yjZzqxPhuqrjEW5NIswld/7g1iVidPKVPdxKIto+eLOd25SIql2jNnOX
JeLxlj3ruSsSEVvmu4bbnIi/8tut4LYkwuBabxm3NRGtFjQvFvmTsKRk6HyR
Pwm/+i8qEPmT0OVM41yRP8n2//2STJE/Cb/Z+6aJ/El4YNcrWeRPQmyzjvEi
fxKixn8ZI/InoevzqREifxKOfbV6jsifhIloGCLyJ8F3alagyJ+Eq8fbzRT5
k9D/0tHpIn8Sbp2e5yfy2+Y/ivAV+ZNx78KsSSJ/MtYt1UwQ+ZMxcKviKfIn
44+cg2NF/mSs1zcZI/In2/5/H+ou8idj9vqLw0X+ZGzf7zdU5E9Gz1NWiPzJ
+Mz3h4EifzJWXfAYIPInY8CFT/qJ/Mn4x3K3j8ifjJbJJ3uL/MmY/O2fX4v8
yUjccvRLkT8Fau2VL0T+FFzr+LanyJ+C/R49e4j8KVi8KKibyJ+CPSVlziJ/
Cnq0qPe5yJ+ClHmzuoj8KTAfOPk/kT8FmyaP6iTyp6DZi6NOIn8KvvT1/VTk
T0Fht0ftRf4UXOw4v53InwLLs4FtRX7b/ulPW4v8KZjf+jdHkT8VjywJrUT+
VIyNHtNS5E+F64LOLUT+VLz6oL6DyJ+Kcv3D5iJ/KnpetTQT+VPx+4UL9iJ/
KqK/vdhU5E/F6TPXmoj8qbgXav1Y5E/FYHM94bJUHDJ3bCzyp+L4t8M+EvlT
oboT1kjkT8XkVUsaivypaDbSbCfy67C6pJGwnQ77i0Y3EN9Dh/53CutzO+rQ
MONiPfF9dBjQt5uwsw61t1Lqiu+lQ3BQ1YfcbjrsW/yNMHT4n9+PH3C767Al
TyXsqUNyw7A63D46aLZdUonvq8P06HHCQTo87/Ln2378e+vw24Yhwlodbjz+
/Q23Todl54cJG2z7hxx9za3osKfNROFiHT4cef0Vt0mHjI2RwqU63B5QX7hM
h7Sqpf9xl+swMuwb4QodTlw/9ZK7Ugf3zyOFzTrEdXEQrrK93+HyF9wWHW6q
1MI1OmjLGwpbdZh5ZWstd60O7fwDhFVpWPxFC2G7NIztW/kvt30a2ocnCzum
IXCvq7BTGp62efCc2zkNH8asFXZJQ5+9gcJuaVhW00UYaVhz69Yzbvc0fP7L
WmHPNIzrGi7sk4YN3q7C6jT06PjqKXdQGuwyDgpr0nA+XBHWpiH1gp+wLg3f
lHcTNqQhTfXyieg/DS6lR4SL0zB11VJhUxqCHswVLk1Dbfww4bI0PB/YRrg8
DQWujx6L/tPQ3euwcGUaYgpXCJvT4HUjSbgqDdfcfYQtaUjY6ipck4ZfOzUX
tqZhUI71keg/Dd2unxBWpePHz8qE7dJxd1yRsH061k2OEnZMx4I+k4Sd0lF0
p6+wczq2ze4g7JKOoes/FHZLh2nTHavoPx3TI83C7ulwu7Nd2DMdjZqZhH3S
UXXDIKxOx5HpkcJB6eiW7CesSccst5HC2nTY5X8lrEvH77EdhA3p8HvUSFhJ
x4Hafx+K/tPxQc5NYVM6+v90Wrg0HRtd9wuXpWOn+ybh8nScPmcSrkhHziVF
uDIdmRPShM3pyO4fKVyVjtnKTGFLOhzGTRSuScf86JHC1nS8ed1XuNb2/Joe
wqoMhH7pJGyXgQbnPhG2z8CB0w2EHTPwqfOrB6L/DJSarcLOGXh75KawSwbO
OVwSdsuA9RezMGzPKzgk7J6BETt2C3tmYFL334R9MuB5fa2wOgNDq03CQRnw
aFUsrMnAD0WFwtoM+IzKFtZl4PyAVGFDBgJC4oSVDPiZ5woXZ6DrnCBhUwYG
DvIXLs1Au+FThMsyMDZ5gnB5BgJveQhX2L536gjhygxUDYewOQPGvv2EqzJg
8XEVtmTgxxW9hGsykNmiq7A1A4ll/xOuzcCUyA7CKj0aTmktbKeHNtBB2F6P
n35oKuyoR/ydRqR/PZpOq0/61yPsSR3Svx4rS1//I/rX41TSC2Ho0XLuM2F3
PRalPBL21CN93T/CPno0enxHWK1HkPct4SA9LpqvC2v0WBV4VVirR7MW1cI6
PeZcqhI26NF4x1lhRY+Rv54SLtYjYfsJYZMeDc4fEy7Vw/ujI8Jlehyd8Kdw
uR6XNh4QrtDjeYf9wpV6zDftEzbr0dN1j3CVHoMv7BS26OFVWC5co8fNiduE
rXroe2wRrtVjZ/PNwqpMtLIrE7bLRK/GG4TtM7Ggw3phx0xcH7hO2CkTW8JK
hZ0zsXbNamGXTPg/XEn6z0Ta0BLSfyY2liwn/dv2NTWR/jNRnfUT6T8TvRsu
I/1nYtwPS0j/tt/3XEz6z0TRiWLSfyY6Jy4i/dvmXX4g/Wfi2IMFpP9M+Gyb
T/rPxOaseaT/TCyeXkT6z8QpKKT/THzarZD0n4kRbQtI/5lo4pBP+s/EYAcj
6d/2Pdvmkf4z0bxbLuk/E6MH5ZD+bfu+N5D+MzEjOZv0n4kbq7JI/1mIP5NJ
+s/CUzti+yx0H6on/WfhWXoG6T8LXSvTSf9ZMDUndslC7xlppP8s7N+mI/1n
obM9sXsW3MJTSf9ZqDankP6z8LAPsToL40uSSf9Z+Ls5sSYLWVlJpP8sdHiT
SPrPQkE8sSELO2sTSP9ZyE4kLs7CpTrEpiwsy4sn/WdhiyNxWRYarNWS/rOg
G0BckQW703Gk/ywYwojNWbhvR1xle//SWNJ/FhqNJq6xvc+DGNJ/Fv5YSFyb
hZBBxKps6O5Fk/6z8eRHYvts/Daa2DEbG15Hkf6zcXYzsXM2HEOIXbIx+3/E
btnYciWS9J8N6xJi92w0+Z7YMxuqdsQ+2dhxJYL0n40eJcRB2fAIJtbYnvcl
sTYbgS81pP9suB8kNmRjbRGxko2U6cTF2djTi9iUDb+3c0n/2fA8SVyWjaKV
xOXZcIgnrsjGye+IK7Oxrwux2fZ9X4eT/rPx0XliSzZ8NxHXZGO7kdiajfbB
xLXZ0I8gVhlwozOxnQF96hLbGxBzYw7p34AfDxI7GbBkDbGz7fe5xC4GdAon
drP93osYBlzqQ+xuQHV7Yk8DiusS+xjQ6H4Y6d+AnmeIgwx4vZtYY0D0amKt
AfkKsc6AYYnEBgMWBhIrBiR6ERcb8HggscmA592JSw3IaE1cZnteA+JyA5yf
h5L+Deh7k7jSgANniM0GHDpAXGVA/63EFgOcVhPXGBC5iNhqQK8c4loDxicS
q3JQNYfYLgcVamL7HDTwJnbMwdqRxE45WNmf2DkHz78gdsnB0s7EbjlY0JoY
OahuQuyeg4i6xJ45GP8yhPSfgwQrsToHd28RB+Xg58vEmhwsOkOszcHJo8S6
HIz+g9iQA9UuYiUHjzcTF+egwy/EphxklBCX2s6XEpfl4OEC4vIcPM0nrshB
92ziyhzM1xGbbecJxFU5eBRFbMnBjTnENTn4IIjYmoMxM4hrc7DHj1iVi8mT
ie1y4ehFbJ+Ltx7Ejrn4yJ3YKRf9hhI758I4kNglF6p+xG65WNibGLkY/SWx
ey469CT2zIV9V9p/Lj7tQvu3zXek/eeiqD3tPxdPWtP+czG3Je0/F3U/of3n
YnNT2n8utI1p/7mY2JD2n4tR9Wn/uZjwIe0/F5Eq2n8uVr8OJv3n4sFL4kpb
nlpicy52PCOusn3vJ8SWXBy3EtfY9j0gtubC+T5xrW3fHWJVHg7cJrbLw7qb
xPZ5+PlvYsc8lFwjdsrD1qvEznk4e5nYJQ8fVhO75WHgRWLkIauK2D0PF88R
e+ah31linzysPk2szkP7U8RBtvc1E2vy0OMEsTYPfxwn1uUh4BixIQ9NjxIr
tu9zmLg4D+mVxKY8jPqTuDQPrQ8Rl+Xh8QHi8jyc/oP2n4fd+2n/efj1d9q/
LW8F7d/mfbR/2+/30v7zsGsP7T8P5t20/zzc30X7N6IJtZ0R3+yk/RsRsIP2
b0RxOe3fiFPbaf9GNKd2MWLyNtq/Ecu30v6NsG6h/RsxjNrTiGW/0f6N+G8z
7d+IadRBRhzcRPs3woVaa4SpjPZvhAO1wQjjRtq/EQ2oi43I2kD7N6IhdakR
hb/S/o1oTV1uxOr1tH/b96auNOLwL7R/I6ZTVxnxYh3t34iF1DVGuFJbjTi3
lvZvRCK1Kh+dqO3ycayU9p8PLbVjPj6jdsrH+TW0/3zkUrvkYxC1Wz6er6b9
52MjtXs+Qqg98/E5tU8+bq2i/edjDXWQbZ5ak49e1Np8PF1J+8/HbmpDPjKp
lXx4Uhfnox21KR93S2j/+dhBXWb7HtTl+fCjrsjHF9SV+ahLbc7HxRW0/3xs
orbkI4e6Jh8zqK35GEBdm49W1KoCPFlO+y+Amdq+ABuoHQuQT+1UgDnUzgX4
jtqlAC7UbgX4hBoF+NdE+y/AJWrPAlRQ+xRgNbXa9j7UQQWIptYUwI9aW4Dh
1LoCfEFtKEBraqUAdamLC/DwZ9q/7X2pSwtQSV1WgK3U5QUooa4oQBF1ZQF0
1OYCzKWuKsB0aksBxlHXFADU1gJ8SV1bgE7UqkI4UNsVoj61fSFqf6L9F+Ie
tVMhrlA7F+IUtUshDlG7FWInNQqxkdq9ECupPQvxI7VPIQqp1YXIpA4qRCK1
phCR1NpCBFPrCqGmNhRiMrVSiHHUxYUYSW0qxCDq0kL0oS4rxBfU5YVwpq4o
REfqykK0oTYX4hPqqkI0prbY+qKuKYSK2lqIl8to/4V4Sq1S8IC6roI71HYK
blA3VnCV2l7BRWoHBWepHRWYqdspOErtpOAQdWcF+6mdFeyl7qFgJ7WLgm3U
rgo2U7sp2EA9QME6aihYTT1MQQm1uwITtYeCZdSeChZTeytYRO2jYAG1n4Ii
arWCAuoABXnUQQoM1GEKMqk1CjKooxWkUWsVpFInKUim1ilIpNYriKc2KIij
NiqIoVYURFEvUBBBXaxgLvVSBXOoTQpCqVcqCKYuVTCber2CQOoyBQHUWxTM
oC5X4E+9W4GaukLBdOoDCqZRVyqYSn1MgR+1WcH31GcUTKGuUuBLXa3Ah9qi
YDL1DQWTqGsUTKS+r8Cb2qpgAvVTBV7v3XcF46lfKfB87/4XYdx7978I3713
/4sw9r37XwSP9+5/Eca8d/+LMPq9+1+EUe/d/yK4v3f/izDyvftfhBHv3f8i
DH/v/hdh2Hv3vwhD37v/RRjy3v0vwuD37n8R8N79L8Kg9+6/ZHfJHkUY+N79
L8K3791/yT5FGPDe/ZeslhwgOUhymGSN5GjJWslJknWS9ZINko2SFckLJBdL
XirZJHml5FLJ6yWXSd4iuVzybskVkg9IrpR8TLJZ8hnJVZKrJVsk35BcI/m+
ZKvkp5JrJb+SrJr3vutKtpPcWLK9ZAfJjpLbSXaS3Fmys+Qekl0ku0p2kzxA
MiQPk+wu2UOyp2RvyT6S/SSrJQdIDpIcJlkjOVqyVnKSZJ1kvWSDZKNkRfIC
ycWSl0o2SV4puVTyesllkrdILpe8W3KF5AOSKyUfk2yWfEZyleRqyRbJNyTX
SL4v2Sr5qeRaya8kq+ZL91+yneTGku0lO0h2lNxOspPkzpKdJfeQ7CLZVbKb
5AGSIXmYZHfJHpI9JXtL9pHsJ1ktOUBykOQwyRrJ0ZK1kpMk6yTrJRskGyUr
khdILpa8VLJJ8krJpZLXSy6TvEVyueTdkiskH5BcKfmYZLPkM5KrJFdLtki+
IblG8n3JVslPJddKfiVZtUC6/5LtJDeWbC/ZQbKj5HaSnSR3luwsuYdkF8mu
kt0kD5AMycMku0v2kOwp2Vuyj2Q/yWrJAZKDJIdJ1kiOlqyVnCRZJ1kv2SDZ
KFmRvEByseSlkk2SV0oulbxecpnkLZLLJe+WXCH5gORKycckmyWfkVwluVqy
RfINyTWS70u2Sn4quVbyK8mqhdL9l2wnubFke8kOkh0lt5PsJLmzZGfJPSS7
SHaV7CZ5gGRIHibZXbKHZE/J3pJ9JPtJVksOkBwkOUyyRnK0ZK3kJMk6yXrJ
BslGyYrkBZKLJS+VbJK8UnKp5PWSyyRvkVwuebfkCskHJFdKPibZLPmM5CrJ
1ZItkm9IrpF8X7JV8lPJtZJfSVb9IN1/yXaSG0u2l+wg2VFyO8lOkjtLdpbc
Q7KLZFfJbpIHSIbkYZLdJXtI9pTsLdlHsp9kteQAyUGSwyRrJEdL1kpOkqyT
rJdskGyUrEheILlY8lLJJskrJZdKXi+5TPIWyeWSd0uukHxAcqXkY5LNks9I
rpJcLdki+YbkGsn3JVslP5VcK/mVZNUi6f5LtpPcWLK9ZAfJjpLbSXaS3Fmy
s+Qekl0ku0p2kzxAMiQPk+wu2UOyp2RvyT6S/SSrJQdIDpIcJvz/AKX1hek=

             "]]}, {
            Hue[0.7946117974981064, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
Vp4/EoaU1a6beP6azze/tH4jzx8JXd/5HTfw/JHISbiwdx3PH4mRBeUT1vL8
Udjl/PDxGp4/Cvai362f8fxRuB0yM+hTnj8KKv2jToU8fxQufjnvySc8fxTO
N/Y/u4rnr/n8hOzdBTx/FOZl7ViTz/NHIeSD6FwLz19zb9sWfR7PH4UJr57m
mnn+KBiedy7K5fmj0Mr8bJeJ54+CcXv300aePwrvvK+7Z+D5o/BzzoU23Ipo
9NdcHK3n+aOR03hWYg7PH40mfXoczOb5o7E47P1/dDx/NA798nAUt180yptq
C7J4/mjc7r3pbibPH41rP3YYwa2NRvHpXzdk8PzR6JdQqOC2RiN2pedSLc9f
MzcUXUnn+aOx5YrFh9sWDdvnL4+l8fzReDlx9xBuRzQCg/NKU3n+GARoE4Zx
K2NwetLk71N4/hisW/HAl9s9Bt/mDb6ezPPHYNCo1hHcfjGwtphXn1sdgwOz
3q5L4vlj4LHk5iBubQyez7x5OZHnj8HAVn/Gc1tj8NGY2y7cJTGIXvb1yQSe
PwY5B8eu5LbFwEeZ48Jtj0Fh63nn43n+GOx8eyCNWxGLc6dSBnArY9HasfF+
HM8fi/nbG2/jdo9F+o5tC7gRixjvxR9x+8Xi5tyhN2N5/liYZyo3cWtiMbhD
RTC3Nhb+XTLduAti0Wrq28cxPH8sFjYcdZi7JBbTPhyi4y6LBW5e8+O2xWJR
vfc7cttjMWOn/VE0zx+L0nl9yrgVcWjV3PEJtzIOpjcuS7hVNfPfi7243eMw
4pjhXW7EYefDr/+O4vnj4OTa/hS3Og6rFx/axK2Jw8pm2mRubRx671sWyF0Q
h8BJKwZxW+PQo0Xme9wlcRgUufFFJM8fhzHDSq9w2+LQIeJsKbc9DqsmnF/P
7YjDgmkH07kV8Zg5KiOEWxmPMGW3idyqePzxcKM7t3s8do38nw+4EY8k64O3
Gp4/Hj63DlZyq+Oxs2roRW5NPEZ2jD7CrY3H8JLZO7gL4vF40L1PuK3xmL7M
JZ27JB4Hej1azl0Wj6XZs2dz2+IRu3P2eG57POY67g3kdsTjztVGXbkVCbhf
b2dbbmUCpg240JBblYBfp8e8WMnzJ0ARVvgnNxLgsa5XBbdfAtb0G3SWW50A
N3PJEW5NAn5yX/MVtzYBEd/+uYW7IAEt76z/jNuagH/ivjFxlyTg6ZKe6dxl
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
cv9G9Jkj91+Tf7bcvxH2WXL/RpwOkPs34tBMuX8jvvKX+zeiZIbcvxGHp8v9
G3Fmmty/EXf85P6NUMi2GdFtqty/ETOmyP0boZ8s92/ECV+5fyPqya4yYvwk
uX8TVk+U+zfhjwly/yZ4yXY2ochH7t+E6vFy/yaoZbubcG6c3L8Jw2TDhK/G
yv2b4Cbbz4QvvOX+TegmW23CrjFy/yZ4yNaYcGK03L8J02Rra/KOkvs3IUV2
gQnvyy4yYT/k/k2YKbvYhH9Gyv2bsEl2qQk+sstMeD5C7t+ErbJtJvjLrjDB
SbbdhGPD5f5NiJPtMOFj2VUmPPKS+8/FHtlOuVghW5mLj2U75+LlMLn/XByV
7ZaLbNnuuZgq2zMXH8pGLu4NlfvPRalsv1wYZQfmYq5sdS76yQ7LRUPZmlz8
NkTuPxf7ZGtzkSvbkItQ2QW5gOyiXLjItuai2lPuPxcVsktycUh2aS6KZJfl
Ikl2eS7mybbV3JddkQtX2fZcNJVdmYvHg+X+c3FFdlUujslWmLFdtpMZ+bKV
ZiTKdjYjRLbKjKmy3cwYJtvdjO6yPc1oKxtm1JftY4ZjkNy/GbdlB5rxs2y1
Gcdkh5mxV7bGjE2yE8wokK01I1O2wYwY2QVmLJFdZMYc2VYzpsguNmO07BIz
BskuNaOX7DIzVLLLzXhPts2M5rIrzKgn227Gq4Fy/2Y8ku0w4w/ZVWbckK3I
wyXZTnk4L1uZh5OynfNwRLYqDwdku+Vhr2z3POyQ7ZkHq2zkYa1snzyslu2X
hzzZgXnQy1bnIUN2WB6SZWvyECc7IQ+RsrV5CJdtyMMS2QV5CJZdlId5sq15
CJRdnAd/2SV58JNdmgdf2WV58JFdngdv2bY8QHZFHrxk2/MwpE7/eRhUp/88
DKjTfx7c6/RvQZ86/VvQs07/FnSv078FrnX6t6BTnf4t6FCnfws+rNO/Bc51
+rfg/Tr9W9C2Tv8WtKnTvwXKOv1b0KpO/xa0qNO/Bc3q9G+BU53+LWhcp38L
Gtbp34L6dfq3QFGnfwveeMj9W/BadokF1bJLLfhHdpkFVbLLLXgl22bBS9kV
FryQbbfguexKC57JdljwVHaVBU9kK/LhkO2Uj8eylfl4JNs5Hw9lq/LxQLZb
Pv6W7Z6P+7I983FPNvJRKdsnH3/J9svHn7ID8/GHbHU+7soOy8fvsjX5+B/Z
Cfm4I1ubD7tsQz5uyy7Ixy3ZRfm4Kduajxt1+icuycf1Ov3n47c6/ROXE9uI
K4jtxJXEDuIqYkVBXTckdiJuQawkbkvsTOxCrCJ2JXYj7k3sTuxB7EnsRQxi
b2IfYl9iP2J/4kDiIGI1cQhxGHE4sYY4hjiBOIVYS6wjNhCbiQuIC4mLiDcQ
W4m3ERcT7yYuId5PXEp8hLiM+CRxOfF5YhvxJeIK4hvEduK7xJXED4gdxM+J
q4hfEytWkfef2Im4BbGSuC2xM7ELsYrYldiNuDexO7EHsSexFzGIvYl9iH2J
/Yj9iQOJg4jVxCHEYcThxBriGOIE4hRiLbGO2EBsJi4gLiQuIt5AbCXeRlxM
vJu4hHg/cSnxEeIy4pPE5cTniW3El4griG8Q24nvElcSPyB2ED8nriJ+Taz4
hLz/xE7ELYiVxG2JnYldiFXErsRuxL2J3Yk9iD2JvYhB7E3sQ+xL7EfsTxxI
HESsJg4hDiMOJ9YQxxAnEKcQa4l1xAZiM3EBcSFxEfEGYivxNuJi4t3EJcT7
iUuJjxCXEZ8kLic+T2wjvkRcQXyD2E58l7iS+AGxg/g5cRXxa2LFavL+EzsR
tyBWErcldiZ2IVYRuxK7Efcmdif2IPYk9iIGsTexD7EvsR+xP3EgcRCxmjiE
OIw4nFhDHEOcQJxCrCXWERuIzcQFxIXERcQbiK3E24iLiXcTlxDvJy4lPkJc
RnySuJz4PLGN+BJxBfENYjvxXeJK4gfEDuLnxFXEr4kVheT9J3YibkGsJG5L
7EzsQqwidiV2I+5N7E7sQexJ7EUMYm9iH2JfYj9if+JA4iBiNXEIcRhxOLGG
OIY4gTiFWEusIzYQm4kLiAuJi4g3EFuJtxEXE+8mLiHeT1xKfIS4jPgkcTnx
eWIb8SXiCuIbxHbiu8SVxA+IHcTPiauIXxMrPiXvP7ETcQtiJXFbYmdiF2IV
sSuxG3FvYndiD2JPYi9iEHsT+xD7EvsR+xMHEgcRq4lDiMOIw4k1xDHECcQp
xFpiHbGB2ExcQFxIXES8gdhKvI24mHg3cQnxfuJS4iPEZcQnicuJzxPbiC8R
VxDfILYT3yWuJH5A7CB+TlxF/JpY8Rl5/4mdiFsQK4nbEjsTuxCriF2J3Yh7
E7sTexB7EnsRg9ib2IfYl9iP2J84kDiIWE0cQhxGHE6sIY4hTiBOIdYS64gN
xGbiAuJC4iLiDcRW4m3ExcS7iUuI9xOXEh8hLiM+SVxOfJ7YRnyJuIL4BrGd
+C5xJfEDYgfxc+Iq4tfEijXk/Sd2Im5BrCRuS+xM7EKsInYldiPuTexO7EHs
SexFDGJvYh9iX2I/Yn/iQOIgYjVxCHEYcbjw/wLTXpFJ
             
             "]]}}}, {{}, {}}, {{{{{
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 1.}], 
                   Offset[{0, 0}, {1615.3085767145026`, 0.9646905257458808}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1615.3085767145026`, 0.9646905257458808}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1615.3085767145026`,
                     0.9646905257458808}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1615.3085767145026`,
                     0.9646905257458808}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 1.}], 
                   Offset[{0, 0}, {1615.3085767145026`, 0.9646905257458808}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1615.3085767145026`, 0.9646905257458808}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1615.3085767145026`,
                     0.9646905257458808}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1615.3085767145026`,
                     0.9646905257458808}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{34., 6.500000000000007}, {1615.3085767145026`, 
                    0.9646905257458808}], 
                   
                   Offset[{34., -6.499999999999993}, {1615.3085767145026`, 
                    0.9646905257458808}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999998}, {
                    1615.3085767145026`, 0.9646905257458808}], 
                   
                   Offset[{9.999999999999998, 6.500000000000002}, {
                    1615.3085767145026`, 0.9646905257458808}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.01`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22., 4.884981308350689*^-15}, {1615.3085767145026`, 
                  0.9646905257458808}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9444897306150964}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9444897306150964}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9444897306150964}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9444897306150964}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9444897306150964}], 
                   Offset[{0, 0}, {1615.3085767145026`, 0.8942173956294344}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1615.3085767145026`, 0.8942173956294344}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1615.3085767145026`,
                     0.8942173956294344}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1615.3085767145026`,
                     0.8942173956294344}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9444897306150964}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9444897306150964}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9444897306150964}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9444897306150964}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9444897306150964}], 
                   Offset[{0, 0}, {1615.3085767145026`, 0.8942173956294344}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1615.3085767145026`, 0.8942173956294344}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1615.3085767145026`,
                     0.8942173956294344}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1615.3085767145026`,
                     0.8942173956294344}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1615.3085767145026`, 
                    0.8942173956294344}], 
                   
                   Offset[{35., -6.499999999999992}, {1615.3085767145026`, 
                    0.8942173956294344}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1615.3085767145026`, 0.8942173956294344}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1615.3085767145026`, 0.8942173956294344}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.05`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1615.3085767145026`, 0.8942173956294344}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.7364017105200602}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.7364017105200602}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7364017105200602}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7364017105200602}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.7364017105200602}], 
                   Offset[{0, 0}, {1615.3085767145026`, 0.7364864355059012}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1615.3085767145026`, 0.7364864355059012}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1615.3085767145026`,
                     0.7364864355059012}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1615.3085767145026`,
                     0.7364864355059012}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.7364017105200602}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.7364017105200602}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7364017105200602}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7364017105200602}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.7364017105200602}], 
                   Offset[{0, 0}, {1615.3085767145026`, 0.7364864355059012}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1615.3085767145026`, 0.7364864355059012}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1615.3085767145026`,
                     0.7364864355059012}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1615.3085767145026`,
                     0.7364864355059012}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1615.3085767145026`, 
                    0.7364864355059012}], 
                   
                   Offset[{35., -6.499999999999992}, {1615.3085767145026`, 
                    0.7364864355059012}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1615.3085767145026`, 0.7364864355059012}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1615.3085767145026`, 0.7364864355059012}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.15`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1615.3085767145026`, 0.7364864355059012}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.6011595481804439}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.6011595481804439}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.6011595481804439}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.6011595481804439}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.6011595481804439}], 
                   Offset[{0, 0}, {1615.3085767145026`, 0.6010970388815686}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1615.3085767145026`, 0.6010970388815686}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1615.3085767145026`,
                     0.6010970388815686}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1615.3085767145026`,
                     0.6010970388815686}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.6011595481804439}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.6011595481804439}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.6011595481804439}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.6011595481804439}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.6011595481804439}], 
                   Offset[{0, 0}, {1615.3085767145026`, 0.6010970388815686}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1615.3085767145026`, 0.6010970388815686}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1615.3085767145026`,
                     0.6010970388815686}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1615.3085767145026`,
                     0.6010970388815686}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1615.3085767145026`, 
                    0.6010970388815686}], 
                   
                   Offset[{35., -6.499999999999992}, {1615.3085767145026`, 
                    0.6010970388815686}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1615.3085767145026`, 0.6010970388815686}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1615.3085767145026`, 0.6010970388815686}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.25`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1615.3085767145026`, 0.6010970388815686}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.4071522976156741}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.4071522976156741}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.4071522976156741}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.4071522976156741}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.4071522976156741}], 
                   Offset[{0, 0}, {1615.3085767145026`, 
                    0.40710301433589346`}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1615.3085767145026`, 0.40710301433589346`}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1615.3085767145026`,
                     0.40710301433589346`}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1615.3085767145026`,
                     0.40710301433589346`}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.4071522976156741}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.4071522976156741}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.4071522976156741}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.4071522976156741}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.4071522976156741}], 
                   
                   Offset[{0, 0}, {1615.3085767145026`, 
                    0.40710301433589346`}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1615.3085767145026`, 0.40710301433589346`}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1615.3085767145026`,
                     0.40710301433589346`}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1615.3085767145026`,
                     0.40710301433589346`}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{30., 6.500000000000006}, {1615.3085767145026`, 
                    0.40710301433589346`}], 
                   
                   Offset[{30., -6.499999999999994}, {1615.3085767145026`, 
                    0.40710301433589346`}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1615.3085767145026`, 0.40710301433589346`}], 
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1615.3085767145026`, 0.40710301433589346`}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.5`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{20., 4.440892098500626*^-15}, {1615.3085767145026`, 
                  0.40710301433589346`}], {0, 
                 0}]}]}}}}, {{{}}}}, {{}, {}}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> False, 
         ImagePadding -> {{All, 63.9732757978971}, {All, All}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["time", TraditionalForm], 
           FormBox[
            RowBox[{"freq", " ", "oblique"}], TraditionalForm]}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 440, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           RowBox[{"{", 
             RowBox[{
               RowBox[{"ba", "\[Rule]", "3"}], ",", 
               RowBox[{"bn", "\[Rule]", "1"}], ",", 
               RowBox[{"z", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vs", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vh", "\[Rule]", "1"}], ",", 
               RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"u", "\[Rule]", "0.5`"}], ",", 
               RowBox[{"pa", "\[Rule]", "0"}], ",", 
               RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
       
        FormBox[
         TemplateBox[{"0.01`", "0.05`", "0.15`", "0.25`", "0.5`"}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm],FormBox[
        FormBox[
         TemplateBox[{"\"healthy juv\"", "\"stressed juv\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Normal", ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
      
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {2, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}], ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#3, ",", "Above"}], "]"}]}], "}"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
            
            LineBox[CompressedData["
1:eJxdzUEMHP8iB/BfpJI99DCHHvbQw5BGNtLI8IpF+c97ylsU471iUYy/Pm8f
5Q2K9RSDYlEMij30MIcmbw/NM4cm9lDJHHrYSA9z6GFDDyOvhz00MZIeVtKD
yPOPzOd3+eXz++b7+37Nh5//1Ge+KoTw718dwv/eXznDB1/65H984dKX/vOD
/3tI/yn65+K///UjT9Ivfva//u1fvvyRo/TD6tMfe3X+yJfSj/75yj3Fl3GM
vxZfwV+HZ/jr8VX8DTjB34i/CX8MX8PfjL8Ffyue42/D346/A1/H34m/C3+A
07FLHD5OjsMnyHH4bnIcbpDj8D3kOHwvOQ6fJMdhQY7D95Hj8P3kOPwAOQ43
yXH4QXIcfogchx8mxyEbO8UlbnH4Efq4xC0On6KPS9zi8Gn6uMQtDrfo4xK3
OPwofVziFocfo49L3OLw4/RxiVsclvRxiVscfoI+LnGLw0/SxyVucfgp+rjE
LQ636eMStzj8NH1c4haHn6GPS9zi8LP0cYlbHPKxY5ziHJe4xi3ucfg59nGK
c1ziGre4x+FD9nGKc1ziGre4x+Hn2ccpznGJa9ziHoc77OMU57jENW5xj8Nn
2McpznGJa9ziHodfYB+nOMclrnGLexw+yz5OcY5LXOMW9zis2McpznGJa9zi
HofPsY9TnOMS17jFPQ6/yD5OcY5LXOMW9zj8Evs4xTkucY1b3ONwl32c4hyX
uMYt7nH4ZfZxinNc4hq3uMfhV9jHKc5xiWvc4h6Hz7OPU5zjEte4xT0OxdgR
jnGCU5zhHBe4xBWucYNb3OEeDzj86tgRjnGCU5zhHBe4xBWucYNb3OEeDzj8
2tgRjnGCU5zhHBe4xBWucYNb3OEeDzj8+tgRjnGCU5zhHBe4xBWucYNb3OEe
DzjcGzvCMU5wijOc4wKXuMI1bnCLO9zjAYffGDvCMU5wijOc4wKXuMI1bnCL
O9zjAYffHDvCMU5wijOc4wKXuMI1bnCLO9zjAYffGjvCMU5wijOc4wKXuMI1
bnCLO9zjAYf12BGOcYJTnOEcF7jEFa5xg1vc4R4POPz22BGOcYJTnOEcF7jE
Fa5xg1vc4R4POHxh7AjHOMEpznCOC1ziCte4wS3ucI8HHH5n7AjHOMEpznCO
C1ziCte4wS3ucI8HHO6PHeEYJzjFGc5xgUtc4Ro3uMUd7vGAw++OHeEYJzjF
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
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]], 
            LineBox[CompressedData["
1:eJxd03+Y1PPex/EhOaviDGdjZKuhTVNtmmplDnv0Lns02DTVpqm2+tbu1mxt
7ezu7O5sliaFiTAUBos56maxmC5hDx1nOB0WYbjjDIqhMIfFcBaTfrjv+7p9
v9/PPvun69G717zmdX2uOXtZ3ezq4y0Wy0f9LZb/+/v//2SnPDn907X5T343
5bd/kOx639ERC3TnyVlzXlty6BTdVrnlHm/3nW98+5vz5eGix4tPvU23TZ4q
XDb6fq/uAmm/4HX3xlG67TLispMqHYe/+c3nyMhHX/nm13d1F8q448urtjyp
+1xpeu+Vt9feotshQ06/5vaFdbrHyF9P/q75izm6i8R/wcn571+o+zz5W/VF
i74Zodsp80c+FvzpFN0T5MynMy++dLjnN08U3yWlBwq/0j1JPvnx6j/98oHu
Yvmhffp4+xu6z5chqdP+Evyb7snSMWDwHZm47gtkWl60a95/6XbJm+k94+P3
6v6jvFDRb8LHEd0XymlDWt9/+0bdF8n4aaVfBNbpLpH3bhq2/cUW3X+S5y8c
8OiDft0Xy78qf/r7wJW6p0hjyeOv/FypW+Tcz6vumL/4N4dErOPu+9eo+fp9
qqzJhfMXlOv3qZK46/RrMzP1+zS5e1Lq2zeu0O/T5D77/n8dna7fL5EHak6f
FCzV75fIsekjWs6fqt9LZdaX3s3Oi/V7qbzw1/TLVRfp9z/LSxvffO1Nl37/
s3zWNvCRFZP1+6USu+oP8fOK9ful4plyxYbhE/X7dPm4rN/xFzj1+3R5aOLR
yxvO0+9uGX3I/8xbRfrdLTePuG7PZWP1+2UyxD7kik9H6/fLZNrIYbYtDv1+
uXTu/HnaolH6/XI5oXeF5eJz9fsVcv5nDzwyaaR+v0L+WBR5qqRQv5dJckCo
c94I/V4m2wr/MWPDOfp9hjz0fefCF8/W7zOk99aOZ36n23KlTPYGPYvt+v1K
mfFjtPil4fp9pizdt7ttvO7QTKm97c7yjmH63SMjhsrPY3SLR5Y/vPLJZ4fq
/98jl+y3vXO57oRHUrEnXv6iQM/Pksp+lh826ZZZcuO461KTdIdmyTtPBw8d
OEvPz5JrTpv66T26LbPlmuEPF87VLbPl+4VTtcG6Q7MlOjJzwYdD9PxsWbh/
xFXbdFvmSPvYnav8umWOfH/fkPFTdYfmyLAPz6sYbOTnyJ2Z55/uOVPPl8sP
zww7/IpuKRfHhl8Ob9MdKhf33Z9s2KA7US6vvnpiVbWRnysvVQ+qv8zIz5UJ
o3dcN97Iz5Wjzz/YeIaRnyv2GyaffZyRv0oeuHbuqh6bnr9KareML/5Ad+gq
6bl+uPaq7sRVkvpi3XvP6rbMk5VHr297xMjPk/1Lh0+5x8jPkzbbu3mbjfw8
8R174JV1Rt4rrRVfLA8Yea+cHbzygxoj75VPjjx+imbkvZI9qyd3lZGfL2dP
s9x8pZGfL2WXvtF1qZGfLwd7f98yxcjPF88n2gsuI79A1s47tW2ikV8gj68f
FS8y8gtku2/mzFFGfoHkHff2rHOM/EJJD7g6PtTIL5SfEp1VZxr5hXLRdJdv
sJFfKFNer3zmVCNfIdZLPrn0FCNfIdp/7zpjoJGvkLOeqhmRZ+QrJH/TI9X9
jfwi8bbe8OHxRn6RzC1fcq3FyC+SR1e+NePYGXp+kZz22JN/PqLbslg02+DK
X3TLYun/UNm2nO7QYpkw+d1+Pxv5xfLimFnX/Wjkl8hXnz1Y0Gvkl8j3T+9K
/mDkl8gf+r3R/r2RXyLpqHVd1shrkh35n6bvdNs1af3xx3XfGp+nSePrz933
jW5NkwkHs6/2GJ+vye2j6vsZjmlSsnLYjK+NPk3m7/9h21e605psvPPwiYYt
SyU7bl7Tv43+pbJ9Y/G3GaN/qUy89R2/YW2p5C5ee+RLo3+p3Be+MWI4tlTO
WLm4yHBiqQw/te7tL4z+pbJtYHGrYcsyGRqeMNqwfZns2db78edG/zLZ8c/T
7jWsLZMb+49eYDi0TJ64/6NhhmPLZPmK9748aPQvk9u1V3caTi+TSRf6rjds
qZRJ3zXON2yvlB3LHncalkpZ3H/vAMNapfjWP/flAaO/UtbWjnjVcKxS5vya
6TCcqJR73t232XC6UjbG3m8wbKmS/IE7Fhi2V8mS5ZeVGpYq2XPDuvGGtSr5
4o7zC8z+KmlMzRxg9lfJC9t3HvrM6K+SB4eXfWU4XSVzR1v2GbZUy9MX7nrL
sL1atk1f/bJhqZb3tx33nGGtWpb929dpOFQt4z7d8pDhWLXYVwfuMfur5aPG
oxGzv1q+fvOcTWb/cplZ/MF6s3+5lDlPv9rsXy7LByUDZv9yqXvl6Bqzf7lE
j7+7xuxfLmt+3VJl9i+Xrpu+WWL2LxfHz+0Lzf4V8tfT2ueZ/Stk79DP55j9
K2TgPxo8Zv8KWfN7mWH2r5DmVe7Lzf4VUr31xulm/wqZdNehUrP/fz//n/dO
M/t9cuyFFWL2++QSz6KLzX6frN8aLDH7ffJc8tkLzX6fnLVu8B/Nfp+0uu+4
wOz3yV7L2Mlmv09mbN9fbPbXSEl5xySzv0ZC5Zsmmv010u+kdRPM/hqp+c+N
TrO/RnriD403+2tkYe7N88z+Grk8mmc6XSOeplnjzP6VEgw/UmT2r5RX9p9k
WlZK6o6WsWb/Srn/ve/GmP0rZeKBetOxlfL3E4+ONvtXSnM0Yjq9Uh4/Mta0
ZZUceOgth9m/Smz9g6ZllXz18CjT2irpzd8/yuxfJecevNt0bJUU7phnOrFK
XhpeYDq9Sho+PHiu2V8rn9y+w7S9VpYfWW9aauXp9+aa1mpl8cdFpkO1ctdH
J5qO1crrdx0YafbXSvn+l02na8UV2m7aslo+mhM2bV8te8avMS2rJfTtXNPa
ailcPcV0aLXU3DzGdGy1zB57htK/Wk6e0F/pXy3d1/UWmv1rZEve56bta2Ri
5/umZY2cNP8109oa+fHwLtOhNTJ5ww7TsTUy++OHTSfWyHHH2k2n18jgvVuU
/jqpnnOz0l8nL9RtUPrrZPfQNqW/To7NblL66+SR/nVKf53sKKpR+uuk6++V
Sn+d9D67WOn3y+iBC0xb/fKXZ+Yq38cvI+OzTDv98nXvDOX7+eXeay837fGL
yz1d+b5+KZpRatrvl3Gbpirf3y9Tcxebjvjl2btKlD1+OXfphabjflla7lL2
+SW4erLppF+eerRY2euXa06cZDrrl03rJyj762W7zansr5fXXjtP2V8vZ2wZ
p+yvl7caipT99TJrxVhlf72cXTdG2V8v74dHK/vrZczTDmV/vWR6Rin76+U/
xYpj9XLJTecq++vlwNcjlf318p1XcbJe7kwWKvvr5dTZirP1Et83QtnfIP+s
U2xtkGcHKLY3yPed5yj7GyQ7V7E0yPn9FXsaZObzZyv7G+TtgGJ/g5QXKw41
SChnV/Y3yOGE4liDBG9RHG+QzkWKEw0ye4LiZIMU5SlON8ixT4cr+xsk8qJi
S6PsuF+xtVEmrFNsb5QDyxQ7GyXmViyNUupU7GmUx85UrDVK/ATF/kZxfT9M
2d8oYz5RHGmUmrcUxxrl4xcVxxulLq440Sgnb1OcbJSH7lKcbpSCmxVnG2VV
SLElIKFmxdaAXLFasT0gL1UpdgZkb4ViCUjrXMWegDx8pWItILPciv0BqZ+m
7g/I0RJ1f0C+vUDdH5A/TVL3B+TT89T9AXlvjLo/IPmj1P0BaR+h7g/IUru6
v0mqh6r7m+SBIer+JhloU/c3ySOD1f1NsvoP6v4mWXyqur9JAr9X9zfJEyer
+5vkpEHq/ibZMEDd3yS2k9T9TdL9O3V/k9x2orq/Ser6q/ubpPIEdX+TrOqn
7m+Wjcer+5vliePU/c2Ssaj7m2WcammWDb8OVfY3y4FjirVmuVK1v1l2H1Uc
apZLVUea5Z0jimPNUq063izHqU40y7bDipPNUqY63SyHflGcbZYnVVtaxKfa
2iIjVdtb5N+HFDtbZIdqaZE21Z4WmaFaa5Hhqv0t8mNO3d8ib6mOtMjjqmMt
skl1vEVqVSda5ErVyRYpVp1ukQLV2RY5QbUlKNmf1f1B2afaHpTXVTuD8oJq
Ccpjqj1BuU+1FpRbVfuDcp3qUFCaVEeCskp1LCia6nhQvKoTQZmlOhkUt+p0
UKaqzgblItWWVpncZ3+rTOizv1XG9tnfKqP67G+Vwj77W2Von/2tcmaf/a1y
ep/9rZLfZ3+rWPvsb5WBffa3ykl99rfKiX32t0r/Pvtb5YQ++1vluD7718qv
P6n718ox1fa1clS1c60cUS1r5ZBqz1r5SbW2VnpV++EQHIFjcBxOwEk4DWdh
y9V9bYXtsBMW2ANrsB8OwRE4BsfhBJyE03AWtrRhP2yHnbDAHliD/XAIjsAx
OA4n4CSchrOw5Rrsh+2wExbYA2uwHw7BETgGx+EEnITTcBa2XIv9sB12wgJ7
YA32wyE4AsfgOJyAk3AazsKWddgP22EnLLAH1mA/HIIjcAyOwwk4CafhLGwJ
9XUebIVtsB12wE7YBQvshj2wF9ZgH+yHg3AIDsMROArH4A44DnfBCbgbTsIp
OA1n4Cycgy3r8f6wFbbBdtgBO2EXLLAb9sBeWIN9sB8OwiE4DEfgKByDO+A4
3AUn4G44CafgNJyBs3AOtlyH94etsA22ww7YCbtggd2wB/bCGuyD/XAQDsFh
OAJH4RjcAcfhLjgBd8NJOAWn4QychXOwZQPeH7bCNtgOO2An7IIFdsMe2Atr
sA/2w0E4BIfhCByFY3AHHIe74ATcDSfhFJyGM3AWzsGWjXh/2ArbYDvsgJ2w
CxbYDXtgL6zBPtgPB+EQHIYjcBSOwR1wHO6CE3A3nIRTcBrOwFk4B1uux/vD
VtgG22EH7IRdsMBu2AN7YQ32wX44CIfgMByBo3AM7oDjcBecgLvhJJyC03AG
zsI52HID3h+2wjbYDjtgJ+yCBXbDHtgLa7AP9sNBOASH4QgchWNwBxyHu+AE
3A0n4RSchjNwFs7Blhvx/rAVtsF22AE7YRcssBv2wF5Yg32wHw7CITgMR+Ao
HIM74DjcBSfgbjgJp+A0nIGzcA62hPH+sBW2wXbYATthFyywG/bAXliDfbAf
DsIhOAxH4CgcgzvgONwFJ+BuOAmn4DScgbNwDrZswvvDVtgG22EH7IRdsMBu
2AN7YQ32wX44CIfgMByBo3AM7oDjcBecgLvhJJyC03AGzsI52HIT3h+2wjbY
DjtgJ+yCBXbDHtgLa7AP9sNBOASH4QgchWNwBxyHu+AE3A0n4RSchjNwFs7B
lpvx/rAVtsF22AE7YRcssBv2wF5Yg32wHw7CITgMR+AoHIM74DjcBSfgbjgJ
p+A0nIGzcA62bMb7w1bYBtthB+yEXbDAbtgDe2EN9sF+OAiH4DAcgaNwDO6A
43AXnIC74SScgtNwBs7COdhyC94ftsI22A47YCfsggV2wx7YC2uwD/bDQTgE
h+EIHIVjcAcch7vgBNwNJ+EUnIYzcBbOwZZb8f6wFbbBdtgBO2EXLLAb9sBe
WIN9sB8OwiE4DEfgKByDO+A43AUn4G44CafgNJyBs3AOttyG94etsA22ww7Y
Cbtggd2wB/bCGuyD/XAQDsFhOAJH4RjcAcfhLjgBd8NJOAWn4QychXOwJdLX
J8B58CDYCufDNrgAtsOFsAMugp1wMeyCS2CBS2E3XAZ74HLYC1fAGlwF++Ba
2A8H4CDcBofgjXAY3gxH4K1wFG6HY/B2uAPuhOPwTrgL3gUn4N1wN7wHTsJ7
4RS8D07DB+EM3ANn4V44Bx+BLbfj9w/nwYNgK5wP2+AC2A4Xwg64CHbCxbAL
LoEFLoXdcBnsgcthL1wBa3AV7INrYT8cgINwGxyCN8JheDMcgbfCUbgdjsHb
4Q64E47DO+EueBecgHfD3fAeOAnvhVPwPjgNH4QzcA+chXvhHHwEttyB3z+c
Bw+CrXA+bIMLYDtcCDvgItgJF8MuuAQWuBR2w2WwBy6HvXAFrMFVsA+uhf1w
AA7CbXAI3giH4c1wBN4KR+F2OAZvhzvgTjgO74S74F1wAt4Nd8N74CS8F07B
++A0fBDOwD1wFu6Fc/AR2LIFv384Dx4EW+F82AYXwHa4EHbARbATLoZdcAks
cCnshstgD1wOe+EKWIOrYB9cC/vhAByE2+AQvBEOw5vhCLwVjsLtcAzeDnfA
nXAc3gl3wbvgBLwb7ob3wEl4L5yC98Fp+CCcgXvgLNwL5+AjsGUrfv9wHjwI
tsL5sA0ugO1wIeyAi2AnXAy74BJY4FLYDZfBHrgc9sIVsAZXwT64FvbDATgI
t8EheCMchjfDEXgrHIXb4Ri8He6AO+E4vBPugnfBCXg33A3vgZPwXjgF74PT
8EE4A/fAWbgXzsFHYMud+P3DefAg2Arnwza4ALbDhbADLoKdcDHsgktggUth
N1wGe+By2AtXwBpcBfvgWtgPB+Ag3AaH4I1wGN4MR+CtcBRuh2PwdrgD7oTj
8E64C94FJ+DdcDe8B07Ce+EUvA9OwwfhDNwDZ+FeOAcfgS134fcP58GDYCuc
D9vgAtgOF8IOuAh2wsWwCy6BBS6F3XAZ7IHLYS9cAWtwFeyDa2E/HICDcBsc
gjfCYXgzHIG3wlG4HY7B2+EOuBOOwzvhLngXnIB3w93wHjgJ74VT8D44DR+E
M3APnIV74Rx8BLbcjd8/nAcPgq1wPmyDC2A7XAg74CLYCRfDLrgEFrgUdsNl
sAcuh71wBazBVbAPrjX9P16EaMQ=
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
            LineBox[CompressedData["
1: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
QLX51ufXblip2pKJCcOefU+1LRNP3X++SuufCeT/Uan1z0Ri2E231j8TwYox
i7X+mYhfV7dI65+JXXFzF2j9M3Fl0SCn1j8T+6Y8pWj9M1F0dWSx1j8LXT5Y
WKD1z0LDlmN5Wv8sHPUk5Wj9s1By8Gam1j8LDzTX2rT+WZhUvXiu1j8L7oKi
dK1/FtZOdKVq/bOw8OYqq9Y/C9PiD87U+mfh/JheKVr/LFw7uCBJ639rv81/
Z2j9s5B6xGHR+mfhg6Vdpmv9s3C2/46pWv9sdL6rJEHrn43Pnxs+Reufjde6
9Zis9c/GY9dbTdL6Z6O0X/OrWv9sKB2a47T+2djUrpVmWzaOv9F1otY/Gzvu
fzFW65+NZXekTdD6Z+Pw6ZXjtf7ZeHTiX69o/bNR/cOTmv3Z+OtwsVnrnw3f
4w3jtP7ZOD18oGZdDuoOrhqr9c9BVHmYZkMOxl57fYzWPwfD/mirGTnodnLx
aK1/Dt76sZNmSw6OvbR2lNY/B577B2lWcrDwxP6RWv8cpCzL1uzJwYkDnTR7
c1BU/NUIrf+t7zsuTbM/B+916ao5kIOaT/aYtP45eD0wX7MuF2sc0KzPRcrs
G8O1/rkw2r7SbMzFSJtTM3Lhe2mkZnMuzHs6aLbkIv7kHy9r/XPxVd56zUou
jk4p1ezOxeL88Zo9udi/6THN3lxEXLnxktY/F809GzT7c9Er8jPNgVwUnVqq
OZiLQ3FzNevyEDlprGZ9HqIO99NsyMOX+9prNuYhIfJKjNY/D0W7Dmk252H8
x9s1W/Lw07aPNNvysPJ8pWYlD52jSzW7b+XPT9XsyUPF7jjN3jyMuzNGsy8P
z3d9WrM/D2+FPqQ5kIdHd+s1B/PQ13yHZp0ds5deGKb1t+OmclSzwQ5XxAHN
RjvOT/pBM+zwPLVNs9mOEdWfarbY8d8312q22dGl3XuaFTvi71mm2W3HxpJF
mj125M5UNHvteHJrnmafHf9TME+z347G6lmaA3YM727RHLRjyLV4zbp8LOk9
Xuqfj4gNo6T++bjb9ZLUPx/VKwdL/fMxsc1AqX8+flkfJfXPx+m3+0n987Fw
2xNS/3xs79FL6p+Pg7UPSf3z8fjCblL/fPQu7yz1z0fJlgel/vk4EN5e6p+P
e1ffL/XPR8ike6X+Bah/JkTqX4Al0a2l/gVIn36n1L8AW2puDtX639pvf12z
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
J5Ot5HTN/wufIn71
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961]], 
            LineBox[CompressedData["
1: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
AZKtDkyMlGxzoC5Cst2BL16QrDT0e15ykQPLekn2OrAzXN7fgTY95P0dyOwm
7+/AvS7y/g6s7iTv78AMg7y/A+go7+9A31B5/4b3DvL+DsSFyPs7sPwxeX8H
LgXL+zsQ/ai8vwPbH5b3d2KgXt7fiRMPyfs7obSV93eiXxt5fyf+10re34nD
D8r7O/FVkLy/E6sekPd3YuX98v5OrG4p7+/E1y3k/Z346T55fyf+ai7v78Sz
sm1OzGwm7+/Eep28vxN37n0j7e/EG7K9Tnz2j+QSJ1rJLnUi43+Sy5y4eFey
z4mpssudOPW3ZL8TFtkVTlz5S3KVE9myq51oKzvQ8PP9KbnWiSjZdQ0/T73k
eicWyda5ECE7yIWLf0jWu1AiO8SFkbINLjwgO8yFH+5INrrgkh3hwuuy4UIr
2dEuHPldssmFFbLNLsySbWn4+WVbXXhQts2FU7cl2134Urbiwluyi1yIk+11
ob/sEhc6yC514c9b8v4unJDtc+Eb2eUurJTtd8Ehu8KFmbKrXBghu9qFF2QH
XOgou9aFINl1Ltz6Td7fhTOydW5Uyg5yY6tsvRtrZYe48b5sgxuFssPcyJJt
dMMqO8KNibLhxgjZ0W5AtsmNvrLNbnSXbXGjo2yrG8GybW60km13QydbceOP
m/L+bvwq2+vGRdklbvwiu9SN47LL3Dgk2+dGhexyN3bK9ruxTXaFG5tlV7nx
b9nVbqyTHXBjtexaNz6WXefGctn1DfvJ1nmwVHaQB4tl6z1YIDvEg0LZBg+c
ssM8KJBt9CBPdoQH2bLhQabsaA/SZJs8sMk2ezBHtsWDJNlWD2bJtnmQKNvu
wQzZigfxTfb3YHqT/T2Y1mR/D6Y02d+DSU3292BCk/09GN9kfw/GNdnfg9gm
+3swpsn+Hoxusr8HMU3298DUZH8PRjXZ34ORTfb3YEST/QsxvMn+hRjWZP9C
vNFk/0IMbbJ/IaKb7F+IIU32L8TgJvsX4vUm+xciqsn+hRjUZP9CDGyyfyFe
a7I/2Uq2ke1khVxE9pJLyKXkMrKPXE72kyvIVeRqcoBcS64j15N1bzZ1EFlP
DiEbyGFkIzmCDHI02UQ2ky1kK9lGtpMVchHZSy4hl5LLyD5yOdlPriBXkavJ
AXItuY5cT9YV0f5kPTmEbCCHkY3kCDLI0WQT2Uy2kK1kG9lOVshFZC+5hFxK
LiP7yOVkP7mCXEWuJgfIteQ6cj1Z9xbtT9aTQ8gGchjZSI4ggxxNNpHNZAvZ
SraR7WSFXET2kkvIpeQyso9cTvaTK8hV5GpygFxLriPXk3ULaH+ynhxCNpDD
yEZyBBnkaLKJbCZbyFayjWwnK+QispdcQi4ll5F95HKyn1xBriJXkwPkWnId
uZ6se5v2J+vJIWQDOYxsJEeQQY4mm8hmsoVsJdvIdrJCLiJ7ySXkUnIZ2Ucu
J/vJFeQqcjU5QK4l15HrybqFtD9ZTw4hG8hhZCM5ggxyNNlENpMtZCvZRraT
FXIR2UsuIZeSy8g+cjnZT64gV5GryQFyLbmOXE/WLaL9yXpyCNlADiMbyRFk
kKPJJrKZbCFbyTaynayQi8hecgm5lFxG9pHLyX5yBbmKXE0OkGvJdeR6sm4x
7U/Wk0PIBnIY2UiOIIMcTTaRzWQL2Uq2ke1khVxE9pJLyKXkMrKPXE72kyvI
VeRqcoBcS64j15N1S2h/sp4cQjaQw8hGcgQZ5GiyiWwmW8hWso1sJyvkIrKX
XEIuJZeRfeRysp9cQa4iV5MD5FpyHbmerPM2dQtyELkNWU8OJoeQQ8kGchdy
GDmcbCT3JUeQI8kgR5GjycPJJnIs2UyeTLaQE8hWcjLZRk4n28l5ZIXsJheR
F5K95GJyCXkFuZS8mlxG3kD2kTeRy8nbyX7yLnIFuZJcRT5KriafIgfINeRa
8jVyHfk2uZ58l6x7hz7/5CByG7KeHEwOIYeSDeQu5DByONlI7kuOIEeSQY4i
R5OHk03kWLKZPJlsISeQreRkso2cTraT88gK2U0uIi8ke8nF5BLyCnIpeTW5
jLyB7CNvIpeTt5P95F3kCnIluYp8lFxNPkUOkGvIteRr5DrybXI9+S5Zt5Q+
/+QgchuynhxMDiGHkg3kLuQwcjjZSO5LjiBHkkGOIkeTh5NN5FiymTyZbCEn
kK3kZLKNnE62k/PICtlNLiIvJHvJxeQS8gpyKXk1uYy8gewjbyKXk7eT/eRd
5ApyJbmKfJRcTT5FDpBryLXka+Q68m1yPfkuWfcuff7JQeQ2ZD05mBxCDiUb
yF3IYeRwspHclxxBjiSDHEWOJg8nm8ixZDN5MtlCTiBbyclkGzmdbCfnkRWy
m1xEXkj2kovJJeQV5FLyanIZeQPZR95ELidvJ/vJu8gV5EpyFfkouZp8ihwg
15BrydfIdeTb5HryXbKumD7/5CByG7KeHEwOIYeSDeQu5DByONlI7kuOIEeS
QY4iR5OHk03kWLKZPJlsISeQreRkso2cTraT88gK2U0uIi8ke8nF5BLyCnIp
eTW5jLyB7CNvIpeTt5P95F3kCnIluYp8lFxNPkUOkGvIteRr5DrybXI9+S5Z
9x59/slB5DZkPTmYHEIOJRvIXchh5HCykdyXHEGOJIMcRY4mDyebyLFkM3ky
2UJOIFvJyWQbOZ1sJ+eRFbKbXEReSPaSi8kl5BXkUvJqchl5A9lH3kQuJ28n
+8m7yBXkSnIV+Si5mnyKHCDXkGvJ18h15NvkevJdsu59+vyTg8htyHpyMDmE
HEo2kLuQw8jhZCO5LzmCHEkGOYocTR5ONpFjyWbyZLKFnEC2kpPJNnI62U7O
IytkN7mIvJDsJReTS8gryKXk1eQy8gayj7yJXE7eTvaTd5EryJXkKvJRcjX5
FDlAriHXkq+R68i3yfXku2TdMvr8k4PIbch6cjA5hBxKNpC7kMPI4WQjuS85
ghxJBjmKHE0eTjaRY8lm8mSyhZxAtpKTNf8f+9k+ig==
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 
              0.49019607843137253`]], 
            LineBox[CompressedData["
1:eJxd1nl4TGfjPvDRTZQyikqLmlratNWK0or9tgdBECQEI4mIiJjsk8hykplM
xtqpWmIfSwmCoUGq+nbeUk3RiqLiaxu1NPZoqVTRn9/1znPOk9s/rk+OM/fc
576eE29FzBw55TmdTnf2RZ3u///9vz9VvbYPvJTRePvdXt4fIOzCzYh7v9zx
2geP6yx0/F/1ba/1KO1zcNpDg3BjGFtZBk8IuuW1L6ZN3plVO/Om182xvt6v
fsddN7w2YKphz/yEm9e9boWi6qTNGe2E26Bq42+3wpIrvX4bO/uFLxt34Hev
/fD1Hw+7bn5d+D10nFDr27Fp17xuh0vOWl9PPnfV6w+hPz13kStQ2B83h60Z
3XL/Fa87IK3P7/rsT4Q/QpdPfj+8aO9lrztiX+HQ6217CXfCh/qmHaqO/ub1
x3ipSz2jyyj8CcZvnjuz1aNLXnfG8omxC55bJhyA1pM3X3ilh3AXnD004Lnn
r3m87ooGb/2qrPtcuBtecD55ZUd/4e444Nto5tmHF73ugdslr9YKihPuiZs9
dp/tW3nB614YGxDYIHy6MLB43atffPTg/P+sAKdvfpofm++1rjdODLkzemsz
cb03Pg7LGr527znv9T64c/rNRk9CvVb6YHydERlJ/571Xu8L5anP1G+2eK30
hWHMwM+XjhPX+6FRp9cmf1dfXO+HW1+attb64f+81/tj9+WZhc0tXiv9cbj/
k7jzfcT1Afig88cRDV8S1weg1XOfZ9qPnvFeH4g63/8Z1WSJ18pApBxL6js/
QlwPxLEnrVb+0EFcD8TSKQUfrH5eXB8En2uXym+drvBeH4T//bzKe30wjo/e
/Of4UO95UQbj9aItlsBd4rwMQdCct/Y0re+1MgQjgobqXo8T5yUIxa6hbxYe
9Z4XJQjL69XxOddenJ+hGLvtVL23l3jPjzIU1yZUNN/5rzg/w/C738v9dsZ5
rQzD0ksnxo46L87PcIxbMfPU/hFeK8Ox7siTW3UPi/MUjPPDF385doDXCEY9
n0UprkPe86QEw/RH/VaGIV67g7HiXnjZlhPifI1A3sLObw03eo0R2JHmalH7
nvd8KSNQ9l6rtLJ8r90jsKvkk+75b4rzNxKDjS+Htvvae94wEmW5gQ23jPda
GYmRtrM5lf96z5t7JMYcnlJ9bJM4f6NQdvzjGQNHeY1R6FBUdrDTc14ro/D6
kY5vZ5V4z6N7FN55rOv+Yqw4nyHQbW0bv7OV1whBnbrHG0Vf8J5HJQRri39Z
VXuV1+4QzIscty9jojivo/F5yZHEDa28xmgsOxzSL/a693wqoxGXdavjrl1e
u0fDOGbohYhscX7HoEdeijUyyGuMQYOTbZusbC7uH4P9ecum3jjvPc/uMXiy
cVaGyybO91gUNmuyeGJHrzEWDVcsiDp82Xu+lbHYOOmR/shSr91jYWv2fLcu
w8X5D8XIVmUP79TxGqEwxXY78sMP4ryHYsyAwWuddq/dobBMbnBobJB4P4Rh
an7f80df9RphuH/kjTOes+J9EIaC+rurUjZ57Q6DI6HPkpkp4v0xDouPPIzb
1d9rjENh5xs92/iK+8fhWvDVP7be8r4f3ONwPCgor8MB8f4Yj99GNbq7aoXX
GI92+nNdzqaI98l47BvVM/TkCHH/eGy53/f9lPbi/nCcSW+RukW8fxCO1240
OjX5rnifhCOzel/J7ONeu8PxybkpgxruFu+fCTCN89gql3mNCZh5Kc5Xp4j7
JyC4tk/YoKni/gmoHHRvyJ7h4v6J6DXPvLhLF3H/RERmN0g+1FrcPxEhZ1d9
FdxA3D8Rkzo1/f7oP+L9NAlzTwdntr/uNSZhWM/XBsSfFu+zSbgfmvFCziGv
3ZPQ9O/IBqF7xP1GPHGMal+10WuDERdTjIU9C8XnGTH22PSrXed4bTRi2YSC
RuczxecbYeqzIKuFyWunEfFPbp++HynyjOj8y6p24aFee4zYfrrP6aChIn8y
nq/OznX3EfmTUdpxWsudASJ/MlZbP7jl217kT0anH3+J/qOtyH/279u1HR7Q
QuRPRui8A+uuNhb5k9EhetjyB/VE/mT0uLlnY+SLIj8CjjPF8e8/9b7fDRFY
Uv7u0cCHXiMCrc/7Ht5b5bUxAo1rv74u+Yb4fRCB5/aE7Zt1xWtnBB789On6
Hy947Y7AaNNzTcef8doTAb/Q7ffbnfRaF4lJJ7J7dz8m8iPRc8qKtrbDIj8S
V9/58UbtQyI/Et/Uu/joP/8V+ZE40iboQtE3Ij8SDVvv6HrgK5EficOjso/X
3SPyI7FryLfZyi6RH4Vdy3/q3HKHyI/Cw5PtX762VeRH4dWhGW+cKBL5UTjj
6bn+yhciPwr7e9e577te5Efh13emmuKdIj8Kxqv/LLi8SuRHIezX1RWpK0T+
FFR9YP397WUifwr+LpoZ/ccSkT8FtXdVNahYJPKn4LJ907ZfF4r8KWj+wudN
bztE/hQ0sUd3fONTkT8FKSd+/zN8vsifgn79Q0JL5or8aDTq/9P0lnNEfjSy
0o/0W2UX+dFon1X4wgcFIj8abQ/9/OtP+SI/GqNSL1ZlW0V+NHqXr/qsl0Xk
R6PDK+W6BnkiPxqfjv5+wS1F5E/Fe2uqPj+dI/Kn4tPOdtOxbJE/FekH3p13
IkvkT8Wh7LzRlzNF/lQcm/NP76ezRP5UjGwW+1NrYfdUdA05kD4qQ+RPxTfF
J36ely7yY9Br+99hx8wiPwZDfr+87Q1hxODorRER8WkiPwZJ/SsaHU4V+TE4
3HxT5AfCzhi0XTXq4dIUkR+DBsfXm+sIe2Iw6E744txkkT8Np283+vffJJE/
DZdH66ZbhTEN5mbHP6svbJyGsRZL+9WJIn8aet7o9nxHYec0vDXRcOxogsif
hh//6BQ6XdgzDRO/6RJdX1gXiyGRcw7sNon8WPz87r/dJwsjFknJx9bqhY2x
SFibcuDATJEfiwMdF6VkCDtjYet2bn4nYXcsPLfvX74XL/JjETsxasQuYd10
bAxK35kibJiO8uqPL3UTxnQc+LPbty8IG6dj0oXS98tniPzpGPVKiM9qYed0
lL7UIiBe2D0dsccy1kDYMx3mp83aNBHWxWHO/N+Lb8aJ/DjET7jz1kFhxCEn
ekLcamFjHG7PM6VmCCtxGNQw+v1QYWcc3lySmNZZ2B2HbV/uHugr7IlD50bt
5zyaLvJnwF635IMLwoYZ+Kn06lsHhDEDj2a/M3azsHEGRvRc8h+HsDIDPw/9
d1C6sHMGFu6tuBkh7J6B2R26LB0q7Hn2+SXlvbqo+fFIjbh0pq2aH49D+wPG
NVLz47Hf/909tdT8eEy+ZblcFSvy4/Hx04UVHmFnPCL2NZp3XNgdj8SIDg++
E/bEI6meUne3sG4mnIceHtokbJiJ0vt3W64QxkyEXXmjwafCxpk4uTh3vkXN
n4l6e3MWmdX8majz87ct4tX8mWjwWefWUWr+TPjGtlkzTs03YWdrn3kjhPUm
DPvmiyuB6vcxPft99HQ9hP1NmL1k2PcB6vcz4d/Quv06CAebcH/txWbvqd/X
hEYnNwe2FjaZUBmefqi5+v1N+DJ+3mevCTtM6H5q6Ea92seEyCsja9UVdpnQ
OydszYtqPxO2fjIgSydcbkKD7FaF/0wTfU1Y9uCN238JV5mwviwr/Q9hXQLy
W37V9Y6wPgHn14d9eEPYkIDY1+qMvCbsn4BvH8xb/5swEnC70/eGi8LBCTDX
2vrDWWFjAs4tHb6kQtiUgAdtz845JawkYP2+uet/EXYkoGGfkgvHhJ0J8Fnw
ddefhF0J+Gpasz2Hhd0JsJROGl4mXJ6ANmvavnhI7Z+Ay3ve+PWA2j8BXQY/
dv9X7Z8I+/IlB79V+yfC/OHBi9+o/RMxz29Gw/1q/0QUfmEL3af2T4Sr1asl
pWr/RPS40bz1XrV/Iq4UfLtht9o/ETf6tAgoUfsn4sjqyHO71P6J2HvpR8dO
tX8ivnI6Qlxq/0R0GFHrnR1q/0RkXpxRe7vaPxEJg/0fFKv9E7Gw75a7W9X+
idh8ot9fW9T+SVj/vMlHtT4JibPXtd2s9k/CCXPY0CK1fxL2PGyas0ntn4QP
/4ret1Htn4Td108+/ULt/+zz5z4YotqUhK3LJ6/doPZPQt81e56uV/sn4ciu
JZGqnUkIG1R0bJ3aPwk+Txf3Ue1Owo7J9fevVfsn4eyRA91Ue5Lw9IO4/zrV
/knYVukOUq1LxoV12efXqP2T8WLrKUmqDcl4/r3O9VX7J+PH4fu2rVb7J+OL
S3tGqA5ORpPvHv69Su2fjDaDB29UbUrGu+2yx6hWknF17JSXVTuScfviif+u
VPsnY7hnTaZqVzIiotd2Ve1ORmnYrn9WqP2T0TJ6+7eqPcnYfC3RproqGduP
XxiuWpeCvV/80ky1PgXBY/1vLFf7p2BHr7P7VPun4P16pfNVIwWp24sjVAen
YOFQZxfVxhSkd571qmpTCkwn3r69TO2fgieL5v+o2pGCpLvLN6l2psB3cLcC
1a4UnLw/Pka1OwXTWtwcrLo8BX7fn/5QtScFb+1t2Fh1VQp+zJ79qFDtn4pX
Jvn/plqfihODqg+rNqTizOkTJar9U/EIe9aoRip+Cvl8rurgVKxKmmRWbUzF
roIG0apNqbjxtDBEtZKKtQfv9VXtSMWFbvpOqp2pONTlZhvVrlSM0mW8ptqd
igFdSnxUl6ci7N5n/yxV+6di4+d176quSkXg1dcvq9aloX2tPadV69PQJuTM
UdWGNDwpzPpOtX8adKdWlqpGGuJDOuxQHZyGrps+3qjamIbLqzasUm1Kg3lA
+mLVShr2X98+X7UjDXE+vW2qnWnYEvp+jmpXGnIOTDOrdqchL6I6QXV5GpZk
nZiu9U/DQfvDKVr/NHRoNdmo9TfDT//KeK2/GT17VY/W+psx191yhNbfjEc/
KEFafzO2bPEN1PqbEX3+Sl+tvxnv/flbL62/Ge4V+u5a/2f/ft30AK3/s7xb
9zpp/c1YZl7bQetvxo/h5g+1/mbUPZT8vtbfjOq/Fvlp/c0oH3C6rdbfDKuh
a2utfzrKa+03aP3TEZox/k2tfzpOvde0udY/HYMP3n5d65+OvrUvNNX6p6P5
gWtNtP7pGHHqpcZa/3Sc8evxqtY/Hcpuu17rn44xOZX1tf7p8F0y/hWtfzo2
Nb5UV+uf/qyP+WWtfzpGXW9ZR+ufjslFp2tr/dPh71z9ktY/A/WbJ7+o9c/A
5pljX9D6Z2DbXwOf1/pnILJx/+e0/hkY33FYLa1/Bl79PkKn9c+As3fev0vU
/hmY/k7xU9VKBs4+uvhEtSMDTQa00OzMwJeFkY9VuzJgK9j1j2p3BsYW19Fc
noHtX8Q8Uu3JwJLXjv2tuioDcRu7a9bNwkbdzmrV+lkoOvm+ZsMsLDxV/FC1
/yw02ddRM2YhsLv7L9XBs5Dz+kjNxll459XrD7T+s+C8btWszIJvdFvNjlmY
EXz4vtZ/Fl5OTtLsmvXs/0sGze5ZuOg8/qfWfxa2Bdk0e2bhq9SemqtmYe6D
v//Q+mdi2dpSzfpMvD86Q7MhE0G3emr2z4Sr30uakYn1Pcrvaf0z8WDvSs3G
TFQunq7ZlImWX3fXrGRiQT29ZkcmYk1Xq7T+mWj2837Nrky0q79EszsTPd9I
0Fyeicfnhmr2ZKJBn3aaqzLR8JN6mnVZyNt4+67WPwv/yS3XbMjCH3tKNPtn
odEnyzUjCyfvKpqDs7DmVIxmYxZmnxmh2ZSFYXe6aVayEFj7Hc2OLET5NtLs
zEKr13SaXVmwP7h9R+ufhZbF5zSXZ+F2+6OaPVmIT9uvuSoLC9K3adZlY9MH
azTrs5E29zPNhmy0nGvV7P/Mbc2akY1hI+M0B2fjTN3Jmo3Z6DFkjGZTNga8
HKRZyYZP3z6aHdm4eDdAszMbMXX9Nbuyked4R+qfjYEZLaX+2ah3sKnUPxsT
puml/tl4PKWO1D8H53Y/J/XPwVujH9/W+uegBf7S7J+DoKQqzcjBmJs3NAfn
oM4XVzUbcxC2yqPZlAPj8bOalRyE9jyt2ZGD1Zd+0ezMwbbSnzW7cvDmfw9r
dudgU/UhzeU58J1wQLMnBxNufau5KgfpG/Zr1imwW77S7KPg64I9mvUKwnZ8
qdlXwX+qXdLzeXY9YrtmPwVbb2yVnpeCQMdmzQEKTo7YJD0/BS98+IXmQAUr
Wq+XnqeC6R3Wag5VMHrMGun5Khj42SrNMQq6XVohPW8FAf2XazYrCN5fKD1/
BWv7L9VsVzDSs1jaQ8GiuYs0FypYP+BzaR8FB/ULNRcp6HvdIe2lIPXYp5pL
nz3f7xZI+z27/t18zWUKGv08T9pTwYtX52quUHDoJckeBac+mqO5UkFpzGxp
bwWPNtk1VytoV1Ug7Z+LK5Dsk4tvltmk/XMx5lG+tH8uQiIkG3Ix8bhV2j8X
bw2U7J+LoQcs0v65WNJfMnJR8lOetH8uJo+XHJyL8Xdypf1zEWmTbMxFj9aS
Y3LhOqhI++fCFivZnIs5jSUruZj7XY60fy7CkiU7clH2ruTCXBT/li3tn4tz
qyUX5aLDRMmuZ/kGyaW52Hs1S9o/F+u2SS7LxTtmyeW5eLu/5IpcWBpL9jx7
3tcypf1zce0ryVW5KP1UcnUucqZK1uWhdW/JPnlY0FyyPg/Ff8+S9s9DTIVk
Qx52lEr2y0P8csn+eVicJTkgD69GSEYefh0oOTAPxz+UHJyHB69JDs1DJ51k
Yx5yb2RI++eh/JRkUx6afCfZnId+OyQreRi5SrI9Dx/Pk+zIw5VZkgvzEBIn
2ZmHrAmSi/IwZrhkVx5O95ZcmofqTpLdedjlJ7ksD0+bSy7Pw6mGkivy4F9b
sicPdZ6kS/vnYfyfkqvyYLghufpZ30uSdRbcrpDsY8Gtcsl6Cwb/KNnXgue+
k2ywoOHXkv0sSCyR7G9Bq+2SAyxoUSQZFkxaJznQgqsrJQdbULxUcqgFOxdK
Nlpwb77kGAtiZ0s2WeCbL9lswSNFsmLBK1mS7RYMS5fssGB/iuRCC0ISJTst
aDJTcpEFj6dLdlngM01yqQWdoyW7LSiIlFxmwUOj5HILbBMlV1jwUbhkjwV/
h8n7W3B2rLy/Bb+Olve34PooeX8rGo2U97diVLC8vxWbhsn7W9FgqLy/FXOG
yPtb0XSwvL8VuwPl/a2IGijvb0WrAfL+VtztJ+9vxZG+8v5WlPSR97diS295
fyuKIe9vxb5e8v5WnOgp72/Fwx7y/la0le2wYkJ3eX8rVneT97eisqu8vxXd
ZLusWNJF3t+K6gB5fysiZJc9+36d5f2tGCy7woqyT+T9rQiSXWnFqY/l/Z89
b9nVz/I7yfvn4zPZPvloL1ufj186yvvnI122IR9tZPvl48RH8v75sMkOyEd3
2cjHgw7y/vnYJTs4H4myQ/PxsWxjPv7xl/fPx0HZpnx8Ktucj3DZSj7aybbn
42l7ef9n/WUX5qNItjMfiuyifIyT7crHJ7JL89FItjsff3wo7/8sT3Z5Pkpk
V+RjqWxPPjJlV+YjQnZVPgbJrs7HR7J1NjSX7WPDS7L1Ntz7QN7fhvOyDTYc
ke1nw1ey/W0okh1gQ6Fs2DBbdqANGbKDbYiTHWrDJNlGG0bKjrFhgGyTDV1l
m21oL1uxoa1suw3NZDtsaCi70AYf2U4b/m0n72/DX7JdNtyRXWrD77LdNnhk
l9lwRna5Db/IrrDhqGyPDYdkV9rgll1lwz7Z1Tbslq0rgEu2TwG2ytYXYJNs
3wKsl20owBrZfgVYIdu/AEtlBxRgkWwU4DPZgQVYIDu4AHNlhxbALttYgHzZ
MQXIk20qQI5scwEyZSsFyJBtL4BZtqMAqbILC5As21mAxBr7F8BUY/8CxNfY
vwBxNfYvQGyN/Qswrcb+BYipsX8BptbYvwDRNfYvwJQa+xcgqsb+BYissb8d
ETX2t2Nyjf3tMNbY345JNfa3Y2KN/e2YUGN/O8Jr7G/H+Br72zGuxv52hNXY
347QGvvbMbbG/uQYsolsJitkO9lBLiQ7yUVkF7mU7CaXkcvJFWQPuZJcRa4m
62bXtA9ZT/YlG8h+ZH9yABnkQHIwOZRsJMeQTWQzWSHbyQ5yIdlJLiK7yKVk
N7mMXE6uIHvIleQqcjVZN4f2J+vJvmQD2Y/sTw4ggxxIDiaHko3kGLKJbCYr
ZDvZQS4kO8lFZBe5lOwml5HLyRVkD7mSXEWuJuvm0v5kPdmXbCD7kf3JAWSQ
A8nB5FCykRxDNpHNZIVsJzvIhWQnuYjsIpeS3eQycjm5guwhV5KryNVk3Tza
n6wn+5INZD+yPzmADHIgOZgcSjaSY8gmspmskO1kB7mQ7CQXkV3kUrKbXEYu
J1eQPeRKchW5mqybT/uT9WRfsoHsR/YnB5BBDiQHk0PJRnIM2UQ2kxWynewg
F5Kd5CKyi1xKdpPLyOXkCrKHXEmuIleTdQtof7Ke7Es2kP3I/uQAMsiB5GBy
KNlIjiGbyGayQraTHeRCspNcRHaRS8luchm5nFxB9pAryVXkarLuU9qfrCf7
kg1kP7I/OYAMciA5mBxKNpJjyCaymayQ7WQHuZDsJBeRXeRSsptcRi4nV5A9
5EpyFbmarHPU9AtkH3I9sp7cmOxLbk42kNuQ/cjtyP7kTuQAcncyyP3IgeQg
cjA5hBxKDicbyVHkGHIc2UROJpvJmWSFbCXbyfPIDvIiciF5JdlJ3kAuIheT
XeQScil5P9lNPkguIx8ll5NPkivI58ge8hVyJfkWuYp8n1xNfkzWfUbnn+xD
rkfWkxuTfcnNyQZyG7IfuR3Zn9yJHEDuTga5HzmQHEQOJoeQQ8nhZCM5ihxD
jiObyMlkMzmTrJCtZDt5HtlBXkQuJK8kO8kbyEXkYrKLXEIuJe8nu8kHyWXk
o+Ry8klyBfkc2UO+Qq4k3yJXke+Tq8mPybqFdP7JPuR6ZD25MdmX3JxsILch
+5Hbkf3JncgB5O5kkPuRA8lB5GByCDmUHE42kqPIMeQ4somcTDaTM8kK2Uq2
k+eRHeRF5ELySrKTvIFcRC4mu8gl5FLyfrKbfJBcRj5KLiefJFeQz5E95Cvk
SvItchX5Prma/Jis+5zOP9mHXI+sJzcm+5Kbkw3kNmQ/cjuyP7kTOYDcnQxy
P3IgOYgcTA4hh5LDyUZyFDmGHEc2kZPJZnImWSFbyXbyPLKDvIhcSF5JdpI3
kIvIxWQXuYRcSt5PdpMPksvIR8nl5JPkCvI5sod8hVxJvkWuIt8nV5Mfk3WL
6PyTfcj1yHpyY7IvuTnZQG5D9iO3I/uTO5EDyN3JIPcjB5KDyMHkEHIoOZxs
JEeRY8hxZBM5mWwmZ5IVspVsJ88jO8iLyIXklWQneQO5iFxMdpFLyKXk/WQ3
+SC5jHyUXE4+Sa4gnyN7yFfIleRb5CryfXI1+TFZt5jOP9mHXI+sJzcm+5Kb
kw3kNmQ/cjuyP7kTOYDcnQxyP3IgOYgcTA4hh5LDyUZyFDmGHEc2kZPJZnIm
WSFbyXbyPLKDvIhcSF5JdpI3kIvIxWQXuYRcSt5PdpMPksvIR8nl5JPkCvI5
sod8hVxJvkWuIt8nV5Mfk3VL6PyTfcj1yHpyY7IvuTnZQG5D9iO3I/uTO5ED
yN3JIPcjB5KDyMHkEHIoOZxsJEeRY8hxZBM5mWwmZ5IVspVsJ88jO8iLyIXk
lWQneQO5iFxMdpFLyKXk/WQ3+SC5jHyUXE4+Sa4gnyN7yFfIleRb5CryfXI1
+TFZt5TOP9mHXI+sJzcm+5Kbkw3kNmQ/cjuyP7kTOYDcnQxyP3IgOYgcTA4h
h5LDyUZyFDmGHKf5/wGvWil/
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
aLNknJ3079zCh+w/GWH1PkMu0HbJGHrnxPwp9ew/GU/En6Yeoj2TsT/C8Ouw
R+w/GX7fUoM20yHJ+LqiZ3m3x+xfMd/j1Y0kOjkZpR46hb9pYTIe7Dpr7tvA
/pMR1/dryQs6PxnlGpeb7J+wf8W+iiXPrtHFybDyOLB7xlP2n4z6SW+Nj9AV
yVizdkia3jP2n4zug733bKKrk3EqtV7c+Tn7VzyvSDGNoRuSkfA4ufwT3ZwM
038tbVa9YP/JmGFQ17WO/p6MkVE2L+c1sv8U+LwPTy2jVVNgkOD2ZWQT+0/B
vMmD9fNo7RRYqtbodWlm/ymIrBd8iKb1UlC9a158C22QglfmM564vGT/Kei7
N1K1hkYK3Ldr/sQr9p+CVWo6R4tpqxR4Hyycovua/adgndutjCzaJQXfX+4v
/Et7pmBWm8XCdW/YfwoGe92c8ZAOSYH6g9mnzd+y/xS0/+9M2+N0cgrKUpy0
h71j/4rv02fEVymdk4IHS2dtUX7P/lMQc/dEdx+6IAWLxu62rqeLU3DrZ9/l
5i3sPwX9jxuPP0ZXpODuJ6V7gz6w/xToj8iZK6SrU3D9XpfY33RdCpQDI5M9
P7L/FCR7fXWopZtTsFtf+GP6J/afAj1NF7e99PcU2CSHb+r5mf2n4mPDt7wY
WjUVs/1eeb+hNVLRKc2zo+0X9p+K2ICkgEpaNxVL/Jz2jPjK/lOx98zvfTLa
IBW6eZER/2iTVFRO+Ky9+hv7T0XnU4GxN2mzVHxZonV88nf2n4rawe9O7qDt
UhEwp0tmpx/sPxVqN7NGBtGeqRh3Lz7nEe2Tip8ebW7O+cn+U3ExXvfeflqQ
Cm+DD0U9f7H/VAxZlWoVRQtTEd/nv8oXdE6q4v+xrvln+Zv9pyKs/H7HErog
Ff0iPRp7/2H/ivdlNyQrhi5NRfcRw9s10xWpyK5Ksljwl/2nYtS/JctL6OpU
WGQXzOj9j/2n4pS19GM03ZCK7R9G+b2gm1OxXi+1wlzpWWv/qXhReKr+AP09
FX0G1l/S/K/VSmnwn/AnPpRWTUN+qlGXR7RGGrYcFXnOVG61dhqOW40R7aJ1
0xDb3D9FrU2r9dJwp32IlTdtkIY6I8umGtokDR+biuePU2k10lC75URcDm2W
Bt9rkSm/aKs0/KvvvHxZ21bbpeGbSaxKJe2Shq54EzqoXas90zB74YryBNon
DVdOfqltokPS0OPeqRPz2rdakIbb76757KWT0/Bl5qRv6qqtFqZhk6bWAm86
Jw1DNocE3qDz0zBcw3+dQYdWF6QhcFPv8SK6OA3qHnE3PtClaRgmq5y4WK3V
FWkwnPky4BBdlYbL8Z1junVsdXUazq6bvcyPrktDf9Vt6jfphjRo2JukG6q3
ujkNP5br1AvpljR49nT9957+noY+Pn0/LejE/tPx28G1tIhWTceActOF6p3Z
fzouR9UdW0Nrp8MlyPBjFa2bjuCIlX+HdmH/ir9fEfswnjZIx+QPW9Of0ibp
qH1/uzM02H86zuoYrdxMm6Ur/vv4cspP2iodvZ4cjLXtyv7TIbn3e34J7ZKO
5DOnX2t0Y//puDe1o9M62icdSU1f8i7RIek4vERcMqQ7+09Hnvbn3Bg6OR0F
J0bb1dPCdFhVLGk00WT/6TAqiJgrpfPT0f710fD3dEE6dv7SijPvwf4V73fO
YeeddKkij3FuR6We7D8dAwc3pjvQVemw9dvxpISuTke3gFcdumix/3ScD7nS
djXdkI6flxxun6Gb07Fo794QHW32n454h5r3gfT3dKzo8njSDVopA1d/Ndnr
9WL/GSi3+GcZQ2tkYN4QE837tHYG0gp2HjDqzf4zcPK9Q/80Wi8DQ7usXfmM
NsjAkB4vwyf3Yf8ZGKbW7CmhkYGiljD917RZBszOl1TM1GH/GciNKhixkbbL
gGOn1Ws/0C6Kv3fqIDDry/4zMMEqd/UW2icDalXGel/pkAwcyn1RZtmP/Wdg
9NbKwdvp5AxkbHvg+oMWZuCVx5yghf3Zfwa8D2ku30nnZ8Bqqn3fX3RBBm6d
GnrQSpf9Z2Dus6zeu+jSDLS33W3/i67IQPjJaG+rAew/Az0PjrDfSVdnwPbq
qV4/6boMXNxiVrxgIPvPwO+jj3S2080ZkGSLl3+jWxTvozIoxGIQ+1e8z6LN
HltopUxEVfca9YlWzcSO7D9Vcwaz/0w0rHGcvJHWzoTavtnxb2ndTLQ7dn07
hrD/TJQ/Ud0ooQ0yMSKinUcjbZKJOdX31CYOZf+Z6DlQlpBGm2Wi4ID53Xra
KhOaB9WVDIax/0yE2L39F0O7ZOJHzd87t2jPTFyYZZ0wRI/9Kz7/+m+1YDok
E0PSOnlW0YJMTMrKzu01nP1nYmvzvoI1tDATB7YsTy+jczJRcbRyrro++8/E
BP0X953ogkwIWh7MLqKLM9Hp57HkP3RpJuwM07bPH8H+M/E0zEO+ma7KhPGR
ZSve0tWZeFQaqzJ1JPv/X/4X0el0g+L7uuTcekA3Z0Ipp+if/ij2n4lZ5eNV
wujvmRggmv2kilbKgu2Z13Kt0ew/C3v/mzxkFa2RhdffTNNLaO0svJnb56ry
GPafhfTMG8+taL0sHHL1v5NHG2TBcon21je0SRasPtwwnWTA/rNQXra3Mok2
y0L+2FNat2mrLLS92WPuQEP2nwVVtYsL19MuWbhm9tTwJO2ZhdgvIW9Vjdh/
Fpx8c2OX0CFZ2Ky17MNWWpCFrKk3Jr6jk7OQbPSf06Sx7D8LTdPb2iXSOVno
Ufhm1E06X/H3e6vq+xqz/yxURu3xWE0XZ8HCZvuVEro0C6dsz3VQGsf+s1C2
v99AC7oqC59DzmrK6eosDKk++6SBrsuCVpVByojx7F/xvrz7dAyim7Ow/YrU
o4JuyUK3J0V5ahPYv6K/PcHFNrSSENP6t9mcR6sIMXT0CrdmWlWIG5Xb2hmZ
tFpdiIDTdXHhtIYQLsqaD8/RmkK8dXfv0nkify9CJJXV97WldYTYeyOjfT6t
K0SjZ+LVZnqwEHfn1nkZTuLvSQiDYdLmUHqkEEfKLk8/QxsIMbUk3U9tcquN
hTh0/JVgMW0iRLf1X9ZspKcI4eN7yuApDSE+2lrfHD6l1aZC3D58caEvbSbE
Go0RhaW0pRC9PmU8+kdbKfI/UGqZM7XVNor5mdL6DNpOiMGb7XbX0k6K72O3
bH6fafz9ChHx4MiNFbSbEPYp60cX0J5ClJ7atPod7SXE2evmMcbT+fsWolw9
IzCMDhCi4xm/ORV0iBADx6p/botWRwiRm7c6yoIWCDFy6qYXQjpeiJ0zDg6/
QycL8bWuzLzPjFanCzFK/4qZCy0UImjp+0E7aakQ/UJNHr6kc4QQ7z7qO3pm
q3MV7+tD6HM/Ol+ICS5i42P0DiGav3Vx/UUXCOFxVHnd9Fmt3ifEFUnYkji6
WIiFsUl9LtIlQlh7TyxXM+W9CeE4LR8L6JNCdL91ZYuIrhDCsv3Vh7X0OSH+
Hij+pjWb9yiEeW5KiwN9VYhQ2aqLm+lqxd8vs41ooGsV93F0bZdBc3ivQmy3
Pixwpx8q+m6eWr2bbhCi74A+f1/Sz4W4ud1BbeRc3rPi+3ZV/7KOfiNEYpvp
pw/QLUL8p9Fm1Qf6sxAp5z3eGJnx3oWwKYpYFED/FqLKfJHsCK0kQlSfL8e+
0ioizMwOPj5hHu9fhG4GzRtCaHURdBcvtT9Oa4hwe2XNtx+0pgjXz3sGTjLn
/Yvw+OaIm2G0jgiaDcM7l9G6IhRP8Rv+ix4sgoGR5uDJFrx/EcxV+v8No0eK
8L5l67ETtIEIFgb7rH7SxiJc/Gx5aaIl718E1bWSAaH0FBE+HM+0L6Uhwk7l
Bb7faFMRElwaPMfP5/2LMPalDQJpSxHE+058O0xbiVBVopv1kbYRYUo7eTvD
Bbx/EXK3DF+2nnYSoS70layIdhFhWHJT0WvaTYR2pWN2DV/I+xdh0oeaKA/a
S4QbPeon7KR9RNBRdql5SgeIUJm+2kLXivcvQmGi6i5nOkIE9TKLJxtpgQjr
3s/4c5eOF2HLsx8/NBfx/hWftyj27iI6XYTZ717KMmmhCK89po+7QktFOO8h
OtJ+Me9fhImidz1N6VwR/sW42wvofBEG31SJPEnvEEFN80HMd7pAhNW1Xz2M
rXn/IizeuGqMD10swqgmk7q9dIkIZeMjXJvoUhG0/027PtCG9y/CyeKsPsvo
ChHCjkaYb6DPiRAbqOlYS1eJsHK++/wuS3j/iveXEznAnK4W4Urh2rvxdK0I
VjVT15fTdSIU2Sq//EE/FMFOcNHUeCnvX4QRKZtivennIrjvSd9WQDeLsK9n
4Y6n9BsROv/6m6xjy/sX4b/o3IVL6c8iuJ3L+p5Ff1fkaWqMu0T/FqHrvwMf
lO14/2IY6/yYMYVWESPcvDogkFYVoylrVup+Wl3hNy6xTbSGGE5O45117Xn/
Ymy4VdPbntYWw23mjDIRrSPGd7F42mVaV4x2e27tUHbg/YtRsqrbu0m0nhhb
tzn19qdHivHcsGL4XtpAjM7PzHWe0cZijIxW+9jbkfcvxvlL6nsX01PEeCxY
PjeVhhj/nDQuVtKmYuh1HaX/gzYT45H5WR8DJ96/GMMONWz0oK3ESH8pLsij
bcToldm04TZtJ4brhDfe6s68fzGigvcPm0W7KL7/g8nnQmk3MSa/3GpaTHuK
cWzQu4JG2kuM8najP+gs4/2L0a/D+r7WdIAYI3JPj0qhQ8S4OkJ/YDkdIUZQ
v/Kfn2mBGGNupx7TX877F0O4d6OdC52seH/fftXL6HQxMtVOzr1CC8XAmGaZ
kgvvX4xLezOqxtE5YuyvOP54DZ0rhnph6IMtdL4YuRvvl9XSO8Q4dP6loMMK
3r/i85eU6E+j94lx23vucT+6WIx8o+KRu+kSMdaX/Yp/QJcqfk/9Jpzp4sr7
FyPOa/3zWXSFGNIDB18H0+fEmPNWrW4vXaX4fkOSCx/TV8UwtR7v0n0l718M
8dqBv+fQtWIkL7OPDKPrxKjp2fysiH4oxsXQB2Oe0A1i+HhghaYb71+M+BOD
QubSzWKsMRMHhNFvFL+PJzlLi+gWMc4tNO3XQH8WI8l+65Vu7rx/McpOn1w2
m/4txoJJ2+8G00oSNMWsGL+HVpGgcbZK+ENaVQIPw5ydnVfx/iWY8Wr4UdAa
EnToemGfH60pQfcZoSk7aG0J/DWsLO/QOhL862L7pb0H71+ChVc2xk+kB0tQ
XjXs5xpaTwLfFLWlufRICSxTFuZcow0k+G96m8q/tLHi++gYVY/x5P1LUJDe
fN6FniLBu29G20Q0JDhW3tf9DG0qwQEc6fyJNpNg8c22Wwat5v1L8PpCn542
tJUEG9e2CYinbSRYpHqptIS2k6Duccjz57STBNfG9P+muYb3L8Fug6oWU9pN
giM9BDUBtKcEAzpZb9hBe0nQMn2+WS3tI0G7m2GP2qzl/Usw6GmT41g6RIJX
KfkVrnSEBA/ri9XFtECC5W8Ho5KOl6DsjKpjC50sQf+Vns79vXj/EuRfXzh3
AS2UYLLSFe1IWirB3bcvavbSORKYJu/zu0/nSoAy/V+q63j/EgSt81o7gd4h
QbQg8qw7XSDBi+rVbaT0PkW+8VNHnKGLFf3GtpncQpco9sdVGfXz5v1LoKqc
082SPilBakXk/VC6QoJdkQmpu+lzEuR9PDHwNl2l+D3cGr5deT3vX/H7rq7v
aEBXS6AsfurkTNdKUHJ6ljyVrpNgxVf10mP0Qwlm1c4785xukGDDu7ZHuvrw
/iXYecdSOI1uluCQtr7NWvqNBBpTCpVy6BYJ+py9LTtHf5Zgwoiy7h/o7xLc
eeMW1teX9y9BcPijS/NoJSkKZo9VDqJVpGh/xHvQNlpVilmjc0ddp9Wl6N/1
ou5PWkMK/9Kfv4f48f6lGBE288wiWlsKy92FPpG0jhSf0yarFtK6Ujisb5NS
Sw+W4qZE/dM/Wk+KK+Nd54zw5/1LUSvsEreUNpAi93b/whjaWIqPY/NK99Em
Uly6LTt4l54ihUlDV6lyAO9figj/vi6jaFMpvu0528OONpNi/OYuR2JpSyne
O6pPK6KtpFD+fK74Lm0jRdQ6007Kgbx/KbZckVmPpJ2kqFE/F7eUdpGiWP/+
ZgHtJoV672db99CeUry8/DKrlvaSIlrvh8df2keKab109PWCeP9S3IhyvrOI
DpGi+/gqr3A6QophWh5vd9ACKdy/mNpdp+MV3uJV9I1OluLvo+Y3usG8fynm
hZ7raU4LpcgfrTbCn5ZKsf3EueG5dI7i/dX+7XaezpUibtTZxrd0vuLz/XV2
9gzh/Sv2W/VYMJ0ukOL0qtInHvQ+KVyWargI6WIp3h0fdqmULlH8noZ16PuE
LpWiaUy5Y4dQ3r8Uo1xsEgzpCil64NYGe/qcFI8Wz9kQQ1dJoatVGldIX1X8
ntqNta+hq6UYmF3Z6wddK0W1ifd53TDevxS3bGc5mdEPpUh1tHi0nm6QomSX
0CKbfi6FT3bfHafpZilmJv1uekG/kULjygStTuG8fymGHr5naEx/Vvy+095M
cKS/S+G6MWx4LP1biuGDMtsV0koyRK80vHGDVpHhrNQ77iutKkPl64WD+kbw
/mU4kvN4/yxaQ4aFF4cNXUNryrA/zyhFSGvL4DlDre4orSND8rXSbvW0rgxC
J7OJbSJ5/zJEtDlrMZzWU+y/aWS+kB4pg9WdrcaBtIEM2T16d9xEG8sQL9l5
rYI2kSFuwYKIRnqKwuinpR7F+5fh67L+eYa0qQy3Njp2taXNZJA3PPSJoC1l
MNUuOrmVtpJhzZA7ny/QNjL0b1rR6w1tJ4OqiYN+12jevwxL31UNG0+7yHDp
wbGujrSbDIeuGTRH054yfE6funcH7SVD20dNDpdoHxlaBBO/vaUDZLA1nCLo
JuD9y+C/68eX8XSEDNqScDtHWqDYt/PK7mg6XgbL5E/PttPJMmQ2/FavotNl
KF/4YeAbWijDRb/7QzRieP8yGD6t7GFM58igb3Twoy2dK0PSx4Mnw+l8Rb/7
r/lvoXfI8PNtJ+2zdIEM/4wiChvpfTLM/T1ATy2W9y/Dt7Oq0lF0iQxP/k18
a0WXypA4oHxsAH1Sht7yrR7ZdIXi93DhVfIJ+pwMjlo7suvpKsX7bb4jUYrj
/ctgnp0eOYiulkEv7LrNHLpWBpUXO3utputk6DZM52oa/VDx+0mb5LWfbpDB
wk7tZzX9XIacamngJ7pZBmejZ496xPP+Zcg69necCd0iQ7OsJcyB/ixD09/K
ogj6uwy1/SOu59G/ZTg9QK++glaSI2b4jXtPaRU5ztiGnVNJ4P3L8aXKaPNQ
Wl0OZ9l/bma0hhyda95rr6E15XiT1u5kGq0tR3HNgvlFtI4cTYU1V6/TuorP
18qZ1EIPlqNHn73yrom8fzkc93d/YkSPlONY1f1eNrSBYt6pw4xA2liO0/YF
S+W0iRybCiscjtFTFH9v5Di/joYcWnWC0T9oUzmMgif97ZXE+5fD/pXw5CTa
Uo6k9hmrHWkrOfLzJ7SNoG3k8InbkJVL28lxILRM9RTtJIfyvF0+9bSLHL8O
uV78Q7vJoRP4Q71fMu9fjjoz/xnTaC85pM/q3JbRPnIUfjUKjqID5PAYkxqS
R4fI0X1Ck+dpOkKO14cWmz2iBXLomd7u+ZeOl+N3UnBt3xTevxw5WjNjptLp
cugnT+3rTAvlaFjjVxBBS+V4aflyYC6dI0fIsT3pZXSuHOfGlL+4T+fL0X7C
mNE/6R1yJJi3WdUrlfcvR+qzWRkm9D45vIJ/bLeli+VIDx65J4gukcNu0Yst
MrpUjvneIxNK6JNyfB+r5nCLrpDjW5ukfh/pc4o+Ju+9qZHG+5fj8rjooDH0
VTmmz+2otoCulsPyjG2GF10rx5/PXkppdJ0cwcOtVxbSDxXvd2e3oxfpBjle
7Tv8/QX9XI5TEdNGqKTz/hX9WZXNH0i/kWOvs5EL6BY5VtXtdV1Gf5bD/P2Y
JRH0dznirl2YsJH+LYfbxhC1UlopG2tC51+7TatkY3LqfMEnWjUbhc2CQV0z
eP/ZKNn3/uhoWiMbqa+2TrKkNbORcmjL/tW0djZmdP3QLYnWyUZglzyPHbRu
NnQO7d9XSQ/OhttP/aePaL1sHHzRW/U3PTIb+esS+/XK5P1no0Ny4JDxtHE2
lIa16FjTJtm4Y/JXxYeeko1eBbvr02lkY4Pj512FtGk2PMa/cblAm2XjrlZ2
x2e0ZTZiHvze9Y+2yoap/ZCxOlm8f4XdtYtNaLtstNyo77uEdsrGf6siI3xp
l2yEtfy9kkG7ZWOf8Rr1PbRnNiZ8vjD1Au2VjY5vdVyeKvx/ak3/0w==
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxd1n100/XdxvH43AlK1IoBqwZEzRA1QJWiBS8EIWiRAAUiD5JCgQAF0ucU
EYOgiwoSHtTK8Da7h1gnk6h4rMpmVJjVgYuTSZ3oMkXXIdPo0EUFvLnPzO/3
7Zt/el7n06tXrvM9OYdeMxePn32iw+H44BSH4/9//vdf9vr//sz89NOh+4Z5
bnvqwN9+coHe+PejqQf25O3UN7Ftrr++mHehrij7+Ymft+Tt0u8WFSy8YWPe
ReqrtdOXrs7brcCE+x8YfVfevfXD24c2zY/k3UeH+z5RuXVx3pdq9aQvhn86
N2+PqvpUnP7vYN59tWr6G3NfnJJ3P/VauOpF98S8r9Rt76UvPNeft1dbvp32
6t03591fLy2rHVk5Ku8BOmfLoembh+c9UH8rXBa6TnkX66NNf7/KPSTvq/Vh
80dbb7o272u08cQB7c8NynuQVn9UsHLi1XmX6JERo0v7Dsx7sCp2lPW7on/e
12rmtz8UTLkq7+u0b1vDsa1X5F2qD2KPJXr3y3uI/jr41I9e6Jv3UHWt3XV4
3s/zvl4DnzgWusaTt/RF49NHel72k6NSr6ZftZx7af4+TD0nTH2ozyX5+zCV
3PtWz5F98vcbdHfbk89ELs7fb9DgXN13L/XO34frrI37t3XJOzpcrz/w+NPz
euXvI3TF1Z91vOvO30fod4M3hEbn7bhRlwQDZW9elL/fKL/3sV3j83aMVKLt
o+6fXpi/j9Qdg7qsuzNvxyj977aBD/ey7qO07Pnh69+6IH/3aVS3A8ea8o76
NPDPjdOvsu6jVTVzQOnBovx9tHptHt7/N3k7btJj35z3wSLrfpM8+5782yDr
frPOnvvJ5ydb95v1/FlnPveX8/P3Mq07ZewXT+YdLdP7l141bbl1H6PSmVek
plr3MRo+Y8rHJdb9FgWfPvKAy7rfotVPlD70fc/8faz+MXzfHz/KOzpWsbH7
Tt1l3f16tqK812/zll89XINyD1m/79fZF5244K68U3713vTY1MVWfpwe3Djg
6elWfpxOuviQb4yVH6e3nv7knKFWfpw+3PZ17iorP157Pl/3SW8rP15/WvRK
qruVH6/3M/uWdbHy4/Vwl3vOOMHKT1Cw8vHp/+mRz0/QudX9Kr7IOzpBCz4+
r8tneacm6MZhk8d+lLejXI90e7n3PitfrlN1YEnaypfrsX8W3/KWlS/X2ote
W7/Tyk/UiPdGDn/Fyk9U1avnTXzJyk+Uy+V67XkrP1GBK7ateMbKT9LsPb9f
/1srP0mr/BsPPWnlJ8kz6Vhsi5WfpL7n/6zy11Z+su4KDmxKWPnJ2vHe6J2P
WvnJ+uzkucN+aeUn69Ff/etQs5UP6O2JK15/yMoHFPh7l9c2WPmApm/c/Ok6
Kx/QeiUuX2vlb1XwwhVr11j5W9Wj5sfCB6z8rTq959fPrbLyt2rRshlV91v5
KXpze7j0Pis/RY3t4d73WvkpunvDW0UxKz9FN3xwSt9fWPmpKm7b5bvHyk/V
hCf/0Hi3lZ+qF/rtf36llZ+qk5NfnmDZMU2Dtx2bssLKT1OTv0fqLis/Te+e
XuG1nJqmI7NPe2q5lZ+uknfKrrKs6UqtuXNH1MpPV+GL34+znJquP918yZd3
Wvnb9Mi46vWWdZtOO2fqUMvR23TNlNCXy6z8bSp6/bItlh0ztNLlnWlZM7Rv
x0UXW47O0J4LNnXcYeVnSAPGPWvZEdSCE76607I7qP0DBo6zrKCWb9l7ieVg
UMWFDx9dav39oK5/Vu2WE0FN+viXz1tOBbXmQMODljNBHVzz60bLjgqd4PzP
VMvuCq14YvQNllWhCxsb+loOVuge39RCu79Ck6e3/3i71V+hxmHpQ5ZTFXoz
cdkHljMVyl606y3Ljpn6eNDaly27Z+qCwobfWtZM3VI7I2E5OFPX3nftBsvR
mUp1fBOz+2fqT8Hly+z+mfJ8uafO7p+p9ON7Ftj9s9StuXaW3T9Lf3/jual2
/yy9XLii3O6fpQ2X7xtj9x/PR7aMsvtn6aXuHcPs/lm6uW19qd0/S22f/mqQ
3V+peyd2GWj3V6pg+ZtX2v2Vmn/ze33t/kq1FvS7zO6v1Iv1uy62+ys1J/mo
2+6v1Kfe5AV2//G//3qup90/WyOjtS67f7aK3irqbvfPVmbEV+fY/bP1+Z//
dZbdP1u9492cdv9svb1nwpl2/2y9emZrV7t/tv5w0rVd7P45uiW272d2/xxN
f+yBArt/jp4OTz/N7p+jbiNvONXun6ODsetOsfvn6Ogro062++do6OrZJ9n9
c3TgqfUn2v1zte6L9Al2/1xtHVJkW3P1+wfrHHb/XHU79f0fl1j9czVsm892
Yq4KX3vtmOXUXJUuG2k7M1dl/d89atkR0vNXh2y7Q9r/1cm2FdLgfS1HLAdD
WlUxwXY0JHf3k20nQjp/xUs/2P0htQ9tsJ0Jadw/rrHtmKcNvY58b/fP05BH
dtnWPB37cZ3t4DwNOKPSdnSeFt9RYjsxT56znbZT8zRp7cHv7P55unDXG7Yd
83Xv7U/Yds/Xdffca1vz1f+lhbaD87X8ywm2o/PV+4RS24n5at19ie3UfFUM
OMvon69fFB7L2f0L1Dr5kG33Ai39+APbWqD+j+62HVygg9W/tx1doLFlz9hO
LFC0x+O2UwuUe+MR25kFahi1xuivUkfsbqO/SmOXLTX6q7StZ53RX6Wj46qM
/ip17THb6K/SHbNvM/qrlLwiYPRXqTU03uhfqDFnjjH6F+qV7j6jf6E+XzLc
6F+o4uLrjf6Faii9zuhfqB9XDzL6F+rui4uN/oVy57xG/yKNOO1Ko3+RWssu
N/oXKb7TY/Qv0uULLjX6F8kzpI/Rv0hzBvU2+hfp2CS30b9IQx+50OhfrC0/
FBn9i3Xg9vON/sX683k9jf7FCu9xGf2L9cnG84z+xapd1t3oX6xYw7lG/2I9
sbzQ6A8r/D/n2HaG9egfzzY+T1iOAsPesO4cf5bx+cLq/hunbX9Y755hOBjW
vqXdbIfD8n97pvH5w7qjyXA8rKdOMZwI6+qNZ9hOHu+/xnAqrO/f72o7HVbv
lYYzYd1ebDgb1vqDXYz91XJsMeys1ow5ht3VmnS5YW+11hw+3dhfrZdfNeyv
1vp1hoPVemeO4XC1Bg01HK3W/S7D8Wo9/M3PjP3V8vzFcLJazhcMp6rV55eG
09W6brnhTLX6zzOcrdYn4w07atR/qGFnjY72NeyuUb8ehr012lxgWDUa812B
sb9GZ39uOFijDz80HK7RpncMR2s05A+G4zVKvmw4UaPPnjGcrNE7LYZTNZqV
MJyu0dpmw5kajV1rOFujDfcZdtRq4krDzlrdu8ywu1aeJsPeWvWtM6zjv7/Y
3F+rIQvM/bXSXHN/rVbPMvfX6sKgub9WX04z99fqh1vN/cf//mRzf62eLTf3
12rSeHN/rS7xm/trdcEt5v46XVtm7q/TkpvM/XX6q8/cX6fAKHN/nb6+0dxf
py0jzP11qhlu7q9T+Q3m/jrdNMzcf/wuc3+dwteb++u0aai5v077hpj76+Q2
nalTY6m5//ie68z99fKZdtbr1WvN/fUabtpbr7cHm/vrVWHaX6+jJeb+eiVM
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
4Crb/wfhYRzW
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxd03l4TPf+B/CppaKoKUFKMDR0SuggJVXL2x4aDIKxjyxMSJjsk/3MTHpv
qtS4onIJnaJtei132mtJW7emLRVL22mbkhKMVtvUOlQravv5Pdc55ztv/+R5
PR+feZ/3+TynW/zyqUmNNBrN6aYazf///d+/wPD//fU/+qtB2J3IRs13nnvk
ELSaeeONk4mytYgw9H719x6yQ/Hfv11+vvm1s48chmYvfnv9yieyw/GJpd98
d5lsHeoWHs0ds1x2dzTO+GVDxCTZEfi69bSjWwyye8LxdPvhw9rL1mP8ymsj
V9w/88i9cKPNic29f5MdCc0PsWu//152X3y0LnXquIOyDWi78K1L43fL7odW
e3et3/W27P7oMvHDuInlsgdgXoX388YrZUdhb/K8l3ZLsl/A3Vc2Nh2TLXsg
eh7Z7n0zRfYgPJHhPe1JkB2N4nF7ei2eI/tFJNyKWvmfabIH44Wx9ZtLY2W/
hFnjLjpOjZE9BB2SY97ePFz2UJz75fO1x16UPQyvFMafNEXJHo6Zq7fUDHte
NjC2xQJPdq9HloCTsyqi/+ohz0dg3NaNvs+7yfMRmHBs14KvOsvzkdhwY/7I
dh3l+UiMNK4YWtZeno9C+Xt9Msa1leej0H3iBlNvrTwfjeFHfto5pJU8H401
obOybU/I8zEYd/an66ebyfMx6Pj3vusTm8rzsdjZJvtJbWN5PhbR8dcj6zTy
fBwCCz8KfHG/7tF8HFa49YVf3X1kTQy+fWZ1h+t/yfMYDJ4wJaLPbXk+HvsG
jY6w35Ln4xH14bQPLv0hzycg3htvX3pTnk/AlC3m2Q9uyPOX8bceqzq+c12e
vwz0/eX9+QF5HothRR9101+T57H4aeW8/MeuyvOJcDQ0nP3tsjyfiO8LbHn+
S/J8Et7ct6r0wkV5Pgljph+Z/Mdv8nwy1r5yuFsb2dJkjD+ROntwvTw34rMv
ohek/vrIMKLD+vWb//WL/P+NWHo/bvX1nx/Za4SlvIVnhGzNFPx6e9vfNlyQ
96cgJPfHN+/8JO9Pwa0vr76eKNs7BZWHb12u+VHenwop4WtTrGxMxfjKtdlH
z8v7UzFu99xrk2R7p6JTQcD6g1/en4bcg/k7k2VjGnZcmjznwTl5fxqOdns7
aoNs7zRM22e+9aJsTRxO9DuXePasvB+HRWc+HfF32VIcWpYfmB4l2xuH5zbY
lv58Rt6fjt8bTzRukI3p+PPuCzVTZUvT4Rn41pEnZXunw/jupKZf1cn7M9Bm
umG+SzZm4Gyr2J3TZUsz8Mlvm7/sLNs7AzG5jSrqT8v7M/FPZ9tbe2RjJv7x
YscDr8iWZqL1F79/P1O2dybejbjXJVLZN0HX60FRI2XfhCnbO9WdOiXvm1Dq
+bjzHtleE85vK4pcI1szC63Te91YJhuzMCKvYtYkZX8WDsV/POl5ZX8WAluS
P3lK2Z+NXcdsb/zxg7w/G+cLNh06JVuajdz7CS99Kts7G59m9KivlK2Zgw7u
e/vXKPtzcCDq0+35yv4ctHfffGeRsj8H52Z8/tZUZX8uzrlurR6u7M/FgvQb
SX2U/blwV2wLC1f252J1179vaqHsz4PjcNnFO7Xy/jz8/umoPy/LluZhQ1nx
vrOyvfOwLH5rj29ka+YjOy8z+qCyPx+FkZ3r9yn78xE492yfHcr+fEjJeZq3
lP0FMFRMmfOGsr8AB9oMHbRS2V8AZ99OrzuU/QW4EdNudq6yb8bQdhXrrLJ1
Zrz6fOJLFuX3zFh+Mn6sWbbZjLLvjr5vUn7/4X5B89wpst1mXL34+foJSp4Z
/SbWNB8t22/GQdO4Y0OV/IUoODerdpCSvxBGe3af/kr+QjTJH3A4UslfiGYu
45ZnlfyFiHpyz8fdlfyF6HYxVdtFyV+Ir25s3/S0kr8Qr3f6zNxOyY9HyOln
Zj6l5MdjyuaEolZKfjy6Te5X01zJj0ffy6YZjyv58fim/6eNGiv58egwa8nJ
Byfl/Hhkn0z59q5sfzwWjGi4flu2JgF/9Z4adUu2LgHTun+//qZsJGDOO9c6
3pBtTsDTw57Zf022lIDMlY3zrsh2J6Bp1gvTLin5CbBOWDb2NyU/AR8/njH1
VyU/EfpVHbJ/VvIT8cwfQz0/KfmJ+PLM9w/OK/mJ+OTI6QS/kp+ICofp9Fkl
PxHhJeakM0p+Irota/tYnZKfiLLCjTtPKflJ2Nmiz5IflPwkmNo+PrBWyU9C
yv5U7UklPwnWy/9p+F7JT8I7dYarNUp+ErrvGR34TslPwpbImfe/VfKT0KjP
yQ6KNYtwJ3/wkG+U/EVobbm3xKfkL0JC7patXyv5izC95wc/f6XkL8KO1z4y
KHYvQi/95JIvlfxFmLcxxH9cyV+EFYtLRinWLEbJ3sRdx5T8xYjrZtQpxmKs
yLteflTJX4ywjbc6KJYWo6Jfu01HlPzF+GOtRq/Yuxit1mZUVSv5i/Ghsfck
xRoL1neorz+s5FvwXVRqqWJY8N/vpEjFZgtCT1+q+ULJt+DWsVy7YrcFi7c0
9FPstSBmX/Qvh5R8C6q3ttysWJOMiJ7jZynWJWNfs0MdFCMZI5vM+uGgkp+M
eR+c26RYSsYTqS8kKXYnY9qw6OcVe5Nx+ejhO58r+cn4ctiho4o1S7BncNsK
xbolWP3ZuuWKsQSVkf3HKDYvwX+e+jpcsbQErqFxf36m5C/BYfe/vlHsffj7
I/fvUuxfAnNU5irFmqW47PwkVbFuKbYaSicrxlKs7Xqgv2LzUuzWTu2gWFqK
1WWGe58q+UuR1OjlC4q9S3Fs2T+OK/YvxcdbGvYo1qSgRVurW7EuBdNqL72m
GCno++4Cm2JzCs5UH0hSLKUAoY/FqfkpePbXsFFqfgpudL3XX81PgdRh2zNq
fioSNjZpp+anYkF9u2Zqfip6vf31ba+SnwrLmeeuKJZScfFu+HnF7lR0P/bW
94q9qfhq0ftHFftTcXrEGK9izTJkd565V7FuGWIfP79DMZbhjvHMVjV/GXa9
MXajmr8Mde93WKvmL8Ogj19+Tc1fhn2Pn3Wq+cvwje5ogZq/HMeOtchW85ej
373Ny9X85Ug+XZys5i9H0sf/SlDzl2N5l/D5av5ytPH4TGr+coSPPjRNzV+O
vTV/TlLzrVgrxU9QrLXixVebjlWfx4o5U86MUGywYuycX4eqz2dF0rhugxUb
rTjxbelA9XmtaHGi0wDFVitKRtU+rz6/FWt67o9U7LJCv+XQc2ofKw5du9FT
sceKufNHRqj9rIib8kE3xT4rVg8f0VXta4X9gyvhigNWTBqzt6PaPw2/b/1n
mNo/DYUr3miv9k/DmIPbQ9X+aRjUu7aN2j8N3d/t+JTaPw1t+qS3VvunYccn
Z1qp/dOwIXluS7V/Gm6NvfKE2j8Nh/JWN1f7pyF5wMgQtX8aDO81aab2T0NN
5xNN1f5paFG3p4naPw3hg7Y2VvunIXPFpkZq/3TEvLjtMbV/Ogbs2qtR+6fj
7OyaBweU/unYse/ufcVIx6JRz6s2piPgWHpPsTkdDzTv31VsTcc3Ex/cUSyl
49L96apd6fhh1+6/FLvT8fvdjqo96ei2qvS2Ym86tja716DYl45zYTbV/nT0
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
             "]]}, {
            Hue[0.5585438199983166, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
clvYk4o2E167JexNxfjdzW4K++r7jrp9XViXhr7zr/qEA9KQ+O71P4X1afix
YwPNhjQ029jumjDS0GQ1rgob02DMT76i9U9D03ObLmv907Bk2sVLWv80DLP3
1OxMQ8LlBRe1/mn4uq+3VuufhmT/oZrdafi91ZYLWv80DL/1gmZvGmpmLj+v
9U9DTOCzmnXpeLjHeU7rn44RQX/VrE/H9TMbz2r907HZ208z0vHMr4fOaP3T
EVMwX7MpHaXbntNsScfAbl+c1vqno+2+OM3OdLw5yV+zKx3Pr/3mlNY/HVfy
UjW706H/sYtmTzpujj3v1fqnI/3ues2+dCStnqVZl4ERLV/THJCBFqE3Tmr9
M9Cz7mvNhgyUdy/WjAwc+C5SszEDnVe8qtmUgTWL7p/Q+megy9KDmpUMNLVv
1OzMQGpUoWZXBr68OVlzeQb+OqyPZncGDr8eqNmTgWc+u3lc65+Bsk8Oa/Zl
YGGDrzTrMtF71xrNAZlourtQs77etxM0GzJxJWa0ZmSizanemo2ZyMl6WbMp
E1+0bq7ZkonajbdrtP6Z+D7ktGZnJjKWHdTsysTnv3yjuTwTHx/dqtmdid83
lWr2ZCK+9zLN3vr8zALNvvr9mRbNuiyMvzVDc0AWpr0SqVmfhU/PjNBsyEJi
r0GakYXglj01G7OwZXaIZlMWgga9pNmShX8tDpT6Z2FqeAupfxZ2pjSU+mfh
XIP7x7T+WfXf7+ua3fXPG3ZJsycL166e1uzNwqkrxzT7shA18IhmnRUfHjug
OcCK4L1VmvVWLL/5vWaDFZ/O+kYzrJjyQqVmoxU7W+zUbLLifN9tmi1WvFW6
WbNiRXifDZqdVmQ3WqfZZa3/+/qR1N+KPt0+kPpbMfft96X+Vrzc4j2pvxUz
v3pH6m/FtMVLpP7ZGGcrlvpnY/FHC6T+2bD8YZP6ZyO3ryL1z0bvnflS/2yE
RuRK/bNhaJAt9c9GtSdT6p+Ne7vSpf7ZmPt1qtQ/G60PW6T+2TjVMFnqn40j
w+dJ/es/7+O5Uv9szGieKPXPRvdis9Q/B0ueny31z8HmrxKk/jn4aXa81D8H
Ia/OlPrn4MXb06X+OXjgMUn9c9Bh9zSpfw5ub4+T+ufg9OdTpf45iP02Vuqf
g5rfY6T+9b9/f4rUPwe3XpXsycFHcZOl/jmY93G01D8H985HSf1zUdNXckAu
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

             "]]}, {
            Hue[0.7946117974981064, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
             
             "]]}}}, {{}, {}}, {{{{{
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 1.}], 
                   Offset[{0, 0}, {1608.1517853018254`, 0.9640507965940786}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1608.1517853018254`, 0.9640507965940786}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1608.1517853018254`,
                     0.9640507965940786}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1608.1517853018254`,
                     0.9640507965940786}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0, 0}, {1530.2291666666667`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 1.}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 1.}], 
                   Offset[{0, 0}, {1608.1517853018254`, 0.9640507965940786}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1608.1517853018254`, 0.9640507965940786}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1608.1517853018254`,
                     0.9640507965940786}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1608.1517853018254`,
                     0.9640507965940786}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{34., 6.500000000000007}, {1608.1517853018254`, 
                    0.9640507965940786}], 
                   
                   Offset[{34., -6.499999999999993}, {1608.1517853018254`, 
                    0.9640507965940786}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999998}, {
                    1608.1517853018254`, 0.9640507965940786}], 
                   
                   Offset[{9.999999999999998, 6.500000000000002}, {
                    1608.1517853018254`, 0.9640507965940786}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.01`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22., 4.884981308350689*^-15}, {1608.1517853018254`, 
                  0.9640507965940786}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.8779154496585009}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.8779154496585009}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8779154496585009}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8779154496585009}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.8779154496585009}], 
                   Offset[{0, 0}, {1608.1517853018254`, 0.8771277421025387}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1608.1517853018254`, 0.8771277421025387}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1608.1517853018254`,
                     0.8771277421025387}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1608.1517853018254`,
                     0.8771277421025387}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.8779154496585009}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.8779154496585009}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8779154496585009}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8779154496585009}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.8779154496585009}], 
                   Offset[{0, 0}, {1608.1517853018254`, 0.8771277421025387}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1608.1517853018254`, 0.8771277421025387}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1608.1517853018254`,
                     0.8771277421025387}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1608.1517853018254`,
                     0.8771277421025387}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1608.1517853018254`, 
                    0.8771277421025387}], 
                   
                   Offset[{35., -6.499999999999992}, {1608.1517853018254`, 
                    0.8771277421025387}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1608.1517853018254`, 0.8771277421025387}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1608.1517853018254`, 0.8771277421025387}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.05`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1608.1517853018254`, 0.8771277421025387}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.656784182013574}], 
                   Offset[{0, 0}, {1530.2291666666667`, 0.656784182013574}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 0.656784182013574}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 0.656784182013574}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 0.656784182013574}], 
                   Offset[{0, 0}, {1608.1517853018254`, 0.6568841514957346}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1608.1517853018254`, 0.6568841514957346}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1608.1517853018254`,
                     0.6568841514957346}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1608.1517853018254`,
                     0.6568841514957346}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.656784182013574}], 
                   Offset[{0, 0}, {1530.2291666666667`, 0.656784182013574}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 0.656784182013574}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 0.656784182013574}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 0.656784182013574}], 
                   Offset[{0, 0}, {1608.1517853018254`, 0.6568841514957346}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1608.1517853018254`, 0.6568841514957346}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1608.1517853018254`,
                     0.6568841514957346}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1608.1517853018254`,
                     0.6568841514957346}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1608.1517853018254`, 
                    0.6568841514957346}], 
                   
                   Offset[{35., -6.499999999999992}, {1608.1517853018254`, 
                    0.6568841514957346}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1608.1517853018254`, 0.6568841514957346}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1608.1517853018254`, 0.6568841514957346}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.15`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1608.1517853018254`, 0.6568841514957346}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.522191160787351}], 
                   Offset[{0, 0}, {1530.2291666666667`, 0.522191160787351}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 0.522191160787351}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 0.522191160787351}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 0.522191160787351}], 
                   Offset[{0, 0}, {1608.1517853018254`, 0.522187201155848}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1608.1517853018254`, 0.522187201155848}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1608.1517853018254`,
                     0.522187201155848}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1608.1517853018254`,
                     0.522187201155848}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.522191160787351}], 
                   Offset[{0, 0}, {1530.2291666666667`, 0.522191160787351}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 0.522191160787351}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 0.522191160787351}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 0.522191160787351}], 
                   Offset[{0, 0}, {1608.1517853018254`, 0.522187201155848}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1608.1517853018254`, 0.522187201155848}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1608.1517853018254`,
                     0.522187201155848}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1608.1517853018254`,
                     0.522187201155848}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1608.1517853018254`, 
                    0.522187201155848}], 
                   
                   Offset[{35., -6.499999999999992}, {1608.1517853018254`, 
                    0.522187201155848}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1608.1517853018254`, 0.522187201155848}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1608.1517853018254`, 0.522187201155848}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.25`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1608.1517853018254`, 0.522187201155848}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   
                   Offset[{0, 0}, {1530.2291666666667`, 
                    0.38144467535739096`}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 
                    0.38144467535739096`}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.38144467535739096`}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.38144467535739096`}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.38144467535739096`}], 
                   Offset[{0, 0}, {1608.1517853018254`, 0.381338562950287}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1608.1517853018254`, 0.381338562950287}], 
                   Offset[{10., 2.220446049250313*^-15}, {1608.1517853018254`,
                     0.381338562950287}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1608.1517853018254`,
                     0.381338562950287}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   
                   Offset[{0, 0}, {1530.2291666666667`, 
                    0.38144467535739096`}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 
                    0.38144467535739096`}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.38144467535739096`}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.38144467535739096`}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.38144467535739096`}], 
                   Offset[{0, 0}, {1608.1517853018254`, 0.381338562950287}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1608.1517853018254`, 0.381338562950287}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1608.1517853018254`,
                     0.381338562950287}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1608.1517853018254`,
                     0.381338562950287}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{30., 6.500000000000006}, {1608.1517853018254`, 
                    0.381338562950287}], 
                   
                   Offset[{30., -6.499999999999994}, {1608.1517853018254`, 
                    0.381338562950287}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1608.1517853018254`, 0.381338562950287}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1608.1517853018254`, 0.381338562950287}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.5`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{20., 4.440892098500626*^-15}, {1608.1517853018254`, 
                  0.381338562950287}], {0, 
                 0}]}]}}}}, {{{}}}}, {{}, {}}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> False, 
         ImagePadding -> {{All, 61.87254983286847}, {All, All}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["time", TraditionalForm], 
           FormBox[
            RowBox[{"freq", " ", "oblique"}], TraditionalForm]}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 440, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           RowBox[{"{", 
             RowBox[{
               RowBox[{"ba", "\[Rule]", "5"}], ",", 
               RowBox[{"bn", "\[Rule]", "1"}], ",", 
               RowBox[{"z", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vs", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vh", "\[Rule]", "1"}], ",", 
               RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"u", "\[Rule]", "0.5`"}], ",", 
               RowBox[{"pa", "\[Rule]", "0"}], ",", 
               RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
       
        FormBox[
         TemplateBox[{"0.01`", "0.05`", "0.15`", "0.25`", "0.5`"}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm],FormBox[
        FormBox[
         TemplateBox[{"\"healthy juv\"", "\"stressed juv\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Normal", ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
      
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {2, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}], ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#3, ",", "Above"}], "]"}]}], "}"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.771926963413995*^9, 3.771927116207806*^9, 3.7719272329130383`*^9, 
   3.771927320186487*^9, 3.771927428850464*^9, 3.7719276224088383`*^9, 
   3.7719277832197037`*^9, 3.771928503694642*^9, 3.771928740362295*^9, 
   3.7719289411047792`*^9, 3.7719292213105803`*^9, 3.772450215424735*^9, 
   3.772450545591446*^9, 3.7724508003962*^9, 3.772451092151373*^9, 
   3.772452590715131*^9, 3.772453220189859*^9, 3.772453473166091*^9, 
   3.772453601665497*^9, {3.772453768593382*^9, 3.7724537776044817`*^9}, 
   3.772521184693787*^9, 3.772521247860476*^9, 3.772521414595819*^9, 
   3.772521490488613*^9, 3.772521603793675*^9, 3.772521985838503*^9, {
   3.772522221932176*^9, 3.772522237752471*^9}, 3.7725223053347816`*^9, 
   3.7725232937811127`*^9, 3.773120592279275*^9, 3.773120623544664*^9, 
   3.77338882763628*^9},ExpressionUUID->"e6c88e31-70b0-4b1b-bcad-\
23f7651bf966"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", " ", 
   RowBox[{"\"\<lhIinvade.pdf\>\"", ",", 
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}], "}"}], " ", 
     "]"}]}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",\

 CellChangeTimes->{{3.77192030520675*^9, 3.771920306952876*^9}, {
   3.77192039013865*^9, 3.7719204489881163`*^9}, {3.771920620320675*^9, 
   3.7719206575708523`*^9}, 3.7719207860267*^9, {3.771920834617701*^9, 
   3.77192084729725*^9}, {3.771920881239547*^9, 3.771920911276531*^9}, {
   3.771921016040662*^9, 3.771921085307107*^9}, 3.77192114681842*^9, {
   3.7719212667321157`*^9, 3.771921387491234*^9}, {3.771921674139854*^9, 
   3.771921693308975*^9}, {3.771921754466983*^9, 3.771921806690325*^9}, {
   3.771921994156003*^9, 3.771922052489451*^9}, {3.771922121745726*^9, 
   3.771922194443919*^9}, {3.771923312788409*^9, 3.7719233135293503`*^9}, {
   3.771923468098785*^9, 3.7719234689191637`*^9}, {3.771923557033332*^9, 
   3.771923557504673*^9}, {3.7719241761512327`*^9, 3.771924176588418*^9}, {
   3.771924948515418*^9, 3.771924948627267*^9}, {3.771925390103427*^9, 
   3.771925390665495*^9}, {3.7719257984582663`*^9, 3.7719257988852158`*^9}, {
   3.771925918061273*^9, 3.7719259181278667`*^9}, {3.7719260653517647`*^9, 
   3.7719260657888813`*^9}, {3.771927226271327*^9, 3.771927226708168*^9}, {
   3.771927311785166*^9, 3.771927311839714*^9}, {3.771927427371111*^9, 
   3.771927427808107*^9}, {3.77192766748708*^9, 3.771927668070649*^9}, {
   3.7719284221708927`*^9, 3.7719284225865393`*^9}, {3.7719286850282707`*^9, 
   3.771928685533546*^9}, {3.772450639296316*^9, 3.772450653110259*^9}, {
   3.772451696112672*^9, 3.772451698114333*^9}, {3.772453386456786*^9, 
   3.772453386984427*^9}, {3.7724535063960657`*^9, 3.772453507228335*^9}, {
   3.772453676614298*^9, 3.772453677064023*^9}, {3.772521209430436*^9, 
   3.772521209980301*^9}, {3.7725214789649887`*^9, 3.7725214791449003`*^9}, {
   3.7725215919411573`*^9, 
   3.772521592583403*^9}},ExpressionUUID->"55e85f03-e924-4e2e-97c0-\
598cd3b313fd"],

Cell[BoxData["\<\"lhIinvade.pdf\"\>"], "Output",
 CellChangeTimes->{3.771926964352046*^9, 3.7719272061421957`*^9, 
  3.771927275046516*^9, 3.771927321186894*^9, 3.7719274364448442`*^9, 
  3.771927623424699*^9, 3.771927784271923*^9, 3.771928516574511*^9, 
  3.771928573562497*^9, 3.7719287415423326`*^9, 3.7719289421908607`*^9, 
  3.77192983847888*^9, 3.772450068588676*^9, 3.772450321428781*^9, 
  3.77245055680698*^9, 3.772450642649556*^9, 3.772450845795733*^9, 
  3.772451705631372*^9, 3.7724532806386538`*^9, 3.772453483605029*^9, 
  3.772453602685361*^9, 3.772453788946148*^9, 3.772521189911645*^9, 
  3.772521248832581*^9, 3.7725214226263847`*^9, 3.7725214917801113`*^9, 
  3.772521604843975*^9, 3.772523294715501*^9, 3.773120635405129*^9, 
  3.773388829328636*^9},ExpressionUUID->"bbb9f656-22a0-4b81-9b83-\
a8fc8102ddcd"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"Plots", " ", "for", " ", "individual", " ", "graphs"}], ",", " ", 
   
   RowBox[{
    RowBox[{"non", "-", "softmax"}], ";"}]}], "Subsubsection"]], "Input",
 CellChangeTimes->{{3.773055607455616*^9, 3.773055638413364*^9}, {
  3.773139097070002*^9, 3.7731390971328983`*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"60113cfd-9986-4fe8-af93-9fa583d5559a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "individual", " ", "plots", " ", "not", " ", "in", " ", "a", " ", "grid"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"begin", " ", "looping", " ", "here"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ulist", "=", 
     RowBox[{"{", 
      RowBox[{"0.05", ",", "0.1", ",", " ", "0.2"}], " ", "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"blist", "=", 
     RowBox[{"{", 
      RowBox[{"1.5", ",", "3", ",", "5", ",", "10"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lsOstart", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lhOstart", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imax", "=", "2000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"h", "=", "1"}], ",", 
      RowBox[{"h", "\[LessEqual]", 
       RowBox[{"Length", "[", "ulist", "]"}]}], ",", 
      RowBox[{"h", "++"}], ",", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"Length", "[", "blist", "]"}]}], ",", 
         RowBox[{"j", "++"}], ",", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"subs", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ba", "\[Rule]", 
               RowBox[{"blist", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], ",", 
              RowBox[{"bn", "\[Rule]", "1"}], ",", 
              RowBox[{"z", "\[Rule]", ".5"}], ",", 
              RowBox[{"vs", "\[Rule]", ".5"}], ",", 
              RowBox[{"vh", "\[Rule]", "1"}], ",", 
              RowBox[{"vI", "\[Rule]", ".8"}], "  ", ",", 
              RowBox[{"u", "\[Rule]", 
               RowBox[{"ulist", "[", 
                RowBox[{"[", "h", "]"}], "]"}]}], " ", ",", " ", 
              RowBox[{"pa", " ", "\[Rule]", " ", "0"}], ",", " ", 
              RowBox[{"pn", "\[Rule]", " ", "1"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"test", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"lsO", "\[Rule]", "0"}], " ", ",", 
              RowBox[{"lsV", "\[Rule]", " ", "0"}], " ", ",", 
              RowBox[{"lsI", "\[Rule]", " ", "0.8"}], ",", 
              RowBox[{"lhO", "\[Rule]", " ", "0.8"}], ",", 
              RowBox[{"lhI", "\[Rule]", " ", "0.2"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "solve", " ", "QHAT", " ", "for", " ", "home", " ", 
              "condition"}], ",", " ", 
             RowBox[{
             "with", " ", "frequecies", " ", "as", " ", "parameters"}]}], 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"QHAT", "[", 
             RowBox[{"LHO_", ",", "LSO_"}], "]"}], " ", ":=", 
            RowBox[{"Simplify", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Fasols", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"lhO", "\[Rule]", "LHO"}], ",", 
                 RowBox[{"lhI", " ", "\[Rule]", " ", "LHI"}], ",", " ", 
                 RowBox[{"lsO", " ", "\[Rule]", " ", "LSO"}], ",", " ", 
                 RowBox[{"lsI", "\[Rule]", " ", "LSI"}]}], "}"}]}], " ", "/.",
               "subs"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"isolate", " ", "dominant", " ", "eigenvalue"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"AA2", "=", 
            RowBox[{"AA", "/.", "subs"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"LL", "=", 
            RowBox[{"Eigenvalues", "[", "AA2", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"isolate", " ", "Dominant", " ", "eigenvalue"}], ",", 
             " ", 
             RowBox[{
              RowBox[{"substitute", " ", "in", " ", "q"}], "-", "hat"}]}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Lambda1", "[", " ", 
             RowBox[{"lsO_", ",", " ", "lhO_", ",", "LHO_", ",", "LSO_"}], 
             "]"}], ":=", " ", 
            RowBox[{"Simplify", "[", 
             RowBox[{
              RowBox[{"LL", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "/.", 
              RowBox[{"Qh", "\[Rule]", "  ", 
               RowBox[{"QHAT", "[", 
                RowBox[{"LHO", ",", "LSO"}], "]"}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "take", " ", "partial", " ", "derivatives", " ", "to", " ", 
              "calculate", " ", "gradient"}], ",", " ", 
             RowBox[{
             "substitute", " ", "mutant", " ", "for", " ", "common", " ", 
              "type"}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"DlsO", "=", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"Lambda1", "[", 
                RowBox[{"lsO", ",", " ", "lhO", ",", "LHO", ",", "LSO"}], 
                "]"}], ",", "lsO"}], "]"}], "/.", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"LHO", " ", "\[Rule]", " ", "lhO"}], ",", 
               RowBox[{"LSO", "\[Rule]", " ", "lsO"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"DlhO", "=", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"Lambda1", "[", 
                RowBox[{"lsO", ",", " ", "lhO", ",", "LHO", ",", "LSO"}], 
                "]"}], ",", "lhO"}], "]"}], "/.", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"LHO", " ", "\[Rule]", " ", "lhO"}], ",", 
               RowBox[{"LSO", "\[Rule]", " ", "lsO"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", "graph", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"lsOtab", "=", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"lhOtab", "=", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"DlsOtab", "=", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"DlhOtab", "=", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"delta", "=", "0.08"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"lsOtab", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "=", "lsOstart"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"lhOtab", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "=", "lhOstart"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"DlsOtab", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"DlsO", "/.", "subs"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"lsO", "\[Rule]", "lsOstart"}], ",", 
               RowBox[{"lhO", "\[Rule]", "lhOstart"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"DlhOtab", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"DlhO", "/.", "subs"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"lsO", "\[Rule]", "lsOstart"}], ",", 
               RowBox[{"lhO", "\[Rule]", "lhOstart"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", "=", "2"}], ",", 
             RowBox[{"i", "<", "imax"}], ",", 
             RowBox[{"i", "++"}], ",", 
             RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"lsOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"lsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}], "  ", "+", " ", 
                   RowBox[{"delta", " ", "DlsO"}]}], "/.", "subs"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"lsO", "\[Rule]", 
                    RowBox[{"lsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", 
                   RowBox[{"lhO", "\[Rule]", 
                    RowBox[{"lhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lsOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"lsOtab", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ">", "1"}], ",", "1", ",", 
                  RowBox[{"lsOtab", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lsOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"lsOtab", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "<", "0"}], ",", "0", ",", 
                  RowBox[{"lsOtab", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lhOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"lhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}], "  ", "+", " ", 
                   RowBox[{"delta", " ", "DlhO"}]}], "/.", "subs"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"lsO", "\[Rule]", 
                    RowBox[{"lsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", 
                   RowBox[{"lhO", "\[Rule]", 
                    RowBox[{"lhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lhOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"lhOtab", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ">", "1"}], ",", "1", ",", 
                  RowBox[{"lhOtab", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lhOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"lhOtab", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "<", "0"}], ",", "0", ",", 
                  RowBox[{"lhOtab", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"DlsOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"DlsO", "/.", "subs"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"lsO", "\[Rule]", 
                    RowBox[{"lsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", 
                   RowBox[{"lhO", "\[Rule]", 
                    RowBox[{"lhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"DlhOtab", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"DlhO", "/.", "subs"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"lsO", "\[Rule]", 
                    RowBox[{"lsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", 
                   RowBox[{"lhO", "\[Rule]", 
                    RowBox[{"lhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], 
               ";"}], "\[IndentingNewLine]", "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"ListPlot", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"lsOtab", ",", "lhOtab"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"PlotLegends", "\[Rule]", 
               RowBox[{"PointLegend", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"LsO", ",", "LhO"}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"Graphics", "[", 
                   RowBox[{"Rectangle", "[", "]"}], "]"}]}]}], "]"}]}], ",", 
              RowBox[{"PlotLabel", "\[Rule]", "subs"}], ",", " ", 
              RowBox[{"ImageSize", "\[Rule]", "460"}]}], "]"}], "]"}], ";"}], 
          "\[IndentingNewLine]", "}"}]}], "]"}], "\[IndentingNewLine]", 
       "}"}]}], "]"}], ";"}], "                                ", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.772450608221574*^9, 3.772450621759281*^9}, {
  3.772523167196192*^9, 3.772523202982127*^9}, {3.77305551087356*^9, 
  3.7730555643910303`*^9}},ExpressionUUID->"ab2be162-f256-4bef-b373-\
b4651b9ed74e"],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
JqskOBbh3+4pOVeCmol7Dj8n50kwMrJg1Su2fwniFfLvjWz/EvSU+KS/Y/uX
INNx6dCPbP8S1D4wO9LE9i9B6eHpU76y/UtQ4u92+jvbvwSaO2+aNbP9S/Ap
KeBQC9u/BD1ctg3+w/Yvwd4Vl5L+sf2r+5kraGpzivYvwfVB56zbk2slWJzN
P9CRXC9B0aZqDW1ygwSLfp6x7kx+oX4ey1dldSU3SpDbOa+hO/m9+n5qHTPo
SW6SIPmq1F6X/E0CDatloj7kZgmubWiq0CP/Vvd9K+ZDf7KGFDste+sOJLeX
onl24X+DyVpSHJ7BWzGE3EUKo2QTt6FkHSl2OI8JH0bWlULyfX3yCLKeFNdn
1EhHkvWlKB4vVY4mG0gh2lGgHEs2kuK49QjZeLKxFGefdkuZQB4jxZWGrRGT
yCZS7K9Y6vEf2VQKk4bTq8zI5lIs4pdNnUKeLsWym5sGTCNDiiFPin5OJ1tK
EVh4vMqCbCVFh5HBu0BeLMVRvfa+s8nWUtwx32hhSbaRwn5MZod5ZFsptPgl
V+aTHaTI3X8xYQGZJ8XgrtdnLyI7SdH45davxWQXKVpEzwuWkj2k0O+s7WBN
9pKip9sizRVkPylu7j56aCU5SIrM3IUrVpHDpFhs3O/LajJfCv8fI9JsybFS
pBZGDrcjC9R9NxqftienSNFtwJjF68hCKYRHRXXryVIp0rUcN/HICilK1u1+
s5GskqLo+SaPTeRcKeaW7H7nRM6TIumVj/MWcr46n3PNE2dygRTdDapsXMmF
UsS83HrJjVwshUvwCVMPcokUdclHt28ll0ox/bSr5jZyuRRbpE/dvcgXpKgU
G97wJl+RYpeB6WhfcqUUnTIGxvuRq6Uws3j1yJ/tX/38L5FNDGT7l+Ltuwmx
QWz/6vs7/vztYLZ/9fM2yHpQKNu/FAGHnmwJY/uXYsnFoIJwtn8p6s0NP0Ww
/Usxu+rZOD7bvxQaMyvco9j+1c/3+Au7o9n+pVhr9qU+hu1fhjENy3vEsf3L
0GPXm9nxbP8yCN+WeSew/cvg3vNhtoDtX4aTzrMuJ7L9y9Bt5K8PSWz/MmTE
a/VMYfuXYdZO/0mpbP8y1KTPW5HG9i9Dz1VRnuls/zK8ejNaIGT7l8HLfPF2
Edu/DCYDG4+K2f5lGObc4ZKE7V+Gxvv77krZ/mW4MfThMxnbvwztvuR8kLP9
y3CkvuV7Btu/DL28v7Uq2P7VecaL/inZ/mX4m3xPI4vtX4agD1f/MdvKcOaQ
128V278M4wdV/8hm+5fhe/iHjzls/+r87W++2M72L0Pyg4DaXLZ/9esP/nB1
B9u/DCNe/ndyJ9u/DJMmrt6zi+1fhtw2K0V5bP8y/Jw9IWQ3278MGx585+1h
+1f3mbt77l62fxlKNs01zmf7l6H1ZZ3WPrZ/9f1+4vyaWSpDS+vX8/vZ/mUI
fBydc4DtX93HwH6BBWz/MrSff3rJQbZ/dR/1Ww0Psf3LcNzmv+/MBTLkDepz
6TDbvwz9s3VlhWz/Mswf+Z/jEbZ/GVb1DBtbxPYvQ2j2hx/M5TL06Zh29ijb
vwznwjfGFrP9q5+3MR5Wx9j+ZQg2Kep0nO1fhhM5ZteZ76ifj2iNpBNs/zKY
P9aZX8L2L4PPfo+2J9n+Zfh9r28p8wv18YV9/E6x/av9zH3UabZ/9fPpq/+E
uUmGrtdGi0vZ/mXYmZ895wzbvwyPr/p/Zf6tfn9PTuw4y/YvR1+J89Iytn85
ZsQJfjFryRG/dNCucrZ/OYZFjllUwfYvh87245+ZdeUYPK5cfo7tX47ueYun
nmf7lyPPa0M9s4EcR1pbwy6w/csxbvcw/Yts/3JYXXxyknmMHIEFY1dfYvuX
I3VXz8/MpnJcfSdKusz2L8fLs4cMr7D9yzFmmcdJZsiRcPnG0qts/3KIFt17
xmwlR/5Pgf81tn85fjc0drzO9i9Hdu9fcmYbOcSq0mGVbP9yvPCffJTZQZ03
03XmDbZ/Oab+sb3G7CTHd4GmzU22fzkyDIPqmT3U7z//4KYqtn85DD/vf8Ps
J8eqmz6e1Wz/cgzvpPWFOUyOGJetfrfY/uVo3rP7O3OsHGfDjvrfZvuX40am
8htzihxPD9j51LD9yyG1+fWRWSqH46Qgtzts/3JUNNS9YFap388ng/V32f7V
z9+7ZfeY8+Qws3ddco/tX4615dvOMxfIES3bbH6f7V+O9tZLCpiL5YjaMHJw
Ldu/HP/G/hYyl8rxcfCVNnVs/3KYS9O9mS/IseKFTQPzFTnmOPVf+oDtX46j
js9OMVfL8cP48PCHbP9y9GuNFjHXyvGhL6+VuV4OvZNWTvVs/3IM6DWzkvmF
HBtWzZ30iO1fjtn71ymZ38thZJb0l7lJDh/9G46P2f7lOORvfIm5WY6wtTnG
T9j+5SiqM0li1siAXbtnb5nbZ+Di46MLG9j+MyDelr+PuUsGSosrNJ+y/Wdg
R36bzcy6Gegyy62CWS8D87b90X/G9p+BfgZnApkNMvBo2oFbzEYZiN9zddRz
tv8M5M/sH8M8JgOxz3IeMJtkQHfL2gkv2P4z0DN7UQKzeQbarg6sZ56egRn2
j01esv1noMUnOpbZMgOrN2y+z2yVAd5jwchXbP8ZGLL/YwizdQb2BCmuM9tk
QPt3woDXbP8ZCHp21o3ZIQOW9yxOMvMy8CxcW7OR7T8Dv0INbJhdMuC2LS6X
2SMDq75Oec/slYHR22eavWH7z0BBR0UUc1AGfpy0vM4clgHB3Pm6b9n+M7B8
4g4H5tgMHOtgk8csUPc/a+M75pQMLHO6NuEd238GHjYKA5mlGSibd7yUWZGB
wV+mtXnP9p+BC/ZD5zLnZmDo560C5rwMuOgPvM6cn4FAy4ldP7D9q+9P5aGl
zIUZ2NxHms5cnIG/4c+rmEsy8GpdTvePbP8ZGNj10lLm8gykPLFPZb6Qgc7D
N15nvpIB13H3tT6x/WfAe07ZXObqDHwt6B/NfCcD1w+/PcNcq75+qskv5voM
LIz/MKmJ7T8DA+4aejK/UD9PR2/tZW7MgKNtawPze3X+H7n9PrP9Z2BF+fnl
zN8ykP7MKZG5WZ03Ma6c+XcGiuuH/2TWUGB9u4Vjv7D9KxBp0OTIrKXAQ5v+
CuYuCmScvVrJrKPAguB/Gl/Z/hX4kV1qyqynQP85bV2Y9RUoCLuVyWygwEiH
0TeYjRSQNen8YzZWIGZejMk3tn8F9FxiNjKbKNB7XU8xs6kCtaMmnGM2V8Dp
TsNn5ukKONsZDvnO9q/AjNM/ljFbqt//l/URzFbq+9NqX8C8WAGNyo91zNYK
jLLT0/zB9q/Ad0XdJGZbBeYFT+IxOyhQ92Z4CjNPgVn3i08wOynQNPrxM2YX
BaZU7+r6k+1fgTX7O5ozeyngk6PpyOynwK60vcnMQQo0270uZg5TIPzp5UfM
fAXM/i7o2Mz2r4Bpsuc4ZoECSbzJq5lTFFhrszOcWajAvalH85ilCix85Xqd
WaHuf8Tlz8wqBa5cv973F9u/Ar9yg2Yw5ykQ6n3TkTlfgfkdbyYwFyiQMDyo
gLlQAXnGjWrmYgU6Daz6xlyiQHFQuF4L278Ce93qpjGXq+/vkefrmS8ooKWd
HcV8RYG2YzvmMVcqsPHe4EvM1erXL337mvmOAi9lztqtbP/q+9snYxRzvQJL
moIXMTcoMP6ujgfzCwUW+TmkMDcqEBa6roD5vQIdM3QrmZsUyPOOfsf8TQFB
8d5Ov9n+FbDVjBvJ/Fv9vOsMsGLWUOKhr9sW5vZK2N/1jWXWUmLbPbOdzF2U
sOl7ooxZR4lbk7/UM+sqMef2m1/Mekoo43L6/GH7V2LtO51JzAZK7FXNWsZs
pMTsCRPcmY2VSJvZEM88RgmJw7KdzCZK/BkQeYbZVImROl61zOZKDLpm+JV5
uvr8uoyuf9n+lfhZWTWC2VIJzwnXZzFbKXFPnGTPvFiJa6Hd/JmtldjtvyaN
2UaJOK0te5ltlVh6emo5s4MSBb3u1TLzlNCVm39mdlLi5kVH7X9s/0p8Mlo1
hNlDiY2mOlOYvZR46Su1ZvZTopfjM2fmICV4YS0RzGHq+zHzkYyZr0TUsOQC
5lglduxrf55ZoESI5cI65hQlvm11+MQsVOKxaloHjdO0fyWa5zX2Z1Yo0dTg
aMKsUsL58YG5zLlKfD1y3o45T4mhN/ZvY85XIix3YyxzgRL8rEYFc6ESR8fg
IHOx+nmrcKlgLlHixCXHu8ylSsj3jnvDXK7u82blb+YL6vu9e4ZOG/IVJQ7J
ooYyVypR1kE5mblaidcOsQuY7yjRto2lA3OtEn9X13oy1yvRcG5WFHODEpf2
8iXML5R45yzbzdyoxB4n/gnm90ps/TvrKnOTErXSBw+YvymRG7/wPXOz+vmc
IP7D/Fvdx5cj3dqSNTJxcPj+wcztMzHVONSEWSsTg1YMm8XcJRM9/uYvZ9bJ
REtsR0dm3Ux8t7DwYdbLxLIY62hm/Uyk588QMxtkwrt9x53MRpn4+G7fEWZj
9fs5OrKCeUwmLhyMq2Y2ycT0cWefMJtmQhpf85HZPBNttC79YZ6eiV9t5V3a
kaE+//KcAcyWmajeVTWS2SoTHV5PMWdenAn/x9HzmK0zoX1/vw2zTSZ+6Bc5
Mttm4lyrwovZIRPzzm6IYOZl4sChjinMTur70SdNyeySCU+LH3uYPTJR5Tmz
mNkrE/qfXCuY/TIxuWPATeagTKxt2fSQOSwThj1MG5n5mUhNf/WNOVbd38nQ
Nu3Jgkz0ufO1K3NKJnSHLOvPLMyEz/PU4cxS9fOyrnAis0L9/quOWzCr1MdD
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
DDjYqw0Dfv+P/wBo0YYz
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxd1HF4XHO+x/HD5lmzK5hLlmFjHWQZZGtollkNvioYGjptQ6dtqqdtUrPb
VMcKnWpwaNhBlmHTdmrDHgSzRPeoWIPgtGLNEnaQ7Q4belR6d1Qw3HDnruDe
+/jNH/Oef87zms+85/vfOXLZ6rnte2ualttH0/7/+d2neOa6mi3nvX9N95nq
C1kz/4dLJr6+TdkjF3gvefPz1+5U9sqBzo7rs49sUK6RqW07jtm5YbOyT17+
+7rTHrzjHuVauULf/dPQiKWsy7QF//HP2/P3Kx8l8sN/2B9O9CvXSexpa7b1
g4eVj5Fo+qvkt9P+qOyXTntkv4WLH1U+XjbfV7XNs+Ex5XqZfXxq+8odf1Ke
JtNTA3d84X1cOSD/Omfrh1/N2Kp8knQfcviamzueUD5Zdl9jd+bvH1SeLqsu
uezeGTufVG6Qve58/Ii9jnpK+edyzEmfbb1xZUb5FPnxNdOnjh56WvlU+XVu
YlpLzbPKQblu1fMHJTuHlH8hW+w/3dr27nPKp8nGyN/tK2a/oDxDQi/vWv1U
u6PcKIsj++855LhtyqfLnvpNT178edlnSGfv9Nl7b9+ufKY8vSSw+NXUi8oi
I4/dHli/Zvg7myLXHn/YZ/VLXlL7WfJC7tu+/ef8Re1nyeZXrn1y5KKX1T5T
jr8xv2vjwqzaZ0r7zoM6Otf8Ve1nywGvjIy88cdX1H623PP6ksIDpVfV3iRz
l1y6Wo+9pvYm2fD79Czt+L+p/Ry59Vj3y9QzObWfI55jTnvk1Y93qP1c+fDf
Z6YPCP9D7efKgYt2zj5kq7J2nnyw98CMXQfl1X6eHHlUqSp2lbIWkqc2vnG2
s6O8h+TF6d/e/uapb6v9fNn34G/WPZRSNs+X/fb59t4Z/1PeL5APPv3g1jsX
vKP2C+Tcxae/8fDTytos2efg0N7XHfpPtc+SlS/tGThorbLWLO8888Sl0Xx5
b5aos+OBdaeOqf1CefsHJ+xz4UZl80J56vTjDhybLO8XSdPdHzb7572r9ovk
21OPOuOkx5W12fLoyp+u/HL/99Q+W545352/pkNZC0vthW/f/MRflSUsiaNP
XPvIMTvV78Oy6r5NWxatV3bCMrjz0gf/slNZmyP5mdNXfXG4q/o58qp11/gH
s5TNOfJ18K2rtqxVduZI+17nvNvysLI2V86SG3fsGC33c+WwratrG/Z+X/Vz
ZfNrjb/sOFHZmSsPHNN29fWtyto8OeHzR6c6blGWeTJz4JjBhj+X+3lSfH96
y45d5X7e/71/bvjdnAN2qb5Frtp3X/9DM5SlRfbt+8nLb12mbLbIp7cs/Ok7
v1N2WuRL1/4y80K5v1iWDUc/Wf1Rub9YPliqv/DNwR+o/mI5+uC/HdY+U9m5
WJ4dfnnr/auUtUvkV+3PnvpUSlkukZuzzy64/8Vyf4n09J6RXf5Jub9Etl+n
n/yVb1z182WPkz4nerayzJcvXuuxH1mlbM6XzHmTR2zfpOzMl82nXitbtpX7
iJzYI89f/lG5j8jr7+5o+t6Pdqs+InvWLb5+5RnKTkRmv7TO9/BlytoC+XYk
+syTSWVZIA9f+Nn+m54u9wtk1cfXvnDBrnK/QCbeOvSq3A//U/ULxdO7Nn/s
dGVZKOes3Puu8CJlc6Gckn/j/AvWKzsLZd0tLz1c82i5XyRbHlo/709vlvtF
kupcP3nov8v9InEuPvjkliP/pfpFco3/iicWh5S1VpHv/fmIU1YrS6ucGP7m
8Hc3KJut8rNQ+8Vzh8p9qxz/+oGrNuwq94tl8JFzqx/yFFS/WHYf2/bO+mnK
5mJZv983101rUXYWy3tTu+57cK2ydqnsOOH4jwr3lvtL5ZDr5HulF8v9pbLm
qy/uerNQ7i+VyftuOzu+34eqXyJP3rnt+cJJyrJEvknu3nL0JcrmEnlr9/vP
+69RdpZI+sbmu//7nnJvyEnrr/74jm3KuiEHfrmu/bPx8v8Z4nw6z/6xZ893
Ngx5bZfbtf8JyqYh3l/ste6vFypbhjx4rLWoOabsGBLZ/pfcxruUXUOOOumx
36YHlbWlcs+RI+fesENZXyqHzf/kcb2kLEvl+60zb7750I/U/aVydXNH19bT
lM2lsm3rpov6FylbS+Wly2/JLOpSdpZK0Hp8Tb5P2V0qpdtOn3XYc8raMjmq
87hJ/V1lfZlcsXDuzyemlGWZHNf/m7fW1U6o+8vkDxv7NvxthrK5TE59YG3T
vxYqW8tk49qfPbp9rbKzTB7c8fXGpSlld5ns/H78Hy/+WVlbLpEDbzjjw1Fl
fblMJtqtNz5XluUS2F14q8v7sbq/XL5Z17J1z8+UzeUyo3jTIT+epWwtl7X6
1+/vF1V2lsunN334+fZuZXe5WF+dMu20+5S1NvHs3nzNlc8p623iPnr3tsvf
VpY22dNjfXrCF+X7baINfPVfj3g/Uffb5IjoJ85HJyhbbdJVeHLWJ+cqO21y
ztidPVuXKrttcvhlr14X7FLW2uXThmd1c6Oy3i6z7NevvMVWlnbxzu/panlF
2WiXbcdtmvn+B+X77XLHyY/nTvy6fL9dnjjyuQY5+FN1v13WfP389QeeqOy2
y3vj/3zpofOUtRWyYTzyk6+XKOsr5Lb3Ug/8KK4sK2TaTYdeWbxD2VghX65c
/dhvH1Y2V8j9J5519cfPK1sr5Kinz5o8YEf5/gp57d7j5nwxUb6/Qr67W1T3
L6u0DgtswCZswQ7swloU92GBDdiELdiBXVj7Je7DAhuwCVuwA7uw9ivchwU2
YBO2YAd2YW0l7sMCG7AJW7ADu7DWgfuwwAZswhbswC6srcJ9WGADNmELdmAX
1i7HfVhgAzZhC3ZgF9ZW4z4ssAGbsAU7sAtrsUp7YR0OwAKHYQOOwSachC3Y
hh04B7twEdauqLQX1uEALHAYNuAYbMJJ2IJt2IFzsAsXYe3XlfbCOhyABQ7D
BhyDTTgJW7ANO3AOduEirF1ZaS+swwFY4DBswDHYhJOwBduwA+dgFy7CWmel
vbAOB2CBw7ABx2ATTsIWbMMOnINduAhrV1XaC+twABY4DBtwDDbhJGzBNuzA
OdiFi7B2daW9sA4HYIHDsAHHYBNOwhZsww6cg124CGtrKu2FdTgACxyGDTgG
m3AStmAbduAc7MJFWItX2gvrcAAWOAwbcAw24SRswTbswDnYhYuwtrbSXliH
A7DAYdiAY7AJJ2ELtmEHzsEuXIS1ayrthXU4AAschg04BptwErZgG3bgHOzC
RVhbV2kvrMMBWOAwbMAx2ISTsAXbsAPnYBcuwlpXpb2wDgdggcOwAcdgE07C
FmzDDpyDXbgIa9dW2gvrcAAWOAwbcAw24SRswTbswDnYhYuwdl2lvbAOB2CB
w7ABx2ATTsIWbMMOnINduAhr11faC+twABY4DBtwDDbhJGzBNuzAOdiFi7Bm
VtoDe2EfrMN+OAAHYYFDcBiOwAYchWNwHDbhBJyEU7AFp2EbzsAOnIVzcB52
4QJchEuwdkOlPbAX9sE67IcDcBAWOASH4QhswFE4BsdhE07ASTgFW3AatuEM
7MBZOAfnYRcuwEW4BGs3VtoDe2EfrMN+OAAHYYFDcBiOwAYchWNwHDbhBJyE
U7AFp2EbzsAOnIVzcB524QJchEuwtr7SHtgL+2Ad9sMBOAgLHILDcAQ24Cgc
g+OwCSfgJJyCLTgN23AGduAsnIPzsAsX4CJcgrXuSntgL+yDddgPB+AgLHAI
DsMR2ICjcAyOwyacgJNwCrbgNGzDGdiBs3AOzsMuXICLcAnWbqq0B/bCPliH
/XAADsICh+AwHIENOArH4Dhswgk4CadgC07DNpyBHTgL5+A87MIFuAiXYO3m
SntgL+yDddgPB+AgLHAIDsMR2ICjcAyOwyacgJNwCrbgNGzDGdiBs3AOzsMu
XICLcAnWflNpD+yFfbAO++EAHIQFDsFhOAIbcBSOwXHYhBNwEk7BFpyGbTgD
O3AWzsF52IULcBEuwVqi0h7YC/tgHfbDATgICxyCw3AENuAoHIPjsAkn4CSc
gi04DdtwBnbgLJyD87ALF+AiXIK1Wyrtgb2wD9ZhPxyAg7DAITgMR2ADjsIx
OA6bcAJOwinYgtOwDWdgB87COTgPu3ABLsIlWLu10h7YC/tgHfbDATgICxyC
w3AENuAoHIPjsAkn4CScgi04DdtwBnbgLJyD87ALF+AiXIK12yrtgb2wD9Zh
PxyAg7DAITgMR2ADjsIxOA6bcAJOwinYgtOwDWdgB87COTgPu3ABLsIlWOup
tAf2wj5Yh/1wAA7CAofgMByBDTgKx+A4bMIJOAmnYAtOwzacgR04C+fgPOzC
BbgIl2Dtt5X2wF7YB+uwHw7AQVjgEByGI7ABR+EYHIdNOAEn4RRswWnYhjOw
A2fhHJyHXbgAF+ESrN1eaQ/shX2wDvvhAByEBQ7BYTgCG3AUjsFx2IQTcBJO
wRachm04AztwFs7BediFC3ARLsHaHZX2wF7YB+uwHw7AQVjgEByGI7ABR+EY
HIdNOAEn4RRswWnYhjOwA2fhHJyHXbgAF+ESrCUrXQV74GrYC9fAPrgW1uE6
2A/XwwG4AQ7CjbDATXAIbobDcAscgVthA26Do3AHHIM74TjcBZtwN5yAe+Ak
3Aun4D7YgvvhNDwA2/AgnIGHYAcehrPwCJyDR+E8PAa78DhcgCfgIjwJl+Ap
WLuz0lWwB66GvXAN7INrYR2ug/1wPRyAG+Ag3AgL3ASH4GY4DLfAEbgVNuA2
OAp3wDG4E47DXbAJd8MJuAdOwr1wCu6DLbgfTsMDsA0Pwhl4CHbgYTgLj8A5
eBTOw2OwC4/DBXgCLsKTcAmegrW7Kl0Fe+Bq2AvXwD64FtbhOtgP18MBuAEO
wo2wwE1wCG6Gw3ALHIFbYQNug6NwBxyDO+E43AWbcDecgHvgJNwLp+A+2IL7
4TQ8ANvwIJyBh2AHHoaz8Aicg0fhPDwGu/A4XIAn4CI8CZfgKVj7XaWrYA9c
DXvhGtgH18I6XAf74Xo4ADfAQbgRFrgJDsHNcBhugSNwK2zAbXAU7oBjcCcc
h7tgE+6GE3APnIR74RTcB1twP5yGB2AbHoQz8BDswMNwFh6Bc/AonIfHYBce
hwvwBFyEJ+ESPAVrvZWugj1wNeyFa2AfXAvrcB3sh+vhANwAB+FGWOAmOAQ3
w2G4BY7ArbABt8FRuAOOwZ1wHO6CTbgbTsA9cBLuhVNwH2zB/XAaHoBteBDO
wEOwAw/DWXgEzsGjcB4eg114HC7AE3ARnoRL8BSsbah0FeyBq2EvXAP74FpY
h+tgP1wPB+AGOAg3wgI3wSG4GQ7DLXAEboUNuA2Owh1wDO6E43AXbMLdcALu
gZNwL5yC+2AL7ofT8ABsw4NwBh6CHXgYzsIjcA4ehfPwGOzC43ABnoCL8CRc
gqdgbWOlq2APXA174RrYB9fCOlwH++F6OAA3wEG4ERa4CQ7BzXAYboEjcCts
wG1wFO6AY3AnHIe7YBPuhhNwD5yEe+EU3AdbcD+chgdgGx6EM/AQ7MDDcBYe
gXPwKJyHx2AXHocL8ARchCfhEjwFa5sqXQV74GrYC9fAPrgW1uE62A/XwwG4
AQ7CjbDATXAIbobDcAscgVthA26Do3AHHIM74TjcBZtwN5yAe+Ak3Aun4D7Y
gvvhNDwA2/AgnIGHYAcehrPwCJyDR+E8PAa78DhcgCfgIjwJl+ApWEtVugr2
wNWwF66BfXAtrMN1sB+uhwNwAxyEG2GBm+AQ3AyH4RY4ArfCBtwGR+EOOAZ3
wnG4CzbhbjgB98BJuBdOwX2wBffDaXgAtuFBOAMPwQ48DGfhETgHj8J5eAx2
4XG4AE/ARXgSLsFTsLa50lWwB66GvXAN7INrYR2ug/1wPRyAG+Ag3AgL3ASH
4GY4DLfAEbgVNuA2OAp3wDG4E47DXbAJd8MJuAdOwr1wCu6DLbgfTsMDsA0P
whl4CHbgYTgLj8A5eBTOw2OwC4/DBXgCLsKTcAmegrW7K10Fe+Bq2AvXwD64
FtbhOtgP18MBuAEOwo2wwE1wCG6Gw3ALHIFbYQNug6NwBxyDO+E43AWbcDec
gHvgJNwLp+A+2IL74TQ8ANvwIJyBh2AHHoaz8Aicg0fhPDwGu/A4XIAn4CI8
CZfgKVj7faWrYA9cDXvhGtgH18I6XAf74Xo4ADfAQbgRFrgJDsHNcBhugSNw
K2zAbXAU7oBjcCcch7tgE+6GE3APnIR74RTcB1twP5yGB2AbHoQz8BDswMNw
Fh6Bc/AonIfHYBcehwvwBFyEJ+ESPAVrfZWugj1wNeyFa2AfXAvrcB3sh+vh
ANwAB+FGWOAmOAQ3w2G4BY7ArbABt8FRuAOOwZ1wHO6CTbgbTsA9cBLuhVNw
H2zB/XAaHoBteBDOwEOwAw/DWXgEzsGjcB4eg114HC7AE3ARnoRL8BSs3VPp
KtgDV8NeuAb2wbWwDtfBfrgeDsANcBBuhAVugkNwMxyGW+AI3AobcBschTvg
GNwJx+Eu2IS74QTcAyfhXjgF98EW3A+n4QHYhgfhDDwEO/AwnIVH4Bw8Cufh
MdiFx+ECPAEX4Um4BE/B2r2VroI9cDXshWtgH1wL63Ad7Ifr4QDcAAfhRljg
JjgEN8NhuAWOwK2wAbfBUbgDjsGdcBzugk24G07APXAS7oVTcB9swf1wGh6A
bXgQzsBDsAMPw1l4BM7Bo3AeHoNdeBwuwBNwEZ6ES/AUrP2h0lWwB66GvXAN
7INrYR2ug/1wPRyAG+Ag3AhL2Zr2v6NsH9g=
         
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 460, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{"ba", "\[Rule]", "1.5`"}], ",", 
           RowBox[{"bn", "\[Rule]", "1"}], ",", 
           RowBox[{"z", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vs", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vh", "\[Rule]", "1"}], ",", 
           RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
           RowBox[{"u", "\[Rule]", "0.05`"}], ",", 
           RowBox[{"pa", "\[Rule]", "0"}], ",", 
           RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"LsO", "LhO"}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.772523305084457*^9, 
  3.773388839962831*^9},ExpressionUUID->"514129e4-4a5e-41eb-a969-\
46da03ae5218"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw923lYjO37BvAQohBZsocoCmUNyWmPoiKEkHZp30tp2veaaaaZabayZw8h
hFAkW5YIqZBXtkSWIvzme/y6r/cfx+d45p7ruZ7zOaU/3lGOPqtcOquoqFR2
V1H535///1/zvP//s77jTxU45/XJanpY12E1hK8LGfltP7MmHPo3Hu4Zxtwf
L2eMem2wnFkbB1OK+toMYR6GlsEDhge8q+2wDmb+jgpPOcs8GiuXjB+bGces
i5GObVmh1szjoC7/d2DuUGZ97Ddakv+o4UWHJ6C96029qUeZDfFy8bzWFYHM
kzDEYl3/wbOZjZDUvTkx8W9Nh43hYHDFNvUK8xQ0VlxdNSCWeSr+XNihPmAh
8zSIkvUzQzsxT0e3w24LDC897/AMHNC6uHtIGPNMvFx145/BFGYTTBrmMG7J
u2cdngWD52q/LBTMs2Hx6unPYTbMc1B+IVUm6MRsih/93u5NPv60w3Mx/aBk
2J0NzGb4+VAxYXwX5nm4r6keuyW/usNAN8nQjXrLO8wBPL6kHZrQ+KTj+nx4
qD907xzTYc586Mb6LTIexK4vwOHsf3+GHnjccX0BnK8v+vbHqMMqC7Hq1kyz
J6eqOq4vRMCOhVOsJnVYZRGGlWWkchSPOq4vwsQ1hrXZnTqsshjjFkzv83XV
w47ri7F7yfuwzikPOq4vgY+msHxX1v2O60tQ4tC76op2Zcf1pfiZ7HCy1LjD
nKV4VVsTcWI5u26Osb12jUxyYtfNcWvYhjjzCHZ9Gfxnm/K/Ctj1Zei38teU
hKPs+nJM2nLRvMt1dn054m4MLdpWy65bwHe6ptO5H+y6BY5HNY//2rvjflUs
YW7p/EFLj92/JRrSNsaNmMeur8Dwh6qVfdex6ytwOeragU/e7PpK2FWOfX0i
gV1fiX93n63brGDXrZCrn//062l23QoFTVtm+9xh163xeNnjZQ8bOgxrBI95
UjWinX3eGup3hh6y0ep43iXWyD0C7vYJ7Pnb4MiP81ae8zsMG2zceffoarsO
c2zwb1+s1ygfdt4GseFyq6p4dn4Vorty+/nI2PlVyH0V7N90kp1fhc9jNcav
vsnOr4LG7txPsjp2fjWq5b2Dbn1n51fjec9iv1p19r6sRuzKZH7VqA6XrEbe
iXuJBTM7rGKLWykb2rxXdBi2yJrlyNV0Yudtwe+R9FUQys7b4umAh1d/p7Pz
a6C95NiuRXvY+TVI4bw19Cli59dgvWHBv/A77PwaCEblnnR7xc6vRZ5u4fNp
P9n5teivsan3K3XWh7XILIh47q3T4ZK1eHY94P6zaawf69BSahAxdlmHsQ7/
vo5xWbmJnV8H1ZscrTV+7Pw66J8frjErnp23gyB91/02MTtvByvn7AbhEXbe
DhNTdl7rU8LO28F+0u/3Tg/Z+fXQG/GqKus/dn49Rklc/kjb2Pn16Ltx1tOd
Gh19L1mPw9UX6maPZP3fAI/60Qn3jDuMDdiZcBimi9jfFxugH3wnhrOWnd+A
iF1+l6Xu7PxGtCw33JYezs5vxBf78K+2aez8Rnxq73T3i5yd34jPeOztdJyd
t8e9/y6aHyxh5+2h9yai8up9dt4ek/brRBx/xc7b42nhymveLez8JlTIskeq
qHb8fYdNeHL6soZTf/b34SYsS9PrIdLtcMkmXMzsJZROY38/bobwcNNM30Xs
/Gbsc3ke3N+Wnd+M14Pv1SY6sfObMexNN5UKf3Z+C9bfXufzLJqd34KMw7HX
i7js/BZoBabtdc5l57fAYkHXYy+OsvMO0H7gkD6muMM6Duj73LRlegX7PgcM
rT8o7F/dYQcH3O3kM/3yG/b9DpjrvkwwvaXDeQ54WzsuKkSl4+dDiQP6LN54
M65Xh+sdMDKycsWmIeznx1aMzzT6rKLXYZ2tuFLcQ+wztcPYCh+rj7MPzuuw
w1Zs/hH94KgF+3m0Fa/5iq2R6zqctxVit+Utg5zY/K34kV4mifRm87ci/1lc
wLEwNt8Rh0bo7zoUx+Y74t2PbVb+mWy+I+Za9DjZVcLmO6Lt+BFVl71sviNG
/3c5hXuMzXeE4WWLzKQiNt8RBifKnVdcZfMdsd7no3PdLTbfCXX1/s1mVWy+
Ey49euXtWcvmOyGjauVK97dsvhNKYvp1mdrM5jvh6uO07nda2XwnOF998nxG
p46f5yVOkMVHdvXr0eF6J3w2NOwT0Zf9/HdGndgtyW5wh3Wcscl/dtfuozoM
Z9zd/t/wJP0OOzjjyASBd81k9u8FZyw07iJSndnhPGfkDZ09u5MZm+8Mu8iZ
fx8sYvOd8SJ/T2q4BZvvglV7YtNbbdh8FyyO+VSwwo7Nd4Hh9kt7wzez+S7w
c101mOPM5rvg6RSzks0ebL4Lys3ULQf5svkucPz43edQEJvvghCTY3XaO9h8
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
dVUSyj8GpusuzlJQ/jHwO6om20X5x2Dhkjnteyn/GDR6rd2QT/kr78dn45nD
lH+M8uevheZxyj8GNQb67icp/xi8Dv168TTlH4PbZYf7nqP8Y9B1wxqnYso/
BsYRzScvU/4xmOC/U+Ua5R+DTtEqltcp/xj8+RiSfZPyj4G87U3Nbco/BuJ3
FqMrKf8Y1P095PKQ8o+BNFz1wGPKPwaT5Ov/e0r5x2DG/sNjXlD+MUh99Htz
PeUfCzNXC/Fryj8WcrH03n+Ufyym5X9SfU/5xyp/X1tg8onyj4X9Ctm2Zso/
FlPsfotbKP9Y3Jiw9foPyj8WT//c/dJG+cfCqceSoX8o/1jsiruxQGUGyz8W
vfbbundhtouF456m1G7MDrGQnRAe7cHsHoufqivvaDD7xuJL5YAPfZhDY2Fh
/rmbFjMnFt3lz3UGMifFYrtKjclgZm4sVPZ8WTmMWRyLrMLhTiOZ82Ix1Xlr
0Gjm/FjMqr8YP5a5QPl8104T6DMXxUK3pSzPgLkkFpqvAw5PYi6PhZ/NvEJj
5spY/HYff2Eac3UsDq6eWjKTuT4Wl2dvvjabuTEWN5ccLp3L3BwLae7QUjC3
xsLWs+DKQmaVOGx46HFxCbNaHBx+WZxdxqwZh63d1hy3ZNaOw76hifusmHXi
cGnT65xVzPpxSPnskbaG2SgO01pGRNoxm8RhSoqK50ZmxGFZleb6zczmcUj9
Zr1oK+Ufh3Xdr050pvzjYG/oMsCN8o+DKHrO722UfxxsdZfUeVL+cZhsnHDF
h/KPQ//S9l3+lH8c0HqIE0T5x2F+I29TKOUfh+9HT5rsoPzjkO7Yu99Oyl95
vyP2v+NQ/nG43hZ+OZbyj4OregY/gfKPw9tt9S7JlH8ctA0CZqRR/nEY4by0
ayblH4eA8Zsf8Cj/ODRkFMkFlH8cBAfWuYko/zj8jTedLKH84/Bljvt3GeWv
/Pyz5+dyKf94OPuLI3ZT/vGYoZU7dx/lH49Zt5vbD1D+8fhyOOP8Ico/HmYl
YcFHKf94rBt4yqiA8o/HnfNz3p2k/OOReq5/3mnKPx5Phs9bU0T5x2PV1wtq
Fyj/ePxE2vmLlH88hmud8Cih/OMR4mcw+BrlH48Bzu1lZZR/PJy+6vqVU/7x
mDBm/5BblH88sto5V+9Q/vEYGXfGvZLyj8fpS0t7PaT84yEsmF5QRfnHw3FT
tE015R+PIeUGX55R/srva5me+YLyj4dxfZ5BPeUfD3+u1/VXlL8yD1X5ljeU
fzw+zDH6+Zbyj4flDP3095R/PCZ/jR/1ifKPR67X8sLPlH881PYHL/5K+cdj
jli96hvlnwAv9HT6SfknYIYk4HMb5Z8Afp55eDvln4A3K1K6/KP8E9AinZXa
aSbLPwHvY9f1VWU2SoD934bsbswmCZjf5bV2D2YkoDV5lUSd2TwB5snThvRm
tk7Alp/JYk1muwQ8uLl6gBazQwJyv2dxBzC7J2Cij3lPbWbfBCyfEBQzhDk0
AZOGDGkbxsxJQISxifdI5qQEzHOsfDmKmZuAJvnr1brM4gRsq/IvHcecl4A/
rTunjmfOT8DWVrVdBswFCTh7tW+vScxFCeAukYQYMZck4K3fnvopzOUJ0J0y
yXw6c2UCRgTOOTaTuToB2rq3+81mrk/A1Ykvg0yZGxNgGrHjiRlzcwIG/JLO
nM/cmoBlvIXChcwqiVhsENCymFktEQ0FBlbmzJqJCOjpfXA5s3Yijo2c03kF
s04irjzhr7ei/BNhMTjsuA3ln4iNFR+62FL+ifCv/Lh2LeWfiFjNyHw7yj8R
37zlrRso/0TI761cuonyT0TFgCzBFso/EbN03eu3Uv6JGPHi/gRnyl/p0ZUB
rpR/ItY8crrgTvknYvWj9E7bKf9EDO9stcSL8k9U/j6Qn+xD+Sci0Flyy4/y
T8S6teM0Ain/RBQ2W1oEU/6JqNXskxxK+Scij+9VFk75J8J0zTaVSMo/EZ7G
XWZHUf6JcOxi6h9N+SeifF//g7GUv/L5f02vjaf8E/H+Wn6/JMo/EXZfXRan
UP6JkK69HpxG+SehuLxifwblnwQzncAqLuWfBJ1p1zrzKf8k1DwrmpRN+SfB
9f2a9SLKPwmTTaQxOZR/EsbkJB+SUv5JOPxy1H055Z+EI2+cf+RS/klIDl09
ZDfln4RRXk2meyn/JNzPnrF5P+WfhMBSw535lH8SnCruyw5R/kkIDh13/gjl
n4QuuQaPj1H+Sajr9aq5gPJPwhbB8p6nKP8krO/kOvo05a+8nzHTZ52l/JOQ
dqNo5TnKPwmfL3xxvED5J2H0nfqgi5R/EiJuJCRepvyT8CS4QXSF8k9C5v5f
+69R/kmIHlVRWEb5J6HXydVXblD+SRg0Wnz7JuWfBNU54se3KP8kXCqzrbtD
+SfhZMrd/+5R/sm4b9Pt033KPxm8V+1fHlL+yfjQ5dT3Kso/GVsixrc+ofyT
8aXv1ranlH8yJqRsaHtO+Sdj6KGBrS8o/2TYzRB+r6P8k/Hn69MvLyn/ZBzd
8+rja8pfeT/qJ/57Q/knY8OnxXVvKf9kQH3343eUfzJU9a7f/kD5J6Op06kr
nyj/ZNy133b6M+WfjL8/3x34Qvknw4E/PaeF8le6yTL5O+WfjJYbRqE/Kf9k
iGpfurRR/slY2+yw6jfln4zS88fm/qH8k/Hv1y29f5R/Mgq8zml2MmH5J0Pj
XkhrZ+bKZDx41r1Olbk6GVaWHqXdmOuVz6M2N1+NuVH5fC0OpvZkbk7G7BWJ
XhrMrcnYKZ+9sjezSgomf782UZNZLQVvNHQ1+jFrpqBctvGdFrN2ClLtt5cN
YNZJgX8X27xBzPopWGk+MHwws1EKol6eXDWU2SQF3+MmTBjOjBRMaoxUGcls
noLZJUerdJitU3DmyvmDo5ntUvAgb1+ELrNDCiz7+qwcx+yegqDrg0bqM/um
YGJAXtN45tAUvL3Z46IBMycF+yNsUyYyJ6Wg09zotZOZuSkYWcwdZcwsTsH5
Q7EfpjDnpUDn3IbCacz5KTASDYyYwVyQgk3fzi4wYS5KwdGoeWqzmUuU3/f2
6O05lH8KTj7rwp1L+afArtuCVfMof+X9aW/Tmk/5p0BSHPZwAeWfgt15gVmL
KH9lvr4brJdQ/in4+Niglznln4rBnHflyyj/VGQMFMRaUP6pKFpkOHcF5Z8K
SeHJ7ysp/1Tc66N/1JryT0XSvzSnVZS/8vsMX2nbUv6pwDz9O2so/1SI67Zw
1lH+qdA9nTxlPeWfit5u+19voPxTMVB2hm9P+adC+Ov8gs2Ufyo4+oXNWyj/
VGy9tVu+lfJPxeakxGVOlH8qZqo6fXOm/FOx6PV0hSvln4qwmypL3Sn/VLhs
KG3aRvmnwmhWdPZ2yj8VuWomc7wo/1Robn9X5035p2JnZ2GsL+WvvF9fs3H+
lH8qzNe+vhFA+adir228exDlnwoVjbFqIZR/KpyGXdsfSvmnwn+sw6Jwyj8V
Ptfb63dQ/qmYpciJiKT807DSYuagKMo/DeXbHxdwKP80OMhDlsVQ/mnwjhz6
MpbyT8Pb/Ksh8ZS/8vPFXr0SKf809LYdvjuJ8k/DNfUH01Mo/zR83ZlWnkr5
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
9Z+PV30FP8mGfLxcJD7+gfrPh8h+gttH6j8fV3KXj/hE/efji23bI7IpH+lX
Z6Q2Uf/5uDepy/zP1H8+btRt/kE258Nu6PLDzdR/PmbrlW35Qv3n45d5pdZX
6r/SZdtvkO348HstCm+h/vPh8Z/txG/Ufz7KtfbUkZ35QEEM7zv1n4/NKt8W
/KD+8xFn/rOF7MvHu9tpe39S//mQ3C+0baX+8xEm8VFto/7zMW/7xVNkDh/h
iQrHX9R/PrhTtPr+pv7zceH40MvkND56LSjybKf+8+Fl+G7wH+o/Hzknjl0n
i/nQ698j4C/1n48YYeuIf9R/Pj6FR1aQ9yrfvy7iIJXZrP98TPI31+nEfISP
i2qZFeQCPm6reQZ2Zi7k4/6puuFdmIv4GGLx/jq5WPn5Pmk+qswlfDQsKBvU
lbmUjxljhZfJ5Xz4/Pzr2o35Nh/9fv3r1Z25ko8Ir5xC8iPl+8q7tUGNuZoP
6wNClR7MNXwc+vRrH7mej+N7W5f3ZG7go0Wd+5ncyMd/jlf46swf+bjbmDZT
g7lZuU/N12fkb3xUR7ZE9mJu5eNaz0yd3sztfMy6WnaVrCLApVci5z7MqgIc
O9S1myazmgDz7focIGsIED/+9NK+zJoCuNj/fEvuL8DeSY8T+zFrC1D3wkZP
i3mYAGkHPK6TdQRoL9dx6c+sK8CGqMAuA5j1BTjc3XUX2VCAO4rvZgOZjQQI
ix5TQ54mwMKPn0MHMZsIkDN04wBtZlMBSi1cTpAhwH9FvVcMZl4kwF/Fukay
uQANsxA7hNlSAMuy8uFDma2V3xfx5SzZVoAz0vM2w5jtBHDbpPuBbC9Aa/uk
uOHMDgI4n342bASzswDRV/ROk90F6Gw/cMVIZk8Bgi/vbyD7CrB43NMdOsyB
yvkVR/uNYg4V4MN/ugfJEQLUF5rNG83MEcDX+/cjcpwAVis2eoxhThJAM3Xz
P3KaAKO2dhXoMnOVeahZ649lFggw54JZMVksgPeJ+1bjmGUCLNXt8ZqcJ0Cs
5ZsgPea9AhQ7uqrpU/8F2JabJiEfEaB2tp3heOq/ABZeNy+SCwW47F2/cgL1
X4CxIfI6crEASy6p+BpQ/wUo39FTxZD6L8Dkt+czyeUC1MzsN3Ii9V+AXvs0
j5Erlc/T5YzpJOq/8vmd6HKLXC3A1EutdpOp/wIsuJb9H7legL4/nwUYUf8F
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
EeNKYKxZFvVfjPU/b2WQk8T4efxVLTlNOe/ijUl86r8YJ8x27CQLxFi96s8d
slgMtUErhwuo/2I4HfbyJOeJ8Wai/QXyXjF+Fw/umU39V+Ybst+OfEQMs/DO
B8gFYjQ2TPxOLhRjVJX+QiH1X/k83Vu45GIxvC6l15JLxHBv+Wkgov4rn9fY
KWHkcuXzDjC9Tr4tRnbbQC0x9V+5z+MrW8iPlHnpzT1Crla+Pz2SW8k1YtyX
7FuUQ/0XY11rFpfcIIbrPJsacqMYxun1ehLqvxhP/yKA3CyG9wn/S+RvYny8
EtRDSv1XPq8Vy23J7WLM9W1WkFVyULDU/R1ZNQcrmk9MlVH/c3A24U4kWSMH
HL0LN8iaOdD7HN5XTv3PwbBfGhvJ2jk47+y3lzwsByst8j+RdXLQt+LEDAX1
PwcGf9KjyPo5OKUyt5xsmINjzZc0c6n/OejzTms9eZpyXlfTXWSTHEQ5znxH
Ns3ByKHdjPOo/zlYZpEfSl6UA0nvESVk8xwoOG7dd1H/c3C/OG4l2Vp5vTYo
m2ybg82d5tSQ7XKwHo9G76b+5+DGmfnbyA45uBsVe5zsnIO4Mznfye45+BwU
N2cP9T8HXZ4ujCb75mDPryfXyYE52P0dGnup/zm41rDThhyhzPMVT0jmKJ9H
z/Dn5LgcpAbN1NlH/c9BxLwKZ3JaDhxjphwkc3Mgs/P9RBbkIKwm1ng/9T8H
JvpeQWRZDrqvNTxHzsuBKudKO3lvDuaWGOIA9V/5fhp5x5KP5MDiQ/x1ckEO
3vcI7JFP/c/Bpv0mluSiHDg8e5hBLs7BrsuL75NLcnDRJ0PrIPU/BwtVj60h
lyvnC/eKyLdzEAD/p+RK5fwhg4Yeov7nwHke355cnQOdG//JyTXKft3qW0eu
z0FPl/46h6n/OXA/2uRAbsyB28W8XeSPOWg7OuEVuTkH/0Rpo49Q/5XPR3Dd
kdyag7wL1bvJ7Tk4Oe7aK7KKBGOb4kcfpf5LkD5hlCNZTQLfb4JdZA0JFju/
rCdrSuCf1U3nGPVfAhuR6haytgTjU5/LycMkmJ6QWkPWkSAvr//Q49R/CRK+
Bq8n60vQwj8pIhtK8FZ2o4psJIHV2DNaBdR/CXov3mlDNlGe19LJJJtKcPWg
9DYZEkwe8aXHCeq/BHVJOkvJ5hJs6zQhjmwpwdrcXlfI1hKMCL/1h2wrgeFB
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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxd1nFY0+X6+PFVWJicWkXFKTrNQlvJyalUdKK8M9KlWEtRp6FORZ2KOmAW
FtUyslVYS9FmUa0kxUSbSUmJuQyPy+g0i3Iq2TJUMuysQltF9et3nef5Xtfe
/LPrtZt778/9z6Dv9IVjZp5uMBgiZxkM///1fz/xoQ+kbxrx9f1VQ9UbUmG9
eOnVa59UTpWdT3z/zPH7fMpGWfbGw5MKGlYop8va5rVvr46vUs6Q3acd/e6G
259XzpRPP360dPnrLyqbpKLg3uZlvoDyFXLuJQPz1xa+qpwl/Y5n1XzWt065
v1zav/9nkxKvKZsl97flicei65SvkQseOWyt27leOVv+9fwV35y9dYPytbLb
MnP6hW9vVLbITa5Nq/qH3lAeJKXHYg1tx4PKg2Xy+yt3en/brDxE7Ode6F1w
/hblHHn4ra827RnYqHyd+MPrpneOfUv5enFlPzzokoffVr5Bxm4rNG3bvFU5
V74Krz01sKtJ+UZ58l/rP+m89l3lf8n7x7ecMeP+bco3yUrj4EcHfNKsnCc/
vTl+19f/fE/5ZnlpZmzxTc/tUL5FYnuuCaQsDSkPlcgjndNeGv6+ssjOR26b
kfjbzv/ZI/KPmw+deqdd2XCrbElPD2/Y8oGa3yqzowdu27miRc2HyeUnX9iQ
/dAuNR8m1i/WvjHP/W81v032PtK5x12xW81vk6oVtz3ZVR1W83xJHLti8LK3
PlTzfBm4fFxK18971Px2mdvv+cNZk1vV/Ha5Ozah9tpTH6v5cBkbWJh32nef
qPlwufIi++J7S/eq+Qh5YcUy85xen6r5CPlh9RUvNvqVDVa5+LL5t08Y8Jma
W+Xzaesfv2u7suEOWd2n4/0X7mxT8zvk0puO3PGvr5QNI8X1Zeb8qxd+ruYj
Zdhon2v2H8qGUZI690Pfj9VfqPkomT5q92kfXrJPzQvk8nfi33euU/YUSGR5
6gO2nKiaj5YZhVmh33coe0bLZ8fqPvl+5H41v1PWnBr0Zt/PlT13yor41tk1
Uw6o+V0S/dN5LP+Ysucu6ej3/uWDFh5Uc5sE31t2avwpZbHJjA0Ja2Nlu/p9
mxidz303/PQv/+eQTfqNfej1tMeVDXdList+xxl9Dqn9u6XXD48+an5a2XO3
fLBvSNr9xq/U/t0y6vdVT598VtkwRnrNO31CQe+Y2h8jh67MeNRyh7JnjLzv
Dl641qscGiO9qyZ+vmG3smGsvFE88DE582u1P1bOnXXGken5yp6x0t/2+Obz
liiHxsoX71bWjdqhbCiUwKZO97k9er9Q1jWP2ndP7mG1Xyh9th16cKBbOVQo
0+5uy3jiDWXDOCl7+OXxs48ryzgZPXxoRzjrG7U/Tq5a/cz8hinKoXEyr+nl
F41+ZcN4abjwnMu7I8oyXn46MKd2XO8OtT9efrjm+dCQW5VD48V8zagbllUo
GybI3gOOjY43lGWCOP+zcG/DEb0/QS6rv6nQdekRtT9BMmfc9O16m7LBLu7h
V46wP6Ysdtk5y22+/x1lj12ueeq8gnNO6H27DJD9iy4wHVX7E+WiffkLvWOU
ZaK8kZKWWlKl7Jkoe1taL9r+lnJoouy4dOvi+4/q/UlSLXkXr7nomNqfJPZN
oUPXDVf2TJJt1bYPBy1SDk2SAZ+OO7ByjbLhHul/712maXv1/j1yc4/3reV/
6P17pN/KvaGrB3Sq/Xuk9azB9/aboGwokgVPBi5+bImyFMmu1zefHLFR2VMk
fSff7pq/T+8XyX35A3/uNnyr9ifLilv3n33oamWZLDvGfZVnHqPsmSyuI2ss
ny1WDk3+6/vg4AuHAnp/iry39pwRI3fr/Sny2wPnn3PRCb0/RSY/5I7dev5x
tT9FWpYcfP/j65UNU2X51Hv2vDNJWabKDTnb+p/5kLJnqkx9YWPGloDenyrD
b/31VGin3ndIdIH/n5YOZZNDtg5+9+bTen2nPs8hY7/bvT2nn7LDIb+cWzDx
o3xlj0MmDv4ksmuGcsAhx0bX/ZK1RDnkkH6rXtv+7cvKMYfcZzx8yYXblQ3T
ZLMj78r6/cqmaTLojt9+W3NS96dJzX0FX/Y+r0v1p8nS0e+ed3CAsmea7J+z
8mTGcOXANLGHx5xqmaocmiZ/TPnq2ViFcmyabMw+Pm7+s8qG6fJgU7+vStYr
m6bLRb2XRGMhZZkug/o6ft2zT/enyy3nhXr/83vdny6HNs3dl5pyQvWnS6Mh
Y6jj78qh6bLVuaL/ddcqx6bLt75DlU8MUzbMkHUXFt44dbyyaYaEDu2Z1DRH
WWaIP23b0VWVyo4ZsunumZ09Tyt7ZsjiJb8v7Aro/gz59qL9z85+U/dnyFbr
qzNdH+j+DDk0x9erd5vuF0v+H68tG9Kh+8Uy8IKTl/z4k+4XS8ctx/cMP+N7
1S+WxKsvvTvkfGVPsUzKG3TmNpNyoFhs268KH7pWOVQs8X/sy3glTzlWLH36
tP0tZaSyYaa4Bs17p/cEZdNMOeTre03jDGWZKc8E8+b2cun+TDncPObhPx/Q
/ZlysvTwnLrHdX+mXLbxx6xTy3V/pqx97p3XTr2o+zP/+ns/6uC6et2fJX1r
7tzUZ4vuz5IfJm4zZG3X/VlSdlXtxh//rfuzZNDXUe/iiO7PkhFrzpz67n7d
nyV37rr55NuHdX+W3LHiZGrpd7o/S96598hdx3/S/dniH/ndfVk9uj9b7l15
qn/flP+q/mzZXpz49es+yo7Z8tRj+55wXqDsmS1Dos5pb1+iHJgtZz4476yP
+yqHZsvk572/bDQrx2ZL6MHxGycNVDY45Y+DU3xt1ymbnFJz8qrUy/J03ylr
Z0vZdcN03ylXl4/Outyq+07ZsPTSkoOjdd8pg/cHn5k3VvedcuzotI8jdt13
ysZXj92TNkX358iBQffNvXyG7s+RXb0Pmvo4dX+OrLEuezlSovtzpKvfZ3+6
SnV/jpxp3z/2xCLdnyND79q7dvj9uj9HRpnP/f3Bh3R/jvx8o7mwZonuz5WO
K89f8+RS3Z8rX94+7MC0J3V/rvR64uNvLnla9+fKYzO9a95+Vvfnyujzrvr5
upW6P1fe2jX57dV+3Z8r1/U5bcvhF3R/rhz8rd87572s+/Mkf8GwZ656Vffn
ydCeglNZr+n+PLlsf/v6s+t1f55cPP8Ox/7XdX+efLHhwz3PbtT9eTL5shUr
c4K6P0+Knk3M3vmm7s+TjxZ5O256S/dLpHTPNetf2ar7JbJuwy13db+j+yUy
d+HWeTnNul8iZbYbn5n+nu6XiGvNdcMfDul+iQxfcebfn9qp+yXy3LSzq5e2
6H6JFF393uVl/9b9+bK5b9R2Z1j354tz6jT/pXt0f74sSv9k3oGPdH++FBVc
evNTH+v+fBnR78v7r/1E9+fLusccvpaI7s+XR+/cfmT0p7o/Xw6c/f1Xez7T
/QUSzDwau+lz3V8gjzrXjXjlC91fIDd7Jrh+26f7C2TdnYWNI/fr/gJpzLfO
feaA7i+Qs86+5eiHB3V/geS8uWXxr+26v0CcFRvL+x7S/YVy7hlh09CvdH+h
TB008qOxMd1fKPXu67dN/Vr3F0r/rfdcP+Ow7i+U8k9neqZ8o/sLZfVzJw7c
3aH7C2XDXO9jNx/R/YXyD/e+7X2P6r5L2ues2vGHttElg39c39J2TD+PSza/
+s9edZ3KFpdc/eIjW0u+1c/nknDrBOPA48o2lzyxKzTsO22HS34Zket55Ttl
l0sembc5cXeXfn6XmEtfPdCj7XNJQoxjXz2h73HJTytWLxv2vXLQJe+2PtL4
pXbIJTs92+Ll/1WOuKRf449zesX1vS45+eGq4cu1466//p/u2HDJD/r+Ulle
d2L7S9rGUslZ8trL//hR318qg6cfLXte21IqLeEH7Of/pO8vFVvZNa6l2rZS
6ZnVFD2l7SiVc/Z2vzGjW99fKiee23H+x9qev3rvGy8bclLfXypPrv7z25Xa
gVJpWvvhipPawVJZXbx/yJhT+v5SGfqf1sMbtCOlEm18oOn0n/X9pfLGkd8/
Gq8dL5WNps1D6rUNZdISu6XXz9rGMpn/8yvjbkvo+8tkY8+AG5dpW8pkV82T
H7RpS5m0Vreedckv+v4ycX4yK2OytqNMPhx841kvabvKpHffFUfatT1l0icz
t+Xvv+r7y+Tby4q3FGoHyqTni092LtMOlol3T+Npu7RDZfL7yL0P/aodKZMP
xpdYr/1N318mq8ZPLHFox8tk6Hu//ezTNpTLat/IxA5tY7ns3P3Z4hPapnIZ
9uoO79979P3lcsYXn1nytaVcvlx/74PztW3l8vCpzYtXajvKxXXu9ZZmbVe5
xGqKNnyt7SmXtIEDTvb6Xd9fLruHjL/4au1AuZy4/rZLR2kHy2Xc0j5nl2iH
yiX+7ENdT2lHyiUgWR+9rh0rlzmDh24Ka8fL5an4f148om1wy7lpy1857Q99
v1umDUh9P1Pb5JaZZ7nPuEHb4pZa+5cLbdrilrbG8/82R9vmlv9M3vC1R9vx
1+ed1rv7OW2XW1bNmzhyk7bHLX0G+I9/oO1zy9Vm34GodsAtSwd+efkJ7aBb
Di88scPwp77fLRd2nR66QDvilqlf5/Trrx1zS8kVpd03aMfdMnn2g4Pv0DYs
klErEt9M1DYukrL/3vO3udqmRbK4qOfNxdqWRXLh/X32e7VlkYzY5X/0OW3b
Ilm3cfnbr2k7FsmhV3Yv2qLtWiSvXXCsJaTtWSS+8iXrPtb2LZKvs87pe0A7
sEjWzzmcc1Q7uEjmjMg7+sP/3f/X8xXfkvv7/92/SP53V1zdD8dhw73JNsIm
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
         
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 460, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{"ba", "\[Rule]", "3"}], ",", 
           RowBox[{"bn", "\[Rule]", "1"}], ",", 
           RowBox[{"z", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vs", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vh", "\[Rule]", "1"}], ",", 
           RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
           RowBox[{"u", "\[Rule]", "0.05`"}], ",", 
           RowBox[{"pa", "\[Rule]", "0"}], ",", 
           RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"LsO", "LhO"}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.772523305084457*^9, 
  3.773388851094153*^9},ExpressionUUID->"b861b6f7-ad11-4400-a579-\
7b686b294e23"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
cFWr9rNi1+oPpPdhRfbC/aoDrTj97AHp/VjxTIfkECuC9tRI78uKbrMPqg63
YrrfIen9WbF8h+RIKzqGfyi9z5vz/5EcY0WPmFrp/Vqx6CvJJiuWTvlIet9W
LGyQbLFiW8TH0vu3Yv4OycVWXPI/LO3DipUJksusSDku2WmFV+dWXWmFf4pk
lxWPH5VcY0V8zyPS/qzoOkVyvRW6DZI9Vvz0leQmK94I/ETarxVPTpLcasXl
5ZLbrejiltxxc59/SNbkw9bvqLT/fOgNkrX5qMiSHJiPaxWSdfmIapAcko/q
3yXr8zGmV520/3w88pxk5GPyVMmR+biaKtmQjwfWSI7Jx5ldko35GHRcsikf
L30r2Xwz75pkSz6+1H4q7T8f5sckF+fj76GSHfkoekVyWT6CZkt25uNkkuTK
fGwskOzKx+Y1kmvycW6rZPfN/nsk19/se1iyJx+DGyQ35WNXk2RvPla0SG7N
R+Nvktvz4bgmuSMfx7p+Ju3fhtyekv1sONRbstYGu05yoA0XQiTrbPivXnKI
DfPDJettWDdCcrgN5pckw4Y/oiRH2vDIJMkGG26bJjnGhq0zJRtt+HOuZJMN
dy6UbLbhmwTJFhtSkiRbbWhMk1xsw7VMyQ4bfsuVXGbDPptkpw0vF0mutOH9
ZZJdNvxUIrnGhutvSnbb8PNqyfU2fPCWZI/t5v8rkpts+HaDZO/N/I2SW21Y
uVlyuw0Ht0jusOHkNnn/BTj6jrz/AmzdIe+/AKad8v4L0Oc9ef8F+KBK3n8B
hu+S91+Avbvl/Reg1x55/wVYsFfefwF27pP3X4CvquX9F+DvD+T9F6DnAXn/
BbivRt5/Ae4+KO+/ADdkWwvw7SF5/wX48EN5/wV4vVbefwEiP5L3XwDNx/L+
C7BHtqsAUw/L+y/An7LdBVjplvdfgL5H5P3ffB+ymwrw5Cfy/gvwnuzWAuiO
yvsvwJuyOwpwTbbGDmOdvH87jsjW2tH3U3n/dqTJ1tlxQnaIHYGfyfu3Y67s
cDuqZMOOdtmRdgw6Ju/fjqWyY+x4V7bRjguyTXb0qpf3b8cY2RY70mVb7dgu
u9iO07IddlyXXWbHo8fl/dsRJbvy5vPKdtmxRnaNHftku+3wyK634zfZHju6
n5D3fzNftteO4bJb7Zgqu92OBNkddthkawqxTrZfId6TrS3ER7IDC3FKtq4Q
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
neQKciW5iuwiV5NryLVkN7mOXE9uIHvIjeQmcjPZS24ht5LbyO3ky+QOcidZ
s57uP9mP7E/WkgPIgeQgso4cTA4hh5L15DByODmCDPJociQ5imwgR5NjyLFk
IzmObCLHk83kFLKFnE22ku3kYnIJ2UEuJZeRy8lOcgW5klxFdpGryTXkWrKb
XEeuJzeQPeRGchO5mewlt5BbyW3kdvJlcge5k6zZQPef7Ef2J2vJAeRAchBZ
Rw4mh5BDyXpyGDmcHEEGeTQ5khxFNpCjyTHkWLKRHEc2kePJZnIK2ULOJlvJ
dnIxuYTsIJeSy8jlZCe5glxJriK7yNXkGnIt2U2uI9eTG8geciO5idxM9pJb
yK3kNnI7+TK5g9xJ1rxN95/sR/Yna8kB5EByEFlHDiaHkEPJenIYOZwcQQZ5
NDmSHEU2kKPJMeRYspEcRzaR48lmcgrZQs4mW8l2cjG5hOwgl5LLyOVkJ7mC
XEmuIrvI1eQaci3ZTa4j15MbyB5yI7mJ3Ez2klvIreQ2cjv5MrmD3EnWlNP9
J/uR/clacgA5kBxE1pGDySHkULKeHEYOJ0eQQR5NjiRHkQ3kaHIMOZZsJMeR
TeR4spmcQraQs8lWsp1cTC4hO8il5DJyOdlJriBXkqvILnI1uYZcS3aT68j1
5Aayh9xIbiI3k73kFnIruY3cTr5M7iB3kjUb6f6T/cj+ZC05gBxIDiLryMHk
EHIoWU8OI4eTI8ggjyZHkqPIBnI0OYYcSzaS48gmcjzZTE4hW8jZZCvZTi4m
l5Ad5FJyGbmc7CRXkCvJVWQXuZpcQ64lu8l15HpyA9lDbiQ3kZvJXnILuZXc
Rm4nXyZ3kDvJmk10/8l+ZH+ylhxADiQHkXXkYHIIOZSsJ4eRw8kRZJBHkyPJ
UWQDOZocQ44lG8lxZBM5nmwmp5At5GyylWwnF5NLyA5yKbmMXE52kivIleQq
sotcTa4h15Ld5DpyPbmB7CE3kpvIzWQvuYXcSm4jt5MvkzvInWTNZrr/ZD+y
P1lLDiAHkoPIOnIwOYQcStaTw8jh5AgyNkPj+/t/O2RoCQ==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
M08o+cko3HjN/NApJT8ZxyZv3ef3K/mzcfZcxo+T/qvkz8ac1btmfPiVkj8b
AwxVZSH1Sv5sDO/92/nB3yr57X//xiLX2AYlfzbGPZ3UEPe9kj8bcdf3XH8g
oOTPRnVBVafff1Dy56B5yGbDrvNK/hwY0u6PHf2Tkj8H2Qv/SPnvz0r+HFx+
K/L1+CYlfw5ydT/s3n9ByZ+DX27andX1kpI/B1fsv595rlnJn4PO/Z1rnb8q
+XPxw28/zdh7Wcmfi+wxvhvHf1Py5yLjAdsdp4NK/lxcOXF59MkrSv5ctDSe
jDn6u5I/FyN+7pm74w8lfy7Onq1zSy1K/lx88dnEAROuKvk2jFnr2N3zmpJv
w8ZjnV+pUwwb/g2/MKb0upJvw5WIzEmDWpV8G04efrv314rdNlgaX/nX/qeS
b8M/34XP6vSXkm9DacH3212KdfPwQdz5u+76W8mfB/+b3e7YoBjzMPCFQb/0
aFPy58ETnXJOUizNw/lufeIuK3bPQ4eRsVMn3VDy5+GfdxbOek9xYB6OWaO3
9vxHyZ+Phq09Ri1WbJyPfs+9se4TxZgPa8FXR3r+q+TPx6Dlna4mK5bmo3pB
yIJ9it3z0aafNbFFsXc+ymoS6wbrLsv583FrZfe7MxXrUnD7wQ3x7yg2pmDg
xvvWXlKMFHw1scOtfW+SbU3BtcbPfnpBsZSCkZ5pQ5YrdqdgUDd9v0OKvSnI
f3/3Jz8qDqRgz+aSp3p0UPJTcdvY7TseV2xMRXf9njuTFCMVHa+F7pIUW1Px
TVj3xW8qllLxZVTNihrF7lR4Xh7ZuVGxNxXdRrz2100dlfz2vFpf1j2KdQsQ
daNtw1DFxgXw5mRYJyrGAny3ecuFFMXWBch9P+yZIsXSAnx1T3XG64rdCzBi
YtWGfYq9C3D1njn7jqn5C7C/w/7ar9T8hfj4+Y/aflHzF2JEc/+xf6r5CzH8
lV+Pdu2k5C/Emk9W23oplhbihYNdn4tU7F4Iafi3WYMVexfi6ce6XR2hOLAQ
XzcM9FkU6xbh8+35fycpNi7C+j7VG22KsQjXbx25LU3NX4SpvUx989X8RWh8
NMpYquYvwt1ny7atUfMX4VxCSdUmNX8RHhn13qg31Xw7rr68L2OvYr0db1Rs
fWq/+n3seOKWgp2HFZvsSJx96zsfqd/PjjMpvtk+xRY7xjX+/vEp9fva4Rvr
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

         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 460, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{"ba", "\[Rule]", "5"}], ",", 
           RowBox[{"bn", "\[Rule]", "1"}], ",", 
           RowBox[{"z", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vs", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vh", "\[Rule]", "1"}], ",", 
           RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
           RowBox[{"u", "\[Rule]", "0.05`"}], ",", 
           RowBox[{"pa", "\[Rule]", "0"}], ",", 
           RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"LsO", "LhO"}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.772523305084457*^9, 
  3.7733888620294237`*^9},ExpressionUUID->"11f1cf88-4867-480f-878d-\
fae994630832"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxd1H940+W9xvGgc9Rj1egqRqkuatWAHSdixcAqfMAqEapGLBKgYmgLBCiQ
tmmb/nBGRI2uYNRO4+gwzg7j1mncqRoPBSPWmc2iQQpULRKkSGRVAnQYtWOH
cy3f5Nt3/8n1up7r7t27T59eUbZmzpIzNBpNdLRG8/+f//lKTPvPZyz1qZEz
TzTmzvpyf8pZcn3eQ8+88J5irVxcdyT540uKc6Tg67NeXPCwYp1UHxrf9uZi
xblykWPf6/81TbFezvmwfuHdYxVfKVNGzdq27uQXKedJcsNlf9gUVXyNPNma
1eB7RbFBLt3imrzyIcXj5ei5C2rOtyrOl522yTc98AvFE+QMKTyvY5Rio1z0
0rvfPN27L+Xr5bUldeMMmxVPlCWPbipfXKf4Bsk6NLPphlsVF8jJnGzX0xcq
vlEqs4eqq77oT3mSTD2VbNoeUHyT3Pdzd1NdlWKTHGo/+/wHTIony3Urxtq6
//V5ylOk+F/XD5neVfxLkacmOt9fq7hQyuOrl8+Zofhmue6u8Dfv//uzlKfK
P0JrZ5+5RfE0Oatk8uNHahSL/HDXrZ/PG5+yW2TDxeOHrvzi09T5dPn1Lbnj
Ln8yZfd0mbTlhdKLblbOZ8hVhy/d2HO4L3U+Q7YtXVp8akPKmlvkoh9+/7F1
onJ+i+Q/F5KmnXtT50Uy4ebeM46tTNldJDv/+eKq60Yp57fKL8Zctt7l3ZM6
v1XGa5sv+qcuZc1tEv6+R1v3/O7U+W2y62e/mFuuTVkzU+LHXvTXNPWmzmdK
zqH55qv37kqdmyX/6p0HPJel7D7tp5Lf753xSer8dhlyLokuvHZn6vx2eW3q
5FEfvLcjdT5L3vH37N22P2X3LFn215wttT8q57Nl65yfHjky5qPU+Wx548pH
Nlw2MWVNsWy98Lmu7DuU82LZ7H2m6q1lyvkd8sTlc57JXauc3yF/Xbbg6JQ2
5fxOeePiS6Zc8KZyfqc8d8tl5236WDm/S/7+bdk/9seV87tk2g+vTdo96uPU
uUUW/vnsyc2XpiwWsfzz9p/vmpiy2yL31fZ/v3dWyuHTfryjy1Om5O+WW5fc
Oe1gg5K/W8b9avXNh7xK/m6ZMO+ZeS0vK/m7ZfazU3P2bFXycySwp/HAO7uU
/ByRYwfHzPxayc+ReXfelLSfUvJzxPhMYelTZ0dT+Xvkvbx920I/S1nukTt+
eG/iK5el7L5HfnvtT29dfG3K4Xtk4/hjD+83KvkSGbvhjrVXTlHyJZJlOfmZ
4RYlXyKej7cWHJut5EvkaOlvbmssUfJzpbo9/vn2UiU/Vx6afumnf6tQ8nPl
8+xzZEOlkp8ro1Y+XXC+U8nfKwfMH2qKm5T8vTK79+JLitYq+XvlI+/Wn3/n
UfL3yqGFw4crnlTy8+Sq0kdc63+j5OfJkb9MObdqo5KfJ4bvrtZpX1Ty82T8
+89PX7lZyVvl6JsNyx7+k5K3irfxTxvnB5W8VT44e8sVRzuVvFV2fbx95a1v
K/n58tnqV8cs2qrk58vwwycOTXlXyc8//f9w/7Z93Up+vszc8dxL5oiSXyDn
2E7++YEPlfwCsVfM+a8HP1LyC+SMrLLjd+5U8gvk8O5bA0d3KfmFkvfpnqry
PUp+obTsNbd29Cn5hXLqrAmWHZ8p+YVy+K5D+z7oV/Klp/++XCs2faHkS+Xp
hiM598SUfKnsPj/5j8MHlHypPPiyDC46qOTvk8Mr9p56e0DJ3yfPP3F98odD
Sv4+eaNpxXNXHVby98nF5+5+5Ma4kl8k0V9E7534tZJfJO75ex4be0TJL5K9
x7e5jysOL5Ljc8a1hv6h5O+Xfx89W7NmUMnfL7/+05xvx3yj5O+XBecHa19X
HL5fgt/N/e20b5W8TRr27blzu2K9TT763ajaKUeV72eTywq3fxFQbLPJB6+e
cdd5CeX722TzrMcbVyr22+TGvk+y3lUctsmK979qPf9YyjGbXDMj79V5ijWL
5Zny0Z8+r1i/WOr/fOjJPYplsXzve/GW844r/Ytl4v6S0umK3Ytlk/PYZIdi
/2L5evqnBRsVhxfLH96p3LRdcWyx6F/1vvuVYk2ZbL7+uoOjTyj9ZfLcZt+M
axRLmTzl0V06Q7GtTHJ3THxhoWJ3mRgvGnNmjWJ/mSQvOVrtURwuk5Ohybo2
xbEyyT4j+5JXFWvK5eWXF/q2pfvLxTBh6ps70v3lMrYgz/t5ur9cBg3a6fF0
f7lsfi9y4ES6v1yyHhv9+Kl0f7kkN740O2tI6S+XC2e+XXiBYk2FfDX5o1WX
KNZXyLzh49/qFUuFbNp84KNrFdsq5HX9pWMnKHZXSI5ueP8Niv0V8rdPvzBM
VhyukNemXKuZmu6vkMAbC9fMSPcvkX0HJz14W7p/iex2hG6ale5fImtfKfDf
ke5fIsPby96xpPuXSPOJ5RvvSfcvkfPqvpl8b7p/iax/8mK/Nd2/RDpeeemT
Ben+pWJ67vDu0nT/UjH+rP/Pi9L9S2XfE3mLbOn+pXJw+pgji9P9S+XbfdtK
ytP9S+XFpUf8Fen+pTLrfcPOJen+pXLWx58cXpruXyYXHDzv8LJ0/zKRa3ZH
7en+ZfJR+YnNy9P9yyRno3blinT/MtFND16+Mt2/TGYW3vhe2uFlMtE/ML8y
3b9Mfj8hfjBtjV2O/d5Stirdb5exPRfvSVvs8peGK2V1ut8uNdNmvJi22y5D
F970Q9p+u7T9NTh7TbrfLn+rsDybdswu0VWvfJa2ZrnM+nHGJY50/3L5+u++
OWnLcvlyYu5jaduWy85RN76Vtnu57Jg942Da/uWnf38bz6lK9y+X7+550ph2
bLls/XLZnLQ1K+SNLcuq0tavkGev7VmftqyQ7pk7Xk7btkJmPLLpnbTdK2TW
ydW70/avkPu3LP86079Cnih588dM/wpZc9SVXZ3uXyk7Xv1kbNr6laIZPDAu
bVkpw9XbJ6VtWym3vL1+RtrulVKgXXhH2v6VMm7XtHlph1fKH5+6y5Z2bKWM
ndRmz/RXyrXjJjky/ZXy39X59Zn+Shm1u+WBTH+lnP9N+cOZ/kqZf9tWT6a/
UoqcL63P9FfKQ9fon870V0pBYeGzmf5V8sDufz+f6V8lLeXVv8v0r5I5b/3W
n+lfJZrzH3wp079K7rvy6s2Z/lVy4YSnA5n+VZJ16u9/zPSvkgMnd3Vk+lfL
Hy9//dVM/2rZkbc0mOlfLQuXn3w9079atpy55H8y/atle6SzM9O/WiyW+BuZ
/tXi+GHUW5n+1TJ66MxQpn+NXP3LRMb6NXLi95G3M/1r5O69G/43079GrrAV
bcn0rxFL+5GM/Wtk4+Darkz/GtEtPW9rpn+NtORtyFjjkMfzztyWttYhFXes
zljvOP33F83Y6JD7541/J/PzOeT2juaMLQ5ZmxPJ2OaQq64+N5y2wyFvLy3O
2O2Qe+99NGOvQx5duiVjv0MKNIMZBx1S/7Du3cw+h8wxT8846hDbC0szjjmk
9hNPxgmHGK8OZKypkgd3d2esrZKxufsz1ldJMv+7jI1V8qebzt2e2V8lf1t2
RcaWKik8dEPGtip5urcoY0eVmOeVZOyukqyWsoy9VfL1hjUZ+6vkDw1NGQer
5MPyRzMOV0mizJtxtEr6nng+41iV/O6bFzNOVEnvxlcy1lRLR3swY221nDfm
rYz11fLWcFfGxmqZU7Fdtb9aNsz7QLW/Wm6MfajaXy1TR0dV+6tlf+8u1f5q
abPsVe2vlvkPfabaXy1LVu1T7a+Wxy6NqfZXy9kbvlTtr5bungHV/moZ9/lX
qv3VYt4aV+2vkc/qjqj218jt5wyq9tdI5wPfqPbXyHfRb1X7a+QvoxOq/TUy
K++Yan+NnDAcV+2vkdcuPqHaXyPzjqvsrZGN/zuk2l8jo6v/qdpfIz+99KRq
f40M/I/K0RrZKd+p9p8+f1flRI3kmpKq/U4pa1dZ65T1o79X7XfK4jKVjU55
6g2VxSnbR/2g2u+UJ2aqbHOK8zGVHU459a7Kbqds/E5lr1PeNPyo2u+U4FyV
g0458CuVw6fz7SpHnTLuA5VjTvn4K5UTTuk5c1i1v1bmX66ytlb+OEllfa0c
LVbZWCtzF6sstfITp8qWWrniEZVttbKjVWVHrVz7ksruWikOquytlXldKvtr
ZdEHKgdrxbVT5XCthD5TOVor1x9UOVYrQ0dUTtSK9rh6f508k1Tvr5PHT6n3
18m/z/yXav9pZ6ksddJ6rsqWOvnrBSrb6mTTRSo76uSqS1R210lprsreOrH8
XGV/nfzkSpWDdfKrPJXDdfLeNSpH62SvQeVYnWwbr3KiTprzVdbUy0UTVNbW
y6//W2V9vXxpVO+vl9yJ6v31UniDen+93FKg3l8vBTeq99fLBZPU++vlc7W9
9dJ6k3p/vUw1qffXy6dqh+tl2WT1/nr5Wu1YvdimqPfXyw61NS65/pfq/S5Z
r7beJQfUNrpkQqF6v0ucaltc8obaNpck1Ha45Jqb1ftdYlXb65JH1Pa75DW1
gy7ZrXbYJUm1oy7RTVXvd8mNaidcYlFb0yB2tbUN8qDa+gZpVdvYIC+rLQ0S
UtvSIBG1bQ2yV21Hgwyo7W6QhNreBvlRbX+DnDVNvb9BzlM73CBj1I42yOVq
xxrkarUTDXKd2ppGuV5tbaNMUlvfKL9U29goorY0SpHalkYxq21rlGK1HY1y
l9ruRpmjtrdR5qrtb5R5I/Y3yvwR+xtl4Yj9jXLfiP2Ncv+I/Y2yeMT+Jikb
sb9Jykfsb5KKEfubZMmI/U2ydMT+Jlk2Yn+T2Efsb5LlI/Y3yYoR+5tk5Yj9
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
REw=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxd039c0/Xax/HV6RQWdXY6eA6n6JxlVOtENYtqFeWloq0iXUY6FXMq6lTQ
ARPGD3Mm5irS1cGcHjwuD9pUzGmk06imYdKRaneRraS7VZTTqHZOdOR00G7v
x/lu+/LiHx5Prl28935cj8+VMxdNmH2uRqMJX6DR/P/v//7ER9RmvHTv5zX1
I5Q/SNs/d1a2NLsVp8kfvxqm3/V9g2KttN46buydL3kUZ8gLT27YeeDH5xRn
SvC8BbfvG7dGcZY0jLlp/aJ9axXr5OYF6XnG29YrHiZ7vj68fMGhJsXZMm39
7SPmzt2o+BrZtWn4k/de8oJivdTnzK3eUr5J8Z/k0OYHI2mf/01xjrxnPHB4
2+TNim+Ug9pTzs7uLYoNMuRkbcPu+X7Fw+Xw2JGPbfnFNsU3y9DuzX889eJ2
xbfIR79868p/T9qhOFdWHflo9wUZOxXfKvfs7fOOWhhQfJvs+8x95lvLLsW3
y4976neOuH+3YqNYHrn6ocpRLyu+Q46N3qI/OrJV8Z3SPnzb0a2mVxTfJU9O
OX7L6El7FOfJsPhLEwdK9yq+W2TPxUeMzwQV3yOrb9ZfOPeVfYpHyKTfFY88
9/h+xSLX/Gfa0sZhbf+1S2Tcx6OL99leU+Yj5cVNp5dcuf91ZT5Slr+XlX/k
opAyHyX3TXxvkeaAYtcomVF/+4O3LzmgzEdL34b1VZeMPKjMR8tdxyc5Rl38
pjLPl0/Xza/Z84ViV76El5tjroPtynyMOIZ88PjpHYeU+RhpvO0yw4ktbynz
sfLG5Gm/WbXzsDIfK49u+807Fx/pUOb3yrvLWk8cP/22Mr9XupZ8rzt//BFl
bpK35pU9POzvncrcJHOHX3bfqifeVeb3SazwOt+mGWFlfp/UaKd+t97/vjK/
X7bVbZyz/dUPlPn9clfPN69vOtKlzB+QG37b/lVZ5ENl/oCcbn7uuiFfHFXm
BXL8wp7bLbGPlHmBaL6bccW4byLK/EF5e0dg7McnP1bmD8q6rEceP/71J8p8
nBj/0PmLOZ8dU+bjZOjhc2wju7qV+XgpmD/51dmHPlXm46VoS+2y13f/rzI3
y7eHhr1xW9Nn/7WY5RcjtMu7Jap83ix/+6n3wNpdikNmueiLu4aM0n2u7D8k
d1QuvybcoFgekqs3zvzgtlOKXQ/JkbnHD86f/oWy/5AcemRHwHpIsWaCDM/8
sOzi675U9ifI+OuiF8x5SrFrgli/Kntl+gnFoQnSMqc3Iz6mR9l/WFqueN9w
sU+xPCwnth/asOOUYtfD8sHN8TUdBV8p+2c/P3/50IkbFWsKZcSZ/lPjvlcs
hfLz2qahO/K+VvbPzoOfWBesVBwqlNYf2s594j3Fmkck87NvF/+UcVzZf0Ry
NGs2Hp6k2PWI1H4x8atv1yoOPSKRcztGLPpQsWaibK3ZbhqvjSn7E2XT87b8
P5sUuybK9W1514x6THFoorjrw6uKdynWTJItK860n/dFYn+SPPK7t/w3ak8o
+5NkwwPP+b6/S3FokjR+8KdlE2cr1lhkw5Xv2SsaFItFLp135VuTdiX2LXLR
sM1fDu1K7Ftk/umt2gN9if3Jsqhnpbn0NyeV/cly3bOX3nGTQbFrsuw5J/vt
yx9QHJosw1dfLKZixZopsmHs1n+9XZvYnyKrz992555nE/tTZOqubTnDtiT2
p8j/jpn2wrB9if2pctB9+fmdf0/sT5XustOmm48l9qfKtZ881m47mdifKpP9
W258vD+xXyT/Llr1tOeX3yj7RfLRit9ftfnXil1Fsv6WF6rDWYpDRfKfQ+Mf
GHatYs00+dXnPU9uNST2p4lu29oixx2J/WlSkfbulZ6Rif1pMvqymeVD7kvs
Pyo39Nx8Te/4xP5Zaw9OHj0xsf+onDqz2fH7osT+o3L6hg0G54zE/nT5qWPo
C7Y5if3p8vCpc+76YX5if7r8Nn60+4+LEvvTZeO564/+WJ7Yt8qhui//UVup
WGeVBza9WR2sTvw/q7z3RvWoXXWKrVbxHY4HFixN/P+z7j51oHeZYp9Vrn7t
pl/fUZ/Is8pnN/g/K3xCcdQqt07902X57kT+DPl8543TL3wqkT9D4p8vOW/7
04n8GfL1wJKs655J5J/9/M85tStXJfJnyIT7juzvWJ3InyE5K4zyvSeRP0NO
55w/4vSzifwZYoiNeq3vuUT+TFk56ty1H/05kT9Tukc3L3uxMZE/Uy6oiV4y
Z00if6bc+PPanRnPJ/JnSuBfZXtaE/bNlHu/HDPl3rWJ/Jny9uWTgu8kHJ0p
hx8vPmryJvJnyehlq5v3JaybJV/84YqfdesS+bNk6Te/CSxN2DpLTo/dZz+a
sGuWBEvjJ69en8ifJRlPLdm/MOHQLOn9+saFuxKOzpIzd37n/i5hTbGs/vLV
x6/5SyK/WI68uebtyQlLsWyf/sBBd8LWYvnXdnn75YRdxTLyH7pbjiXsKxb9
+csf/DnhULEsS3dN1zUl8otl31t3b7snYc1suXdF6bwpCetmS4k39EFFwjJb
MnQPX/50wtbZ8sK5lyz0JeyaLe43Nf96OWHf2c/3vPzxoYRDs+XMfEfe0WT+
bPnlVevu+SqZP0d+PfTg6X8m8+fIvr2Xrvk5mT9H7sife8VFGxL5c2T92hU7
hibsmiNbz9w35Y8J++bIjNHh2/QJh+aI64F1hYaEo3PE+uyON29PWDNXrtrf
9tw9CevmyutP3PlefsIyVxZZqlfcn8yfK/fVHQyNT+bPlerSkqcLk/lzJXjH
999Zkvlz5cebTv1QlMyfK/tPL95kTebbRDNt9znFyXyb6MomZs5N5tsk+/u6
3nnJfJuMu/615SXJfJusuuq2Lxcm823y1ybvr8qS+TbxzTZcXJHMt0ljV+9n
jmT+PBnRYHu6Mpk/T/6xPn6pM5k/Ty7TPF1dncyfJ2s2DxyoSebPE0fk3e9q
k/nzJL2g8Nwlyfx5cv2uHWeSjs6T1Sff+eqxZP58+eDrJfuWJvPny5PXWmtd
yfz5Mn3gh5xlyfz5csDpfS9p13x587rVxY8n8+fL/mfP9CYdmi8zF/bNW57M
ny+XvDu3O2nNArmw/84x9cn8BRK7/u7NScsCueWunNNJWxfIi5o9D65I5i+Q
k3ur1ybtWyBm45BjSYcWyE1DT2Y+kcxfIPHNzz+UtKZEvj/12IqkdSVyevuQ
V5KWErn/QGM0aWuJGMdXpq1M5pfIszedzknaVyLz1peNSzpUIidah5YmHS0R
bcY1TyatKZVluZ9sSlpXKsNjxfuTllKJ7u97L2lrqVw9rvXLVH6ptO74+4+p
/FJZ1TT1fHcyv1ReO7ZyaNLRUvnVgtKrktYslPnt1xqS1i2UKy4N35W0LJQX
rEvGJm1dKIbOfHPSroXi3HbH5KR9C+XzQOmMVP5Ccf/uH7ZU/kKZsO/9Ran8
RTJ+uK4ylb9I1v/4VW0qf5Fo7DctS+UvksaMC55I5S+SCZWVT6XyF0nGlCdW
pfIXyfHD9zyXyl8kJy57cU0q3y6RX73lTVprl5nvv/CX1Pexi2WI/DVpg10+
/XyzL/X97PLC7yObkjbbJS/tWHPq+9rlnRd3b0nabpdw00x/6vvb5eG7v9ua
tMcuq9datqf62OXHquaWpAN22b2wa0eqn10OdZ18KemwXf4aPrEz1dcus6Z8
EEg6bpeuEVt3pfqXybFrS3en+pfJO2t0L6f6l0lZb3vKhjLZbZ/amupfJtcX
fJWyuUxKV896JdW/TC7P/Shle5l0/2HknlT/Mrniyk0pe8rE/9NPKfvKJGdq
wd5U/zJZ9eXzKYfK5E/XHks5XCb/bvl9MNW/TNbFJ6QcL5P8WStT1pTLjpK9
KWvL5Z0FX6asK5dNey/al+pfLpGNhpSlXGylE1I2l4t+VlnK1nIZ9/ozKdvL
5eSeF1N2lctE1xspe8rlL/d9mLKvXI7cfSLlQLlMqf9PyqFymT8yfX+qf7kM
ff7ylKPlstV3Xcrxcvmm7raUNRUyNn9UytoKOf+SB1PWVchj309M2VAhtw9M
T1kq5LdjbSmbK2Tpp4tStlZI5f9UpmyvkOBNS1J2Vcin5y1P2VMhJUXulH0V
ckqeSTlQIfq2Z1MOnd0/ukbVv0Jy161T9a+Q9RduUPWvkM+G+1T9HTJi6N9U
/R2yaP9mVX+HbL/Gr+rvkNce3abq75AL5rao+jtk1eiXVP0dcm7/TlV/h4RW
7lL1d8hnP+5W9XdI7phWVX+HPOx8RdXfIRuf3aPq75BRf96r6u+QO5YGVf0d
Ypm0T9XfIfdfsV/Vf7E8/77K2sWyyfmqqv9i2attU/VfLOc0qSyLpfHy11T9
F0upR2XrYin/j8r2xVI57XVV/8WSt1dlz9n5kDdU/RdLe6HKgcXy2jqVQ4vl
RETl8GJ569KQqv/Z/XtVji+WcU6VNZXyZrPK2kqpeUdlXaUc+qfKhkr5NuOA
qn+l3JqrsrlSus0qWyvl8gUq2ysle7nKrkq5dp3Knkp5aIfKvkp5+w2VA5Xy
cljlUKUYoiqHK8X6ncrRSnn0PyrHK2XMBQdV/ask51KVtVVybZbKuip54GqV
DVWy/QaVpUom3aqyuUqm5alsrZLOUSrbqyRgUtlVJb8bp7KnSoY8rLKvSjyT
VA5UyZ6pKoeq5PHpKoerZGCmytGz/eaoHK+S385T93fKwQXq/k7JXaju75Ry
u7q/U1zl6v5OmeFQ93fKZZXq/k7ZWaXu7xRdtbq/Uxw16v5O2Var7u+Ut+rU
/Z3y9yXq/k7Z95i6v1Mal6r7O2WaS93fKRnL1P2rpU1tbbVMfFzdv1q+UNtQ
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
P1wg0Hg=
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 460, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{"ba", "\[Rule]", "10"}], ",", 
           RowBox[{"bn", "\[Rule]", "1"}], ",", 
           RowBox[{"z", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vs", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vh", "\[Rule]", "1"}], ",", 
           RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
           RowBox[{"u", "\[Rule]", "0.05`"}], ",", 
           RowBox[{"pa", "\[Rule]", "0"}], ",", 
           RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"LsO", "LhO"}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.772523305084457*^9, 
  3.773388873428492*^9},ExpressionUUID->"4c090e50-bd38-4093-8e94-\
1e062cb1c3a3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
Jv8hzN03PPtSH8b1h6A7QnuHiSLj9kNY/zH3yktlxnLe4B79Wbq/P2NVbzgl
GcV0qjDW8MY1v5Ze4aqMdb2RfXb+bJWhjOGNirfeaoLhjM28Ubvzb76aGmNr
b5Q/HDFMOpqxmzeqtg+bMWYsY443dI4a/xONZ8z1xqoLPbxhExlneCOmO6Eh
QZNxjjfsPY075acyLvLGOke/St9plN8bEmGAQ+sMyu+NlIkZ9yx1KL839vH1
Pz/Qpfw+GPhY/HL+XMrvg30z1XgZ8yi/D/pvUB6irE/5feC45JaVyyLK74Mz
u/g+VYaU3we59jXWs5dSfh9MPtCgxl1G+X2wvWbQsdYVlN8HFpY5f42NKb8P
6hXHzjxiQvl9sHvW+dk/1lB+H/z0yx+weh3l94H3i9Rbkg2UX/Z8YRmmLRsp
vw/6dc7MXWBO+X2wsUvYEbqV8vviR/KCYeUWlN8Xbn3thgzdSfl90fddQPu2
XZTfFzX1z7Iluym/L8r7PNz4yoby++JWyJWaUbaU3xfeZd+Wb7Wj/L647PdS
wHWg/L5YdqCssmw/5fdF95mR33qcKb8vWvdOkpvrSvl9YfrP+I+tO+X3RXq/
128FHpTfF3cWG+Xf8aL8suf3eRbU5k35fbGq8PN8NT/K74c2fdmYAyi/HybP
0QzZF0T5/fBuaNfwGA7l94Oi3YOjZ0Mpvx/8ytsmPwin/H4wVSg9/jGS8vuh
4sMZ9T4xlN8P13b94anHUX4/bHQaqqCXQPn9EDFpk/fqJMrvh1HnhrZY8ii/
Hx7Ou2x1IJny+yFAXvA8MIXy+2HnXpXNcULK74dhp4OepYopvx9+z1q5O0NK
+f0x36rw66l0yu8POcmqxPNHKL8/7q1dMv/iUcrvjwP1/1pyj1N+f4QUNJ/P
PUn5/bF/9XZOzinK74/shnN7s85Qfn9oNy/ZnnmO8vtj02nXPYfPU35/7HOU
cgTZlN8ft+zHX46+SPn9MaTaopf/Jcov+/7FJ+ycLlN+f1Sstf6w/Srl98cj
u6YQ42uU3x+CX+JFs29Q/gDcrqwePLqA8gdg0IlW5V63KH8AMoavmvChiPIH
YEPmYsv7dyh/ABRuat84W0L5AzDksNvS2LuUPwBhHvta7MsofwBCl9kXrHhA
+QOQ3Vx9bWw55Q9AiFavtz8qKH8ATieb6ZU/ovwBcBWNuZxRTfkDMMmvwNbj
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
FDIC+z1oI/tEwUshqo+nImNOFOKS1DI6ydFRWNnplBGgxJgbBRPfmQpyyoxF
UXh6RvlRKDkjCpOCT/fI92V8OgoFa68KIsk5Uagpec1T6sc4PwrnOu/9jCIX
ReG5xZgSpf6My6KQe5nzJ5JcFYW8pUckCgMY10bhbtTYk2Hketn7Cj46upcK
46YoGPlVdQWS26MwRnvD6j/kTtn7OXe7z6GBjOWiYef+cMZXsnI0WiwG3XEa
xFg1GpEZs+41ktWiodhSYbBblfqPRs+iOI1aslY0pv5VOmQ2mPqPxp2e94Zl
ZP1o/DxY6LV0CPUfDb1v8yZcIZtEQ+DXtFR7KPUfDQM3j8dHyRbRuJru8WLE
MOo/Gvv0IrbEkR2i8bh8xap/ZLdojLVfk31wOPUfje1OcxMbyZxotJ8RNWwb
Qf1HQ9ly6KX7ZG403k8y/LNoJPUfjRUq566fI2dEozrhV8cYNeo/GoER+Wfi
yDnRaFwS/uIPOT8aV1zbwx1HUf/RGLqQn1VDLovG76k9ZitHU//ROD6v7GAu
uVb2vPfChowfQ/1H497FYt04clM0guaOrvxJbo/G0i61Tzbq1H80nCdvjC4n
y8VAcfHmzPljqf8YDDHMXplBVo1B7/gOu77jqP8YqCnm9jtI1ohB+Xev2S/J
WjGYN6jy1bLx1H8MXMNW9TtD1o/Bv9YDBYM0qP8YGO6o+uFFNonBFdNfl16R
zWKQnnegExOo/xhM6SoqPkm2jsGPTu8R/SZS/zEI7VL/6kJ2i0FYib55Ndkn
BhtiN0NvEvUfg9WdHZdTydExMJl14nInmRuDP6Ufl+7QpP5jsPH+yi03yBkx
aL654ueYydR/DFykdpMCyDmy91cz579X5PwYZG/X1jSYQv3H4HbE804xuSwG
+vPzdnaSq2Iw49aqdVunUv8xmNs2pPISuT4GVf2Er1W1qP8YPH5uHuxCbo9B
cWJ5zn1yZwzWtQR6TJ5G/cfiqHrTPQ5ZORbvnsZceEVWjUX8krdT50+n/mPx
opezHpesEQsdo1NPm8lasQg+PajvihnUfyyubZjwWErWj8WMF9t0O8iIRfMe
Hc212tR/LBbFjr9wnGwWiy6nk5V/yBaxGHByYeTGmdR/LC5t2vLsFNkhFgpD
3W/+JbvFwkxBwXCzDvUve74H0eanyZxYRER4KP4lR8fiziuDTRtnUf+xcPmx
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
LvQ+RY7mYnHmCue75Hgu1mT6L2okc7nQeiF412cnYwEXmdcLbCeSRVykJmne
BjmNi752v35ZkTO4SBhu2zeQfIILx6WiHxLyaS5err99M5+cxcVa3wG7n5Nz
uEgrzKz7Ts6TXW++OW+wJe2NizuJ/vt1yDe5iBg0yN+UXMSFl/C4vQO5hAul
cft0I8hlss+rXfCzo+RyLqbJjdtWSK7iIsXY+fJL8lPZ580mpf0nuZaL48Yl
ykN3Ma6T9XtlUo8OuV72ecbrqjXkBi5OLBsXYkdu4iLuncqgUHIrF9ZjavzS
ye1c1F08XpJP7uCiZ2F66xNyJxcY8flbG7mbiwrvmzV9rWj/PNyw0pNqkuV5
MJIELl5KVubhT1lR4XbyAB56LKaM9ySr8rAo+rlVInkYDzzb34GnyWo8jCm/
EnCHrM7DDpf5O+vIGjy43Dsy6idZkweT6aPzB+2m/fPw8Ur5/GlkbR6id79O
WU7W5eHFR69nO8l6PMxtvPbDk6zPw8PCqp8JZEPZ9ztfX5tJBg9DCgel3SIb
8bCxIgy1ZBMetsbvudtOXsvDpaDqmX2taf88qHT9ODSBbM7Dphk/ji4kW/DQ
PKDjwkayJQ8NbiMPO5KteZjfHeYaQrbloX6q1SQx2YGHGcseXMshO/NQ7dg6
p4zsJrtf1JT4huzJQ4rwXcVPsg8Pc5R7vqjY0P55SNxt9UOTzJF9fdOU1wbk
cB4qi/3ObiJH88D9GLDDkRzPw0wNs7ZgMpeHKaoj7VLJAh4sdDtuZ5FFPOhU
9e1dTE7joWq435QX5AzZ++qxm/WFfIKHxl3f1BX20P556F2/+MtochYPUiWn
TF1yDg9rZ0mXG5PzeIiI+VK8k5zPw02NmOnu5Js8SGqiD0WSi2TP7zjotJRc
wkOnw+JbOeQyHmxWzL1ZSi6Xnb948JGX5CrZ13v9sv9CfsrDgAaFkfJ7af88
vLSwzFIj1/HQK3i01kxyPQ8tL3fHLiM38PD9gemTLeQmHkRRf3vvJ7fycHKS
YFQQuZ0Hy3idkXxyh+x6zKeuk+RO2eejsPneNXI3D7dOrfKvIMvxMfzIpBFv
yfJ87K6VijrIynwY7q3srWxL++fj+/QX5mPIqnwIf75I1CEP42OBY1vOMrIa
H316690wJ6vz4adedt6erMEHr/1etB9Zk486vtnaBLIWH9c6gjqPkLX58G1w
Tcgl6/IRqYL+pWQ9PhI7+x+sIevzcb5/++1msiEfybHKXV1k8HE21X3swH20
fz6MZq2apkE24aNg9slxc8hr+Ti9/dTfFWQzPr7B8e4WsjkfKtaKvvZkCz6G
DpQM9yVb8tHOWZoWS7bmI6ZisEoa2ZaPtx9nOJwnO/Cx7Pjp84VkZz525R77
7xHZjY/AU3qd9WRPPg53+Pz9SvbhI/1TzOfedrR/PnYUhpQNJXP4+C/IL1GT
HM5H0PjEpfPI0Xwoezx/tZIcL3s+bZe9W8lcPqa/dXpuRxbw0STfqudNFvEx
uU0xOIqcxseop8/yhOQMPkwfuT8/RT7Bx9UX399fJZ/m40ul53/3yFl8LHdW
Ka4h5/Dxxuy54CM5j4/Ovx83/SLn89H4fMdfRXvaPx/GE1YJRpCL+JihUDpy
CrmEj9kJrVHzyGWyvjOfNRiRy/m4MkGkY06u4sPnoum+veSnfGi2KsUcJNfy
MdO0QRxCruPDdkankEuul72Pih1hR8gNfCwxn2R5gdzER3SZw8QCcisf/OHL
nz8kt/PR1e+u90tyBx+xlv2VmsmdfKw/phX+i9zNR5GF3hcFB9p/MurrjUyG
keWTYclxS5pIVk7GWZuKEl3ygGTMELg3LSGrJmPtAI8/a8nDkpF5/OOfHWS1
ZIwZ1djsQFZPxm/VkHuHyBrJGDW8OjmcrJmMv4KW9XyyVjLaG991HiFrJ2Pq
ike882TdZLyqKBl1g6yXDNeEWm4ZWT8Z0a7jfz0jGyZjjsmFte/JkD1PtZjX
TjZKRv8LP0v/kk2Ssdn2RXM/R9p/MiR7t/4dSTZLxoleoXKTyebJWO/v9n02
2SIZWR3zni8hWyZjsu+H06Zk62Twu1KcLMi2sve/1WLcPrJDMlJNl912Jzsn
Y2yErXkQ2S0ZVwTPamLJnsmY0nHKVEj2kT2/wpfs4+SAZFgNKZTPIXOSUbxO
a81Ncngy3B6DU0aOTkbj8dGnnpLjk7HxQllhPZmbjDN3d91rJQuScf9sa1En
WZSMhF7R5+T30/6T8WnH8ihVckYyhuvqmKuTTyQj7v2uIVrk08lYfPv97bnk
rGSc7Knes5ScI/v8Xl/0Yw05T3Z+zyzfreT8ZIwsKG6zId9Mhsdjpa0u5KJk
pCgMzPYhlyRjt1LT7zByWTI6Dp6an0QuT0ZNxa59EnJVMuSi1SNPkp/KPk9d
HaIccm0yOg90pt8g1yXjp6p+yl1yfTIedpcEVZMbkmGin7OjjtyUDNO8ftM+
kltledc2Nn8ltyfD/L5Zeje5Q9ZP3a4VSk60/2T8mjS2bjC5Oxlfpx2xVyfL
CcDf29E4hSwvwOfZM7fNJisL0Px2+w0D8gABbLJihxiTVQWYd+WRpRl5mAC2
qgslO8hqAmjlP39gS1YXQFmY33aArCFAR2ibgi9ZU4CdS6JVw8haAqzwSRmY
QNYWwKp8spyQrCvAlGKTxgyyngBfq1UKz5L1ZeftDI/NIxsKcPv8jTWFZAjA
UyzuuUc2EmBq0pnMarKJAKFWQctfkdcKoOBr9riBbCYAt0pnaxvZXAChkVbl
L7KFAAuOmS7q5Uz7F2DNiVOSfmRrAcK+r/kylGwrQMAUI/2xZAcBntw+6jWF
7CzAUv2Dp2aR3QQ40lJcoU/2FEBN62TTMrKPAJN1NDvXkAMEuKC1oXszmSOA
xhy9H5bkcAGCN799t48cLYBfuG3pAXK87HnPPUzzJnMFaEjXdOSQBQJUjQ+c
HkMWyfI0vKvnkdMEmJ24N15CzhBg74UBM4+TTwhQWvrpzjnyaQG2Gw1cn0fO
EiA2JqTyJjlHgCUNm4xKyXkCfOQnZVeQ8wVIKzZSfU6+KZD9/gq2e00uknnI
utwP5BIBhhpc/95GLhNgdfeT6b/I5QIYzD217R+5SgC38/BTcqH9CyDWOs8f
RK4V4PSm3xkjyXUC1N+ffXI8uV6AFvW9R6aSG2R+IE6aRW4SIGHFO68F5FYB
xn802bSU3C5AuuJLzVXkDgHK3h/9vJ7cKfv8XczK2kruFmA/X3GPFVkuBa+k
N1TsyPIpGPakJtuFrJyCAh17Ey/ygBTkpHrVBJBVU9C3YeCucPKwFCx5u+RF
HFktBdPWDF6bTFZPwfhy3mUJWSMFvRTLhx8ja6bANPqh8xmyVgq0nkmv55C1
UxBhbfLvKlk3BWO5dYtukfVSwL+x1+UuWT8FXtrNqRVkwxTsHudz9SkZKegp
HPPoFdlIdp7Om//ekU1S0BxY8b6ZvDYFotyv9e1ksxR8uLP12S+yeQo+C5Vu
95AtUrBMZdAJhQO0/xT0+eodNIBsnYL2PuvMhpJtU+D6WzRqNNkhBSe97V5q
kJ1l+UcW8aeS3VJQb5uzXIfsKbv/9bIWPbKP7Hl+BMUYkANk71/1oMZyMicF
H8MnZ5uQw1Ow+cjxeRvI0Sm4mP7z0hZyvCz/Ra3plmRuCn7/WyHaQxakQO/o
ph4HsigFGketLF3JabLz/7nnepEzUqB9IVUugHwiBU2C58ah5NMpyE4wiIgm
Z6XgmN2jG4nknBRcfittEZDzUlCSd3awlJyfAkmMwuyj5JspUOq5bHKKXJSC
T8dLLc6TS1KwvNcSm0vkshQYcrX2XCOXy/q8lbjzFrnq//v0XVdKfpoCbsD3
BQ/JtSnYeV5+TDW5LgUbiq/8fE6uT0HNtyEP68gNKeiwnSh6R25KwcoFbbua
yK0pGBkQrN5Gbk/BwUVvnnwnd6Rg+oER4b/JnbL3qaQz8x+5OwUGn3UeybvS
/lNxsnPC/n5k+VSc+j2oZxBZORWP83rFDScPSEXV+3+qY8iqqTg0byhXgzws
FRXrjJSnkNVSoXlX6juDrJ6KkTMnNuiSNVJxTLF+1XyyZiqml/93woCslYrE
1kldIGunQqf8+hpjsm4qepWeTTYl66VCNKX7mRlZPxW6868O3ko2TMUtnQbj
nWSkogdxXtZko1T4Juel7yObpEK83OHWfvLaVORYX3jpSjZLhdLPxC+eZPNU
tMoN6fElW6TimtdSxWCyZSo+LBmvHE62TsXgxdf6xJBtU6GyavjvBLJDKj5N
M2jik51T0f/MnGoh2S0VE4L65KWRPVNhsv0y9yjZJxV9326wzyQHpMIx9+WC
c2ROKr5Z7+qdQw5PRfGhN3fzyNGpkHg6RFwjx6fiVfW/xYVkruzz053Vfocs
SMXT7d7p98iiVKiutDMqJ6elok41pLGKnCH7/oqPOM/IJ1KRbrdtxEvy6VTM
dpiQ+ZqclYoTC/V035NzUmEhJ8z7SM5Lxd1as7mt5HzZ5+e5Q1Y7+WYqQuQ/
jP9BLkrFGdtHCb/JJanY0T7j519yWSrmi3pv7+1G+0+FodGOK4rkKtk+niwc
2J/8VPb5H3vaehC5NhWc9nPnh5LrUnF78NofI8n1qfizJGmBOrlB9vmeGeCp
QW5KhWLMqCxNcqvs/f90ea1Fbk9F4RBO/5nkjlREuW2dO5vcmYqX0l9b5pG7
UzFPbb/HQrKcEJ3WeXGLyfJCuDXXHV5GVhaiXr0layV5gBBxVu8uryarClHU
t/zaOvIw2de7n8/fSFYTwuVdfO4WsroQg464ndpO1hDiyHsr4S6yphBzG3aF
2pC1hJhQ4eGwj6wtxLDizNWOZF0h+r/vnuxC1hPCfnnAXzeyvhAdbdOrPMmG
QrS3DTzsQ4YQo5fp2AeQjYS4Upc4g0M2EUJ4cf6nMPJaIWacnpEZRTYTIvSo
h2Uc2VyILd7DBiaRLYQY3j30Bp9sKTv/j/feVLK1ELULjJUkZFsh+K7hmelk
ByGubdNfdpTsLMT9w/Y1J8huQmi1jnQ8TfaUvb/69T/PkX2EWDJsSHA2OUCI
Y6Pt+1wic4S4G7Q57Ao5XPb9Sut6rpGjhbBxUj5UQI4XYk7Tq6YiMleI+HOW
20rIAiFSx3Fv3yOLhMg/7j/1ITlNdn6qZkwlOUP2vtZyP1STTwihPbRk6TPy
aSHezSkV1JKzhBC3ihpfkXOEaPEzmvOGnCfE+8EVfu/I+bL3/2bBrUbyTSHS
+8b+ayIXyfLmlhm0kkuE6PnW6fGFXCaEUv3409/Y/QvxLHJ57Q92/0Kcb9sn
/5vdvxAJakna3ez+hdD7d8fsH7t/2XlCRffe7rR/Ie5UWiUokBtk/SVWnVQm
N8n2dtX6en9yq+zrpwx7OJDcLsSti19qBpM7hLDW6qwfRu6UfT7N53wYSe4W
Qv7PsY+jyXIiPH++vnEsWV6EP8cWvdEgK4uQqOr0bBJ5gAjPHjbcm0JWFWGR
f9aVaeRhIuy4dfeoNllNhP5z9WNmkdVF2Ouk4DKHrCHC7V9z1s0ja4pQaVM6
TZ+sJULCzNu9DcjaIli8mF67mKwrwrf/FM+CrCdCxIXtPivI+iKcy5+6wphs
KIKvrVe/1WSIEDJsVaUp2UiE/yYfTVxPNhFhTnuU6UbyWhHyS//Jm5PNRFjx
fcCNrWRzEYyLLrlsJ1uI8OpAp7ol2VKECoM3ZVZkaxEkVs7uNmRbEQL7nhhh
S3YQwdUxNt+O7CzC/MxJ2xzJbrL3+c7jmxPZU4TdBsGxB8g+IrjcXz3enRwg
wuUjNTkeZI4IK8u1lx4ih4swxmLdAx9ytAhaqxZv8ifHi2ApkqsJJHNFOLVS
asEhC0ToZTS4JpQskj1/mN2mCHKaCAO+HH4QRc6QfT5cCpfGkk+IcOd12cV4
8mkRsjTuaCSRs0Q42O9CPI+cI0LbAe6PZHKerC91l52p5HwR+K9WFYrIN0U4
6q45TkouEmHZYUX/dHKJCMfUvz09Qi4TYfXxlhnHyOUijG74HnyCXCX7PMYP
rs4kPxXhvNGq8WfItbLnuSjaf45cJ4Kbe99L59n9i+Ckkd6Zze5fhOPm2wxy
2f2LMC7DwD+P3b8Ijtx1+VfY/cvyXOB+y2f3L4J3sPL0G+z+RZgXlm9VwO5f
hNJ5J7i32P2LcWXgo1u32f2LsSzEsLWY3b8Y67u/DL/L7l8Mv5ZWwzJ2/2KM
zZ1v84Ddv+zrL1eFlrP7F6N5Y+HRSnb/Ygje9i6sYvcvRsm1ozWP2f2LUTrj
cNtTdv9iXA/v6l3D7l+MTJWCYS/Y/Yvh1v/DpFfs/mXnFfrq/sfuX4xKW/9F
b9j9i/FkXtuyt+z+xbJ/Tz4zfs/uX4z3U/VWN7L7F2Nppsrqj+z+xdjfb59x
M7t/MSb6Ll72id2/GPOHShZ+ZvcvRsKPwFlf2P2LMXVh68Sv7P7F0Pz+ceh3
dv9iPNTz7P2D3b8Ycf0FbT/Z/YvRK2RNbSe7fzH+SSS3/rD7l523M+pEN7t/
Mb4WDY3qYfcvRk7pcnu5g7R/MYTWI1f2JoeLURAu0JAnR4sRM6HgtwI5Xoy8
iYIqJTJXjI1u6if7kgViPGqz8O5PFsmeL2jtKhVymhgje34PG0TOECN/pW29
KvmEGD9mJJ4ZQj4txoYwP7dh5Cwx7ozWnjeCnCPG3YKTv0aS88TYrNdydRQ5
X4ym5d1eY8g3ZXnOvp49llwkRrmW4NM4cokYNd7jj2uQy8SwWx9mMZFcLkbV
7jv9NclVYvS3fHNzMvmp7P1+qXOaSq4Vo6e4QG0auU6Mt0HhxdPJ9WJ8uzPX
WZvcIEbQrMohOuQmMRKtt16dRW4V411b5fbZ5HYxulwX/ZlD7hBj/CGpSI/c
KcZObofefHK3LP8ak0cLyHISbJwptl9IlpdgdmHz30VkZQmCgw35huQBEji1
J2suIatKoJTwLW8peZgEqyp3rFhGVpNdn/7o0XKyugSDhm7aYUTWkGDE78Z3
K8maEpSaJDiuImtJUOi0ps2ErC1Betl49zVkXQm67gz6ZkrWk8Drhrr7OrK+
BOcHrW5bTzaUYP1ooaMZGRIMmdv3/UaykQQlF47u2Ew2kWDFmz1V5uS1EkQO
3WC0lWwmwTGhw5VtZHMJ7uVdnLKdbCE776J2yg6ypQR5Va96WZKtJTi8+bbz
LrKtBA3eb55ZkR0kiPPRX2xNdpagMqHymA3ZTYJJn48r7iV7SqB//7qDLdlH
gr8bh9/fRw6Q4Hje5an27P5lHnM43IHdvwQFF6reOLL7l6B38oaFTuz+Jahq
Uec5s/uX4MWzRR9d2P1LMMX9nIEru38J1GvcEt3Y/UsQMD7hjTu7fwkcd/ee
5cHuX4L9Zx4HeLL7l8BFRe6+F7t/CcpF8UO92f1LsG6rn6UPu38JtNY/PO7L
7l+CvpEhzX7s/mWft15HZgaw+5eg9dZkt0B2/xKcKRp5MYjdvwQtPYfag9n9
S1DtsVInhN2/BIojIvaHsvuXfV5fLDgZxu5fgms5u1+Hs/uXwCS2Z3gku38J
NmwesTaK3b8Ea36e5kSz+5fl25l/KYbdvwT9HYwbY9n9S/Dkn/nweHb/Eoj6
fFiRwO5fgu8bu9wS2f3L+rmXmpbE7l8K9cXX73LZ/UvhHmf/hcfuXwrXqIwR
yez+pRgpb28oYPcvhcbjm9Yp7P6l+H3reFgqu38pqsRjTwrZ/UvBm6ZdKmL3
L8Wn+dXvxez+pTCLGthLyu5fir//NaqnsfuXorPLYkE6u38phmU4mh1m9y/F
j8hRDkfY/Uuh6rQ/KIPdvxS58lbJR9n9SyHX72fmMXb/sufX0bt2nN2/FL6T
Rz84we5fiiXpZ16cZPcvRdOKho+Z7P6l+FPysOMUu38pGu/byJ1h9y9Frz+n
+p1l9y9Fyp8jQ8+x+5fi+QHTMVns/qX4/OvchPPs/mXfX694ygV2/1IMKeZP
z2b3L8XKxeozc9j9S3HU0EbnIrt/KWZb7NXJZfcvhfxkzZmX2P1LoT3/5PQ8
dv9SlKo3TbnM7l+Kdvu2CVfY/Uvx6sS1MVfZ/cu+3sp0WD67f9n7HHey/zV2
/1LUOpf1us7uX4oXFVd+sj4hRUype8sNdv9ScJ/9qbvJ7l+KS4GbKwvY/Uvx
1CCwsJDdv+z9xPmev8XuX4p1TaulRez+ZZ/3+1+ibrP7l+K/E84ed9j9y95P
++1dxez+pWge+9W4hN2/7PNypEunlN2/FJnv3g2/y+5f9vnYerqLda0UNvvW
1d9j9y9Fve+T4jJ2/1Lc6zLIvM/uX4pdG6OjHrD7l2Lam2v2D9n9S9Gh9Ni4
nN2/FA+0H2tWsPuX5c+60auS3b8UYz8k/ce6W4oRemb5j9j9p2Ho17+8Knb/
aUjykuyvZvefhm1qU5c/Zvefhhidk2pP2P2nQdh/RBvrYWlY28v/zlN2/2m4
t/tZyjN2/2mI9pri8Jzdfxr2JbkurGH3L/t+nRf71rL7T8PVP221rLXTUPTf
1FMv2P2nQbVpl+dLdv9pcLXi4xW7/zSohN/tX8fuPw0Rkq5nrJGG12/nHPmP
3X8a4kUu9q/Z/afBtytL5w27/zR0r/zWwdosDe8vLrlez+4/DQe9k4PesvtP
g33F12Xv2P2n4U/TDvn37P5l5/99VMraNg1GSzZFNrD7T8Obl+9WNrL7l53X
O0z+A7v/NCg1zL3D2lP2fs/+DPrI7j8N2iHli5rY/adhGe/KD9acNGT0vpLd
zO4/DdldDx1a2P3L+jn6W+MTu/80GI9ELWtuGpyCMxJb2f2nIeTPGKPP7P7T
8PDUpU7WaWmYdNIhq43dv+x9DjTc/YXdv+x9yc0a3M7uPw2DkpffYZ2VBrzx
PviV3X8aGrseTfjG7l/WX49pFet82ffrag38zu4/DesU8qZ3sPtPQ8HMY89Z
l8jed3h+yA92/7LPy6jOGT/Z/adh1m+bZ6yr0qCs+yvwF7v/NHwuy5/cye4/
DS4Vp8pZ18n2sLL04G92/2n4pj9E7Q+7/zSIs5Jusm5Kg8bJJdZd7P7TcHyy
Rp9udv9p6Jo17yTrjjTcLAky/svuPw0L3//9wLo7DeExlyJ72P2n42BexuR/
7P7TId59t5i1cvr/9Vz/UTXfcRzHL4lEyq91043SLSIrV7jyo9edNj9GHLRD
MuRHnYWF1lHalJqT6tjtrEbW+/29nKI2jpa15eBopzaMpSNLGkezmc7Cyq6j
WWX3j33en/8e/73P+32ef3wQ/XHARt1u1T/h8thLvWIPwm3/wuJ+yqMI5ryy
sP7KesLWxfYGsYHwRXRmgpOyL2GMbWm/AcpGQol3TLF4IuFhzclQZ+VgQnr8
zMviUMKl0a7rBiqHEe5W+j4Tmx02ph8YpDyHwLE+Y1yUQWi1OJ8WRxKMF8Mi
BisvJPxZfapRvISQNmLHRlfl5YR+Nald4lWE/NzGjCHKqwmu23e7D1WOJSyx
bCLxBsKQdtskN+XNhN8w5VtxAmHNpMHzhylvI9zJnN4gTiJc9D+72l05mbCg
Y/8D8R5CRVVZoodyOkG30mAXZxDWlj7aO1w5m3DuQxenEco5BLfqfQfF+YTZ
46LcRypbCQZrcqG4kJDV+rd+lPIRwozG6yXiEsILi853tLKNkPHq0HFxKSHn
dqrxNeVyQt3h78rEpwhtQ+MDPZUrCdb+iSfEXxOy5zcE6JVrCDuKC0rFFwjO
P1WP91KuddzvxGybuJ7g1+HvM0b5CmFy3PvF4uuEJzfGjvZWbiTM7TZZxbcI
fXTK1aDcQvDOys8W3yUcSmjqFbcR1g3bn+Kj/DtBm1b8VNxO2PuZ19axyo8J
QXane+JOgt1lzcpxynbCLKvXVXE3YVvkW/N8lXsInvfvV4l1jF/0jwL9lAcw
dlbEHhW7ML5cYHEbL/0zPqgo2if2YNzJiukSj2L05lrj/KV/hnGXuUlsYJzt
WDHfKP0zJle0VYmNjKlrH/gFSP+M/K9WW8XBjAlrI/vEoQz3gScSA6V/Rur6
j1rEZkbtyIbICdI/I76hqFIMhnd4s/dE6Z9xRmc9IF7omP9aXad4CaPcsism
SPpnFA0pqROvYiTdsARPkv4ZnabNheJYx35anXrEGxinE/02TZb+GW/nXLwq
TmCsaGoJCZb+GclPdxeJkxiH0z55KU5mtHgGr58i/TNytyyuE6czzP07Al+X
/hkn84blirMZzVz9WJzD6LvdFhUi/TMKb1orxVbG4qAfhodK/4wRKZm7xEcc
+11Rd1NcwmiKzjdNlf4ZHfp7BeJSxkrTN53icgbM+mUm6Z8RVOt0WlzJuPZu
qus06Z8RWJ4aL65hZIU414svsOM/a/ANk/4ZdZbaveJ6Bv/V2Sy+wnjP78zU
6dK/o5et/+aJGxnPopofim8xeuIRMUP6Z3waEX5EfJdhi6vvFLcxYtbdXzhT
+mcsOp9nE7cz3hz04wvxY0bataNRZumfsaWgr1RsZ/z86/OX4m5GV2Tm8lnS
P8P0xrEysU5D/IZ3XooHaDgXcCwqXPrXUOa5/7h4qAan8/88F3s4XOiyaLb0
ryEk8MznYr2G7fYnT8QGDa8yvo+YI/1ryFw6o0Bs1PC0FQ/EEzXYKh6a5kr/
GpbNCsgSh2oYOVjXJA7TsOVwyvh50r8Gn7iDO8VzNOz5w1wrhgbd/+8/LUCV
VQ==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxdz3F4k+W5x/EXVjVK1aj1mLl6jMeKOVo1aoUg1d24IgGKBCgYoECAAikU
GqBgkKKvs0p0PRpHN+IsGlydEStGrRigSpQyo1aIrtMAVaN2GrBq5BSIs+rZ
ufa8f+Tbf3p9eveXb55LFtRPXTRU07TkaZr2/7///ZP99fqi7eM+vbPp1+oP
UnpowW0X/+fDyib57vWNK9f80KJsFpm8+9RX7v2TcpG0LTt2Ui8KK1uk1H/6
zsknnlQuloILolcOfvmUslVqHsu8XHk0ovxf4hiyuq74p2eVS2Tewr0T55Y8
rzxcRm6cGjRf84KyTR513mWb8MGLylfIWV8d/ez+QIdyqRy7svfpwK07lK+W
77fM0q46J6Zsl6qhE85ffWSn8rVyIDf6rnuTu5Wvk6u7Kx7d9earytfLy4HT
mnYk9yiXyS/eu+KGl0/ElW+QVZMeHyg2v6E8QpbdfGbQPGKv8kixPb/+df/S
LmWHPO5YMeLg8/uUR4l9/IVtW09/U/lGueTuX54Rb0woj5a0v/DEG+a3lcvl
s21fl9e9/47yTXL9I3vfPXzoXeWbJZ7c/uPlI5LKv5bfXvbG60Wh95VFnh62
76bPjyvrIhVvvjV+5rS/qfsY2b7g8Ia1UWV9jIwoO3vVjWf2qPstMu79B15r
q1XWb5E7r2r6oWOfcf+NHE66Xl96yd/V/Tey1Tk/sq9RWauQ+5+fOH7fh8a9
Qr5ZkCyvve4DdR8rQz7+5FcvNCvrY+Xw7vDdrV8Y91vlw/SaIVfKh+p+q5z3
TsHo6keVtXFy8Rnlf73mmHEfJ4c+mnnTUxNS6u6UhYPHbux8Ull3yul3fz+z
4Z/GfbycdWLvDe9OOaju42XYn4uW/jWirE2QHQetm+b9bNwnyJ77Q5NC0w+p
+0RZ3fvcCN+zyvpEeankov4vtMPqXikfv1JWODhdWa+UYstHNzy/zbhPkqB9
q0n72bhPkr2v7Cj5Zmqvut8mT3eceuW6vyjrt4n/shGvhr837pPlmTe3b6ip
/EjdJ4tJi5zd9biy5pKyz665YE9WWVxSM6Ns1PRbPlb/75IV1c2/un+Tctwl
py4bsmhKn7I2Rb454n51R9knaj9FsvvmvPtyk7I+RcZcdPTm23qU41Ok8R7/
x3vOSav9VDmrtOv7klHKMlVqqr8fN8OjrE+Vo69WhadtVI5Plefmv3SoeLux
nyaX79984IUeYz9Ndp9/jfvcH4z9NPn62PTbbr7kU7WfJnOPbGm+YZyyViUP
LZ36zck6ZamShT9umHzf75X1Kpm15Nvmj14x9lXi/uDmJu0jYz9dsqf/7bxv
hnym9tOlYP0XF/5luLI+Xe7Xm9fZJirHp8t1vh3mNfXK2gzRdjne+N0mYz9D
zvjxgK/uFWM/QyJFw7ULDhv7GVJf/GHV734y9rfL3tq1VW9d8rna3y7Prdv0
j2SFsn67bHrvtW+3LlGO3y53vvfQ7PIHlTW3rFrbdm643di7JTEs+nP3fmPv
lsffWnPW3qyxd0vjvPev/O25fWo/U+6u3TP2jDJlmSkv77994uzpyvpMGX9a
b+matcrxmXLB+B2Hb99s7GfJ+EfvmvCLmLGfJY++/lPdHSljP0s+vXyEoyNn
7GfJk/fPeXKn5R9qP1uuuO/okxsdyjJbzrp603X/6VbWZ8uOW6ZM3HCHcny2
vLR0Uabtj8a+WtpvmnXqH1429tXy0vDT/jypx9hXy98v3vTq/mPGvlqSFXfM
sJzzhdrPkYOj76m/4hplmSO1q/8+7JRJyvoc+VXZd9dElirH58i2+9o/PS9g
7OfKlV+MtjmfMvZz5cX3ry0c+4axnytbrPrmMz4x9nPlwPB1fw/9YOzniX1H
8v1vL/hS7efJoXTrlrPLlPV5subhGWNzk5Xj82RM38FDzyxT1jyydNliX8lG
ZatHZlme+KX3SePzPLLz7Ae/anhV2eORkzcFByekjM/3yI27GmuOHlMOe+TJ
4+vLp52ZUT2PZHdc+MR9lyunPRL+rCJyzxhlbb48dXbFmnGzla3zpeDIqyUf
NijLfNlc/eIH9oeUPfNl0eZ17VVPK+vzJXvg9cQtceXwfCn6pHnyDymjP19O
Pn3V4ru+M/rzZc/ksdd3n35E9RdI19j4x32XKFsXyNCL/vZIYpSyLJBnRp5c
e8cUZc8C2Tb2y53feZX1BXLr5sc2jtSVwwukpeLWs8ZvVo4vkAuvnLxh+Hbl
9ALZ8sbkU5JdRn+hTHz7rNTYw0Z/oTQeWG8LfGf0F8qUh7ddsfm0o6q/UNaV
7T9v9UXK+kLZsKrswuLrlcML5ejdsub3TuX4Qnkru2jOB3OU0wvl4KpLCzOr
lLUaOVH34+43Nypba6T8Xn9kTauy1MjMIUVnHYsa/Rp5orTiipv2Gf0amXt3
3ejbDxr9GjnvwEFdvjb6NTI4t/PG77WvVL9GHk9fsu2eImVtkRxc+K350OXK
1kVS6Dj8wtDRyrJIju5ZnPxhkrJnkawflYru8yjri6RvfVnIs1o5vEga2x3d
3fcpxxfJs/3TNp0RMvqL5OKhW8su3Gb0F0v3Pz85+cNuo79YSvfXXxZ91+gv
lrIfx5068hOjv1hqrzv2eTBr9P/lz+81vTakX/UXy9zjm1977Vzl+GIJLnJO
2XSpcnqx3Hny8sLyMmVtiTx0ZPTonRXK1iUy8MLxK4ZNV5YlsrSr1HbdImXP
EqldYNGvXqOsL5Hn1o7XtfuM/hIZuaFtbaTF6C+R/f7ZLwxvM/pL5PiJL+9a
/5LR98qkS0+5+uk3jL5XXF89c+a294y+V0Zd/4vlTWmj75XjxSseG/Gt0fdK
av6qTPxHo++VT/d0/vnSwq9V3yv29b+8aN6FymmvzB5Y0bbapqzVilTFHpg/
QtlaKycnaRf9d4Wy1MrVJ2dvf3uKsqdWdr/yj/+5dZ6yXitPuWLDttQph2ul
+Icjd+xfZ/RrJfLExv86fL/Rr5WRw4Oz924y+kvl1Y+/XbUxbPSXytihjbHL
nzP6S8Xj+mZ9206jv1Smv5Eu/Gmf0V8qt856a1fZ+0Z/qXQOO9Hj/NjoL5Xz
Xwtsu/Go0V8q/+td/eAZJ4z+Mnl9QsPe2JBvVH+ZXDXq3LaxZyrLMtk17NE7
X7Aoe5bJr63/8YfBS5X1ZTLy+6oxl1+jHF4mx48f7r72RuX4MplfcqSpeKxy
epncUlq/48vJylqdHJ127vZNs4x+nWS3XBazLjL6dXLs56etD9cb/To5+cKY
6z9ZZ/TrxP3HMaPPaTL6dfLRzj/de9lDRr9Our/6dEZxyOjXyRPLJ/58fKvR
Xy5n74r89cVnjf5yGbVw8YmpLxv95VJ/2oMffvCa0V8uq6ujL96cMPrLpdM1
LPnge0Z/uay6xXPH7kNGf7nsmnhqNvm50V8uQ9v69Hf6jf4KOXL+St+zx43+
CpnzwPaClT8Z/RXSsvXKe4tP+1b1V4h/xZBrt5+trK+Qq659f+pwi3J4hfzm
+kTpfVbl+L/u0Zah79iU0yvkz8kVF+Tsylq9NL1y7vbCUcrWejnwRNx0+hhl
qZfJw8prv3Ya/XrZOuQd8y6X0a+X8+fdIPVuo18vl17fNfJMj9Gvl+NXjRnZ
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
drgMdsDlsBjWtP8DJvEjpg==
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 460, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{"ba", "\[Rule]", "1.5`"}], ",", 
           RowBox[{"bn", "\[Rule]", "1"}], ",", 
           RowBox[{"z", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vs", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vh", "\[Rule]", "1"}], ",", 
           RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
           RowBox[{"u", "\[Rule]", "0.1`"}], ",", 
           RowBox[{"pa", "\[Rule]", "0"}], ",", 
           RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"LsO", "LhO"}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.772523305084457*^9, 
  3.773388884959853*^9},ExpressionUUID->"d1cfe07a-15e8-4270-9e30-\
95b9086ca979"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
Cw6lISvVTWpd4YX9Jle8Xpmz35cW437iYptBFrW2XozwxpOaBLSuNRbj+v/i
lm5oW2uPxXgy/ZP6QDs2fzHMj6fcOGLN5i/Gg/D6qr2d2PzFKH9jXs/Qlc1f
jBctnZU+3dn8JZjUqt9yO1s2fwlKfey+PunF5i+BU72EhNTebP4SPD/n5drN
ns1fgi8+d//Y15/NX4JxHg/v/zKQzV+Cmx0m/rqB/X5YsQS3191+9Hkom++N
xk9tR7mAzfdGnlWxJn0km++NO57dWpY4svne0NmnN/oyhs33RsKBWYfajWPz
vbFn/KZZfSaw+d7oMCu8z+CJbL43Npt9i3CYzOYvxZo5VmE9prD5S7Go/Umv
5tPY/KW4PPpy4EtXNn8pjtlaPTs+g81fiubfh/8X58bmL0XF5BN/jZzN5i/F
wMScP/+bw+YvRfaJDhWb5rL5PqiZUyEfNp/N90G/l8V5pR5svg8+NbhwbcFC
Nt8HZt3O1zxexOb7oNmhi3MWeLH5PjD/9rhn6WI23wd+w0dmDPNm831geaTT
lcylbP4y/Fb87MtHHzZ/Gf5s03LKRF82fxlubcPbNcvZ/GVI/OTQ4s4KNn8Z
LH2el/4kY/OXIaaDv9cEPzZ/GSIWtH0hX8XmL0PZn3PVm/3ZfF+s6PGP/EQA
m++LLy5HLpatZvN9YbXx4Z7ngWy+LwoDSkbVBLH5vjg6p8e+r3I23xeLf7pr
+S2YzffFkqJ2Gz+EsPm+MDRdPv9VKJu/HH+1XKe4G8bmL4dr5hnrc+Fs/nL8
/bPX/N8j2PzlaJA7ek5SJJu/HB+bp/XxVLD5yzEj/Wy9gVFs/nLc73StyjSa
zV8OsyafTEqZTVbgt9fVi9fFsPkrELOuuJ97LJu/AqePtVC2iWPzV+Dj5UNB
15gVK5BwuF37hHg2fwWmqaz1AxLYfOPPH9js9SPmihWw6XpgskrJ5q+EoXhK
oV0im78Sm533Lr7KjJXweG0+cUUSm78S23OHp/yQzOavROXupCEbmTNXosr/
/MpfVWz+SrTaOm/wceaKlZj746AD41LYfBluWN75+yqzuQxvWk37b0Yqex4Z
Viwa+7iM2U6GR3vfFM9MY88nQ5eOtsf/YnaRwW31/AvOava8Mtxvu7beaWaZ
DDbDY4L6a9jzy+BZ6j1wF7NahlGpA9xaaVkeGfKvRz1SMOfI8PmA4u9nzAUy
JOS2CnPR1bpEhj3Hi3fmMlfIMPvJXflP+lpXy7DI/leTQGYTPyxcPGP8X8zm
fhi0c51nLwPL74dZA9/NSWC280N5N8uh95jhh413vCz6prP8fnA9/PllHLOH
Hx7sOHD9BrPMDze3WN3ssobl94NXv/gvq5jVfjjy+vO048yZfvhQ6fz4hwyW
3w/PP9TLn8xc4IdlniseGphL/HD2/ZaFt5kr/NA+bPWYdmtZfj88+xS/Zh6z
ySrs+3HI/E3M5qvQucHpneXM1quwZbxFUJt1LP8qTJS9KXNlxipcX15dmsrs
sgrvTnv7n2P2WIWnG5T5X5llq3D8yYQ8+/Us/yq8WBK5YimzehVeXTr5ZANz
5iqMORRrc4U5ZxXu7Wsy2GQDy78Kz0cGdbFjLlkFn+v7Xs1jrliFSftjN6qY
q1dB8TLV4QiziT8KJzmdrWQ290dGv3oTm21k+f3xq7zqmgOznT/WDK03bwEz
/NHzrz5vlcwu/pgbPmj9XmYPf7wbddjtOrPMH1VHuvT5yKzwx58FD2zbb2L5
/bFvbLdJI5gz/VHUsOX6Rcw5/kjot80yjrnAH7eH5l3cwVzib/x9rNWRM8wV
/rDXL3hcyVztj02F3aZ/v5nlD0D7ezfNOjKbByBx4DnzYczWAXg6srfXbGa7
AIxv4dA0kBkBGPjd42YaZpcAnBnSfcXvzB4BmOl6z/YMs8x4/8zZyfeYFQFY
FJN6+x2zOgAOERdLmmay/AHQdvrarytzTgAe39M0GcpcEICHhruzpzGXBGDA
z507LmWuCICmSL8ogrk6AK+yJ3TRMZusxijHqUt3MZuvhv705j5Hma1XI17V
JvYys91q+K/ReTxgxmpY3im58IbZZTUq98WcabCF5V+N90MmTWvNLFuN+4Wn
Am2YFathZenZZyCzejUinu5QjmPOXI2F1i9DZzHnrEaFo7rpUuaC1fj35M2R
cuaS1Vg36mvbBOaK1ejxQ++1Bubq1dD1VJ/YxmwSiGffeqn3MZsHooWLRZMT
zNaB2Ld3kEMxs10gZp9Wt7zFjECYKz9kPmZ2CUSHtc4P/+X5A+EeMOPWF54/
EOfzyxIabWX5A3E4NOkfC2Z1IDw8LFtYM2cGotHXzv/2YM4JxEHTcan9mAsC
sVzd8vlw5pJA9Bz8Y6PxzBWB8Anf/Wwac3UgvK56ps5lNglCi5c7axYzmwfh
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
R48OonP16CQ6T49uovON3y/RBXr8KrpQj76ii/QYILpYj8GiS4zfR9GleowS
XabHGNHlxu+r6Ao9nEVX6jFZdJXx+yz6hR7TRVfr4Sb6rfH7LrpGj3miP+ux
QLSJAZ6i6xuwRLSpAT6izQxYLtrcAJloCwNWibY0IEC0lQGBoq0NkIvubECI
aBsDwkTbGhAh2s4AhWh7A6JFOxgQK3qIAfGiYYBStKMBSaKdDFCJdjYgVbSL
AWrRrgZoRbsZoBftbkC6aA8D1oj2NGCtaG8D1ov2NWCjaJkBm0UHGJApWm7A
FtFhBmwVrTBgu+hYA3aIVhqwS7TKgCzRagN2i9Yb8JvoDAN+r7P/BmTX2X8D
9tTZfwP+qLP/Buyts/8G5NTZfwP21dl/A/bX2X8DDtTZfwNy6+y/AQfr7L8B
h+rsvwGH6+y/AXl19t+AI3X234A/6+y/AUfr7L8B+XX234BjdfbfgON19t+A
E3X234CCOvtvwMk6+2/AqTr7b8DpOvtPbJJe1/XTUVhn/9Nxps7+p+Nsnf1P
x7k6+5+Oojr7T2yVjvN19j8dF+rsfzou1tl/Ytt0FNfZ/3RcqrP/6bhcZ/+J
h6TjSp39T0dJnf1Px9U6+5+Oa3X2Px1/1dn/dJTW2X9iN2J3Yg9iT2JvYl9i
GXEAsZw4jFhBHEusJFYRq4n1xBnEG4gzibcTZxFnE+cQ5xLnEecTFxAXEhcR
FxOXEJcSlxGXE1cQVxJXEb8griZ+S1xD/JnYZE1d1yc2JTYjNie2ILYktiK2
Ju5MbENsS2xHbE/sQDyEGMSOxE7EzsQuxK7EbsTuxB7EnsTexL7EMuIAYjlx
GLGCOJZYSawiVhPriTOINxBnEm8nziLOJs4hziXOI84nLiAuJC4iLiYuIS4l
LiMuJ64griSuIn5BXE38lriG+DOxSQbZf2JTYjNic2ILYktiK2Jr4s7ENsS2
xHbE9sQOxEOIQexI7ETsTOxC7ErsRuxO7EHsSexN7EssIw4glhOHESuIY4mV
xCpiNbGeOIN4A3Em8XbiLOJs4hziXOI84nziAuJC4iLiYuIS4lLiMuJy4gri
SuIq4hfE1cRviWuIPxObrCX7T2xKbEZsTmxBbElsRWxN3JnYhtiW2I7YntiB
eAgxiB2JnYidiV2IXYndiN2JPYg9ib2JfYllxAHEcuIwYgVxLLGSWEWsJtYT
ZxBvIM4k3k6cRZxNnEOcS5xHnE9cQFxIXERcTFxCXEpcRlxOXEFcSVxF/IK4
mvgtcQ3xZ2KTdWT/iU2JzYjNiS2ILYmtiK2JOxPbENsS2xHbEzsQDyEGsSOx
E7EzsQuxK7EbsTuxB7EnsTexL7GMOIBYThxGrCCOJVYSq4jVxHriDOINxJnE
24mziLOJc4hzifOI84kLiAuJi4iLiUuIS4nLiMuJK4griauIXxBXE78lriH+
TGyynuw/sSmxGbE5sQWxJbEVsTVxZ2IbYltiO2J7YgfiIcQgdiR2InYmdiF2
JXYjdif2IPYk9ib2JZYRBxDLicOIFcSxxEpiFbGaWE+cQbyBOJN4O3EWcTZx
DnEucR5xPnEBcSFxEXExcQlxKXEZcTlxBXElcRXxC+Jq4rfENcSfiU02kP0n
NiU2IzYntiC2JLYitibuTGxDbEtsR2xP7EA8hBjEjsROxM7ELsSuxG7E7sQe
xJ7E3sS+xDLiAGI5cRixgjiWWEmsIlYT64kziDcQZxJvJ84izibOIc4lziPO
Jy4gLiQuIi4mLiEuJS4jLieuIK4kriJ+QVxN/Ja4hvgzsclGsv/EpsRmxObE
FsSWxFbE1sSdiW2IbYntiO2JHYiHEIPYkdiJ2JnYhdiV2I3YndiD2JPYm9iX
WEYcQCwnDiNWEMcSK4lVxGpiPXEG8QbiTOLtxFnE2cQ5xLnEecT5xAXEhcRF
xMXEJcSlxGXE5cQVxJXEVcQviKuJ3xLXEH8mNtlE9p/YlNiM2JzYgtiS2IrY
mrgzsQ2xLbEdsT2xA/EQYhA7EjsROxO7ELsSuxG7E3sQexJ7E/sSy4gDiOXE
YcQK4lhiJbGKWE2sJ84g3kCcSbydOIs4mziHOJc4jzifuIC4kLiIuJi4hLiU
uIy4nLiCuJK4ivgFcTXxW+Ia4s/EJpvJ/hObEpsRmxNbEFsSWxFbE3cmtiG2
JbYjtid2IB5CjM0wqf3z/wAM1SvI
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxd13tcjOn/P/BxDiHHDSHE5rCrtSGHtS+ErKxxDqEokjAdVTpMNdVUU82R
lhBCCCGEEEKOnxBaYrNOCSu7lpD1m9/je1/3fXnvP/t47t01r3ndr7n+2O4L
V071ri+TyUqbyGT//9//90/Nz6vb7R3/MFz1s/AfcOpCYc0Ox1TBFrhR/9cW
y9obBFuh5kuLYwf3rRXcDu5X6g8f5Zsp2Bpv3Rt6dduaJdgG0dteTgzrsVWw
Labs3naw8uA2wT1QbbVH3tEtR7AdkkPmb//Yarfg3uj0S+/3ARV7BNtj/E2P
JWMX5Anui4J1D7fn39svuD8mhD851N/roODvsfiWwwifD/mCHbB8/aKuwzMP
C/4BIT9s3rp2UoHggej3X6qVqeUxwT9iUUGLMaGVxwU7osu0XTanik8IHoSu
vQr+GXDilODBmNpraNj7J0WCh+BR1Mbh1z6cFuyE4e5PSos6nxU8FJ2nHmlf
PalY8DC833HLpbXhnODhCBmyeHaj1+cFj8C6Y91vjl5SIvgnXFx1aw0aXhI8
En6OG66vKLss+GfYXs/734W3VwUDdz1e7E+eU/p/VgK3d0zI+WnaTeH5KEx+
ejD75R3BylHYPTKo1Di3THg+GiGjb1Q7PhCsHI3Z5XmHLy+4JTwfgznyRx9n
VQpWjsHVdarY8gW3hefO+CNd3sX1gWClMyb/+GXT/rl3hOdjEX5/8+Mm5YKV
Y+HjUP/ypGnlwvNxqCmsPzT2qmDlOEQMrdc5e9zvwvPxGNVnmNeBk4KV4+FQ
+l2r3EF3hecusJzUuKt2t2ClC5Ly/ls3z/ae8HwCdE8uZbQ1ClZOwLcjZD/u
b1whPP8FV72j0gaFClb+guP7yn/fVMWeT8Q551OTXs+6LzyfiFkjfb7reV6w
zBUXJ9SeH/bjA+G5K9psqw4ctEmwbBJqfgz9rU2zP4Tnk1Dq9znneqBg2a+w
uTffNqCCPf8VGz8MOvehe6XwfDL2fNh0qu8MwcrJMIyV37icyJ7L0ar+d3cq
jgqGHCVTXPfNe8H+Xo6j0d3G/Grz8P9cJMfJ6MzYva6CZVMwZIu3d1SEYEzB
SLfX1Sd2C1ZOQcjTrZ2W32Xnp2Dxk4YNNRZ/Cuen4oeVl052GiwYU3Hy3hff
josEK6di76suP6jTBRdNxZdpPUYvOc7OT8Nb7+w7h5+y89OwU/bsx1WtHwnn
p+Hcymebc4YLLpqGO65Lgyd6C5ZNx7gxX5p5pAnGdHyz06rk6WF2fjoW/3Gv
U+UDdn46miiCw10bPxbOz0B85dnF/b8TjBlYPSjURzlNsHIG+ts1aD0hTHDR
DFj9k/AxYSM7PxONW5y/MOwsOz8Txya1tPN+xs7PRLFV97ONmz8Rzs/EpVbW
nrbfC5bNwu2u488ckAvGLJSUdzp4MkCwchaWyt82GWtk52dh/P16G8YdYufd
cLtL+5nFt9h5Nxz9JaTrqX/ZeTf0/5BfNaT9U+G8G5L8QvYOcBQsm42TGaMU
O6YKxmz0+OAyKEshWDkbazwGNu+cxs7Pht3zikYdd7PzczC9b6+f119g5+dg
3oMdt7c8YufnQNYt7o3DF3Z+DsYv6nBsXKdnwvm5KFxyesETR8GYi319t3Ro
OVmwci6a9576zRkfwUVz8eH1lo31Y9l5d3zxnfOqdB07747iPX+N//4gO++O
QxdHvet8mZ13x4c188as/5Odn4cnuwZE7vnAzs9D6w1j306zqhLOz8PJE0mf
0nsLLpqH6vmyqoUjBMvm4/r/4q2uTRGM+bDuk3r1xmJ2fj4cGleGBqxm5+ej
aNyC5XvT2fkFcHpT3Fi9lZ1fgBuTlmyWHWHnF0Az+fNvHS+x8+bn870mlVWw
8x7IX7vEeuBrwbYeuJeinuVY77nweR6IXXNxcUUbwR4e6PS/sM397AQrPRC/
rf7CnoMEZ3mg4w9H6p0bK7jIA92GbStvPVNwpQduNPD5qfliwTJPqO7VqQ4E
C7b1xJeVv9VvGs/yPfH277gmVkaW74mahq/+LNnC8j3Rftnlh477Wb4n8jVH
f51xiuV74uyhMv9+V1m+JwZ32qgtuMvyF2Ks6f6rz89Y/kLzfUq4WPeW5S+E
T816j8P1qoX8hRgy1eZVv5aClQvxm8WzbfM7Cc5aiC9uO09O7i24aCE0Gy4t
kQ0UXLkQu+bNueb/k2DZIux5+KXzNhfBtovw85AXIeunCcYiVK+/UG/mfJa/
CE3G7Lt3y4flL8L7Zba2NoEsfxFSTvzztE8ky1+EmfemOcsSWf4imPocdsnS
snwvLMgvkzVfx/K9cOb7ncGjtrJ8L6T855PrnMvyvRA/IXZ7+0Ms3wudP/zm
eegEy/fCvJ3Jd+zOs3wvbAz1+s/rGsv3Qr09y0tCbrN8b8T1srOb+4Dle+Mn
zc91bZ6yfG/c+jl/yKZXLN8bM6oPH5X9y/K9cel4kadTHcv3hs/PxubjG7wQ
8r3R7szo9O+aCa70hmnUwNMvrQTLFuPmvZ4B8d8Itl2MZ4eGraztIhiL0Wha
g9hxdoI9FmP5tNUKRV/BysVobuz4OcRBcNZixO64/XTOYJa/GIWbBz23GcHy
F2PRgEmFJ0ax/CW48Xdpu5HjWf4SeNh2zt7oyvKXYPD0wdaVU1j+Erxf/6xz
g1ksfwn+2Vsw08Kd5S/Bkcn1l9d4sPwl6HDj3Zfj3ix/CZqczt2zzJfl++D+
pj6tZStZvg/2nvE7ExbI8n1wd2j4zN9XsXwfvLjivaBbBMv3wY/15vu5Klm+
D47bH2nqqWL5PpgW8q5onprl+2B72/vWYzQsfymSBgeaWmtZ/lKcHdi24KKB
5S9FcXzQl2VrWf5SvP798LPadSx/KYZ88atWbGT5S/Hu9o6oss0sfyma/VCv
o902lr8USzO29/PIYfm+ULTw6p20m+X7wjd3b8imvSzfF6dH7kvcup/l+2Lt
IdczpnyW74vVmsGpIUdYvi/at33tOu4Yyzefz7y1qNEJlu+LHiaHgfmnWP4y
XA4d0mHaGZa/DEP22/j9Wczyl2HOtG/SFl5g+cvQq8iv7OZFlr8Mfr3DTYOv
sPxlOPLkRK+Uayx/GaKuV965XsrylyF6+qm6ZjdZvh+uBwY8GnyL5fth1X63
32fcYfl+GHKta1+f31m+H5J8S7qtuMfy/aBKKKjvc5/l+2FX5dGOM/9g+X4w
/dhkl9NDlu+HgKnT3rd6xPKXY5Hd9TEVj1n+clyKGl664SnLX47MBxX3plex
/OW4JVubXa+a5S/HkDnVi7NfsPzlCF/xed5Pr1j+cvRskn32yl8sfzmG/bK4
dGoNy18Bq/2Jx//3huWvgOcfLY6P+Yflr0D7uRca7HvL8lfgvt3Ui63fsfwV
aDKwx0i/9yx/BUovJBpO1rL8FYgtOPTB4iPLX4EzsRc2TfzE8ldi6rQLBxPq
WP5K7H1+cOGxzyx/JR4sSCh/+h/LX4krt4bAUvZSyF+JNbILZ/vWE5y1Ej02
/qQZXV9w0Uosvnro9LQGgitX4uTEBSnzGwqWKXBwrarVokaCrRRY/yE90LOx
YFsFAgKsKmY3EeygwK+6k36uFoKhwO0BMS5DmwqWK9CtQ4DOtplgDwVmJvzp
U7+5YIUC+rwFrx8wKxUY1eqI82FLwVoFYnM/JqpbsD4KVMrj78xoKThPgdPr
/5N3bcX6KVDXaEHrP5lLFXh67R/HzVasrwJjyxbemdtacI0C0TP2tm3ThvX3
x4otTg2Lma388d3hC2f827L+/hh9Uu3TuR3r7w9VWtuWp5nhj5b1V1xe2J71
98eOCa0KZB1Yf3+8/vZR9TpmhT9yO08K/+Eb1t8futB+EcXMWn+UrbjbaLo1
6++PJ/WG9K9kzvPH5r82N1jakfX3x4SY+ll/MZf6Y8Pci+38O7H+/vDq909Q
DXONP3ZNaX7TrzPrHwCr1d+PespsFYAVfVpcd7dh/QPQbcBfhlJmhwAMt9m/
blQX1j8ADTaW/ruPWR6AslKvQ527sv4B+EPV67mKWRGAmmC/rBfMygCoQoZU
T+7G+gcgPK3vrf3MWQFY20K/srUt6x+APnqvCyuYiwLwpcHY6ovMpQH4FKd6
0qM76x+ASLnd+TDmmgA82Hgn4xqzLBAjfRv5du/B+geibMilsQHMtoGwuP5h
yGlmh0Ak/GPr2rIn6x+IuPcJqbOZ5YHw8RvQZCuzRyBsc++drWZWBOJHb8tr
DnasfyCqOzdwCGbWBmL7lrP/HGHOCkR2UvueH5jzAjErIf6CUy/WPxBJNxZX
hzCXBiI4rsx4kLkyEF/KD/zvL+aaQDjH52217836B2HDy/EdPZmtgjBlfpFT
BrNtEJqPG9DsGrNDEGbMDDPV/5b1D8J3udP+HMQsD8LDF861S5g9guA5a/uD
DGZFEGweZGeWMCuDkNl79ND3zNog/KebcdzOnvUPwpKhqX2mMOcFYeuTFckR
zEVBqFdv9uPtzKXmz4uL+6mUuTIIPe/KMmuZa4LgeuFkI9s+rH8wWiJROY7Z
KhiHR9dr48dsG4wmO/ef0jI7BCPw309p+cwIhqZzz/g7zPJg3Bjzy44PzB7B
qEkO/tipL+sfjNjC5LjhzMpgxDedOn4uszYYCcdCfglnzgpG7v1EXQZzXjB2
19TaHmYuCsalhB6fbzCXBqPRi9F9XzNXBsPjZFRus36sfzD0+oeJvZhlIbCM
mV/0M7NVCMJOls6ezWwbgmt962YFMDuE4N391JPJzAjBsP02ui3M8hAsP9fn
5lFmjxD826i7upRZEYLinNkHnzIrQzB5dwe3OmZtCDJcE8Na92f9QzBfdaFT
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
FF0bg4szP2WKlsWi0/rWhaItYlH97bK7oq1icTfEsla0dSzmPf3QLlDcPxYL
jw35QbR9LN7aXHIV7RCLW10PLRHtZM4rqIsRjVicKsleL9olFsM77s8XLY9F
q7m9rop2i8WkPo2eiPaIRa+m0+tE+8TC17d92yBx/1hY5bj2ER0aiz0Wn0eK
Vsbi35N9potWx+KH6ls+orWxOLKmYaTojFjMPVmgFZ0Vi4cu/24VnROLpZYn
DovOi8W9q20uii6IxdRRH+6KLopFRLPAl6JLYtHgROxn0aWxeFXRt2WwuH8s
Pj5Y3lV0ZSxkfX79XnRVLFzaXPtJdE0sHj967Sq6NhaNfz80V7QsDjO79fAV
bRGH0XcGh4q2ioO83bt40dZxWHrf0yDaNg59v4vIEm0fh35/j9sj2iEOE1sV
HxXtFId/5/57TjTisDi74rpolzi82bn6vmh5HEb1LKsS7RaHzMJn/4j2iENX
64L/RPvE4ePVcU1DxP3jcMjP1FZ0aBwWhG3rIloZh+srQ78VrY7DH2da/SBa
GwdThd8w0RlxWNJVN0Z0ltkPI11F58RhdYjjDNF5cVD3PjxPdEEcdg1suFh0
URzmlXVbIbokDnk/NQsRXRqHFb8VR4ouj8Ok5vJ40ZVx6Ji3RyO6Kg73Nzww
iK6JQ/PHj9aJro3D9pSTm0XLVPBZuzJHtIUKVQ1q94q2UqHogtsh0dYq5N3U
Hxdtq0Jxmx2nRdurEOy75oJoBxUuH/O8KtpJhYgHTW+KhgpWu9PLRbuoIHvz
z33RchVKVw95JNpNBcc2c6tEe6hgH7LglWgfFVp6j/1b2t+cv7bFe2l/Ff48
U/BJ2l+FtDXjZavE/VW4d/JYQ9FaFc48atNUdIYK2ClvITpLhRX7glqLzlFh
nT66veg8Fea+8O8oukCF3F9du4guUuHLpFbdRZeoMG3VcTvRpSq4zJhiL7pc
hcErr/cTXanCzxNGDBBdpcJCL/1A0TUqaEeWDRJdq0Lh1PpDRcviUWPdZYRo
i3jMa9zrZ9FW8fBL7TRatHU8Srv85yzaNh5r7ErHi7aPxyBL3S+iHeKxYcSo
SaKd4uHS+eFk0YjH+Ob+U0W7xGPa8jfTRcvjUb5p4SzRbvFo/KV4tmiPeNx/
bO0u2icew3bOny9aEY+nm9d4iA6Nx+YepxeKVsbj+8gHXtL+8fCo93qxtH88
7D7/7SPtHw9dYbWvtH88XiXd9pP2j8eJPYdXSPvH48qKFIW0v/n7tZkRIO0f
j5h7bYOk/eMRa1kSLO0fj7Qn/quk/eOh2NY6TNo/HiFJO8Kl/eMRdvXHCGn/
eDzbfThS2j8el+c5REv7J+BOp81Kaf8ELO3YNFbaPwFr03zipP0T4Lj3lEra
33x+V8sEaf8EPDk0I1HaPwEZX4xqaf8ENDxyJUnaPwHdmn1OlvZPwMVevTXS
/gm4PsglVdo/AXVei9Kk/RPQ/P6qdGn/BBSfj9dK+yfg7wmpOmn/BChS0/TS
/gn4/kiSQdrf3O9llFHaPwG75StM0v4JeNDEbY20fwKcHUeslfZPQOz7ThnS
/gnwD3gruSABPc6V/Cbtb35fLTPWSfsnYMKKheul/RPQq559prR/AtY/rpJc
mYAug7ZtkPZPwMqW8zZK+ydgT4rVJmn/BEy+cEqyLBF97/lmSfsnIqyy9WZp
/0RUvM6XbJ2I+d2nb5H2N/+95rVk+0RYuyRulfZPxG++nbOl/RNxq2muZCSi
6/Ch26T9EzG+7VnJ8kRs2T5hu7R/IiyaXpXskYjySZN2SPsnoi7xkmRFIl5c
dM6R9k9Ebq9CyUrz+VyHndL+idio2CJZm4hzMa13SfsnYk9NpOSsREy9+kxy
jtnfTt4t7Z+I5y3yJRckoja9Q660fyIaF4ZILkkEssoklyZC+YvDHmn/RLiU
JEmuTMTl3g8lVyXiZcDgvdL+iRh5NElyrfn9Nb4nWaaGi3fffdL+auz/c5Vk
KzXyks5KtlZjuXeLPGl/Na4oZ0i2V0PxdL1kBzUKsiolO6lRcrTnfml/NeKH
e0t2UWPtgG2S5Wr4bXok2U2NYUbbA9L+atR1cJfso0a4wxrJCjWcn1+THGr+
PhMaH5T2V0M2Z4RktRrte/hL1qpxame25Azz96u9LTlLjaYdLPKl/dWY0tRJ
cp4acb8vllxg7ptqlFxkzut/WnKJGheOv5RcqkaTMd8ckvZXo1MJJFeq0X3K
UslV5s97rJVco8blhCOSa9V4N/K+ZFkSerepf1jaPwkXG/WWbJWE/t0mSLZO
QuSiZZJtk1ByRyPZPgl1yj2SHZJQveiqZKckjI9/KRlJyHne7Ii0fxKSTfaS
5UlwTR0r2S0Jjrc8JXskYbl/pGSfJDRdnCFZkYT6Rw5IDk3CUJ8rkpVJCIt8
IlmdhKCPnyVrk3Dhz/YF0v5JeD/0O8lZSQhp4Cw5JwlZo+dIzktC4ceVkguS
8OX7eMlF5r5//ia5JAk+1nsllyZhzc3TksvN77fDLcmVSfB/8kxyVRKOj/oo
uSYJ2u8tj0r7J8G4t4tkWTLmFn8v2SIZywJ+lmyVjKHHJ0u2Tka/zQsk2yZj
fe+Vku2TcX1SlGSHZDTrmCrZKRlByeslIxkO2TsluyRjms8RyfJkPC4vluyW
jD/eX5fskYwfLzyQ7JOMsy4vJCuSsSTqveTQZLxa2uCYtH8yOrRoJVmdjHVL
O0nWJqN3TC/JGclwn+EgOSsZt54Nk5yTDNthYyXnmb/PpMmSC8zv02625KJk
vD+5UHJJMhZ385NcmozqccGSy5Nxb3CU5MpkpNQkSK5KxujgdMk1yRhzfq3k
2mSUPN4kWZaCBjd2SLZIQbf0fZKtUoAuRyRbp0AVeVKybQrq7z8n2T4FJQVX
JDukoNJ0U7JTCn6dcFcyUtCyrFKySwq+GfJMsjwFcwJfSXZLwdmkfyR7pGDI
6g+SfVKw1uWLZEUKTv3d8Li0fwriwptJVqYgv7KVZLW5f+/2krUpSJ7YSXJG
Co5M6SY5KwXeQ+0k56TAtUEfyXkp6J73neSCFBgxUHJRCqYeGiy5xLxHq+GS
S1Mw8defJZen4HLgGMmVKeiqHC+5KgUPAidKrklB1uTJkmtT8K7tNMkyDVac
ninZQgO92xzJVhq8+H2eZGsN6sZ6SrbVYPwGL8n2GkyoXCLZQYPoVsskO2ng
2W+FZGiwyNFfsosGtX2DJMs1SG+1SrKbBmv/DJPsoUF4doRkHw02zYiWrNDA
710Mt78GYxNV3P4apFgkcvtrsCE8idtfg9v3U7j9NdAOTOP218AuTMvtr8Gz
/Xpufw2+u2/k9tfA5dMabn8Nkix/4/bXYETr9dz+GuxruoHbX4N+7zZy+2vw
8XYWt78GC3O3cPtrkBOSze2vgdXg7dz+qaio3sHtnwpX005u/1RkDdrN7Z+K
9ldyuf1T8dRtL7d/Kn6t2Mftn4qEmfu5/VNx/sIBbv9UODvkc/unYrD2ELd/
KkqfHeb2N//9kAJu/1ScjTrK7Z+K6JPHuP1Tse3dcW7/VHh9e4LbPxXP5Se5
/VPhGXiK2z8V/6YVcfun4n9bT3P7p6LjgTPc/qn4ePQst38qfjtezO2fCpsj
57j9U5GTe57bPxULMy9w+6fCL6GE2z8V1b4Xuf1T8XnCJW7/VJzreZnb39y3
lnNtKt5fuMLtn4aN+qvc/mlY5XaN2z8Nmzr+j9s/DQNvc7ZNg2taKbd/GpqO
vs7tn4a4N5yd0lCWeYPbPw3tnW9y+6dh/jPO8jSUJJRx+6fBt8ctbv80uB/j
7JOG/F9vc/unIfEPzqFpqPa7w+2fhn/ecVan4XBkObd/GsbX+53bPw3HYjhn
paH7F845aUgPu8vtb+73hnNBGs573+P2T8OBO5xL0vBiXAW3fxpiDnIuN7/P
Lve5/dNQP55zVRpaVHOuMX++6wNu/zTI9nCWpaNx8z+4/dNRupizVTpWFHG2
TseLbyq5/dMxYzln+3QcLeLskI6ebR5y+6djkydnpMNpH2eXdHz8yFmejhrn
P7n909ErlbNHOrJvcvZJxyrrR9z+6dgxl3NoOrCBszIdE+9zVqfjeufH3P7p
qHDjnJGOICPnrHRsucY5Jx0rmzzh9k/Ho5GcC9LRJJhzUTr+3Mm5JB0R9zmX
puN+q6fc/umwHMW5Mh1W/pyr0vFmE+eadBy+yrk2Hd4fOcu0aNj7meSGWqyX
c7bQYkA4Z0stzm/hbKXFkkuc22nxzRvO1lrc71Al2UaLE8M525q9gLOdFo9i
Odtr8eM2zv21OHies4MWPs84O2oxs8lz7vemRWxvziO0eOPMGVrsWMjZWYud
0ZxdtPi0nrOrFpuPcJZrkXWD83QtPr7k7KZFfuNqye5a3OjG2UMLNyfOXlpM
kHP2MX+fJZz9tFgdxVmhxRkj5yBz312cQ7U4eYpzhBZhZZyVWhyu4qzSIrSO
s1qLs61eSNZokdGDs9b8fhw5G7X4axznDC2C3DhnaqFdyjlLC+dwztlaGJI5
52gRvY5zrhbNdnHO02LIUc75WjQp4VygReRtzoVaZD7mXKSF99+ci7W4+4Vz
iRb/Wb6UfMW8X0fOpeb9enMu00I/kHO5eY+RnCu06PML50otkmZwfqxFtgfn
Ki0ilnF+qUWbEM415t+/kvNb8/tK5lyrxWwj5zot3m/gLNNh7g7ODXVIyONs
oUPYUc6WOgw+w9lKh5OXOLfToc1NztY6/HiPs40OPR9xttXhUTVnOx0C/+Zs
r8PtD5z762BZ7xV3/3XoYMHZUYd3LTk76ZDbnvMIHYbacIYOm3pwdtbhvj1n
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
bENsS2xHbE/cn9iB2JHYiXgEMYidiV2IXYnlxNOJ3YjdiT2IvYh9iP2IFcRB
xKHEEcRKYhWxmlhDrCU2EmcQZxJnEWcT5xDnEucR5xMXEBcSFxEXE5cQXyEu
JS4jLieuIK4kfkxcRfySuIb4LXEtcR2x7Ddy/4ktiC2JrYjbEVsT2xDbEtsR
2xP3J3YgdiR2Ih5BDGJnYhdiV2I58XRiN2J3Yg9iL2IfYj9iBXEQcShxBLGS
WEWsJtYQa4mNxBnEmcRZxNnEOcS5xHnE+cQFxIXERcTFxCXEV4hLicuIy4kr
iCuJHxNXEb8kriF+S1xLXEcsW0fuP7EFsSWxFXE7YmtiG2JbYjtie+L+xA7E
jsROxCOIQexM7ELsSiwnnk7sRuxO7EHsRexD7EesIA4iDiWOIFYSq4jVxBpi
LbGROIM4kziLOJs4hziXOI84n7iAuJC4iLiYuIT4CnEpcRlxOXEFcSXxY+Iq
4pfENcRviWuJ64hl68n9J7YgtiS2Im5HbE1sQ2xLbEdsT9yf2IHYkdiJeAQx
iJ2JXYhdieXE04ndiN2JPYi9iH2I/YgVxEHEocQRxEpiFbGaWEOsJTYSZxBn
EmcRZxPnEOcS5xHnExcQFxIXERcTlxBfIS4lLiMuJ64griR+TFxF/JK4hvgt
cS1xHbEsk9x/YgtiS2Ir4nbE1sQ2xLbEdsT2xP2JHYgdiZ2IRxCD2JnYhdiV
WE48ndiN2J3Yg9iL2IfYj1hBHEQcShxBrCRWEauJNcRaYiNxBnEmcRZxNnEO
cS5xHnE+cQFxIXERcTFxCfEV4lLiMuJy4griSuLHxFXEL4lriN8S1xLXEcs2
kPtPbEFsSWxF3I7YmtiG2JbYjtieuD+xA7EjsRPxCGIQOxO7ELsSy4mnE7sR
uxN7EHsR+xD7ESuIg4hDiSOIlcQqYjWxhlhLbCTOIM4kziLOJs4hziXOI84n
LiAuJC4iLiYuIb5CXEpcRlxOXEFcSfyYuIr4JXEN8VviWuI6YtlGcv+JLYgt
ia2I2xFbE9sQ2xLbEdsT9yd2IHYkdiIeQQxiZ2IXYldiOfF0Yjdid2IPYi9i
H2I/YgVxEHEocQSxklhFrCbWEGuJjcQZxJnEWcTZxDnEucR5xPnEBcSFxEXE
xcQlxFeIS4nLiMuJK4griR8TVxG/JK4hfktcS1xHLNtE7j+xBbElsRVxO2Jr
YhtiW2I7Ynvi/sQOxI7ETsQjiLEJMuGf/we9DlIa
         
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 460, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{"ba", "\[Rule]", "3"}], ",", 
           RowBox[{"bn", "\[Rule]", "1"}], ",", 
           RowBox[{"z", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vs", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vh", "\[Rule]", "1"}], ",", 
           RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
           RowBox[{"u", "\[Rule]", "0.1`"}], ",", 
           RowBox[{"pa", "\[Rule]", "0"}], ",", 
           RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"LsO", "LhO"}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.772523305084457*^9, 
  3.773388897276587*^9},ExpressionUUID->"db5d38ec-990a-4aa8-bb6e-\
9cf7ccf99820"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
xuH5krVmuOdL9jHDa4dknRl/npTsb8aGy5JhRt/2t6X+zdjeTXKIGd1ekRxm
xnsTJevNLf8fkBzVMp8l2WDGtHWSjWYMdEg2mTHkuGSrGYYfJdvMuNwguciM
Lfck21v2PdIk9W/G/c9Jdpixf5DkMjO+HCHZacZrEyVXmKGNkFxlRqxBco0Z
ryyT7DJjWb7kejNeL5LcaEZ+ieQmM2Y4JGssOPyZZDcL9pyQ7GFBwGnJXhbo
f5KstaDHJck+FmT/IVlnge22ZH8LRmj+kfq3YLOb5CALHB6SQyyI8ZIcZsHl
bpL1FjzeW3KUBf/1lWywoMRPstGCzq9KNlngN1yy1YLuoyXbLDgTLLnIggkT
JNstWD9ZcqkFu8MlOyxYPUtymQXBcyU7LaheILnCggFLJFdZMDtOco0Fi5Ik
uywISZFcb0GXdMmNFpRmSm6yoFu2ZE02EnIlu2VjR4Fkj2x8sVyyVzY+WylZ
m40170n2yUZYkWRdNv5bJ9k/G/kb5P6zcW+T3H82pm2W+8/G+yVy/9k4vVXu
PxsNpXL/2bi+Xe4/G5d2yv1n4/guuf9srHLI/WcjZI/cfzaa98r9Z6Nov9x/
Nnp+Ivff8rxlcv/Z8Dgo95+NmM/k/luep1zuPxvuh+T+szH6sNx/NhKdcv/Z
WHdE7j8be7+Q+8/GkaNy/y37jsn95+Dwcbn/HDhOyP3noOhLuf8cJFXI/edg
3Em5/xw885Xcfw7qZPvnYMvXcv85mFYp958D92/k/nNwQHZYDqaekvvPQZPs
qBzYvpX7z0GPKrn/HHws25SDIafl/nNQJtuWg8Hfyf3nYJdse8vnfy/3n4OV
sh05+E92WQ7mVsv95+Ar2RU5ePGM3H8OsmXX5OC8bFcO/H6Q+295v+zGHJyR
3ZSD7mfl/q1YINvNit2yPay4KdvLiiE1cv9WJMj2sWKPbJ0VDbL9rej5o9y/
FVNlB1nxruwQK5yyw6xolK234tlzcv9WjJFtaHk+2UYrNso2WXFCtrXleWXb
rHjkJ7l/K/xk262YJLvUiiTZDitWyy6zYp9spxWnZVdYcU12lRVutXL/VvSQ
7bLiVdn1VkyU3djSr+wmK0yyNbl4T7ZbLrbL9sjFIdleuTgtW5uLX2X75OKm
bF0uOv4s95+LJ2QjF71kB+VisOyQXATKDsvFBNn6XOhlR+VikWxDLpJlG3OR
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
9yT7kH3JOrIf2Z8cQMYmaFp//g+IZHg5
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxd039czff/PvCzmS2TiWVr82OxRmh2RsiWtwshNEI4CIdCCKffp/TjVKc6
1UEjFsJBaIRmsZjZQabRpk0m1jibH2u0LRbahG/f2+e8Xq9nV/+43b16dJ3r
XLdX9/krJi94XqVSVb6kUv3/f//vp37YSucDY36NMw6z/wc2DfnBZ3dNtt0O
+KRD3dUHJz622wmtlnd6fkjxerudMesFj0HtT2+02wX7O2WvS2rcYncXDDqb
1a7KfbvdrtDla4faFu20uwf2jnXb/cqxXXa7wZD68b03XAvt7onTBV8HX9i0
1253LHWbkdWh7367+6D0l9z5P/9w0G4PjM5Z2LWH72d298PNAds9Tn1+yG41
br3kGZjgUWL3+3hU/cjpzc8P290f41843zbO9wu7B+DGkY87WP4stdsT1tLL
A77YeczugTgVPk7TJfS43YNQGf7GnSW+J+wejMDgR+3GdLXa7YXNZVExoT1O
2j0EbdvHj3ceeMruD1B/LK6o7fTTdn8IzaRXFu3KKrPbG0diDT3+/fGM3UMR
2f+zCxM9z9r9P+QY41R/lpTbPQw/Lu1Ve2DOObuBiBFvPWwcUfF/NgB5dZoT
Zenf258Px0ved9/TXqi0Px+OD65f3LPV8IP9+Qi8/U3vz6vf+9H+fARO9rs8
tu0vdqtG4movxxUDTBftz0dimM1xwIT3q+zPfdChv9NhTbXdBh/UnX73Hf+E
S/bno/B848xv3nf9yf58FLZ/FVX/n9Vu1Whs8Azs+Oncy/bno6G/275kSJPd
qjHYNvOGfu+GavvzMYjsVNz9335X7M99Mb6V85q3z9ht8EVh+eene824an8+
Ft/MM9xuddduw1iMKn/icyTuZ/vzcRilMU0d6lBjfz4O69M2HP1knd2q8Vjl
3zCsrMsv9ufj0b/iwe2TO+1W+eFB3ZZra9yv2Z/7YcHJI1nv7rNb9RGeuFUb
N/W9bn/+Edbcm7H1p0/tVk3AvWmv36vvaLM/n4Cgmknjr020WzURmx8nb/s8
W3o+EZPbrZoQ9o303B8+l8ZceV316/8Z/rjg+Oqve7zsNvhj2N4g9x46u63+
qPps4LqM3XarJmFTTEivKz9L95NQMK1VOxen3+z3k+DSav7qUSPttk7CVOsY
l6Aou1WT0f5u9ZDw3XZjMgbo4goif5LuJ6Nvw4a+oa1v2O8nI2DT2LKZA+xW
TcGezL+MI7R2Ywpejt1Y8I7ZbsMUuH0ZHvfiF9L9FPRY/jj+d5t0H4B3tw0Z
fr7NTft9AGpmfhdb8r7dhgC4nv/7wS6N3dYAZO2ZbdmRaLdqKlrP6Ze4f6d0
PxVnYzbu//asdD8Vv17eF/zfHel+KtLT//p7RLtb9vtp0H6n+mx3P7sxDT2j
e3XtPdFuwzQ4tr745XfL7bZOg6Wi2zt5q6T76fApHacy75Pup+OPXe8/v79c
up+OHm+duPv0pnQ/HUsGzjWlqW7b7zU4OzCpyKez3dBg2KUnAzDQboMGTvMP
quIn2G3V4Nyy3xofL5TuZ+CrcX+2LkuU7megeHNZx+r10v0MxLjkv+xdJN3P
wA7z2sv/nJTuZ+LIo8XzWl2W7mdic56fefld6X4mfHO2DR7yTLqfidS9N7wX
dfzdfj8Ls74uWN7kZjdmIfYF/SdNg+w2zMKC7DaxS33tts5CvdOQ834zpPtA
fNZn9IcFi6X7QJz5tu3SqFjpPhB3H4yrP22S7gNh/fiFgHWfSPezMaD21w6/
75LuZyOqZN8npz6X7mcjyPeCT++T0v1s/Lf43uJu30v3c7A0erXvrqvS/Rz0
nrSn48nb0v0cTN4adyfyvnQ/B0mnxv52+ol0PxflXXs3FTvU2u/n4s+Gq72H
vWq3YS6+ii3xC+tqt3UuOgaZB47rZbdKixrjoYIKtd2uWhy68vfYx0Okv6dF
17DVZdUj7NZq0a80ZOei8dLf1+Kf3GfBe6fYbdHi88oNMTtnSXlaXPOfPmRq
kN225r+/I7rx5BIpfx66zA/6526YlD8PLm0eai7ppfx52HN0l68hScqfB91G
649/pUn589B/1p7GHmYpfx6GfNJ2f7e1Uv48dN+orrrxiZQ/Dx9M6OcTuUXK
n48fXhh05ocdUv58rP6susPTPVL+fFRETrj8X5GUPx/p3b4+/O1nUv583IjI
RugRKb/5959seHrjmJQ/H/081i7p/7WUPx/JW3z+0ZyW8oPQbs7lx5qzUn4Q
XB52qxlwXsoPQn73W7Y730v5QUhu398v6UcpPwj6Nuun3r8k5QfBFBLaZ9QV
KT8IQ7/y+EtfI+UH4YHznmOrr0v5wZjpO8GS8ZuUHwzN8JW7g29J+cFw6l18
vmetlB+M6bqrrS/ckfKD0WPPuhFz/pTyg9HpjXmLLv0t5Qfjfs/7kwbel/KD
MWba7OrEBil/Af7pEPjtoYdS/gJkv55W90OjlL8AxavTnv/lPyl/ATaUa85U
NUn5C3Brd2Lt0adS/gK02at+Y5XqD3v+AlTtWf90wvN22xbAxaNhiOoFu1UL
EZ92Y+H21na7LkRY8srOA16yGwtx+GpK7WEHu7ULMXZO/ow+L9ttWIie58Mf
5LS127IQi8JuDL3jKOUvxO31vYoHvSLlL0T+tqay6PZS/iL4OJ+v3+sk5S9C
myUVOy92kPIXoUvJe+PudZTyF2GMeqjfC85S/iJs/VL/SrtOUv4irPU8fa/t
a1L+IuyvjJvy3OtS/iJMD9206k/JqhA8vnr5YaWLlB+C20NP/rbvDSk/BKND
rmxPfFPKD0H2tM+Tx3aW8kOQ+LXjd45dpPwQDDvz+/lyydYQzK3YeTqhq5Qf
greSOj3q203KX4xfnt+6+6Jk18XYumC4U9RbUv5ipIw9vsLJVcpv/v2LeU93
STYsRt6tEQ0Du0v5izF7R+d0q2TrYtwbb/59VA8pfzHaxLiM+0ayagnObV3x
y/C3pfwleNo58UKpZCxBvTHBr6+blL8Ep+JeSNoo2bAE92o75bR6R8pfgi1f
vrdnsWTrErTuMOPOecm2JbDceS+xT08pfyn+nfcwLU2y61IkLdj29i+SsRSD
n/s55v1eUv5SjBrcY0eKZMNStA49Za2UbFmK4MW19Z3dpfylaPVk74Rgybal
2OHZ6cGnklWh6Oatflon2TUU/jbH1Hd7S/mhsB2t2LxUsjYUHq32zd0j2RCK
Xl1a37JJtoSi09fzh7v0kfJDcas2IfMjybZQXI4Z94NBsmoZXkp90veQZNdl
mL3MuehXyVgG/yOzgtr3lfKX4UrWg/kfSjYswwUX7ZcLJFuWoW73yvjVkq3L
sCoi5/BhybZlGBEYEPWzZNVyuPnXf/tMsutyXF7d+mQPDyl/ObodObTIR7J2
Ob7YlncuWLJhOUZ1uP4gVbJlOf4aNuTBdsnW5Rjd+87FE5Jty+F8ujz/qmTV
Cuha+cx8INl1BQ6eWvha+3el/BWI0f98tZdk7QrMvfR38TDJhmZ/kLd9mmTL
Cvi3jzgcKtm6Akf+Pd+QLNm2Ao8ati7aIFmlQ/ePNnfaK9lJh2kJPV/8SrKr
Dr/en4MLktU6qI50O2+TP58OU/59UnRPsr8Ov+VMrXuun/R5ddg6afiaDpJ1
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
YxtU9p//B0GXPnE=
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 460, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{"ba", "\[Rule]", "5"}], ",", 
           RowBox[{"bn", "\[Rule]", "1"}], ",", 
           RowBox[{"z", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vs", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vh", "\[Rule]", "1"}], ",", 
           RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
           RowBox[{"u", "\[Rule]", "0.1`"}], ",", 
           RowBox[{"pa", "\[Rule]", "0"}], ",", 
           RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"LsO", "LhO"}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.772523305084457*^9, 
  3.773388909296077*^9},ExpressionUUID->"9a03f225-ae2e-4c47-855a-\
b17a7425f189"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxd1n9YVHX6//Gxn7SLu1OyLSXVWFhYpFOiTUp1a5ioWKOiToo6KtqooMPv
AQY4FuWUlFOZS4U1n5ZPUbnbVO6GRTkptVMfq7GwqMimso1NXaeVEpPdvn6v
5Zzz9sk/cz2u2/u8zuu8r/d1OWLZutkrTrNYLLGzLZb///vfv8RN//2ND/5a
ZFeXd+JP+74cdJLkFX5UduZzuq2yPrLy6hF+3SmyMe7458Q83alSMGxK+tQL
dafJc/f/ePbYv+8ftE0ev3dxzT9f0H2pVKwr3L+ySne6LKj/4OCGbN2Xy/7p
w2on/vLFoDPE/tXk3FU7dV8pWxqmPP+TX3emnCj+fPLb1+keLY+8MnvTK0d6
Bm2X409/6Xu6Vfc18rc5eR2r5+m+Vtosx8d/cobusbL7tdeTdrzw+aCz5K4t
sfqP5+keJ/6+/X85fPyzQY+X81Mdn73UrPs6mTdh/1fvXavbITdOmLzxk799
OujrpTlrqnPufN0TZNSbD8ZejncPeqLs2nHp9zcu150tecN+GXP+/k8GfYOE
xtxdMtyp+0bZ+PGjQz955eNB3ySXX37plmnDdIuUXP/g4uYl+/5rTWTkIwsn
eJq7BueT5O+9T1jv+OtHg/NJ0uIe23D98x8OzidL172ff3/BrL2D88kyv/h3
D+90vzc4v1nOXPxZ567qQWs3iy8/7dslD+nzHGncWrtwy3P6PEf+816xtmKX
Pp8iv3rltSf2fKrPp8iro9J/fDehz2+R46+lty85+/3B+S3yxg3/GHbfRYO2
TJX5fUtHTxurz6fKi6dpo1py9XmupD+1ZeSdi/R5rhQf33/zzyX6fJr8qWb4
s6ffo8+nSfDNedrWR/X5dPm/H9v//fY2fT5dFuwqXtqwU5/PkNfP2vzzW3v1
+Qy57P4xVz72jT7PE99tKStP9OnzPCkbv2viP878YHA+U4reuWLO8vMHrc2U
+tMnl6y6XJ/fKt/5NtWcGKfPb5W5V82suGCKPr9Ntn5ZtnH3HH1+m+yrLU7+
eak+d0rNdzVrX183aHHKjmGdt/2mTv/3TnnRPrTq8L2Djjjl2ONDuxZu0fdn
yYYdKxsWPKXvz5LHt0549fs/6fuzJDGy8PDQHfr+LJn//py2t3br+7MlZ8SW
J4e9r+/Plh9+96vnj3+i78+Wu468v7v6K31/toQn/mvIlu/1/TmyatF3jzqP
6vtz5OjWDz99/oS+P0f2nnn7sH1DYoP7c+T+G14ZePrMQVvypddz5HDeOYOW
fKn58zfXRpMHreXLpmuPpF1o1ffz5ZsJ64bkDNP358ovJ+Y5pp6v78+Vyav2
XjjyAn1/rtz/zdEhXw7X9+fKS5c2Tqm8WN+fJ1+M/2jCIZu+P08WnvHC2MmX
6fvz5MUr1tRVj9T350lG5xD3w1fo+/NlxKK8ix4cpe/Plz/clZ8ou0rfny8H
972WfMPV+v58uSo44YnDo/V9l2z769joPXZ93yU3vrbof8+5Vt93yduL6qdW
jdX3XfLrMscrsSx9/3bZMfr7o+eP1/dvl8kbHjs6/Tp9/3aZNL3vqWKHvn+7
3F4389uG6/X9BeJ6ccfmOyfo+wvkmZ9H3lk5Ud9fIKNm11UUZOv7C+SvY7uu
HneDvr9Q3lv22NIhN+r7C2XVh3vfeFO3tlAq35x2sPImfX+hnHntF40jRN8v
kK0/vjxil24pkEdb7nbePknfLxDvs180f6c7UiBNNe7a4sn6/iK5Zq219KBu
WSTPffRQYunN+v4i8c8oL9yrO7JI3p5SNG5Cjr6/WMYsePKtFt2yWBI3xUuO
69YWS2D8kQedU/T9xdLR/orvKd2WJfLYwqbyI7plicze5f7gulv0/SVy4ZYh
H9TqjiyRryun/+U13Ra3uPffHjmm2+YW59FdV9qn6s9zy4RbX79qhW63W27Y
PvvYFt2aW354/7433tIdcssD329+4QfdEbeseOvIjxfmDjrulrS6Ta9O0m1Z
KlOfGZK+UrdtqXz+x03zArplqTztWFLeptu9VJbd/eDWt3VrS2WG2534Wndo
qdx81YR7/607slQ2XNNz5/nT9Pyl8q+ta366WrdlmQQuuP/Ezbpty+TTEbVt
Lt2yTG6/fPh5Rbrdy2Rj7bl59bq1ZbL82i7PJt2hZdL9VUf1k7ojy2SE94JN
fzbyl8mzvRPbO4z85TJ1zb2nv2vkL5cOCdR/bOQvl3Nsh8d9beQvl5deeGbc
YSN/uZTO/GfgmJG/XDZcPm3CkOl6/nK56rmWOb/SHV8ua5eM3X+ebkuhXHLF
376+ULetUC7+172rLtUthXLg6NU1o3S7C+UD1+Hhdt1aoYzf8ODc8bpDhXLO
v6qvzjbyC2XuXU89O8nIL5Q/tT77wS1G/gqxH9zXOsPIXyEbi4aPdhr5K+TX
u2zefCN/hTzyxs3rXEb+Cjm9Z+uYAiN/hYwvTPrLEiN/hXxzu+305Ub+CjmY
Pv2ilUb+SvnszL+ctcrIXynfzVm8a42Rv1K2BVLmrDXyV8rjaTWveY38lXJ8
fNJ/So38lZKSde5FFUb+Shl/xu4Lq4z8lfL0ilHHfUb+HXLawJhXa4z8O+TE
La1L/Eb+HVJac93BOiP/Dnnvem1xg5F/h9zsGHhVM/LvkN07zz3tTiP/Dvn3
JeeOu8vIP5l39vi5jUa+Rz7rbFt+t5HvkVtrG5beY+R7ZOTEnbdtMPI98sNv
F40JGPkeqTxx45B7jXyPvPRV9tuGIyfnK0c03Gfke2T1689lbjTyV4mreOMH
hm2rRDt7jafJyF8lL33092OG3avki5KH6u838lfJjpL+AcOhVXLpV4+VPWDk
r5Kde49+bTi+Sko/rpixychfLRdVN/3JsG21jHq25Zygkb9apl92ptuwe7V8
8+HFLxrWVkvp1Tf823BotSwL/DnnQSN/tfxhVccGw/HVkvTR828btqyRHfe+
PuQhI3+NuFyjrzcsa2T3zOuKDbvXSPuxoU8Y1tbIoUcP/J/h0BqJLP3+J8OR
NRLdMuOSh438NbIwes0Uw5YimdW/22PYViSjdl9+n2Epkhfv9j9r2F0kS7Vv
3zasFUlTf8PXhkNFcvd8z4DhSJF8PnVHymYjv0jeiW28yrClWPrXHRPDtmJ5
/prz5hqWYvH+LXGHYXexrN76dLVhrVic/5xyn+FQsVz98ZePGo4Uyy/LG9vM
/GKZ8Nzkv5r5a+XW9zN2m/lrJev3OR+Y+Wtl+InQZ2b+WnFkzvjWzF8re1tn
HjHz18rGl17qN/PXymlDGoc8YuSvlZ1/fPccw5Z1sumSTecatq2TqWWfphqW
dfKfS168xLB7nbxjv+hyw9o6OT4pPdNwaJ30bthzjeHIOlm8b/h1Zv7JvP/5
fbaZ75VXh74lhq1eKfk+Y4r5Pl55oGPqNMN2r3z+5siZ5vt5pfjHt52GnV7Z
OWxMvvm+Xtn4xNL5hr1eWR5fusB8f6/8PnHtIsNBr3zz8idLzD5eWX1g9jLD
Ya/c+dtnCs1+Xul+7OOVhmNeWfH2Nx6zr1fe/HNsteGEV2be9mSR2b9Ebmqc
tdbsXyJNyf9YZ/Yvke0b7ygx+5dI6cb3S83+JeKsu6Tc7F8iIzsWVpj9S6Tm
/sZKs3+JfHLp41Vm/xKxPB7ymf1LZPjpW6rN/iXy1nx/jdm/RM6/J7/W7F8i
W4ou8Zv9S2REzxem4yXyRnOwzuxfIqsWOOrN/qWy9719pq2l8qtHVjWY/Uvl
mtw+0/ZSGVpZqZn9S+WJ1oRpZ6k8N2v5erN/qWQffd+0t1Qu7h97p9m/VGZG
HzIdLJVlbx00HSqVY9NvusvsXypnvXC/6UipyORPTMdKZakzrdHsXyoNtkWm
E6Uy68dHTVvKpHLoR6atZfLSH5PuNvuXyZgjE0zby+Tly1abljLZV7LFtLNM
7GdHTLvL5OHffGfaWyZXhn99j9m/TJ47d7TpYJlUzbvVdKhM3nmyyHS4TPYk
32s6Uiadr/7RdKxMrnirw3S8TF6b0mU6cbJf/vemLeXyZtIvpq3lcl3VeRvM
/uXyu+3ppu3lMuLDcaalXH7+eoppZ7mMOpZv2l0uWRcvN+0tl20rvaa1crlx
v990sFx2PhgwHSqXifc/bDpcLr98vtV0pFzaAs+YjpXLVVvDpuPl8tWlO0wn
yiV46ZumLRVS3ho1ba2QqeEPlP4VMm3mx0r/Cpl+Z4/Sv0L+NPdrpX+FlLz3
ndK/QhxHDin9Tz4v8oPSv0Iem/KT0r9CPrzrZ6V/hTgb/qP0r5DM7NMCZv8K
kTfONB2rkIxzzjEdr5BcW7LpRIW8f9ZvTVsq5ZWd55q2VkpsZoppW6W8+vL5
pu2Vcvhoqmk5ObcON+2slFuTLzLtrpTtvReb9lbKvmdsprVKaZhxqelgpSzd
d5npUKVYp440Ha6Uc566XOlfKS9+d4XSv1JcF4xS+leKw3Gl0r9SfFOuUvpX
yejJmUr/Klk85mqlf5WcGDpa6V8lB/crlio5849jlP5VMmyhXelfJR+dfY3S
v0p+elaxViWXTb5W6V8lx2KKQyefP3+s0r9KPu5SHKmSw9OzlP5VsnuH4niV
vDtinNK/SorvUmzxifVLxVafnDduvNLfJ/93t2K7TzbtVSw+eT71OqW/T1Yt
VOz2ydDHFHt90t2lWPPJWckOpb9P9t6kOOSTYq/i8MnnPaE44pMvo4pjJ/v8
oDjuk3fOv17p7xP7BMWWalmzULG1Wh6vUWyrlq/+oNheLQteVizVctl7ip3V
Mv9bxe5q+c2AYm+1uM+doPSvlmUjFQer5UqH4lC1vDtNcbha5i5QHKmWnlWK
Y9Wyzqc4Xi0X3aM4US19Dym21MiQJxVba8T5nGJbjRzertheI9+8oVhq5Iao
YmeNnLFXsbtGJn2q2FsjA3G1f43c2Kv2r5GhR9T+NVLyo9r/pE+o/WvkvCET
lf41svAsxfEamfVrxYkaOf5bxZZacaUottZKaapiW63MSFNsr5XeSxRLreRd
pthZK7WXK3bXim+UYm+t3JKpWDv5vNGKg7XivkZxqFZeHKs4XCv7xymO1Mo/
rlP710rX9Wr/WglNVPvXivMGtb9f/n6j2t8vy0Xt75foJLW/X35/s9rfL7Nz
1P5+qZ6i9vfLA7eo/f3y0FS1v1/uyVX7+2XNNLW/XyZPV/v7JXmG2t8v76qO
+cWfp/b3y2Uz1f5+iai21MmcW9X+dfKFaludLLlN7V8nn6qWOpnhVPvXyV9V
u+tk+Cy1f51Uq9bq5EPVwToZOVvtXydlqsN10qE6UidD5qj962SS6nid1KlO
nHw/1ZZ6OajaWi8X5av96yVPtb1efKqlXv5HtbNeoqrd9XJItbdefjNX7V8v
o1UHT+apDtWLR3W4Xu5SHamXFtWxenlZdbxe3lGdqJf9qi0N8oNqa4OcPk/t
3yApqu0Nkq5aGmSsameDTFLtbpBbVXsbZIFqrUFWqg42SInqUIPUqg43yN2q
Iw3ygOpYg2xRHW+QJ1QnGuR/VVs02aY6SZOXVVs12aE6VZOdp3wfTTpVZ2jy
zinfS5P3VTs0+eiU76fJJ6pzNfn8lO+pyZeqXZp8fcr31eRb1R5Nek/53poc
VO3T5J+nfH9NflAd0OToKeehyY+qmzU5dsr5aHJcdZsmJ045L03+rbpdk19O
OT9NhsxXHNXkNNUxTU5X3a3JGarj2sn/Hyru1eQs1QlNzlbdr0mSast6OUd1
0nr5lWrrevm16tT1kqzatl6Gqs5YL79RbV8vv1XtWC9W1bJezlWdCzvXy3mq
XbAb9sBe2AdrcAAOws1wCG6Dw3A7HIGjcAzuhuNwL5yA+2HLnac6CbbCqbAN
zoDtsAMWOBd2wi7YDXtgL+yDNTgAB+FmOAS3wWG4HY7AUTgGd8NxuBdOwP2w
5S6cP2yFU2EbnAHbYQcscC7shF2wG/bAXtgHa3AADsLNcAhug8NwOxyBo3AM
7objcC+cgPthSyPOH7bCqbANzoDtsAMWOBd2wi7YDXtgL+yDNTgAB+FmOAS3
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
zoTtcBbsgLNheVIsg3//DxtVamc=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxd139UlHX6//HJtCjRpo2MimoqtmiX1qkoSUkvE3Ms1DHRKFFHRR0Vdfg9
/L4xLDS0MSmpsKYkw1Ibf7RRYU1FRWrbZFhkqJORsqY2Fsdos/r2PZ+573n7
5B/Ow4trXry8zvscvXbWkvvn9DGZTIHzTab///3/vkIjSmO2jPm2pHpE+A9k
1sm/bbNPWxF2lNijuz7YJ56wzfL8qes+2pa/JuwY2Z/wzYio3U+FHStDq6d5
X0t9Juw42ffMFa/VHV4XtkUyPnPt/mavN+zr5Mpr+3vXfvxi2PGS27ip76BA
Y9g3yFWVR9y/H98QdoI8e3Txhr7XbAz7H1I+ee+qnrmvhp0ocxf1t7z64eaw
/yXvPD4i/qKrfWFbpeX5/vtem7M17Ftk3lPnPWZ/a1vYt8plN43quy5uR9i3
iawcOOSBla+HnST/+zOpduqAN8K+XaZp++7YsK457DvkxOMboh8a8VbYQ2RL
t3nRJz+/HXayzPy6M2ppy86w75SEvTM/znz23bCHyuiDN38z9hN/2MPk/P7n
P+7a+17YKbI/9baCL4+9H/Zd8s7Lv7zXFNMa9nD588k+la33fxj2CJk8bMYV
f9v4UdgiMQHnnH9c1fZ/1kRil/RrW/fGJ+H5SHlzVtGG/Y/sDs9Hyvmb4p2j
Xv40PL9bLtyccPfhWwLh+d1yqDi/6fv2veH5KOn3THbHtx99EZ6PklBl+bGr
drSH56lycOeO51c37AvPU+WtrS3X3q59GZ6Plre/S4o5Z8ZX4floOfH0qg0n
kzvC83tk1KBJG34Z8HV4fo9sXrhj9aCDYZvGyBzb6Ffu2bg/PB8jgxpeO796
yTfhuU3WvHvXK7utneG5TS4/0G/llSfCNo2VC049/EZu44HwfKzc9tvC8Z9P
ORie3ys/nVe2PrnvofD8Xpm+LSb11U1hm+6Tq0oGPzwoIRie3yen6mavmFkU
tilNVp+757c7W/V5mrT8NPI/6wd+G56Pk95LejevnxK2Nk425p/8fXiDPh8v
qYv/3lF6SJ+PF/O5y6JnWg6H5xPk27bcq09PD1ubIF+/cOnIUc/qc7s0B+67
f+K+sMUuj4+b1n7TgO/CP2+XK0qKj3x5d9h+u7jSYlJmF4ZtmiiDnxp2yf6X
w5aJ0v/Sc/4x5it9f6JkT718+7/7doX3J4rnnr1jb7eGbbpfquqWff/Zg2HL
/fLukM171lSFrd0vufLuo6te1vfvl77rT3/x6W59f5JM/yrxqRkn9f1JUjTl
yKcTL/o+vD9JXsjfWrPtX2H7J8kll/fsezwtbFO6fFsy8u1fnGFLurxfMO6m
3of1/XQ5NvHxU8+t0/fTZVjciy2/vq7vT5Yjf2SfM+hTfX+y3PrwFb+bvtP3
J0t5+uFXP/5F358sY80b3i/sfyS8P0X+eWr6xiuuDlumyMA3Hyh8d3DY2hSp
vTnxmEvC9k+RxneXZQ+16/sPyPK6xy64cYa+/4AcuOS3JSMX6fsPyJMPHfhx
TYm+/4Bszf20OOFRfT9DUn98/7moNfp+hpQvTffc9Zy+nyFNtrnXBpr0/QzZ
/dmQj9u26fsPSpb9o2cGt+j7D8rgv7kfiv5Q339Q0leflz33U33/QXnu+XUH
U/fp+w/JzEU3LNrSqe8/JIlX/Fvb+J2+/5BceH3sbSnH9P2/fv6NRROzQ/r+
VNm46ZvpI07r+1OlLWfk2rd+0/enyu5ze04dNh0N70+VNeXu+J39wjZlyqML
hr407sKwJVM21AzdUj8wbC1TnrVsH/Hi3/T9TJm34rXrFg/S96dJ5jd1P/x5
ub4/TaoHPXPmoav0/Wmy87F/1Sy16PvT5N7McWuKr9f3p8tr03b+cvcN+v50
SflPytxvE/T96fJLVb3zgX/q+9Mlf+qW2S/frO/PkK4Lpz79xWB9f4b88a9J
/zh4i74/QwIXdV/2yW36/gyZMap59FO36/sOGehNKx0zJGyLQ06HXphzMFn/
PIc0n3i+PnNo2A6HPH9OheeDYfrnO+RYwaDtMXeF7XXIN/UJEycO1/MccnXl
ipdLRoQddMiSP+8NrhY9f6aMWt56Sf1IPX+mXFz0wthVd+v5M6WkdG9xwSg9
f6Z4PipaOT5Vz58pa8t3zrhitJ4/UybFbXrna93+vz5v0omFK+/R82dKfmjZ
VXeM0fNnyRMzl1W067bMkrvGvzp4vk3PnyV1e89t69HtmCW/fV6yr2isnj9L
du6fe+An3d5Z8kJ09LS59+r5s6R9yWW79uoOzpLX4y9Zk3yfnj9bJga+uKZe
t2W2vNR46PNTumW2jJ3xWd970vT82bK5buPAJ3Vrs2X308lySLd3tlz30NTv
48fp+bPlndkTR8/VHZwtqUv6rF+v25QlmRtG3nVAtyVLrEejJ1wyXs/PkmJp
u+ge3Y4skYMF2wt0a3/NG44teFG3N0teyvlz9h7d/iz5IfjuJz/rDmaJw/tk
a+wEPX+OtK7LKRmm2zJHapf/NDBTt8yRXQOWry/R7Zgjs9qffmCtbm2O/FG+
zrZNt3eOXLdx+BO7dfvnyFU3Fo7/TndwjmwpeenJX438ufLmW69VDLTr+XPF
f8p8zXW6Za4svrhnRZJux1yJ94zZN1q39pc/DFw0Rbd3rnwyaPh9c3T750qf
Aclr83QH50rqgzl9qnSb5sklXa8/s9LInyeTf+zNftrInydbps5a1mjkz5NJ
V0/9cYuRP09O/lz/erORP08KMm86/J6RP08u/KG0YpeRP0/m9Sxcs9fId8rL
L429ab+R75RXag+P+dbId0rrM8tPHzXynXJg49UpJ418p2x97NJreox8p2S8
UvbSr0a+U47Iufv+MPKd4rr1z23nTtTz50vxstzUKN2W+TJ5uXlVtG6ZL4FX
7q4z63bMlz/OJE6N0a3Nl+9Kth25TLd3vtjOKx56pW7/fGm/8cSDV+sOzhep
G2271shfILaSR6LijfwFsr2het0NRv4CWT+s+4KbjPwFcnNgsP2fRv4COWfd
ttybjfwF8vGg9XmDjfwF0nTDxZNvMfIXyOSxx2NvM/IXytu1/d5LMvIXyuLF
F0+4w8hfKL6Gja1DjPyFcurZ8dffaeQvlHn3z88eauQvlFmlaS8MM/IXyn/O
veODFCN/oUyZaP/iLiM/WxYUbN873MjPlrxxc98fYeRnS9rqGevFyM+W+M8f
KRxp5GfLrtmvp9xt5GfLlHveOG3Yny0Xn7zvpVFGfrZUDrhxbKqRv0js404d
NmxZJCd+teWNNvIXydwN7//PsGORPPjhf4vvMfIXSVHyyFOGvYvk9q9GzRxj
5C+S4SeydhkOLpLLt5pvthn5i+Wx7ZuWG7Yslmts9UHDslhGHU28dayRv1gc
K96pMKwtltF9Gj4y7F0s99ouuvBeI3+x5OyaNtZwcLEc2NZWbdi0RLr+sbLF
sGXJX/9f6goZliXyW7DvdfcZ+UskabXFblhbIp2WeaWGvUvkrSv7NRr2L5Hz
J8bvMhxcIsV//HDCsMklL/VqF6XpNrvkh0C/wYYtLon69Zk0w1aXlHdNdxoW
l3TfuHipYbtLsp/67hnDDpdMnNax1bDLJcevyvrYsOaSn/ut+8awxyX2I2tP
Gva6ZLXNaRqn2+eSPg9bLjbsd8nK3Z9bDAdckju2drDh4F+/399n3GU45JI3
ns2417ApRw71e2SKYXOOTD7x80zDlhw5eemWbMPWHCla8W6hYcmRQU23aobt
OdKTcPFyw44cGfGvrNWGXTnyxNikpw1rOfLhsuVew54cuWPJwpcNe3Nk5ZXf
bo70z5Hzbzm1PdI/R8afeOHNSP8c6f7nr+9E+ufIndlnPoj0z5HbvvK1Rfrn
yvOpV34a6Z8rV4t8HumfK/sGxO+L9M+VwJZdHZH+uXL990M6I/1zpW3IkkOR
/rkip/MOR/rnyplhY7+P9M+VVT+fOhrpnyuvfu06FumfK39Uth2P9M+VTyb8
djLSP1eyavufivT/6/Mm//ZTpH+uvLhxT0+kf66sm1d1OtI/Ty6eeGVvpH+e
/NS/4ddI/zwZE9/vt0j/PPlgQMaZSP88Gf33p36P9M+TYdv8f0T658kvRzv+
jPTPk2NHDpnGG/3zZPfOL88x7MmT7Qve6WPYmydXdq4917AvTzpOze5r2J/3
179/ru9nOJAnb43+KuLgX/t9tPMMh/Lkc8fV5xs25ct3fbdHbM6X+x8dHmXY
ki9vFr0XsTVfDmemXGBY8mX8669FbM+X5l+uvNCwI19Wr6mK2JUvOaeCEWv5
sjRvaP9I/3zpLlgVsTdf4iYciNiXL2PtN0ZH+udLw4fZEQfy5cnTmyMO5suE
G36IOJQvH66JHxDpXyCXljwUsblA3javjNhSILsea4nYWiDXxv03YikQ749/
GxjpXyCTbxkasaNANl4wI2JXgax4ripirUAev+TFiD0Fcv0Kf8TeAnnh2gMR
+wqk6JdfIvYXyOgbL74o0r9AenclRBwskO//NzziUIF0fTopYlOhZD04L2Jz
oTy8tThiS6Fc/98VEVsL5Y+Ln41YCuXfKa9EbC+Uo+7miB2Fcue+DyN2FUr2
jL0Ra4WyIP5gxJ5CmWD9b8TeQilZ9XPEvkKpH/t7xP5C2bzwPHOkf6Fc88fA
iIOF8v4Fl0UcKpQDT10dsalIhmz+e8TmIolLT4zYUiSzn7g1YmuRlC5OjliK
ZOHJuyK2F8mBy0ZF7CiSa0NjInYVSVJZWsRakbT67RF7iuT299Mj9hbJy9UZ
EfuK5Nf+mRH7i+TTqTOU/kXyWNEspX+RzJs1R+lfJDOvcSr93XLf1gVKf7fs
umKR0t8tD01fovR3y4SKHKW/W/aX5Sn93XJ+ZoHS3y0fXlWk9HfLtx+4lf5u
ucheovR3y9EPSpX+f9lSrvR3S6GzQunvliPPVir93ZLboin93TJ6d5XS3y35
nyxV+hfLec0PK/2LJbS2WulfLJcvWKb0L5YHBz+i9C+Wkm7F9mJJeepRpX+x
TLyzRulfLLP2KtaKpf+s5Ur/Yvm2W7G3WJbMW6H0L5Y7Dir2F8vWcY8p/Ytl
0r8VB4vl0dhapX+xbM9XbCqR23crNpfIvLiVSv8SaXAqtpbI9T7FUiKpPyu2
l8g9t65S+pfI/EWKXSVyrFGxViJ9vlbsKZGjFzyu9C+R3UMU+0rkwCzF/hK5
9zHFgRIZtlVxsES+alccKpFRpxWbSuXFSz1K/1K55DbFllJ5fbxia6m85FQs
pfK7ptheKl+uVewoFdtmxa5Scb6nWCuVtHbFnlI5/4hib6m8elqxr1TGnrda
6V8qP8UoDpTKjusUB0vlucGKQ6Wyc5hiU5lcNUaxuUx2TVRsKZPPpiq2lsmQ
OYqlTPovVmwvk/RCxY4yubJCsatMnMsUa2Uyslaxp0y2PKHYWyZv1Cv2lcnM
59T+ZbJtvdq/TF5rUvuXyfTNav8y+WCr2r9cvntd7V8u77+p9i+XrJ1q/3L5
1K/2LxdTq9q/XM75WO1fLl98ovYvF/cetX+59PxH7V8uYz9X+5dL8Rdq/3J5
dJ/av1wKvlL7l0vq12r/cjm9X+1fLqs61f4VMuCg2r9CCg6p/Svko6Dav0L6
HFb7V8g/v1P7V8jdXWr/CrF9r/avkOFH1P4VEn9U7V8hv6v2Vkhbt9q/Qh79
r9q/QoYeU/tXyGHVwQrRflD7V0jMcbV/pTyv2lwp155Q+1fKs6qtlTLwpNq/
UkpU2yvlkGpHpQz/Ue1fKWtVa5Xyg2pPpdwZUvtXylLVvkr5WLW/UqJOqf0r
ZbTqYKVUqA5Vyg7VJk2OqI7S5NKf1L8PTUaqjtVkoWqLJk+oTtDkDdVWTfar
Ttbkf6pFk9ifFds0SVJt12SC6gxNnKodmlSqdmrypGqXJq+odmuyU7WmyWeq
azQJqvZoElJdr8mfqr2aDOhR3KTJFap9mtyoulmT21T7NRmuuk0Tm+qAJver
7tBkquqgJlmquzXJVh3SJF91ryalqk1VslR1VJXUqDZXySrVsVVSp9pSJU+r
TqiS51Rbq+RF1clVskG1VMkrqm1VskW1vUq2qc6oktdVO6qkWbWzSt5W7aqS
d1S7q+Q91VqVtKquqZKPVHuqpE11fZXsUu2tkj1n3b9K/nPW/askcNb9q+Tz
s+5fJXvPun+VfHHW/auk/az7V8m+s+5fJV+edf8q+eqs+1dJx1n3r5Kvz7r/
Utl/1v2Xyjdn3X+pdJ51/6Vy4Kz7L5WDZ91/qRw66/5LJXjW/WGBbbAdzoAd
sBN2wW5Yg2tgD1wPe+Em2Ac3w364DQ7AHXAQ7oZDcC9sevhsR8FmOBa2wAmw
FU6GBbbBdjgDdsBO2AW7YQ2ugT1wPeyFm2Af3Az74TY4AHfAQbgbDsG9sKka
94fNcCxsgRNgK5wMC2yD7XAG7ICdsAt2wxpcA3vgetgLN8E+uBn2w21wAO6A
g3A3HIJ7YdMy3B82w7GwBU6ArXAyLLANtsMZsAN2wi7YDWtwDeyB62Ev3AT7
4GbYD7fBAbgDDsLdcAjuhU2P4P6wGY6FLXACbIWTYYFtsB3OgB2wE3bBbliD
a2APXA974SbYBzfDfrgNDsAdcBDuhkNwL2x6FPeHzXAsbIETYCucDAtsg+1w
BuyAnbALdsMaXAN74HrYCzfBPrgZ9sNtcADugINwNxyCe2FTDe4Pm+FY2AIn
wFY4GRbYBtvhDNgBO2EX7IY1uAb2wPWwF26CfXAz7Ifb4ADcAQfhbjgE98Km
5bg/bIZjYQucAFvhZFhgG2yHM2AH7IRdsBvW4BrYA9fDXrgJ9sHNsB9ugwNw
BxyEu+EQ3AubVuD+sBmOhS1wAmyFk2GBbbAdzoAdsBN2wW5Yg2tgD1wPe+Em
2Ac3w364DQ7AHXAQ7oZDcC9segz3h81wLGyBE2ArnAwLbIPtcAbsgJ2wC3bD
GlwDe+B62As3wT64GfbDbXAA7oCDcDccgnthUy3uD5vhWNgCJ8BWOBkW2Abb
4QzYATthF+yGNbgG9sD1sBdugn1wM+yH2+AA3AEH4W44BPfCppW4P2yGY2EL
nABb4WRYYBtshzNgB+yEXbAb1uAa2APXw164CfbBzbAfboMDcAcchLvhENwL
m1bh/rAZjoUtcAJshZNhgW2wHc6AHbATdsFuWINrYA9cD3vhJtgHN8N+uA0O
wB1wEO6GQ3AvbHoc94fNcCxsgRNgK5wMC2yD7XAG7ICdsAt2wxpcA3vgetgL
N8E+uBn2w21wAO6Ag3A3HIJ7YZPnbPeFo+Bo2AzHwLFwHGyB4+EEOBG2wklw
MpwCC5wK2+A02A6nwxlwJuyAs2AnnA274HzYDZfBGlwN18C1sAeug+vhBtgL
N8JN8CbYB++Am+EW2A+3wm3wHjgAt8MdcCcchLvgbvg4HIJ74F74DGxajfcP
R8HRsBmOgWPhONgCx8MJcCJshZPgZDgFFjgVtsFpsB1OhzPgTNgBZ8FOOBt2
wfmwGy6DNbgaroFrYQ9cB9fDDbAXboSb4E2wD94BN8MtsB9uhdvgPXAAboc7
4E44CHfB3fBxOAT3wL3wGdj0BN4/HAVHw2Y4Bo6F42ALHA8nwImwFU6Ck+EU
WOBU2AanwXY4Hc6AM2EHnAU74WzYBefDbrgM1uBquAauhT1wHVwPN8BeuBFu
gjfBPngH3Ay3wH64FW6D98ABuB3ugDvhINwFd8PH4RDcA/fCZ2DTGrx/OAqO
hs1wDBwLx8EWOB5OgBNhK5wEJ8MpsMCpsA1Og+1wOpwBZ8IOOAt2wtmwC86H
3XAZrMHVcA1cC3vgOrgeboC9cCPcBG+CffAOuBlugf1wK9wG74EDcDvcAXfC
QbgL7oaPwyG4B+6Fz8CmOrx/OAqOhs1wDBwLx8EWOB5OgBNhK5wEJ8MpsMCp
sA1Og+1wOpwBZ8IOOAt2wtmwC86H3XAZrMHVcA1cC3vgOrgeboC9cCPcBG+C
ffAOuBlugf1wK9wG74EDcDvcAXfCQbgL7oaPwyG4B+6Fz8CmJ/H+4Sg4GjbD
MXAsHAdb4Hg4AU6ErXASnAynwAKnwjY4DbbD6XAGnAk74CzYCWfDLjgfdsNl
sAZXwzVwLeyB6+B6uAH2wo1wE7wJ9sE74Ga4BfbDrXAbvAcOwO1wB9wJB+Eu
uBs+DofgHrgXPgObnsL7h6PgaNgMx8CxcBxsgePhBDgRtsJJcDKcAgucCtvg
NNgOp8MZcCbsgLNgJ5wNu+B82A2XwRpcDdfAtbAHroPr4QbYCzfCTfAm2Afv
gJvhFtgPt8Jt8B44ALfDHXAnHIS74G74OByCe+Be+AxsWov3D0fB0bAZjoFj
4TjYAsfDCXAibIWT4GQ4BRY4FbbBabAdTocz4EzYAWfBTjgbdsH5sBsugzW4
Gq6Ba2EPXAfXww2wF26Em+BNsA/eATfDLbAfboXb4D1wAG6HO+BOOAh3wd3w
cTgE98C98BnYVI/3D0fB0bAZjoFj4TjYAsfDCXAibIWT4GQ4BRY4FbbBabAd
Tocz4EzYAWfBTjgbdsH5sBsugzW4Gq6Ba2EPXAfXww2wF26Em+BNsA/eATfD
LbAfboXb4D1wAG6HO+BOOAh3wd3wcTgE98C98BnY9DTePxwFR8NmOAaOheNg
CxwPJ8CJsBVOgpPhFFjgVNgGp8F2OB3OgDNhB5wFO+Fs2AXnw264DNbgargG
roU9cB1cDzfAXrgRboI3wT54B9wMt8B+uBVug/fAAbgd7oA74SDcBXfDx+EQ
3AP3wmdg0zN4/3AUHA2b4Rg4Fo6DLXA8nAAnwlY4CU6GU2CBU2EbnAbb4XQ4
A86EHXAW7ISzYRecD7vhMliDq+EauBb2wHVwPdwAe+FGuAneBPvgHXAz3AL7
4Va4Dd4DB+B2uAPuhINwF9wNH4dDcA/cC5+BTc/i/cNRcDRshmPgWDgOtsDx
cAKcCFvhJDgZToEFToVtcBpsh9PhDDgTdsBZsBPOhl1wPuyGy2ANroZr4FrY
A9fB9XAD7IUb4SZ4E+yDd8DNcAvsh1vhNngPHIDb4Q64Ew7CXXA3fBwOwT1w
L3wGNjXg/cNRcDRshmPgWDgOtsDxcAKcCFvhJDgZToEFToVtcBpsh9PhDDgT
dsBZsBPOhl1wPuyGy2ANroZr4FrYA9fB9XAD7IUb4SZ4E+yDd8DNcAvsh1vh
NngPHIDb4Q64Ew7CXXA3fBwOwT1wL3wGNq3D+4ej4GjYDMfAsXAcbIHj4QQ4
EbbCSXAynAILnArb4DTYDqfDGXAm7ICzYCecDbvgfNgNl8EaXA3XwLWwB66D
6+EG2As3wk3wJtgH74Cb4RbYD7fCbfAeOAC3wx1wJxyEu+Bu+DgcgnvgXvgM
bHoO7x+OgqNhMxwDx8JxsAWOhxPgRNgKJ8HJcAoscCpsg9NgO5wOZ8CZsAPO
gp1wNuyC82E3XAZrcDVcA9fCHrgOrocbYC/cCDfBm2AfvANuhltgP9wKt8F7
4ADcDnfAnXAQ7oK74eNwCO6Be+EzsOl5vH84Co6GzXAMHAvHwRY4Hk6AE2Er
nAQnwymwPC+m8Nf/A8MZsMw=
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 460, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{"ba", "\[Rule]", "10"}], ",", 
           RowBox[{"bn", "\[Rule]", "1"}], ",", 
           RowBox[{"z", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vs", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vh", "\[Rule]", "1"}], ",", 
           RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
           RowBox[{"u", "\[Rule]", "0.1`"}], ",", 
           RowBox[{"pa", "\[Rule]", "0"}], ",", 
           RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"LsO", "LhO"}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.772523305084457*^9, 
  3.7733889207430468`*^9},ExpressionUUID->"837cf4bb-dcc7-4d99-98c5-\
7f6be4fbbd62"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
vefj6ratNH/er/ZGw3/zj5zS1rjBG3aJqgbnTvT3AT4YoBtq+r2bxro++Ht6
pTC6t8YGPsg9ljuozQCNTXxwwTDjd4iRxvCBaac5Y2uHaWzvg4dzbj2eOUZj
Fx9ELe3YSWyqsbcPROvvVT+bpDHPB1fGlXn0naYx3wdLv6adtbXSOMcH6YsT
P/raaJzvg5DV3Xql2Wlc5IOfgevmqhZrXO6D9nNkyp1OlN8HOHFosGol5fdB
bHXkj9S1lN8X9d3uD/VbT/l9caFo3s35npTfF/uCNn3X96H8vvhTJz/3aivl
91X/fjTELDuE8vvigL65j30E5fdF6v6nsT+iKb8vXkW1ixclUH5f3DsdnzA0
lfL7omVYV1V+BuX3RbuOU5+MyaL8vqi6GbV4l4zy+2LCRIs+XbIpvy+uf9k5
w28n5ffFlltPnt/cQ/l9MaLkVeu+Byi/Hzr2zy52yaf8fnhle2+s8jjl98Ol
/sarywsovx+WHB+6+lch5ffDz/SpVn0vUn4/iLefNRh/hfL7Ycbi8rYzrlN+
PyRm8bWt6e+neH6I/vJl4qw7lN8PKYLy3ZPuU34/HFxS6z74EeX3w5FntxO1
n1J+PzzJ7TLwVTXl94Nlm85TT9RQfj8ccuj8ZVsd5ffDyi+Wdqin/P6oX77L
9ecnyu+PYZaTZu77Svn9sSCx9M+iH5TfH3fSe+Z+/UX5/ZGnc3R2yl/K749R
M/S/92up+fs4F3+4dTpzaVcbjb39UdqirHBIe415/tgVENWYraMx3x+782qC
u+hqnOOP4bdqnUO7aZzvjysjVhx82lPjIn/Mmfg3xLyPxuX+GLLH836yvsbV
6usZxqUPDTRu8IdJjMSrnxH9feFWZGxvV7psqMa6WzHi9K6v6cM1NtiKjm7x
jedHaWyyFUMNdj99baIxtsLEs/pcO1ON7bfi0aufOwdOpPxbMd9ZrjKdTPm3
4rfW4kJMofxbsc9b1GE2KP9W3HxcILOaSfm3oov+v0DL2ZR/K+a+SD4yyoby
b8WWsxuW6NlS/q1onJPo02xH+bfCbu7Fbo8XUv6tOHizzOaIA+UPwLtJSwZG
LaX8Adgb92yP7XLKH4Bds5+8011J+QMw8s6OH2WrKX8Ailf7PYlbS/kD8H2U
707zdZQ/ANbS/c416yl/AOymd+uetJHyB6BuaMyDYZspfwCUd4ryL2+h/AHo
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
5POIXKJ+/lqd978jl8ej5mnt2d/kyngcNBbk6sTT/uMxaIHvOn1yXTwiXr76
O4rcEI9AyUyfqeSmeEyd/6HQjqyVgNg2li9XkbUT4NmQ+MKLrJuA0A0mZ7eR
9RKQ/Ct+SxrZIAFHV9b9VZKNEzA6Im/DQbJJAiwj+ucXks0T8OtY9t2bZCRg
5n7encdk6wSEjexx8C3ZPgEek/PXNZGdEtDYPfd32wTafwL+TZ6xpQfZIwF9
PJ8UDSJ7J8Bm34WGseSgBFyymPpvGpmXAOWBXfXzyQkJSCufeXoFmZ8AQfG6
dRvIkgRIGpZ+DiDnJGBke/eVMeS8BOh1ebI3g5yfgHYrWjxUkQsSMCDZsHY/
uUj9eZL4igJySQKW3A7adYVcngDvO1Oc7pIrE1Aq0f/wjFydAFnQKrf35LoE
vOo/+/wPckMCOmT1/t0qkfafgHmz9fvqkrUSMe6HqH8/snYi+t653MaYrJuI
Havqy8eT9RLRI82eN41skIiao2O7zyMbJ0I7vjzFkWySiM0jN79bQzZPhNPo
OaM2k5GIi1HKJUFk60ScTj7kGk22T0SRXsHSNLKT+v48foyVkl0SMdJ475ed
ZI9EXApqLztE9k7EuvrFxqfJQYnITbysvEzmJWJ5qeDXLXJCIr7u/j21ksxP
xInoiZtekiWJ+DYrIqKenJOIZfM6hH0n5yVCd3O3NVpJtP9EdGhxe/R/5IJE
jHjiX9uNXJSIYDuLWH1ySSJsRzt1GkouT0TYba1IE3JlIuLbb3w6iVydiJMT
SwbNJNclYsbkBQ625IZE+AeO27KE3JSIy1W5/qvIWkn49LzSbT1ZOwl9eVrw
Jusm4cXs+W2DyXpJ8LBpOBVJNkiC77A+S5LIxknw6vn7qYBskoToskuL5GTz
JEiyc47tJCMJqz0uax0gWydhqXTZ5ONk+ySUmWW4FJKdklBTIfYrJrskIX6H
zK+U7JGEzS5XXSrI3knotn6ORRU5KAkHd9u0qiHzkqCf11TwnpyQhLrUCOev
ZH4SDHu0//iLLEnC2qwLm1sm0/6TsLvtrSftyXlJsGpabt6FnJ+EW3JBtB65
IAnfixTnBpCLkhD4cPvrIeSSJDR8uv53FLk8CVcLLduakSuT0Eo48I8FuToJ
ozZlv5pBrlPf78uq0zbkBvXnTdLi2ZObkpC3fMyEpWStZIy7l161kqydjAGP
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
EZLkQXOYnUS4nmO0jtlZhPmFSVHMLiLcFezPZnYTIeVafCGzhwjjmwc8YvYU
4U+5/zdmbxH21cR16c/6L0JsheMo5iAR1lrWWjOHibD35Dg3Zp4IS6qmRTDH
iPDLqqOMOUGEq3Hy48wp6s+f8L6MmS9C7pvmOmaRCGYj77QcwPovwleRRz9m
hQgzjlw2Y85R/3znV3bMuer3yeLaeuY8EW5d9OYxHxCh38hqCXO+CO6teh5h
Pi6Cw+2u15kL1M+758Nq5kIRtq10bWIuEuGRcUFnA9Z/EfR+3x/CXCLCpSXn
pjCXijD6tJcDc7kIkbnvNjJXiFCQOTaSuVKE3e2txMxVIjSFGh5krhZh4vpb
l5hrRLhpNauSuU6EfylJH5jrRWh1StlyIOu/um/mEb2YG0UojB8zkrlJhFW9
DoO5WYRDy/86MGtlIviy/gbm1pnYdqljOLN2JrZeK+Mz62Si0/Q1ucy6mfiq
uHKKuXsmbs1pvsGsl4lZB9s8Y+6XibbmLxuYDTJxfqGglSHrfyYGufbsyWyc
iR/3vIyZR2aiTQfFZGaTTAz2Utkym2Zi+tqAVczmmXCYZ+TNbJkJr5S8SGZk
4kR8KyGzVSY2qMxyma0z8cpk2glm20zIVAZXme3V82c/fsDskAmLWM83zE7q
zy94+IPZORMiy37ag1j/M/Fv02Q9Zjf189o+zpjZIxMvzdqYM3uq9xN1dA6z
dyY+P5u8lNk/EzN3qNyZgzKRb/hsK3NYJvJO/Ixh5mXi7uHPQuaYTHRed3UH
c0ImgoyDjjCnZGKtbbsiZn4mXA39y5hFmZj/+3wVsyQTE4fWvWNWqN+3b5+a
mHMyceT4g7ZGrP+ZKD6q6M6cl4nnljMMmQ+oz2dfG8Ocn4klQ0ZNYT6eieh+
fnOZC9T3VypdylyYid0R292YizKxICLJh7k4E8e7LdnGXJKJqJgWycylmSjU
44uZyzNxoWeLXOYK9ftX7JDPXJmJxe7JhcxVmXCfvquEuToTc6Q7KphrMmF0
JLqauS4TaTet65nr1fsY/uUHc0MmJnfmtRrM+p8J4ZkvnZibMrHHc24f5uZM
tF4XP5hZKws7X+41YW6dhbpBRy2YtbOQ654zm1knCz3r/Bcy62bhY80YZ+bu
WbCV3nFn1svCRSz3Ye6XhSU9b4QyG2QhymFgHLNRFizMXPjMxll4/TlOxjwy
C+6XM3OZTbLQ62XKIWbTLPWftzwLmM2z8KzW9BKzZRb6THp9kxlZuH2Cd5/Z
Sn0+o/VzZusseLT0rWO2zYK35fXPzPZZsPT/7zezQxbynpq1HsL6n4UeB+Z1
ZHbOgmdX257MLlnQnzlxALNbFgy8Oxoze2Th540yE2bPLJyOCZ3E7K2+fqvb
DGb/LLx8IJ7LHJSFkbfbLWYOy0L/164rmHlZSJ97wJU5Jgtvh7/YxJyQBeMT
Lf2ZU7LwpGeXMGZ+FoaG68Qwi7JQ3P1bMrMkC63+uylkVmShNCFNzpyThZzC
aTuZc7MgLX+2jzkvC5s+bTrKfEC9/5lvTjPnZ2Hrd/uLzMezYDRubwlzQRZk
AxpuMxdmQfFm8EPmoizwj859xlychW15q2qZS7LQ+fOaeuZS9c8fc/jKXJ6F
Tz0n/mKuyML56e1bDGX9z4LZ8pvtmKvUjgvvxFydhenvB/RgrslC3KGjfZnr
svCo0cyQuT4LBS/3GjM3qPum6DSGuTEL62e5mTE3ZSGhxX4L5mb1/r6+nM6s
JcbEaTrWzK3FGNR2qB2zthh3N453YNYRY3j62OXMumJcEA10Ye4uxn1FK3dm
PTFcSx5uYu4nRldzlQ+zgRjTdJYGMhuJ8dOtZTizsRht1uZEMY8U46nh2ARm
EzEOXz2eymwqxlrPEUJmczEE4zIlzJZiiCZ+UTJDjADpjJ3MVmL82xqXx2yt
/vx35w4y24pR1P3tUWZ79fPool3A7CCGsrnPOWYnMRK+DrzE7CxGz67615hd
xBjrr1PK7CZGhFlDObOHGO4+JfeZPcXQmZn5mNlbDMcrjs+Z/cV417VjDXOQ
GCazC+qYw8SwD3b6wMxT7//qh8/MMernNTvoO3OCGPe6Nf1iTlHf75zN/5j5
Yuz6+bCVMeu/GJ9mmmszS8TInJqmw6wQ41WLx7rMOWK83dW3B3OuGFEzFvdm
zlPf7yeePvMBMc5ezh3InC/GjwfnBzMfF0MLt4cxF4gh7/FgFHOhGMu87o1l
LlK/Dy7XzJiLxfBteXQSc4kYrzcIpzCXinHwwKbpzOViOFRPnsVcIca4Pi1s
mCvF8Npy3pa5SozmRl975moxVBf6OzDXiPHm1cWlzHViTApwXsFcL0Zx0sdV
zA1iJJkFrWVuFGNl0s91zE3q563w3cDcLEYG75Uns5YEh61tvZlbS7BU+6Af
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
tD6CbzPfIUrHGsF3mO/AAAUActAJJA==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxE13lYjG37B/AQQgghjy2EKIQQwjdC9hCSEBVFUmnTomnfa6ZmmmlmGiEJ
IXv2EEKUPXsIUQghW975Hb85r+v95z0+z+2a8/5e5/11PE+f1RsXuDbV0tIq
b6ml9X//////q5sUrL9/+ougqEmaf4C9C3Y6VF8RaayD+UefvDSJzdRYD2Lz
DK8+57I11keNS1TV7IocjQ1wM/fl+dYddmvcAxsL9w3PWL9PY0NcvNhBaPWt
QOO+uPbbXuVuc1hjI1R/t/ihc/CoxgPwychu4IThhRobw9Ha96/k+kmNB6O2
f/HM8ZFnNDZFi52b5nUcWqTxUARN3+t+fN95jc1woum/p1+mXNR4OEKOzTwY
8K1Y4xG4stVVt/fVyxqPRKDgnzjnaonG5rg+K7/L5VbXNR4F0fPRC3ILbmg8
Gp8uDWjzO7Nc4zF4ot0uv2T8A40tYH74QwvTBPJYzJ4kXdGxgjwOzVrsqAzu
X6HxeKzodem0mw/ZEubtrxk9PEueAA/n9Nk3Wj/UeCKe9dBfN3UxeRJqm885
arWNDNS8sHG7UKOxAEgPMTh3ZdQjzXMrSGU3f8wP01hghQNnghesKqHnkzHr
zaAO3/Uea55PxpS2FQF6SzXWmoK7Cr/Sgmx6PgVzCp8ufvCWnlvjqt9tp6ih
TzTPreHx+seoQl+NtaZC3Kqs36aT9HwqwvYWbD76j55Pw7tOJXFh1k81z6dh
+K62ObfiNNaaDomrlWF+KT2fjgG2rxe213umeW6DTofHSH8v0Fhgg2+Lhlh7
S+j5DBSnrT/m9YCez4CF3eRZvwyea57PxOQ/O1e1c9BYMBPuIwc57JPT81m4
vO17xoNH9HwWxs54fWZa20rN89noZvX92FtTjQWzYTBH//3c2fR8Dm4nuiSG
rKfnc6Aov1LmlUDP5yJ+6oNak930fC7GNH9hsP8KPZ+Hi/lVCT9e0/N58HmT
GqSj/ULz3BYbP4wzfNFHY9jCsM3rI+GTNBbYYku74T7vHTUussXnM6vSugfR
+fkwsl5s21lK5+fDShbz9sFhOj8fPV/+S3cup/PzcfqRU1phLZ1fgP2D7vd+
oPNSc34BzpzrEnTOSGPBAiwb5vTcGxoXLYBds00pH5dprLUQJvqpl0cF0PmF
yHmy8cr0NDq/EO9v2Nwy2kfnF6Jox3mjG1fovB3GnvjS1OolnbfDihWr9gn+
0Hk7jBv2xzWpyyvNeTsc9Oi60cVMY61FkC1xb9NqpsZYBM+UFluCnDUWLMIg
zxWtT4TQ+UUI8h9TXyyh84vx5uDeMNV+Or8Yffv2/zz1Cp1fjHbDHZJPPafz
i7F3wMzMfz/o/BJ45Ix16KhXpTm/BGMHHOhcP1BjwRJsid/YYeckjYuWIFMe
lN5/icZa9mjMa/nSz5PO28O+b8SUjGg6r35uHtMYo6Tz9mgW9HSpzWE6vxQD
dgUrH12l80tRZxPcdmIlnV+KsdH/1ft8p/NLsezNcelm3dea8w6wHVY2aUFf
jeGALxbfR/4do7HAAfKKh6eC5mhc5IA55eN6X19N55fhSMn7nR8D6PwyNF10
Vfo6ic4vQ7Mm5y0LttH5ZfB2L34y9xidd8SFFdfPnb9G5x0h6lg+pNVzOq9+
Pq/Us/9XOu+IqDPHrnVp+UZzfjnmDRHEP/1PYyzHt696XzcP1ViwHNVzps2r
tdK4aDnO3fz02nwRnV+B/56UNi50o/Mr8H5kwosZwXR+BcZtOXevSwqdX4HN
72v7nsqm8yuxtCJQb8xhOr8SNkn7XidcovMrEfvp2LtjD+j8SlQvy3Y+9Y7O
O2HEpgVy2W+NDZ0wrKno7ty2bzW/54Rlnxrsn/XS2MkJ40Y1bphuprHACbOq
3y1NsNI42wlJNhWrdy3QuMgJ6c+O3VQ5a1zphP45k195+WqstQpTLVq86Rmt
seEq7O9l3yNXQvNXIa/10uutcmn+KhiN+jJmxjGavwpdz97JdblM81eh3mCT
o+N9mr8KllGtssze0PxVaJmUlv/iG81fDV/ptZsbm1dr5q/GG8GQ6Y/1NcZq
fLf4Zm9kpLHTavzbZDB91kiNBasxZPUMO9vJGmevRo13/YWR8zUuWo1tPSbd
+7ZS48rVkJ1pcSPDU2MtZ9T6PK/pEkrznbFBp9Mm/0Sa7wzb2q07jmbSfGek
DbE4e3cXzXfGy0g0u3uU5juj2aqyQ4cv0nxn+LXJ1/W9RfOdMevCHNvOz2m+
C1q9f3RaWkvzXeA+2Vj0+yfNd8Fbo8I2Vi3faea74M31E+vc9DUWuGDpdp1a
7z4aZ7vgosLkxvKhGhe5wENsN8t0vMaVLth/YuWOp9M11nLFgF+3O/jYaWzo
ilOhT2+/c9IYrpjSf0nfqRtoviv2dygaH7WZ5rsidQQcdkXTfFdUPs4t3C+i
+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
fwpGBJlKM9j+UxDaZlmwjO0/BYPO6y+Ts/2nYH13l9FKtv8UnAhf2FbF9p+C
5lM+PN/K9p+CH5Lx+7ex/aegf6ZN4A62/xTMWdhr4k62/xQkH778L5ftPwVy
0awzeWz/KWjYd8x/D9t/CoYf6mCaz/afglbD1zzdx/afgqO5ZxIOsP2noOPm
PuYH2f5T8OCH/OEhtv8UXHUcGXyE7T8Fn69/NTjG9p+CmwtfHzrO9p+K2A96
M06w/afCMDTs8Um2/1Tk3hq77jTbfyrcd9p8O8P2n4oBqiMh59j+UzF2TozW
ebb/VNwYdllwge0/Fe0PhPy9yPafiqWGh/wvsf2nYvUlz9rLbP+pWF96ckUJ
238qvG1VN66y/adi0dI+Y6+z/aei7ZNZ20rZ/lNRdrJ/i5ts/6mYeOnY2jK2
/1SIC1tcLmf7T0X5pJ59brP9p+Lp1yab77D9p+LCstM37rL9p+JK7cLe99n+
U7GjdfmGB2z/qdje0uJEBdu/+veN0ps8YvtPRZ+06mmP2f5TofCcFP+E7T8V
QSWqkqds/6lYltW2+XO2/1Q4P0qbWMn2r7bjKL8XbP+paFr3O+8l238qKud/
ePiK7V+Ic0P1dF6TtYXI6bd+5Bv2PQjR9Ky241uyrhAPg1+FV7PvQ4in19vu
fEfWF0LZNuHSe/a9qC1a8aqG3EOI6ExRYy37foSYZD+o60eykRAGX0yGfGLf
kxCvQ7aijmwqhJFWwvzP7PsSopff55VfyOZCtLzyeP1X9r2p//yduX71ZEsh
3rjZhnxj358Q7Wa+EXwnWwtxY3CXyB/sexTi5cHXEQ3k2UKcDnQQ/GTfpxDS
NkHBv8h2Qmx9N8P3N/tehWgdXbbuD9lRiHFT9Fb+Zd+vEI9COsxvJLsI8Tu0
Av/Y9yyEecy6oVp5Gnuo55eUdmtC9hIiyUO7WVOyrxCBSV3eMwcKMXuMTlkz
cogQ7zc+O6hNFgjhOkSV1pwcJUSPZbO9W5DjhKio+DCnJTlJiKqgWGMdslCI
Ia17NWlFFgux2PrYA2aZ+nt5bJffmqxU7yuwcUsbcrYQkqPH5+mSc4S41T+6
V1tynhDb5q2vYc4XYvABz2PtyAVCNB5ND2tPPqK+3+vPpumRC9X7mWWn24F8
WoiE+IYy5iIhltwoE3UkFwthuujZ/E7kEiHGLDLW0yeXCnHmx8FS5nIhRi0P
i+1MvivEMqUYXcgVQsy88O0H8xMhhLdz93UlVwox7creVQbkKiEGiHT0u5Gr
hdjR9Xwxc636+7B4uOk/cp0Qc6/Z9elOrheiUDrmBnODEMtdogN6kP8IEfve
yrAnWUuEwsdeV5i1RThd2XlDL7KOCEWZ5h16k3VFcFOVH2bWE+F56Ac7Q7K+
CB/PptQzG4jQvvJ4Wh9yDxHClngM60s2FGFh+oFrzEYiJP2MculHNhZhcPWn
P8ymIlge/ZpuRDYT4dv+9EH9yeYinOl+5wyzhQg2447aDiBbirDNasJLZohg
tcrTZyDZWoQ+52c1MSbbiFASXpHCPFsEp9Nduw8i24pwKUI3l9lOBNnzE8MG
k+1FsL3ft5DZUYQZzjMnmZCdRLgfPPISs4sIdu1ezDAlu4lg3nTxDWYPETpZ
SOYNYf0X4WL8tnJmXxFWXQu1Hcr6r/Zl0zLmEBG2Tjk4exjrvwgbmrS7yhwl
wq7CqdZmrP/q76H7srPMSSJcuG87ZjjrvwgRqYMOMItFiH/9tv8I1n/1+/uk
KJiV6vct6a03kvVfhNX+qkjmHBHGNW37nTlP/fsfNqw1Z/0XIfbwxQfMBSKc
vao3fRTrvwi3ty45ylwowoGt8r6jWf9FEA15ksJcpL7PvF6/mItFGOvm4jKG
9V8EwfkDN5hLRXjXpNloC9Z/EVr6OGUx3xVBd9G1ZmNZ/0W4Vz3ZnfmJCD9c
S28wV4pQ+s9t+DjWfxFCqv4TM1er+zOh6htzrQi+Q64sHs/6L4Lw7qVjzPXq
7332y86WrP8iJO/u5cv8R4R1f0JuMWuloa3tvyETWP/TcGfPrnhmnTQsbBdY
xaybBo8An4kTWf/TMPuZTMqsn4bQ0R8+MRuk4Yun9/RJrP/qeT4DVcyGaTjQ
v0M9s1EaJq43mwHW/zQc7h2bxWyahh3du35mNkvDrJEvp1ix/qchY/R7CbNF
GgZ/NnvLbJkG38GFYyaz/qvn7wyPZbZOw8c+qfeZbdIw0OGl0RTW/zRMaB7q
w2ybhlb3nc4x26VhdXBqG2vW/zQYZ7dewuyYhrk1d7YxO6Xh1b/aGmaXNPwX
umTUVNZ/9f036m9h9kjDgO4DLzN7pcF9bWrbaaz/abDcNM+OOVB939fd5Mwh
adjz48lzZoE6z5Z9RtNZ/9PgVPnYjTkuDT2V7vnMSWn4bWL/iVmYhhYtdw+3
Yf1Pw/3s5ZuYZep9uAccYVamof3NH/XM2WnYP6bSfAbrfxqSdEf4MuelIeDA
x0PM+WloCOv6mbkgDcsf7Rs6k/U/Dee6Hl7PXKjej/pvb+bTadAStq9iLkrD
nA3uvWex/qdB4DPGgblEvY93QWLm0jSIu466yVyehjVWa1vOZv1X3/eujmCu
SEOnGItA5idp6NLt0QHmyjTclDa8Ya5SPx8j6TmH9T8NdcYHFzLXpiFFOSee
uS4NS86uP8tcr/5+j+t+ZW5Iw9iC4QPnsv6nYe31xw7MWun4Plg3hVk7Hac/
XCxi1klH9TDtr8y66Wjf5qbRPNb/dJhk9F3MrJ+O3NdNY5kN0rGyjddx5h7p
ONhl/Vtmw3T463/rYsv6n4627dtPYzZOh2u7k77Mpun42/XHdmazdNQMvVLO
bJ6OqoUmjcwW6bCKNjKZz/qfjibnDi9hRjru/noYyWydju5msgPMNun4svDT
I+bZ6Ri5tLL5Atb/dISaeZgx26VjdEm6A7N9OtJ17aOYHdOhfHtiH7OT+ves
Tt5ndklHl39L/zG7peONtnzgQtb/dAwxD57H7JWOVR6N/sy+6n0lGKmYA9PR
Z/3HYuaQdDi/caxhFqSj5V2vDnas/+lwb2UyhjkuHZ+XJjkyJ6Wjo1QSzixM
x0Lh9FxmsdqddlxjlqXjWk3eR2ZlOoSvlnZcxPqfjp0Xjo1izknHsHlF9sx5
6RDMCQhmzk9HL8GTLOaCdFzcVXeO+Ug6XCKPvGAuTId5uXGzxaz/6dg1Y64R
c1E6Anf3n8pcnI59uw64MpekI/NXbTRzaTpeLn62k7k8HTEboy4x303H42/P
q5gr0iHJ/NxsCet/Okp1TvZlrlR/z5/GWjFXpaPdL++VzNXpsCtfHcpcm460
/9oqmOvU33OYdyFzfToWbRfeY25Ix6mB678w/0nH84Im7e1Z/8X48tTOhFlb
jL1zXKcz64gxM2ukM7OuGCq3oi3MemK0nKkrZ9YXI+BR16PMBmIEHXxVxtxD
jNGuXu+ZDcXYmHBWeynrvxgJR272YjYWI81vmwWzqRjjVoxZwGwmxrO/wvXM
5mIkvtwfxWwhxl+ZKIvZUozc/LHHmCHG/l27bjJbi9HQ8ckbZhsxBvg/aGSe
LYZsibyLA+u/GJss+w9lthNjW17gVGZ7Me73kjgyO4qRbhi8idlJ/ftDTRKY
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
xmwgw8R2bVow95AhfWKcDrOhDCmif62ZjWT4p+/dltlYBtn9J+2ZTWV492py
R2YzGZxn7tBnNpfBvmtjF2YLGX4uWdiN2VL9vNuO7syQYZ3bh57M1jI0WzDC
kNlGhscvvfsyz5YhcWC+EbOtDMmmLwYw28kwuVFvELO9DNV5402YHWXIsVg1
hNlJhtAT4cOYXWRYOSZrOLObDAZnD49k9pDBcemlUcxeMpzXvz2G2VeGS78f
jmUOlKGk29PxzCEydAx6PIFZIMONgfcmMUfJoDv0mhVznPr3pCenMCfJcH9j
7lRmoQxNzydPZxbL8E3iNYNZJgN+zp3FrJRh2TfjOczZMuwSN85lzpFh/Ysy
W+Y89bzXygXM+TJo5bvaMReo73fC4MXMR2Tw2/l+CXOhDIG1uUuZT8uwt8fK
ZcxFMhyc1Gk5c7EMnVdeXMFcIsPsqI1OzKUyHCvsupq5XP29Nz/tzHxXBjNf
R1fmChlS2/5cw/xEhouPRG7MlTKcqRqwjrlKfT/mheuZq2VYc3vqBuZaGdKu
lHky18mwpcdiL+Z6GY4+rPBmbpBhf0v7Tcx/ZCjdf8eXWSsTKx/M8mfWzsT2
+KIAZp1MnLsxfDOzbiau7d0axKyXiWKT1iG8/5lQLfIO5f3PhPnwe1t4/zNh
e3mUgPc/E3k90sN5/zNRNf5DBO9/JjJMrKN4/zMx6as0mvc/E/Pl1TG8/5kY
ZDw6jvc/E/o5gnje/0zM7VySwPufiSaRukm8/5mwqZ+TzPufCROvpBTe/0zk
/L2SyvufCfkOLRHvfyZeu41O4/1Xz7NzT+f9z0SiR6aY9z8TUwsvS3j/1e87
8XMG738mwrW7yXj/M9G848RM3v9MtN7gJOf9z0RNd4GC9z8T9UZZSt7/TKxO
OZ7F+58JlxVlKt7/TPynqNrK+58Jycwf2bz/majwabmd91/tbp138P5nImSq
YQ7vfyayfhvv5P3PRIvJw3J5/zPh12vkLt5/9X1mmOfx/mfCoGDkbt7/TER7
me3h/c+E29PBe3n/MzHhT9983v9MeN822Mf7n4m1rrr7ef8zsenkX+7iTDy7
X3uA9z8Tr849LOD9z8ShoOKDvP+Z8NTdd4j3PxNDg9IP8/5n4m9JwBHe/0w8
+bv0KO9/Js70HHeM9z8TcUMMjvP+Z6LbiHru2kxYmd0s5P3PxGXT3BO8/+r9
moac5P1X93Ok7Sne/0wIp/c9zfsvx0qPL9zacpzLLTrD+y+H+e+ks7z/clh4
LjnH+6+2tmER778csvNvuA3kOLRn73nefznuX/S8wPsvh00Hs4u8/3JYSz9x
G8vxe+m+Yt5/OdKXu1/i/ZfDJLffZd5/OR6MecJtIUd2l/QrvP9yxE6zKeH9
lyPq+m9ua7V377vK+y+HR9Xya7z/chgIdK/z/svhIDjBbad+32qXUt5/Oc6c
aXeD91+ORU2PczvJ1d/f8pu8/3Kcfde0jPdfjjvpudweckw/bVPO+y/HrjXv
uH3lCMiIu8X7L8fIeQNu8/7LMVd8gVsgxyj35Xd4/+WYdes7d5wcNWUpd3n/
5XB363+P91+ODqqT3GI5BvrOvc/7L0f1h0pupRxx7Xwe8P6r5z9sUsH7L0en
+ULuPDkmb+75kPdfjgq73dwFcrx+M/IR778cPiPOcBfKIRg39THvvxytmpZy
F8mhlTT/Ce+/HPMf3+MukePlF/unvP9yiO494i6XY0zMsme8/3LsbPmYu0KO
HMelz3n/5fgZe5+7Uo5VSQsqef/lSPO4wV0tx0ST6S94/+Vod/0cd516/3PH
vOT9lyO3cB93gxw72vR7xfsvx7CZUm4tBe75t67i/VeguziEW0cBQc4Hbl0F
tuxZ/pr3X4H4vFJufQXabRv3hvdfAf+MXdw9FOiX2Okt778CPuFbuI0UOBlc
zW2swNyQ+dW8/woERZ/gNlMgMtPwHe+/AvtOxnBbKDCipobbUoFZQ2zf8/4r
MDjyMLe1Ar8/dq7h/VfgtU8A92wFWneo4LZVIO76mFrefwUCczK47RX4kFXP
7ahA/Yn5H3j/Fcj8tY/bRYHKVa0+8v4rcO2zM7eHAgvyz3B7KeCZ3uUT778C
HXZ7cgcqMPDTJe4QBRRre9Tx/iswX9+HO0qBQT8uc8cp0Nih+2fef4X67xtP
bqECP78XcYsVKCru+IX3X4GSW87cSgUe9D7Cna3A/oJmX3n/FdCNWcCdp8Ce
bdnc+QpMav6Ru0CB4EPj6nn/FWi7N4a7UIGsulvcpxW4E9XjG++/AvPc13AX
K3Bg6wHuEgVSBjVwl6q/Nx185/1XwHBiLPdd9X6v3+CuUCDxcKcfvP8KeHy3
565U9y0ji7tKgW7iF9zVCrz8bNTA+6/A54K13HXqvtzezV2vwEH7Gu4GBaZa
m/7k/VfgVYYHt5YSn+fnc2sr1X8f1HDrqJ+3GPyL91+JnGZu3HpKzPDcya2v
hIXNS24DJS6n9frN+6/E1HkO3IZKNAuTcBspMadfObexEusntP7D+6/E9ptT
uM2UGFURwm2uhPOyo9wWSqxb+oHbUonIO0Z/ef+VqLq2jNtaiQtI47ZRYu7o
Eu7ZShzP/8ttq4TxzhGNvP9KXDVcy22vxHlDBbejEiNzb3I7KTHpUJN/vP9K
NJ9mzu2mxNbVa7g9lBjQSsbtpUTBuKvcvkrMb/jJHahE9ymDtVxY/9Xu4cAt
UGJFVDx3lBK1IYXccUqUtXjLnaRE636dmzALlci+PZlbrISwixe3TImHn5Tc
SiX8Vl7lzlbPX/ONO0eJhOZ9mjLnKfFhwmzufCWC9AK4C5Tos2Ub9xElymOv
cxcq4TP0G/dp9ffs06sZc5F6H4uncxcr0evhRu4SJSR/pNyl6vnnz3GXK7HH
+C33XSWajmynzVyhxPIX5txPlBCbL+OuVGLLkHDuKiU+leZyVytxslMpd60S
B5t+5q5TYpu8c3PmeiWWPhnL3aDEjpLl3H/UfXUK59bKQoecHG7tLFwQX+HW
yYLhyPfculmoDdNtwayXhbfBQ7n1s1A20JbbIAtOUd7cPbKwOC2N2zAL6xYc
5jbKwsJLd7iNs3Cl5iu3aRaCLndqyWyWhd6LR3KbZ2GtYgG3RRa0pN7cllnI
nCHkRhaeHt7PbZ2FgPul3DZZ0Dv0nnt2FuZN19Fhts3Co4z+3HZZWLRtMrd9
FpzXruR2zMLOd8HcTlk4aSzjdsnC5P5HuN2yUPG8jNsjCwZLa7i9sqAUtWjF
7JuFv/F9uAOzcHuyJXdIFg6eXswtyMKQBi/uKHWebwnccVmYeSyHOykLuuPO
cguzUBD+gFucheLkOm5ZFu6saNWa91+97299uLPV39+Ccdw5WZjvt4A7T/2+
K9dx52ehsEMEd0EW3idmch/JwvWbBdyF6v0+usJ9OgvbCp5xF2Uhw/Ybd3EW
Jpxq04b3PwsdP/fhLs1C2pcx3OVZsCiaw303C2EOztwVWXh+PpD7SRZufU/m
rlS/78/t3FVZmHL9OHd1FvavL+WuVf/+40ruuiwM6v6Nuz4LPU1a6fL+q3+/
TU/uP1nIOWPGraWCvpU1t7YKiRlLuHVU8D27jltXhXEnQrn1VJgeK+TWV6H5
oB3cBio8VR3l7qHCqHdXuA1V8NN5xG2kQtO/NdzGKlhd+cttqoJkbfu2vP8q
rHpmyG2uQgvTEdwWKryxncJtqf7zc+y4ocL9Pq7c1irk3PTjtlFhoF0M92wV
zhzK4LZV4fz7XG47FVL+HOO2V2FL9WVuRxXe77/P7aSCie0bbhcVZKXfuN1U
iDVq3o73XwVbe31uL/X9u/Xj9lWhyG4Ed6AKer2suENUiCuexy1QIdhmBXeU
CuP3eHDHqWDwPog7SYXVOvHcQhXWNpdyi1Xwf5HDLVPhmfIQt1KFmjFF3Nkq
vDt0gztHBaN2j7nzVHg7o5o7X/2+a75xF6gw2KVpe95/FSZOac9dqEJjsx7c
p1U4mGvMXaSCymQUd7EKuulW3CUq4Okc7lIVwlo7cJer0Lb7Gu67Kgxt78Nd
oc7zNpT7iQojdsRzV6ognyLhrlK/T0k2d7UKISPyuWvV9xt+nLtOhetHL3DX
q3Ci7AZ3g/p9yyq4/6iw7Ogrbq2tiA//yK29FdPMf3LrbEXZjWZ6vP9bsXxu
O269rRhyzIBbfysCm/fjNlDbcgh3j61Yu2wMt+FWhK624jbaii/zZ3Ebb8W/
QYu4/zed+Q43X8Uh+AbzHXZOyUDwTeY7XFYvQvAt5jvELalG8G3mO/RztSL4
DvMdGKAAAK/cZko=
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 460, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{"ba", "\[Rule]", "1.5`"}], ",", 
           RowBox[{"bn", "\[Rule]", "1"}], ",", 
           RowBox[{"z", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vs", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vh", "\[Rule]", "1"}], ",", 
           RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
           RowBox[{"u", "\[Rule]", "0.2`"}], ",", 
           RowBox[{"pa", "\[Rule]", "0"}], ",", 
           RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"LsO", "LhO"}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.772523305084457*^9, 
  3.773388932187072*^9},ExpressionUUID->"ac866db6-8e63-4486-929f-\
78b8376fc49d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
EdnDZiK3dTJCY9p9y22bjMBO7SZz2yXj+KCPpnA7JGNn81dTuZ2S4X7uqpfo
PxkbcvfNEP0nI+FyhLfoPxnXVcNnif6Tsehd3WzRfzKezt49R/SfjK9/mzpP
9J8MG81zP9F/MoaeT10g+k/Grs12AaL/ZHiM3bJQ9J+M/tWdF4v+k5G+Xx8o
+k/GtrMfLBX9J+OZx7Jlov9ktFvzc5DoPxl35zuuEP0nw/frtStF/8k47XAm
WPSfjKRhTUNE/8lYXDBqteg/Gf5b1oWK/i33e+9eI/q35A8rXyv6T0bvrXVh
ov9keF5st070n4xmdn0iRP8p6Jc7MlL0n4L2KZOiRP8p8H4wPVr0n4J/b82M
Ef2nYE2aV6zoPwUbmnooRP8pOLhseJzoPwXh13rHi/5T0Na/bYLoPwU9neqE
PVPw24hriaL/FGw/+12S6D8Fx0pSkkX/lvMlPimi/xQkFnVXiv5TUHftqbAi
Bb1/O5Qq+k9BefGaNNF/CgYd65cu+k9B97JHwjkp+LBjrkr0n4Jbu6dmiP5T
MMBolSn6T4Hr093CxSkoKJmSJfpPQaOBL4XLUvDVWINa9J+C31v204j+U+C5
6Wfh6hRENl2gFf2n4OmMl8J1KfgrN0kn+ldi6qtP9KJ/JYr8NwnbKrH0jaNB
9K/EpPO7hB2U+Oh6b6PoX4nXI/YIuyjRuYWTSfSvxPBRW4WhxOW6DmbRvxKt
hmQJeypR+Unj9aJ/Je5nhQj7KaE+WSUcqESjfI8Non/L/NlHhMOVSL/TeaPo
X4nD4xOElUr8tPFPYbUSh+6Oyxb9KzHQeadwjhI/xzbZJPpX4nT1POECJRxX
HRMuVOJ6t483i/6VSG2+WLhEiT1OJ4TLlEjMarlF9K9ErzFzhauUSJi6T7ha
iTHF/wjXKPHGODZH9K/EP7fUwlapWJdzXdg6FZF3HXJF/6n4/cAiYbtUTGi5
R9ghFVM+eCLslIqp6/tsFf2nIuXqSmHXVDQ9u18YqTix4LGweypCTzttE/2n
ouKWv7B3Kpb9tEnYLxVZsVeFA1OR2LJVnug/FUvD3ITDU4Ef1gkrUvHnq33C
ylR0tvtDWJ0KpXOb7aL/VOz92k04JxXP3EKF81Oxbdo24YJUPF/6q3ChxVn/
CRenYtNPvXaI/lNxud0M4bJU+MQrhCtScbPVbuGqVLwo/k24OhV2m/4RrklF
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
tjHhHbWtCR8U0/03oTm1nQkfUdub0JrawYQ21I4mtKN2MqEjtbMJnaldTHCg
HmDC59SuJnSnHmZCT2qY4EztZkIfancT+lF7mDCQ2tMEV2ovE4ZSe5swnNrX
hJHUfia4UQeYMI460ITx1EEmTKQONuFb6lATJlOHmzCFOsqEadQKE6ZTJ5ow
k1ppgg+1yoTZ1GoT5lDrTZhHbTZhPnW2Cf7UOSYspM4zYTF1vglLqPeasIy6
wITl1IdMWEldaMIq6iITVlMXm7CG+pwJYdQlJqyjLjUhkrrMhCjqchOiqStM
iKGuNCGWusoEBfU9E+Koq02Ip35sQgJ1jQmJ1LUmJFHXmZBMXW9CCrWVGUrq
JmakUlubkUZtY0Y6ta0Zqvf234yM9/bfjMz39t+MrPf23wz1e/tvhua9/TdD
+97+m6F7b//N0L+3/2YY3tt/M4zv7b8Zpvf23wzze/tvxvr39t+MDe/tvxkb
39t/M7Lf238zNr23/2Zsfm//zdjy3v6bkfPe/puR+97+m7H1vf03Y9t7+29G
3nv7b8b29/bfjB3v7b8ZO9/bfzPy39t/yUozdr23/2bsfm//JevN2PPe/pux
9739l5wjOU9yvuS9kgskH5JcKLlIcrHkc5JLJJdKLpNcLrlCcqXkKsn3JFdL
fiy5RnKt5DrJ9ZKt1r/vJpKtJdtItpXcVrKdZHvJDpIdJTtJdpbsInmAZFfJ
wyRDsptkd8kekj0le0n2luwr2U9ygORAyUGSgyWHSg6XHCVZITlRslKySrJa
sl6yWXK25BzJeZLzJe+VXCD5kORCyUWSiyWfk1wiuVRymeRyyRWSKyVXSb4n
uVryY8k1kmsl10mul2y1Qdp/ydaSbSTbSm4r2U6yvWQHyY6SnSQ7S3aRPECy
q+RhkiHZTbK7ZA/JnpK9JHtL9pXsJzlAcqDkIMnBkkMlh0uOkqyQnChZKVkl
WS1ZL9ksOVtyjuQ8yfmS90oukHxIcqHkIsnFks9JLpFcKrlMcrnkCsmVkqsk
35NcLfmx5BrJtZLrJNdLttoo7b9ka8k2km0lt5VsJ9lesoNkR8lOkp0lu0ge
INlV8jDJkOwm2V2yh2RPyV6SvSX7SvaTHCA5UHKQ5GDJoZLDJUdJVkhOlKyU
rJKslqyXbJacLTlHcp7kfMl7JRdIPiS5UHKR5GLJ5ySXSC6VXCa5XHKF5ErJ
VZLvSa6W/FhyjeRayXWS6yVbZUv7L9laso1kW8ltJdtJtpfsINlRspNkZ8ku
kgdIdpU8TDIku0l2l+wh2VOyl2Rvyb6S/SQHSA6UHCQ5WHKo5HDJUZIVkhMl
KyWrJKsl6yWbJWdLzpGcJzlf8l7JBZIPSS6UXCS5WPI5ySWSSyWXSS6XXCG5
UnKV5HuSqyU/llwjuVZyneR6yVabpP2XbC3ZRrKt5LaS7STbS3aQ7CjZSbKz
ZBfJAyS7Sh4mGZLdJLtL9pDsKdlLsrdkX8l+kgMkB0oOkhwsOVRyuOQoyQrJ
iZKVklWS1ZL1ks2SsyXnSM6TnC95r+QCyYckF0ouklws+ZzkEsmlksskl0uu
kFwpuUryPcnVkh9LrpFcK7lOcr1kq83S/ku2lmwj2VZyW8l2ku0lO0h2lOwk
2Vmyi+QBkl0lD5MMyW6S3SV7SPaU7CXZW7KvZD/JAZIDJQdJDpYcKjlccpRk
heREyUrJKslqyXrJZsnZknMk50nOl7xXcoHkQ5ILJRdJLpZ8TnKJ5FLJZZLL
JVdIrpRcJfme5GrJjyXXSK6VXCe5XrLVFmn/JVtLtpFsK7mtZDvJ9pIdJDtK
dpLsLNlF8gDJrpKHScYWWDX8+n8j/HUw
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
N+txbqFk/gJ4Ln4/3zWSzF+Avq2DmzjIyXzz7xl6738RR+YvwIypXwu3J5H5
C/Gf45HEyalk/kK4u6wMfpJO5i+EfVef/5ZqyPyFGHL3eb+7ejJ/IY66Hy0e
sprMX4hdDkeqlJlk/kIciO7w8cyfZP5CDJAGT3q3kcz3xfv6q4c3+4vM90XH
6dc6/LSVzPfFwYbXhrTJJfN9MbBk35N6u8h8X6x1+TG4cjeZ74vk6he/7s0n
833xoferiUEHyHxfNL3d3/WXQ2S+H8IvhvQ4U0jm++G3LR8C5/xN5vuhtF2e
R9UxMt8PxQu61vEpJvP9ULt869Urp8h8P+xo0aZe3zNkvh9GdP3ln5RzZL4f
PCKcldcukPmLcG/rglnNSsn8RdgmKUh2u0LmL0LMz088llwj8xeh6U7tvcQb
ZP4ipB7qFGMsI/MXIW/i2/nrbpH5izC7uN8xUzmZvwh3nze6lPwvmb8Y3RYm
H5dVkPmLIc3Yc2ncfTJ/MdZsUHTuUEnmL0aMpmHdp/+R+YuR92xgyvZHZP5i
wOj4at5jMn8xDobd9Wv6lMxfDGN7vf2BajJ/CQpcEgZOfk7mL8H9Hxq+qHpB
5i/B1muZC0JekvlL8K7xrZIPr8j8JViyNWHYijdk/hI87p3x8clbMn8JVj1q
Ye/1nsxfgv+2+Z87Ukvm+8Pqaztn+/+R+f4IufViedBHMt8fiqBHu058IvP9
ca/Ww7bxFzLfH98N2FU04SuZ7486Ax7dTJU8tMz3h+5Q28hjdSyu8Ef57uKL
NXUtlizF99t31rS2sthhKWwdvtQZ/L3FMPvvXh1n1LNYuhRPsrrIAupbLF+K
7wJ+aRhnbXHWUvPfv043zmhA5i+FutrepG9I5i/F6bmZJw0/kPnL8MOwLns0
jcj8ZbDyaxuW3JjMX4Y1X/r3jfiRzF+GySOOSvyakPnLEDxqwdsJNmT+MnxJ
mNOtd1MyfxlqdLOONm1G5i/D9e2qE0+JJcvxpvOOP441J/OXY8yPzxI0tmT+
ciTPbxYwpwWZvxzjsxZ1dWpJ5i/HiY/nzlYTZy1Hxf4NPjtakfnLIZ9R2Xix
HZm/HCFPHG53bE3my/BP4/CKm8Q2Mhzttq1nchvyPjKExX1/v19bi51l2Nk1
0uoeMWSY3DZze5K9xZ4y3GqtfdylHXlfGdZudy49SyyT4dLrRzLfn8j7y9Ax
7XK5pL3FKhk6TN/haCTOkmHTyEqvLg4W58kwu0lK8iHiIhnOVM8+NaqDxaUy
hLtd/ukKcYUMnT2+bpje0eIa8/PNBbP/JZYEoOBl9HzpzyR/AHJmKY/eJXYI
wJpfzq3ydiT5A1DW9N7OG8QIQNbTrnPG/0LyB+D4kxNrTxBLA9DMflVAv04k
fwCOFVVV/0UsD8Dlv6a2afEryR+AA+E3vo8hzgqAZ7MBh58Q5wVg/O6mIyc5
kfwBcBl1YPcB4tIAtNsyokHbziR/AFofXD8tkrgmAGc3L9lym1gSiBsf2303
oAvJHwjTpZpgHbFDIFpdf1zvObFzIOYG3zo+oivJHwifMumetcSeZtdW/fuC
WBqInzN3TBzWjeQPxJ0ZB5trieWB6KR/9Nt9YlUgriz6L6fHbyR/IN5u7pUW
QZwXiOZ5HR+cJC4KRNayO3t+7E7yB+JBZ6nVVOKKQIxfFHV3LXFNIBafvz+2
glgShMV3m0z8uQfJH4Swp9J3PsQOQbh5vOHwzcTOQbivsB9SSYwg2K2QP+/g
TPIH4VfTpxmziaVB6JDeO2U1sSwIj7A59iqxPAh3jbvGNOpJ8gfh+y4ZVcOJ
s8zv93TOvHDivCD0u9nu6C7ioiAMMmyuU0lcGoQeHff1atWL5A+CcUH11NHE
NUEILbsQFE4sCcb91n+nbyO2CcasxAY7/iF2CMaEc7eu1u9N8gfDZ+UI677E
CEZjxdAJc4k9g/Hzm9wdSmJpMA729nA6QCwLRs+TZ09UEMuDsX7X4fgGfUj+
YMTWXbO8J3FWMN5POqPwIs4Lxvh+hmtRxEXBcD7Ub1o2cWkw/rh11vYMcUUw
Sl57N31GXBOMd33ve9r0JflD4N500M1exDYhWLupd85kYocQrOoYfzqE2DkE
Q4ZfdjEQIwRVWblf9xF7hqCjg779dWJpCJpMfL/2NbEsBN0u/RbatB/JHwLX
P2MOdCdWhWBCapdZY4mzQnA/coK/L3FeCPpcr1cVS1wUgpMnpl5dR1wagtZr
+/YsIK4IwdGfU6yuENeEYPOzrp5PiSUrcOHPBy2t+pP8KzB15JKZ9sQOK/Bu
/TKHPsTOK/Df/FS/scRYgSH6if3mEXuuQGXRcGUosXQFXrjf9E8nlq1ATk7w
rU3E8hXoULDyZgGxagUWPO+x8AJx1gp4baxQ3CPOWwHXMceGviUuWoHnBz9r
rF1I/hW4O2d/VFviihU4J5fU705cYz4f+PA3EEtW4uZV37cTiW1WIuZ02Jz5
xA4rMdup/rJgYueVyCuq6ZhAjJVYE9VYrif2XIkbW7okbSaWrsQfjRoN3Ecs
W4mr/f3XFBPLzfM2ftp6lVi1EikVCxbfJ85aicLSUXdqiPNWotfZAVZfiYtW
ovmZsxWNBpD8KzF/TUxwG+KKlXhZ707Rr8Q15uef/zjdh1gSCr/DU5KHEtuE
oum70dbjiR1CMa2OesQMYudQXHkXN2whMUKx+XawJJDYMxTZJ3fKVxFLQ3Hg
a0ixglgWiqjfrC9oieWhGLwsc+16YlUoGkfP77mVOCsUs8uTMvYS54Wi+P5v
B44QF4XC4UXQ1tM0fyjsogJ9L9P8oXg1xvXVLZo/FCeX/jumkuYPg22YNPAZ
zR+GM4biRe9o/jCYsuv3+krzh6F0Qofz9QeS/ObnzlYDbIg9w7C+cl2YHbE0
DAM630x3IJaFweqtNsyJWB6GGtXegc7EqjDczLO52p84KwzJqTHDfyfOC8Oc
VzeVI4mLwjDe796uccSlYUhw8d0xmbgiDDpl98SZxDVhsI+tHTiPWBKOpog9
70dsEw7FDwmDlhM7hMPee78ihNg5HA9fnM6PoPnD0eiub1EMzR+O6p3ITaL5
w/Gvz4fQNJo/HEZT31+1NH84uiTqD5ho/nDsaL+/y3qaPxyRP/WM2UTzh6Oz
7brDOTR/OH6ISLu1g+YPx6pTmn/30PzhKA4cWHKA5g/HBtsmpkKaPwI6P9P4
YzR/BC7OnVl9kuaPwFWXWwFnaf4IXA7T3b1I80dge7P6/a7S/BE4JM0NuUnz
R2DEkE/rb9P8EdjXxH/PXZo/AnGly/Ie0PwR+Ld9yOpHNH8EbMc9W/qU5o9A
wfzh3V/Q/BFI6H/v1iuaPwI/yLoHv6P5I9BMp/rfB5rfnM92ybLPNH8kLnm1
L5UMIvkjceRUIwcrYodI3Lqkml2f2DkSY/5XT9mQGJHo8rQkpzGxZyRksu77
bIilkdCmpO1uTiyLRP0VA9e3JJZHIiE/KaI1sSoSP7U8NdqeOCsSjsfdGrQn
zovE/d8nHupAXBSJTtH9ZzkSl0ZiXcXQV52IKyJRb8jBsM7ENZHo/6rydVdi
ySp8rGg4tzvNvwonopYfc6b5V6Fn2ZQWvWn+VYhY/dW7L82/Cjktdpj60/yr
kD1uXckAmn8Ver1v/GwQzb8KB+MG1RtC869Cdae5tqD5V2H8nYJWw2j+VTAF
Rti40fyr8L+kii8jaP5VcF3z04NRNP8qFNZfcmQ0zb8KU1r+L20szb8KbT98
mTyO5o+C1Y3tzSbQ/FHwP9fztCfNH4Xot0WBk2j+KMQHKVpMpvmj0Hzp/l1T
aP4o/NIqdOg0mt/8/OCHs140fxRW7F7oMYPmj8Lz8McnZ9L8USjN295/Fs0f
hcPNb2yYTfNHoXW6ykpK85vfz6WudC7NH4W6syfmz6P5o7BEvqmOD80fhene
7dwX0PzRmPjsftJCmj8aewJaHfOl+aNhWHbntR/NH41Ne6c6LKb5o3FidvbI
JTR/NM7efbjQn+aPxg+fBscspfmjce1yiX4ZzR+Ne7c3Zy+n+aOR/+bVDhnN
b34+/cLuAJo/GqN2TcwLpPmj0a9u5tYgmj8ayedPrwum+aOx/f0LZQjNH42M
u91XrqD55TBOWe+9kthajuWbpg0Opd9DjqtpQa3DiO3kGDut4UtqB7n570e9
i8OJneTIaFlfG0G/lxy9flo7K5LYRY5tv9VzXEW/nxwxP89+SO0ux5glBdlR
9HvK8eVr5znRxF7m+ctOt5DT7yvHrRvZJdR+csTXXF8ZQ7+3HPKGy36OJQ6V
I+5H+TlquRzXY3+SxREr5JilnNk0nvYhx4Ya913UJjkOtqodnUD7kWPwj+H3
qHPkcEy6G5JI+5Jj3R2X+knEBeb3bWnQUxfJceNBvQ4K4hI5bDat2UpdKseA
edIeycRlcty/u3APdYUcrdMKe6UQV8nxNX15HnWNHDOK0rqmEtfKYb/XMZta
EoN/dw9to6T9x8D72Ms0apsY3Nsw9Cu1XQx2lQ5elkb7j8G85Fe3qJ1iMOL0
khHptP8Y5Izct4PaJQZOibeaZ9D+Y/Du9MOV1O4xaN78v3+oPWOQ1KdigIr2
HwNt0X0jtTQGt5q/f03tF4PEyb+OV9P+Y+AbtOov6tAYNPztu8/U8hhcbHh8
oob2H4Pn809kU6tioJxt847aFIO8mt0jtLT/GIy6l6elzolBmzMtKqjzYvB3
88dddLT/GKRIegdTF8UgcNPHw9QlMXj/35i6etp/DOoqnEZRl8XgiENmCnVF
DJa033GeuioGg87Pa2yg/ceg2ehiD+raGEzVlKVQS2KxL/qv09TWsags7vOd
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
mN+Pt5sBX3i7G2B7jt9/A7rw9jTgd96Tze/L28sAP97eBkTylhqg4u1jwCbe
fgbs5+1vwBneMgNu8w424BnvUAO+8o40wOY8v/8GdOAdb0BP3goDhvJWGjCR
t8oAKW+dAct5mwyI4p1pgJJ3lgFreGcbkMM7x5yfd64BJ3jnmfvknW/AHd4F
BjzmXWjAW95FBtS5wO+/AY15lxjQmvd5Axx5lxrQg/c18/3lXWaAG+9yA8bz
rjDAi3elAfN4Vxngz7vagBDeNebvy/uNeR9415rvF+9PBqzmLTFiI28rI7bx
tjZiD+9GRhzibWPEcd62RpzlbWfEFd72Rtzi7WDEPd6ORlTxdjLiBe9uRrzj
7WzEZ959jLC6yO+/EQ15uxphwxtGtOTtZoQ9b3cjOvL2MMKJt6cR3XlPNqIP
by8jBvD2NmIIb6kRw3n7GOHO28+Icbz9jZjEW2bENN7BRnjzDjViLu9IIxbw
lhuxiHe8EUt5K4wI4K00IoS3yogw3jojVvE2GRHDO9OIBN5ZRiTzzjYijXeO
EWreuUboeecZYeKdb8Ra3gVGrOddaMQG3kVGZPMuNmIL7xLzPvA+b8QO3qVG
5PG+ZsRe3mVG7OddbsRB3hVGFPKuNOJv3lXm/eJdbcRJ3jVGnOb9xogzvGuN
OMf7kxEXeEtMuMTbyoTLvK1NuMq7kQnXeduYcJO3rQn/8LYz4TZvexPu8HYw
4S5vRxPu8XYy4QHvbib8x9vZhEe8+5jw+Jv9N+HpN/tvwrNv9t+EF9/svwkv
v9l/E159s/8mvPlm/014983+m1D7zf6b8OGb/Tfhf9/svwkfv9l/Ez59s/8m
fP5m/0348s3+m/D1m/03QXKJ338T6vCONKEub7kJ3/GON8GKt8KE73krTajH
W2VCfd46E6x5m0xowDvThIa8s0z4gXe2CY1455jQmHeuCT/yzjOhCe98E2x4
F5jQlHehCc14F5nQnHexCba8S0xowfu8CS15l5rQivc1E+x4l5nQmne5CW14
V5jQlnelCfa8q0xox7vahJ9415jQnvcbExx415rQgfcnwZLV39pKsLXgRoJt
BNsKthNsL9hBsKNgJ8HdBDsL7iPYRbCrYAh2E+wu2EOwp+DJgr0EewuWCvYR
7CfYX7BMcLDgUMGRguWC4wUrBCsFqwTrBJsEZwrOEpwtOEdwruA8wfmCCwQX
Ci4SXCy4RPB5waWCrwkuE1wuuEJwpeAqwdWCawS/EVwr+JNgyRph/wVbC24k
2EawrWA7wfaCHQQ7CnYS3E2ws+A+gl0EuwqGYDfB7oI9BHsKnizYS7C3YKlg
H8F+gv0FywQHCw4VHClYLjhesEKwUrBKsE6wSXCm4CzB2YJzBOcKzhOcL7hA
cKHgIsHFgksEnxdcKvia4DLB5YIrBFcKrhJcLbhG8BvBtYI/CZasFfZfsLXg
RoJtBNsKthNsL9hBsKNgJ8HdBDsL7iPYRbCrYAh2E+wu2EOwp+DJgr0EewuW
CvYR7CfYX7BMcLDgUMGRguWC4wUrBCsFqwTrBJsEZwrOEpwtOEdwruA8wfmC
CwQXCi4SXCy4RPB5waWCrwkuE1wuuEJwpeAqwdWCawS/EVwr+JNgSaaw/4Kt
BTcSbCPYVrCdYHvBDoIdBTsJ7ibYWXAfwS6CXQVDsJtgd8Eegj0FTxbsJdhb
sFSwj2A/wf6CZYKDBYcKjhQsFxwvWCFYKVglWCfYJDhTcJbgbME5gnMF5wnO
F1wguFBwkeBiwSWCzwsuFXxNcJngcsEVgisFVwmuFlwj+I3gWsGfBEvWCfsv
2FpwI8E2gm0F2wm2F+wg2FGwk+Bugp0F9xHsIthVMAS7CXYX7CHYU/BkwV6C
vQVLBfsI9hPsL1gmOFhwqOBIwXLB8YIVgpWCVYJ1gk2CMwVnCc4WnCM4V3Ce
4HzBBYILBRcJLhZcIvi84FLB1wSXCS4XXCG4UnCV4GrBNYLfCK4V/EmwZL2w
/4KtBTcSbCPYVrCdYHvBDoIdBTsJ7ibYWXAfwS6CXQVDsJtgd8Eegj0FTxbs
JdhbsFSwj2A/wf6CZYKDBYcKjhQsFxwvWCFYKVglWCfYJDhTcJbgbME5gnMF
5wnOF1wguFBwkeBiwSWCzwsuFXxNcJngcsEVgisFVwmuFlwj+I3gWsGfBEv+
FPZfsLXgRoJtBNsKthNsL9hBsKNgJ8HdBDsL7iPYRbCrYPwJieWf/wc+iUMh

         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 460, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{"ba", "\[Rule]", "3"}], ",", 
           RowBox[{"bn", "\[Rule]", "1"}], ",", 
           RowBox[{"z", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vs", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vh", "\[Rule]", "1"}], ",", 
           RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
           RowBox[{"u", "\[Rule]", "0.2`"}], ",", 
           RowBox[{"pa", "\[Rule]", "0"}], ",", 
           RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"LsO", "LhO"}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.772523305084457*^9, 
  3.773388943995358*^9},ExpressionUUID->"cbcc80ad-dbb8-44b0-badd-\
23ab7e09969e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
Rwbe7/+H6rIMLLzll6fmb/t7++JUV2egIOxd1a4MLPJsUN2UgZw/+ljU/Cac
+3eBajcTUqZZVbubMKm2QrWnCas/+1W11oRjTzyTr9jHhM11M1TrTDjvnaja
3wTN32+ohglD1n2lOsiEhzNvqw4x4foLT1kVh5nw3pcTVetN+OvxCNVRJjww
JE+1wYTD/Q6oNpqw4+8vVJtMuHvyF9UWE75OdytQ+zDh+NgBqotNGHpvsmqH
CePPvaS61IRPP05SXWZC6OlXVJebMPOPQ6qdbb8/77TqShN21teprjZh0+Hb
qmtNOHWii03t14QTT/RR3WDC2mMjVDeZUFz2guoWE25olqjWZOL8e+tVu2Vi
+6cZqt0zMXvCFtWemfhl4F7V2kz4mv+j2icTRxZ+qlqXiZb951T7Z2J6gks1
MnHxi5uqgzKxf1+r6pBM7OvetVDtPxM7H+ylWp+JwVv6q47KxLX3h6o2ZGJE
7DjVxkxEVE1TbcrEO5VzVVsyMXBNuGp7Js6VRaouzsSWvQbVjkyMnJSsujQT
8ZuzVZdl4uZmm+rytu9r6jbVzkyUHH5NdWUmjn63T3V1Jg4de0d1bSY+W3RU
tSsTfT6qUN2QiW/rPlPdlIkbn32puqWtz9hzqjVZqL/+nWq3LKQP+EG1exZc
w+pVe2bheNcbqrVt/s8t1T5ZSBr8h2pdmxP+Uu2fhfHb/lWNLIzK71Sk9p+F
L+d3UR2ShdA/u6sOy0LfuMdU67OQUNlTdVQWCv56SrUhC/YufVQbs3Dgz36q
TVn4/dMBqi1t+WMGqbZnYcE/z6suzoJx/TDVjrbvx+mnujQLqS2jVZdlYeQT
41SXZ+F/vSaodrb9vfsmqa7Mwrvnp6iuzsIi2zTVtW3f39Dpql1ZeLJipuqG
LOwbMVt1UxZe2R6iuiULm6/NU63JBvouUO2WjRdmLFTt3jZfvki1ZzY+jVyi
WpuNZUuWqvbJRsnEZap12XjKY7lq/2xMvbRCNbKxb3OE1H82jo6OlPrPxq/n
Vkv9Z+PkS2uk/rPh+GGt1H827syNlvrPxtBj66X+s/GOR4zUfzYuRBik/rPx
74FYqf9sFNXHSf1no9YjXuo/GyPGbZL6z8bvCxOk/rOxal2i1H82Lm8ySv1n
Y3diktR/NpoNyVL/2fBZkSL1n43UmalS/9kY/nya1H82rJ3Tpf7bvq/Lkluy
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
1pH9yP7kADL2QNP+7/8BmwIC1g==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
JDbN6pQt949F2MyRC2VrY1H70bq9snWxSAjs3yRbH4uSyDnjc+T+sZh7fIhR
trXtvt/eKtm2WBy9fatzrtw/Fleud5ou2x6Lvr26ZciuiUWPv7uckV0fCyS6
PJDdFIvP2nmPtsj9DWhYmrZWtosB+652e1u22oC/5tbVyNYY0M61U/s8ub8B
no+2jJKtNaAxcety2ToDPsjsY5GtNyDjvcEfyDYaoO9aVS/bakD/1c5d8+X+
Bjxw66iRXWbAzqEnFsi2G3D46RHxsmsM6Lg6cqfsegNSLm/5WHaTAVfVb9TL
VsUhNCddVSD3j8O+J0MGy1bHoSbZb5JsTRwWjdAskY04jH9tWIxsbRwWVLy4
WbYuDrvdlh2QrY/DvHOlVbKNcfjzb88fZFvbPt9Y2yzbFoej/T7pbpX7xyFA
0zhEtj0O1h7LxsmuiUPcyQH+suvj8KbL8zrZTXHYXrE1UrYqHl8/vyRTtks8
fjieXiRbHQ/3mL7vy9bEw22F6ynZiMe9KRlfydbG4+NTYVdl6+Jx4bWvb8vW
x+OvqUf+kW2Mx2fX+jltlvvH49SzHfvJtsVjdfekp2WXxSNxUYZGtj0e/1So
J8muafu+p+fNkF0fj03fD1ogu6nt8wPNOtmqBLTGbVkv2yUBfoGIka1OwKG/
C42yNQnoNXlrjmy03bd/uVC2NgHrW7fvlK1LwOYLe/bL1ifgjc7Bh2UbE+Dv
fvUDpX8CGiO625X+CTi++P4XSv8E7HDe/bXSPwE/l3f7XumfgC/Wjv1R6Z+A
jqOG3VT6JyDy0dXflP6J2Pzh4rtK/0R0897dovRPxGTv8odK/0R8qi/suEXu
n4jvN7/aTbY2ET+P+rSnbF0ibv3g2le2PhF/9X1pgGxjIrJneQ+WbU1El8aO
HrJtieg366Cn7LJEtD8zcoRseyIG5uWMkl2TiKcaz4yRXZ+I0Ce+Gy+7KRFp
A6onyVYlYcaIN6fIdkmCdslrU2Wrk/B8aZ2fbE0STnrM9Vf6JyHio5I5Sv8k
7A25MU/pn4SPnTstVPonYWt+98VK/yRs+aJlqdI/Cc65519X+idh3b6cFUr/
NtdpgpX+SQj4075G6Z+E0dsnrFX6J6FL1u71Sv8k3F9/b4PSPxmm30fplf7J
+ODgsgilfzJmz4iNUvon4/ailBilfzLGh8UYlP7JGOS6LF7pn4wrtaMTlf7J
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
Bw7xEJU=
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 460, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{"ba", "\[Rule]", "5"}], ",", 
           RowBox[{"bn", "\[Rule]", "1"}], ",", 
           RowBox[{"z", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vs", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vh", "\[Rule]", "1"}], ",", 
           RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
           RowBox[{"u", "\[Rule]", "0.2`"}], ",", 
           RowBox[{"pa", "\[Rule]", "0"}], ",", 
           RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"LsO", "LhO"}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.772523305084457*^9, 
  3.773388956060231*^9},ExpressionUUID->"987bebc6-5606-4755-bdb8-\
ff18a7454b47"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxd1314nHPa//HxHMQaZImVm0EQpAwNRoWeCKYVTDVtp23aTpu0nbZJOnme
Nk9XIirbDZ0SBKmOWxGV6tDSoOwgyFYwXaFBbAcpKVGjmzII/fkdd67r+uad
f3K8jnPO4zOfnMf3j5y5YPntCw+1WCyRoyyW///7/35iE//vd3T0t0XyXhzv
qOnaPeoE+e/mf8XH36nbKtNvchYccp3uJPnjlML3X/v1P6NOlg++POQj2aw7
RSpnrv9l+jzdNvnjHzse2XGM7rPkkoZff5jz3OejTpWCSw4+s+N23edK0xnz
Zof39Y86TcobH7j6y0bdF4h2UcodXUm60+XRJw7ZOLjus1FfJJdfe8MjnWfo
tsvw53/9qe6hT0d9iXw3btWjC47RfanclHTjMbcVfzLq8ZL9n1ee3NvTN+oM
+e/ne2oLTtN9mRy/q3Zd8axdo75cClYv3n3fqo9HfYVMfmDj3hce/mjUDnm/
55BPl9zTO+orZXp8+TGbp3w46gnS1jj77LNf3Tnqq2TCU9kn5J32/qgz5e7u
q9b/dJHuq6UjeMU1v16r+xqZGtPuXZ6je6I8k9N3k3uRbpHxC34/6cXKUWsi
E4/o71zdpM+vlTnrFh3Z16rPr5U/klL617fr8+vEecKECwa26fPr5ClH2/4n
39bn18vdJZMnfdurz6+X6BedOaEv9XmWXH7xq7f89oM+z5ITq66ue29En98g
7/6+7obzj/5gdH6D7N63/7gT/jpqy42S8tZIzl02fX6jrJ1w4Il7LtTnN8mj
L41/6PzL9flNMvjfzf+eJfrcKbXzl1jOmazPnXK88+W+1VP1+SQ58Fxb8ppc
fT5JZhZ9U5+xUJ9PlhP+3fRJTaE+nyzP1XXtKSzX5zeL27Ki4KgafX6zrCsu
vuSWRn2eLamHvTN87T/0ebb8XDKteHCtPr9F3hx3w+zrW/X5LfLdJZvmTntU
n98ql+XcevqZG/T5rVKYuOTSp5/W57fJV9qz58We1ee3yfizbqmNb9HnLhl8
L/nprs5Ri0uWnP5+4oxX9c+7ZOkk38HnXh912CVFW8Lv7HpL358iJRd90Lbj
X/r+FBl5/rEnmt/T96fIrqz98TN26vtT5Ij1h6xb1avv3y7HZdTc9cYuff92
2X9U5bqPPtX3b5ffvy7c8vrn+v7tUlSXf3dTVN+fKkd+d8TuC7/S96fK7xM/
vnnTHn1/qpz0fuHivwzq+1Plt1defcH1rb6fIyt35D5TPqTv58j7SZ9tqt2n
7+dI0kunJRXG9P0c6Vy05dzr9uv70+Segcm2g//V96dJ2ZbDL3rigL4/TXKO
2LP8sp/1/Wny1O1X/RKK6/vTRb5N3Jn8q74/XQ5+U7e/8Dd9f7rs+8uNtzw3
ou9Pl+wTj3r7q9/1/Rlyyjf/uvzIg/r+DMld8Oy2REtkdH+GvPrm539bozs8
Q2acOuHxYw4ZtcUtN21q3FinW9zSevb5q/bp1tzimFZw14xD9X23nLfnod9e
1m2ZKSc22tNPPUzfnymPfJI4r0S3NlO8x9338du6wzNl9tDHO08+XN+fJRvb
32heoFtmSfZlmbJRtzZLhq6ZdNY+3eFZcuCtSxZddIS+P1sa5z6WuUy3zJbT
U975cINubbbsvrhsxme6w7OlRa788S9H6vu58q/Ghu6JuiVXpjz1/KFFurVc
ObMu882HdIdz5fnHX7nwTWN/joz75tjcb439ObL3n/NKjj9K358joY3T/nGp
7vAcmbIm8Y2pui1z5YD9Cnupbpkra7dctC9g7M+VbRMPP2mTsT9X/v3e2q3v
GPvz5PUzV38TNfbnSfnBu/4ZN/bnyWmPpdx2fIK+P0+Or/z8qVTdFo/ce2Xx
pw7dNo+cltP20826xSObnss+dq5uj0fW/Ljh3OW6NY/cduxR0+t0Bz3S7z39
yXuMPI+Mr9l71jrdUY/s+vyNXRuN/Pny1z1LPthm5M+Xj748JqnLyJ8v5V/c
uPkDI3++HDjsqo2fGvnzpbHhruP2GPnzZeLk6V/sM/Lny/as+ePiRv58ee/m
eNxytJ6/QJ5578ibj9ZtWyBrzzn1ghN0ywK5r2N+W7JuzwLxrHr1qTN0awvE
Pe6lKefqDi6Qma+3rE/XHV4gOSnOBy7VHV0gL21eNcFh5OfJ38e9GbjayM+T
tw5euu46Iz9PegM7824y8vNk0uK8wZuN/DyZf8qKi1xGfp4UJZZcmWPk54kz
vS7RbeTnSXj6ExtnG/n58tsb/zx5npGfL9WZDVMXGPn58uC1VXkLjfx8+ebw
kyd5jfx8mTy17chlRn6+fDXP8WihkZ8vFZU/neAz8vOlpO3tvBIjf6HsTay9
v8zIXyhtW/raK4z8hXLlnSvX+438hRLdEVu50shfKAOztmRWG/kL5fXwOV/X
GPkLJX1aq7/OyF8oJ9006YBm5C+SuQ8snNNg5C+SKw455vk7jPxFsmrg+uFG
I3+RzLeeeM4qI3+RHLF24Q13GfmL5NDCs6Y3GfmL5NyZNvffjfxF0rngwuzV
Rv5iaQocPv4fRv5iubVqwXHNRv5i+ejzHz8z7Fksnv+Zvv5uI3+xbNlxvvse
I3+xnJdy8Mg1Rv5iuWC+p8NwdLE0LI84A0a+VzqOebffsM0rT97wlnetke+V
0t3jvjfs8cpjDxcuvdfI90pS4Juo4aBXcmt+cd1n5Hul5y8jLxuOeqXlnOvP
aDHyl8iJfzu91rBtiTT/umuXYVkiq9/eln6/kb9Efn7SUmNYWyITz97fbTj4
5+endlsfMPKXyPXW7TmGo0vkuDMOu9+wZalMnhPZadi2VKYPTj32QSN/qdx/
/SvXGvYslbLqS8oNa0ulInv3E4aDS6Xgyu8+NBxeKvu2rDhoOLpUxmVsSms1
8pfJhGlP3mbYtkx27rujzLAsk9fG5T1o2LNMhjfO6zSsLZO8+vt2GQ4uk7YF
pxwwHF4m8zYeesJDRv4yOal42YWGLQVy3bpFWYZtBXLu8FG5hqVAnOcvKDHs
KZAp36+6y7BWIAkjqx4xHCyQe84vedZwuEC+LpoRNvML5IMDWTvN/EL5+Wzn
F2Z+oTz4RGHMzC8Uf+Xrf5j5hVISuzXxYSO/UBbssJ1qOFgoGy+49hzD4UJx
bHzJbjhaKClz7rvKsKVIXvrk4xsM24pk7cTm2wxLkTx/9Stuw54ieTd52Xwz
v0i+D/3vEjO/SH5d5S0284uk5/U3/GZ+kSSN31Zn5i+X4dk3rzLzl8us4sZm
M3+5nOFZfK+Zv1z2ReIPmvnLZf+FV68z85fLtDbH/5r5y2X1ST88aeYvl6Ls
/GfMfJ9kvv/IZsNWn0z7oXWL+X188s2uudsM231S0Bh72fx+Pjmy2/WaYZdP
Xr214XXz+/rk4fV3dRn2+eTp0/PeMb+/T/7zl1N2GA74pP++J3rMPj7ZuMX6
geGQT7Lds3aa/XySNaXxQ8MRnxwxLfCR2ffPzx+q7TIc84n3i5xPzP7FUrzQ
+pnZv1gKv9/Sb/YvFu9b8h+zf7FUnte52+xfLC9knvaF2b9YLjh92Zdm/2LZ
9FH7V2b/Ytky96MBs3+x/O2pH/eY/YvlizV/fG32L5bPvx/5xuxfLJ7V3w+a
/Yvl07N37jX7F0tRUfu3Zv9iqU8q+87sXyzXbcsYMvuXyHk/fGvaWiLe7Ae/
N/uXSPGMCfvM/iWSvbbXtJTIsWWLfjD7l8jZpTHTnhJ577eSmNm/RGaW7zOt
lUj9tXk/mv1L5IXtO00HS2TxNRP2m/1L5NZT15kOl8hTj/xqOlIiZcdP/a/Z
v0S2vfyk6ViJtO8+YNpSKkPbZdjsXypv3n2XaVupXLl6h2l7qUz95ugDZv9S
uWLXDaZdpTLt77WmPaVy9wVbTftKZcqer01rpfLOFyf/ZPYvle9uyDIdLJWn
L1tuOlQqv//7QdPhUjn2mtdMR0ol8/4vTUf//L4HDv/Z7F8qd644x7SlTNZc
lWXaWibdU+ebtpXJFZ9Um7aXyRNfPGBayqSjfrNpV5ns6HnbtKdMij7qN+0r
k6M3/WhaK5NT84+Im/3LZMIxyaaDZTLu2fNNh8pk75wJpsNl8vi5k01HyuST
pJmmo2WSm7HYdKxMZgXKTFvKZeH4etPWcqk9727TtnI5raLVtL1cLk573LSU
yyU3bjLtKpez+l407SmXB/b807SvXLaVd5vWyiV7TUTpXy6vOfqU/uVyun+3
0r9c0qZ+rfQvl0kfDCn9y+XxH/cr/cvlhH/Glf7lcmHmH0r/CplUeNgvZv8K
WTU9wbStQt7+LdG0vUJe9JxgWiok0vRX064KmVd5qmlPhdRd/D+mfRVy1lab
aa1CrAmppgMVMjTuPNPBCslIu8B0qEKu/yXddLhCpj5+selIhdSnXWo6WiHv
rs4wHauQpJ7LTVsq5Zx9DqV/pTy7f4LSv1Kcn2Uq/Sul4ulrlP6V8uRcUfpX
yiUj1yr9K2XeHdcr/Stl0YEspX+lLJ16o9K/UrRHb1L6V8rmXU6lf6XsOzhJ
6V8pack3K/0rZcKZ2Ur/Svn5tFuU/pWSevStSn+/1O5VbPXLi6/epvT3S9kq
l9LfLzOypij9/XLgZ8Uuv/Q/drvS3y/3XTdV6e+Xhz5VrPll8dIcpb9fivYr
Dvrlb6XTlP5+iQwpDvvlx3nTlf5+6etRHP3z+4yfofT3y633K7askKofFVtX
SIfTrfRfIec+oti+Qi7Yq1hWyE+XzlT6r5Auv2LPCul5WbFvhVz3i2JthczI
mKX0XyETChQHV8gpjykOrZDkDxWHV8jCQ2cr/VfI2Rcrjq6QipmKYyukrl6x
ZaXMfUqxdaXY31VsWyknfq/YvlLOOC5X6b9Sii9U7Ppz7lTsWSmSp9i3UvZW
K9ZWysX3Kw6slHM6FAdXyuevKw6tFO/HisMrZddexZGVcuWI4uhKWXfcHKX/
SrGerthSJevHKbZWyYxMxbYquX6yYnuVFM1QLFXyVZ5iV5U8s1yxp0oiKxX7
qmT2nYq1KslZozhQJW+2Kg5WyebHFIeqxLZRcbhKUp5XHKmSp19SHK2S98Nq
/yoJvKP2r5bh99T+1WLpVftXS+cnav9qOXO32r9aJg6o/avl5L1q/2rZ+L3a
v1oO/qj2r5bkn9T+1RL/Re1fLY//rvavltMOmav0r5a8wxVHqqXmKMXRaik4
RnGsWsYfp9hSIx8er9haI7edqNhWI08nKbbXyJcnK5YaGUlW7KqRX/6m2FMj
n6Uo9tXI46cr1mrkdpviQI18e6biYI0UnK04VCOfpKr9a+TSc9X+NeI/T+1f
I5vS1P41svN8tX+t7LlA7V8r316o9q+VL9LV/rXy7ji1f620X6T2r5UVF6v9
a2WiXe1fK7+q1mrlmUvU/rVy+6Vq/1qJqQ7Vyqrxav9aScpQ+9fKw6qjtXLq
ZWr/Wlmr2lInh16u9q+TQtW2OvlQtb1Oxl+h9q+Te1S76mRAtadOLnOo/euk
QbVWJ++qDtSJ9Uq1f51MUR2qkzWqw3XyL9WROrFMUPvXSYbqWJ0sVG3RpEV1
giZh1VZNvlWdrMkJV6l/H00uV52myUzVdk1WqnZo8rBq0aRTtVOTXtUuTX5Q
7dYkIVP9+2piU+3V5ArVPk2yVfs18ajWNClV3aTJnaoDmjygulWTJ1UHtT//
/1fcrkmX6pAm/1bdqclu1WFNvlPdrcnPqiOaHHq14j5NElVHNTlZ9aAmZ6iO
aZKmOq6JXbWlXhyqE+plomprvdyoOrleblFtq5epqtPqZaZqe73MU+2ol3zV
Ui9LVDvrpUi1q15KVbvrpVK1p16qVHvrpU61r17uUO2vl1WqtXr5u+qmemlW
HaiXNapb6+Ve1cF6uV91e708qDpULw+p7qyXR1SH62Wd6u56Wa86Ui+Pjbl/
vTw+5v718sSY+9fLU2PuXy/tY+5fL0+PuX+DbBxz/wZ5Zsz9G6RjzP0bZNOY
+zfIs2Pu3yCbx9y/QUJj7t8gz425f4M8P+b+DbJlzP0bZOuY+zfIC2Pu3yAv
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
ToPTYTucATvgTFjWi2X05/8Bfmm0Hg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxd131YlHXa//Gxh10sU1ypuIu9G4sSi60pqdjEPCssKmpHxUIlHRVyVNTh
eXiSi4cKlXRKTFLUscgoyaaioqKaypIt0rHIKC3HIsOibVLWsCxvf8dvruv6
8uYfj5en5/HhM+fx9YDRc5dOyTrNYrEE/mqx/L8///9XaGJp1PbbDpbUTAz/
hWS/tsl39MO6sCOkWAaGV+x6NOxISZlTfE5pybqwo6Txk2vnPbmoMexoKfl6
6EeJn3jDjpHQv5P/5/M1T4ZtlWeffuPiiWVbw75YFvzeevyfDz8Tdqxc8nSN
Z09HS9iXyfhttx3YHu0LO07iOm7L+bDnhbAvlyXxja/bP3wp7HhZMe6dGy/6
6OWwr5TygYmHlxx+NWybzG07M/0/Y14P+2qxP7Ct79Dy9rCvke77Dm3NHfV2
2ONk/8ztGw/1+MNOEOeLF3Qenv5u2NfKpnfHv7fop/fCvk4uK3s9dPbW98O+
Xm5a8eaKXQ/vDDtRQumnHZ/08r/D/qe8EnffY39N6gz7Bln51Q1f/d21O+zx
csmo+0f+tPCTsJNk9db3X59wyadhT5C4oVffNeMz3TfKiRdyo2ZVdoU9UUaP
PJycNeazsEU+uz05VLczbE1k0oItA0fm7A3Pb5JDEZee9sqxsLWb5MPl4+f9
94HPw/Ob5U5f86g9I7rD85ul6I416xfUh225ReqefeP3A6O+CM9vkUV/O6dp
2qqwLcky6qXXp/Wd/mV4niz7NkdHfZAftmWSpIx0jDjzoD6fJO831nk+StkX
nt8qa7eXfze+JWztVkl6vuYu99n7w/PbJLWn5tAT94et3SY593+w/qs39XmK
HKl7fMQdI78Kz1Nk3lk99UPnhG25XQrfajl3wnP6/Ha5btirQ888ps/vkINZ
Nzgrx38dnt8hV3z41oY95WFb7pRzbJcURb2pz++UvXN3X+E8rs9T5Q3viJt+
uOZAeJ4qV+esrXt1QdiWu+SpLefF923U53fJ3XFDtCd36/O75eLPEscM/KnP
T/nCw38MOS8Ynv9Lvs2ZFeG6ImztX/KyjEn/ZKI+t8u4NbufS5gattgl762p
WU9k6f/eLhfMqy28rChsv12uq/i04KOH9P3JctOHV67dsE7fnywz3l/0lHer
vj9ZjsS9eH5Pq74/WfY3XX1yybv6/hSZM8Ey6o7d+v4U2dX3v77yffr+FIld
s2nfyO/1/Sny+hMHkocf0fenStrs728rOaHvT5XPfnz/54y/HAzvT5WBnRHH
20eE7Z8qa9+9tssbHbYlTV7ZcUfz8NFhS5rsu3bitGFj9f00KRhZU7jZpu+n
yZPRWtbH1+v70yTzizOTNtyo70+TrIff2XvOJH1/mqw5b+PnY+/U96fJ0k3R
zUft+v498vtjj5UuvUffv0cuHbl+8paZ+v498nXdsV/rHPr+PXL80dCw67L0
/Xslx3P3EO8Cff9eWbxq+gW7Fuv798rfqj7Oey9H379X6s9+bUh1gb6fLn9Z
m/roiGJ9P13u+7xh96IyfT9d8g8k3bS+Qt9Pl+o3T797Y5W+P126z8+dUPSA
vj9d+r675Z+X1+r702X8k1/e3bZC358uByc3ui55WN+fIWe33FK0eLW+P0OO
9I6+pOERfX+GLF025e9PrdH3Z8i6Ow8OrF2r78+UiA3fjstep+/PlJGLaxLH
Pq7vzxRPyRmzdq3X92fKrDnbD2c06vsZ8vTCt0fs3ajvZ0jBjEn9N2zW9zNk
2iu/bKvz6vsZcuHP3yR1btH375O3P5+3+bcn9P37JBTY8lZ0k75/nywePqN4
zFP6/n1Smb7siTFb9f1ZEvfMniEXPK3vzxJtSHnaSd3aLLl0T+Nd3c36/iw5
/9adjz31jL4/W97sXhmY/6y+P1sezux79KJt+v5sOXhBYPHHuv2zpXK963BO
i77vkJy8dx4857mwrQ55ceYnb3t1i0O67omPiN8etsMhGSMu//h53ZpD5m+6
szD++bC9Dkn6/YGsJ3T7HWK5Y9WvI31hBx3yzxtH15TqtsyR4vdunXVAt3WO
XBXzaNeEF/T8OeJomnX1Ot2OOdI/b+gbP+rW5sil68e0jn9Rz58jzyx4feZD
uv1z5OaPZv+0S3dwjmz5Qdvyt5f0/Lny3Ihlz03RbZ0rWxO6b1mtW+bKn/PT
6zt0O+bKhPOv7fxTtzZXdsy69rxrWvX8uRJyf7J+rm7/XGnNulfz6A7OlUe/
+fOHN3Rb5smaf4/4o0e3dZ680/fr3rNf1vPnyfKqrHU23Y55Mve62TOn6tbm
yajQjBvzdXvnyV/mTZ2xRrd/nsQV7t/p0x2cJyfXXLepU7clUz79xXH0kG5r
pgzsu3z/SSM/U1ZFJWef/4qenymZk1Nf+YduLVP6eg5+dLNub6Y8tfH5N+/R
7c+Ulw4Vb1igO5gpB8ZdkV+q25J16v/jA9PqdFuz5MLXQnc16pYseaTlT+c2
Iz9LLI/9/uJrRn6W2G5MuH6nkZ8lzWOmW7qM/Cx5748Ho4NGfpaUr757+Y9G
/v0yLqN95jEj/5TbZjdYXtXz75eOVZNvO0u3437584MbXKN0a/fLJfYZF8To
9t4vH3+5IjVWt/9+2XdzyjnxuoP3y3PbW+eO022ZL1vnb5xyg27rfGlfWvGN
GPnz5YXPV55/m5E/X+Z/se1YqpE/X5a9VlMzxcifL5PzSt+/18ifL9df0/Zm
hpE/X15fPzZnjpHvFOehh77NMvKd8kzXvdELjXyn/JT709+WGPlOmfPWkr05
Rr5Tbh29N6vAyHfKpx/3v+c28p2yaiD/aKmR75TA0X3Hlhn5CyT2yrpApZG/
QM47d2dVjZG/QA59tX3EQ0b+All7bUrxciN/gaz5ovSdlUb+Apl5QfQPDxv5
C2Ts7Z/0rzbyF8h/RqZ8+4iRv1BWvWt5dY2Rv1DytSU5a438hZK1+OdR64z8
hfJA+67NDUb+QpnRNum89Ub+Qnnh9TL3BiN/oUSdX7ez0chfKGsHys7YZOQv
ks3j7rBtNvIXyeJhB+/0GvmL5P0jo9O3GPmL5JFxB6c9YeQvkn3e7yc9aeQv
klbb0bgmI3+RPLDm1ZOGg4vk5ne//vApIz9bvqsZunKrkZ8t23/ZLU8b+dlS
/N07fYYd2bKuYP7qZiM/Wypn3jT2GSM/W16Y8e/XDfuzZciW3ORnjfxs2TP6
2Q8MWxZLUt/em7YZ+YtlW9mMVwzLYjk+9JHYFiN/sSzetafOsLZY3kld+rNh
72JxPfJq6nNG/mIpcfU3GQ4ulk/eXjRg2LJEvKtm37bdyF8iD08f/qhhWSJX
J73UbdixRA5e9OCFzxv5S+Tw92/MMOxdIos2PPiYYf8S+W/dubsNB5fIsYq1
Z/iM/KUyttN2vWHrUrmwYsR8w7JU9pXeW2/YsVSON8S/bVhbKsF23/eGvUul
ZeD04S8Y+UulbkvyNYaDS+Vd5+o0wxaXpOeezDcc6ZJNC7evMWx1SdH6Vp9h
m0vW/hbXaVhcsnXS6EOG7S55cOiLfxp2uKTm1f+c+6Jul0t2vnT4CsOaS7rn
tYphj0sWJc1OM+x1ybxdx+837HPJpZ8+6jbsd8mExMTlhgMumX/5rw2Ggy75
7aL9TxsOueSDb468bNiSIwsev/U9w5E5cnHg4G7D1hwZW7lrn2FbjqyNOe97
w5Ije1e/84the468l/rF74YdOXKnPevMl4z+ObIzbvFww1qO9P/+63mGPTmy
qW7YRYa9OXJs4guXGfblSNPFff8w7M+RR356N8FwIEeWnDV+vOFgjvy+bvpN
hkM5cv6SS24zbMmV+tEbUw1H5kr3Xz+abNiaK7ff8MI9hm25surxqTMNS654
Ay/PNmzPFd+9++YZduRKb+HO+Wb/XBlye/kis3+utL95conZP1dsjZNzzf65
cvoDBQVm/1xx9y92m/1zZWHyhFKzf66M3f5dudk/V8anLtDM/rnyl5gPq8z+
eZJ1cugDZv88ueStyx8y+5+a//XK5Wb/PBmSd+5Ks3+evFn1TZ3ZP0+qn3xs
ldk/TyqvHOcx++fJDQtfe8TsnycrVl6+xuyfJw2vPFRv9s+Tt07uWWv2P/X9
ZJ+1zuyfJ11Hr24w++fJLxW3P272z5MTP01eb/bPk4kjUjeY/fPlxWcSG83+
+dLgjt5o9s+XqH/0mbbly8tLWjeZ/fPl+L6czWb/fNl11qVes3++nLF8l2lX
vry7f8kWs3++9NX85Qmzf76sOL7WtDdfLmv5+5Nm/3wZE7HJtD9fYvPObzL7
58t1d60wHcyX5F+OmQ7lyx0v3/eU2b9ANv/wlunIArnm6wu2mv0L5MPuHNO2
Arnxoh2mpUBajox82uxfIM95Zpp2FEjNuC2mXQVi/9u3prVTeXNGN5v9C6R0
coZpb4HsGVlv2lcgabs6TPsL5B3fb6YDBVIfHPuM2b9ALq2+x3SoQDre0Exb
CuX7bc2mIwvlorxdpq2Fcs9VR0zbCuWzE6OeNfsXSsaxcabthXLDtVNMOwpl
9p4lpl2FknNwuWmtUL4sedK0p1C+euEN095CeerxT0z7CmVKcq9pf6Gc/d4J
04FCibgscpvZv1C2lF1sOlQoMz4bZ9pSJD9NSDYdWST3vjfVtLVIDubMNW0r
krHTXKalSK50l5u2F8m075abdhRJ/ta1pl1F8sUOr2mtSOy3bzPtKZL4pJdN
e4vkrqfeMu0rksvqdpr2F8l7v+42HSiSj//zudK/SNYUHVD6F8nZDYeU/m75
YtpPSn+3TH3lqNLfLTVvHVf6uyUh76TS3y2Hus9oMfu7JXh0qGmHW+I7hpt2
uaVx+ijTmlt2bzvftMctV717oWmvW45vvsi0zy1JKZeY9rvl6zcvMx1wy4bT
LzcddMtZMf8wHXLL5qE205Zi2bbrGtORxTJr8bWmrcXS+f31pm3F8uPEG0xL
sTxWlKT0L5ZVnhuV/sVSVidK/2I5mn2z0r9YloxLVvoXy7SDk5T+xfJH0W1K
/2J5eiBF6V8s1Zl3KP2L5cX2O5X+xZJ82l1K/2IZf93dSv8SWTn9X0r/Evmf
xXalf4m8kzNZ6V8iducUpX+JrJg8VelfImOuTFP6l8jePxW7SiRpxzSlf4n8
d9k9Sv8SWXvVvUr/Emneq9hXIi/mpyv9S8R21nSlf4k0rFMcLJGZf5+h9C+R
bzYotpTKI6NmKv1LpaNGsbVUDvys2FYqV0zLUPqXyh+tiu2lsmXEfUr/UpmV
pdhVKu5XFGulctXps5T+peK/U7G3VDI9in2lMmWPYn+pvDl8ttK/VPamKA6W
ykcVikOlp37+Vmwpk6M9iiPLpHCUQ+l/yhMV28okaoFiKZNcj2J7mTz/smJH
mRzuVuwqk/G/KdbKxP8/c5T+ZeK5XrG3THZMVewrk5wliv1l8txDigNlsnKz
4mCZXPSK4lCZlH6k2FIuzx9QHFkuHx1RbC2XA2fMVfqXy8C5iqVcLr1Msb1c
cq9V7CiXH29R7CqXxsmKtXJZPUuxp1x2L1TsLZesQsW+cplZqdhfLq+tVBwo
l4fWKg6Wy65NikPlUv+0YssyOfi84shl8sariq3LJO5ttf8yufIDtf8y+bRT
7b9MYj5V+y+T4V+o/ZfJ9q/V/svE0qP2XyYRh9X+y+Sjn9T+yyT1iNp/maw6
pvZfdur3U7X/Msn6U+1/Ku+0eUr/CllwpuLICnkyQrG1QnxnK7ZVyJrhiqVC
7h6p2F4h345S7KiQtPMUuyqkKVqxViFdFyj2VMh3MYq9FfLl/yr2VchLVsX+
Csm7WHGgQi6MVRyskJZLFYcqZMwYtb8mq+IUR2hycKz6eWhy8RWKozWZEq9+
Pprk/ENxnHbq9x3189Kk6irFiZoU2NTPT5OZVytO0SThGvXz1OS0cYrTNXlf
tUOT8gTFTk2uuFb9vDUJqHZrkn2d+vlrclJ1rSYrrlfvocnwRMUNmqxU7dVk
yD8VN5/6PFT7NNmnuk2TiTeo99Nko+oOTY6pDmhyx3jF3ZqsVx3U5JDqXk2u
TFLvfer7UT2gyQuqLZXyH9URlTJmgnr/SrlPdXSleFRbK+Ud1XGV8rNqW6Vc
cKN6/0q5RbVUykLVKZWyWrW9Ul5UnV4pn6p2VMoR1c5KGTFRvX+lXKHaXSmT
VGuVMkt1baUUqPZUykrVDZXiVe2tlFbVzZWyU7WvUr5Q3VYpP6j2V8pvqjsq
Zaio96+U81V3V0qs6mClXK26t1ImqA5VSorqgUqZqtpSJfepjqiS+aojq8Sl
Orrq1E+86v2rTl1QvX+VLFdtqxKP6sQqWadaqmST6pQqaVJtr5JnVadXyfOq
HVXSqtpZJa+pdlXJW6rdVfKuaq1KPlBdWyUfqvZUyS7VDVWyR7W3SrpUN1fJ
56p9VfKl6rYq+Uq1v0qCqjuq5NtB96+S7wbdv0q+H3T/Kjk86P5V8uOg+1fJ
T4PuXyU/D7p/tfwy6P7VcnTQ/aulf9D9q+W/g+5fLccG3b9afh10/2oZGHT/
ajk+6P7V8tug+1fL74PuXy0nBt2/Wv4YdP9q+XPQ/avl5KD7V4vlJvX+1TJE
tVYtp6murZbTVXuq5QzVDdVypmov3Az74DbYD3fAAbgbDsK9cAgegC01gx0B
R8LRsBWOg21wIixwCmyH02EH7IRdsBvW4FrYAzfAXrgZ9sFtsB/ugANwNxyE
e+EQPABbHsD94Ug4GrbCcbANToQFToHtcDrsgJ2wC3bDGlwLe+AG2As3wz64
DfbDHXAA7oaDcC8cggdgy4O4PxwJR8NWOA62wYmwwCmwHU6HHbATdsFuWINr
YQ/cAHvhZtgHt8F+uAMOwN1wEO6FQ/AAbHkI94cj4WjYCsfBNjgRFjgFtsPp
sAN2wi7YDWtwLeyBG2Av3Az74DbYD3fAAbgbDsK9cAgegC21uD8cCUfDVjgO
tsGJsMApsB1Ohx2wE3bBbliDa2EP3AB74WbYB7fBfrgDDsDdcBDuhUPwAGxZ
jvvDkXA0bIXjYBucCAucAtvhdNgBO2EX7IY1uBb2wA2wF26GfXAb7Ic74ADc
DQfhXjgED8CWFbg/HAlHw1Y4DrbBibDAKbAdTocdsBN2wW5Yg2thD9wAe+Fm
2Ae3wX64Aw7A3XAQ7oVD8ABsWYn7w5FwNGyF42AbnAgLnALb4XTYATthF+yG
NbgW9sANsBduhn1wG+yHO+AA3A0H4V44BA/AljrcH46Eo2ErHAfb4ERY4BTY
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
eNgGJ8CJcBIsm8US/vo/dhNcWQ==
         
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 460, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{"ba", "\[Rule]", "10"}], ",", 
           RowBox[{"bn", "\[Rule]", "1"}], ",", 
           RowBox[{"z", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vs", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vh", "\[Rule]", "1"}], ",", 
           RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
           RowBox[{"u", "\[Rule]", "0.2`"}], ",", 
           RowBox[{"pa", "\[Rule]", "0"}], ",", 
           RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"LsO", "LhO"}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.772523305084457*^9, 
  3.773388967305439*^9},ExpressionUUID->"443161b4-321d-43c4-a69b-\
639732571651"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 751},
WindowMargins->{{64, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 18, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 7001, 198, 552, "Input", "ExpressionUUID" -> \
"dae59257-83f4-40a7-8359-3ea76e2c326f"],
Cell[7562, 220, 2731, 75, 181, "Input", "ExpressionUUID" -> \
"b419f1f4-43d7-432b-956e-3865eca957af"],
Cell[10296, 297, 387, 10, 33, "Input", "ExpressionUUID" -> \
"55472e31-a868-41bf-a1a9-36348d7a5642"],
Cell[10686, 309, 308, 7, 32, "Input", "ExpressionUUID" -> \
"d2439a89-a167-41e0-abf6-28fd2c6ca69d"],
Cell[10997, 318, 534, 17, 32, "Input", "ExpressionUUID" -> \
"04ebd907-0190-44c3-8647-75b81461511b"],
Cell[11534, 337, 581, 18, 32, "Input", "ExpressionUUID" -> \
"8d81e881-d293-423a-932b-e977e12f23ab"],
Cell[CellGroupData[{
Cell[12140, 359, 145, 3, 32, "Input", "ExpressionUUID" -> \
"51e46bda-5212-4bac-a486-25bf56a41d20"],
Cell[12288, 364, 3188, 46, 32, "Output", "ExpressionUUID" -> \
"44b4e3a0-374c-4ef7-9098-123a3eeb079b"]
}, Open  ]],
Cell[15491, 413, 692, 18, 57, "Input", "ExpressionUUID" -> \
"72666374-6073-4376-bf00-7480537d551a"],
Cell[16186, 433, 25736, 625, 309, "Input", "ExpressionUUID" -> \
"84779083-38e0-472f-a5e7-f8db19158bd0"],
Cell[CellGroupData[{
Cell[41947, 1062, 19493, 397, 999, "Input", "ExpressionUUID" -> \
"3a9b002c-cbaa-4179-afef-73bb20ec8de6"],
Cell[61443, 1461, 3235, 48, 108, "Message", "ExpressionUUID" -> \
"4b5efaf1-0a7f-421c-9873-86fa0e298351"],
Cell[64681, 1511, 139, 3, 32, "Output", "ExpressionUUID" -> \
"c5996c56-d548-4880-9eda-798c3eda8984"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64857, 1519, 216, 5, 32, "Input", "ExpressionUUID" -> \
"444ef7f8-d9b3-4e45-9e1d-69db0f5708f6"],
Cell[65076, 1526, 723270, 13110, 351, "Output", "ExpressionUUID" -> \
"e6c88e31-70b0-4b1b-bcad-23f7651bf966"]
}, Open  ]],
Cell[CellGroupData[{
Cell[788383, 14641, 2128, 35, 75, "Input", "ExpressionUUID" -> \
"55e85f03-e924-4e2e-97c0-598cd3b313fd"],
Cell[790514, 14678, 827, 12, 32, "Output", "ExpressionUUID" -> \
"bbb9f656-22a0-4b81-9b83-a8fc8102ddcd"]
}, Open  ]],
Cell[791356, 14693, 409, 10, 40, "Input", "ExpressionUUID" -> \
"60113cfd-9986-4fe8-af93-9fa583d5559a"],
Cell[CellGroupData[{
Cell[791790, 14707, 15284, 357, 1062, "Input", "ExpressionUUID" -> \
"ab2be162-f256-4bef-b373-b4651b9ed74e"],
Cell[CellGroupData[{
Cell[807099, 15068, 43193, 768, 327, "Print", "ExpressionUUID" -> \
"514129e4-4a5e-41eb-a969-46da03ae5218"],
Cell[850295, 15838, 43970, 780, 327, "Print", "ExpressionUUID" -> \
"b861b6f7-ad11-4400-a579-7b686b294e23"],
Cell[894268, 16620, 34329, 622, 327, "Print", "ExpressionUUID" -> \
"11f1cf88-4867-480f-878d-fae994630832"],
Cell[928600, 17244, 29839, 549, 327, "Print", "ExpressionUUID" -> \
"4c090e50-bd38-4093-8e94-1e062cb1c3a3"],
Cell[958442, 17795, 44679, 792, 327, "Print", "ExpressionUUID" -> \
"d1cfe07a-15e8-4270-9e30-95b9086ca979"],
Cell[1003124, 18589, 44055, 782, 327, "Print", "ExpressionUUID" -> \
"db5d38ec-990a-4aa8-bb6e-9cf7ccf99820"],
Cell[1047182, 19373, 36644, 660, 327, "Print", "ExpressionUUID" -> \
"9a03f225-ae2e-4c47-855a-b17a7425f189"],
Cell[1083829, 20035, 31405, 574, 327, "Print", "ExpressionUUID" -> \
"837cf4bb-dcc7-4d99-98c5-7f6be4fbbd62"],
Cell[1115237, 20611, 57936, 1009, 327, "Print", "ExpressionUUID" -> \
"ac866db6-8e63-4486-929f-78b8376fc49d"],
Cell[1173176, 21622, 45900, 812, 327, "Print", "ExpressionUUID" -> \
"cbcc80ad-dbb8-44b0-badd-23ab7e09969e"],
Cell[1219079, 22436, 37669, 677, 327, "Print", "ExpressionUUID" -> \
"987bebc6-5606-4755-bdb8-ff18a7454b47"],
Cell[1256751, 23115, 31848, 582, 327, "Print", "ExpressionUUID" -> \
"443161b4-321d-43c4-a69b-639732571651"]
}, Open  ]]
}, Open  ]]
}
]
*)

