(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1153219,      21378]
NotebookOptionsPosition[   1149671,      21297]
NotebookOutlinePosition[   1150029,      21313]
CellTagsIndexPosition[   1149986,      21310]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"css", " ", "zebrafinch", " ", "model"}], ";"}], 
  "Chapter"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"n", 
     StyleBox["s", "Text"]}]], 
   StyleBox[" ", "Text"], 
   StyleBox["is", "Text"], 
   StyleBox[" ", "Text"], 
   StyleBox["number", "Text"], 
   StyleBox[" ", "Text"], 
   StyleBox["of", "Text"], 
   StyleBox[" ", "Text"], 
   StyleBox["stressed", "Text"], 
   StyleBox[" ", "Text"], 
   StyleBox["juveniles", "Text"]}], 
  StyleBox[";", "Text"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
   "nh", " ", "is", " ", "number", " ", "of", " ", "health", " ", 
    "juveniles"}], ";"}], "Text"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
   "NNA", " ", "is", " ", "number", " ", "of", " ", "adapted", " ", 
    "adults"}], ";"}], "Text"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
    "NNn", " ", "is", " ", "number", " ", "of", " ", "nonadapted", " ", 
     "adults"}], ";"}], "\[IndentingNewLine]"}], 
  "Text"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ba", ":", " ", 
    RowBox[{
    "benefit", " ", "of", " ", "adaptive", " ", "behavior", " ", "on", " ", 
     "fecundity"}]}], ";"}], "Text"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    StyleBox["bn", "Text"], 
    StyleBox[":", "Text"], 
    StyleBox[" ", "Text"], 
    StyleBox[
     RowBox[{
      RowBox[{"benefit", " ", "of", " ", "non"}], "-", 
      RowBox[{"adaptive", " ", "behavior", " ", "on", " ", "fecundity"}]}], 
     "Code"]}], "Text"], 
  StyleBox[";", "Code"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"pa", ":", " ", 
    RowBox[{
    "probability", " ", "an", " ", "adapted", " ", "adult", " ", "produces", 
     " ", "stressed", " ", "offspring"}]}], ";"}], 
  "Text"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"pn", ":", " ", 
    RowBox[{
    "probability", " ", "a", " ", "nonadapted", " ", "adult", " ", "produces",
      " ", "stressed", " ", "offspring"}]}], ";"}], 
  "Text"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"vs", ":", " ", 
    RowBox[{"vitality", " ", 
     RowBox[{"(", 
      RowBox[{"opposite", " ", "of", " ", "mortality", " ", "rate"}], ")"}], 
     " ", "of", " ", "a", " ", "stresed", " ", "juvenille"}]}], ";"}], 
  "Text"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"vh", ":", " ", 
    RowBox[{"vitality", " ", 
     RowBox[{"(", 
      RowBox[{"opposite", " ", "of", " ", "mortality", " ", "rate"}], ")"}], 
     " ", "of", " ", "a", " ", "healthy", " ", "juvenille"}]}], ";"}], 
  "Text"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"vI", ":", " ", 
    RowBox[{
    "mortality", " ", "cost", " ", "of", " ", "ndividual", " ", 
     "learning"}]}], ";"}], "Text"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"lsO", " ", ":", " ", 
    RowBox[{
    "frequency", " ", "of", " ", "oblique", " ", "learners", " ", "who", " ", 
     "were", " ", "stressed", " ", "juveniles"}]}], ";"}], 
  "Text"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"lhO", " ", ":", " ", 
     RowBox[{
     "frequency", " ", "of", " ", "oblique", " ", "learners", " ", "who", " ",
       "were", " ", "healthy", " ", "juveniles"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}], 
  "Text"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Recursions", ";"}], "Subsubsection"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ns", " ", ":=", " ", 
   RowBox[{
    RowBox[{"Na", " ", "ba", " ", "pa"}], " ", "+", " ", 
    RowBox[{"Nn", " ", "bn", " ", "pn"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nh", ":=", " ", 
   RowBox[{
    RowBox[{"Na", " ", "ba", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "pa"}], ")"}]}], " ", "+", " ", 
    RowBox[{"Nn", " ", "bn", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "pn"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NNa", " ", ":=", 
   RowBox[{
    RowBox[{"ns", " ", "vs", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "lsO"}], ")"}], " ", "vI", " ", "z"}], " ", "+", 
       RowBox[{"lsO", " ", "qO"}]}], " ", ")"}]}], " ", "+", " ", 
    RowBox[{"nh", " ", "vh", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "lhO"}], ")"}], " ", "vI", " ", "z"}], " ", "+", 
       RowBox[{"lhO", " ", "qO"}]}], " ", ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NNn", " ", ":=", 
   RowBox[{
    RowBox[{"ns", " ", "vs", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "lsO"}], ")"}], " ", "vI", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "z"}], ")"}]}], "+", 
       RowBox[{"lsO", 
        RowBox[{"(", 
         RowBox[{"1", "-", " ", "qO"}], ")"}]}]}], " ", ")"}]}], " ", "+", 
    " ", 
    RowBox[{"nh", " ", "vh", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "lhO"}], ")"}], " ", "vI", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "z"}], ")"}]}], "+", 
       RowBox[{"lhO", 
        RowBox[{"(", 
         RowBox[{"1", "-", " ", "qO"}], ")"}]}]}], " ", ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"qO", " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "u"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"Na", "/", 
       RowBox[{"(", 
        RowBox[{"Na", " ", "+", "Nn"}], ")"}]}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.75922536820514*^9, 3.759225374361019*^9}, {
   3.759226978263508*^9, 3.7592270511939898`*^9}, {3.7592272071577883`*^9, 
   3.759227502951234*^9}, {3.759227549246399*^9, 3.759227595035541*^9}, {
   3.759227633556774*^9, 3.759227779349925*^9}, {3.760182138805376*^9, 
   3.760182140164405*^9}, {3.7601825668532953`*^9, 3.7601825760529423`*^9}, {
   3.760260971894476*^9, 3.760261003261483*^9}, {3.760343678985106*^9, 
   3.760343727470407*^9}, 3.7603437708077*^9, {3.760343806968362*^9, 
   3.760343810862163*^9}, {3.760347725058481*^9, 3.76034772570505*^9}, {
   3.7609513639818087`*^9, 3.7609513682270327`*^9}, {3.765256219711523*^9, 
   3.7652562443580437`*^9}, {3.7676090976881447`*^9, 3.767609173472151*^9}, {
   3.77122177981454*^9, 3.771221796535448*^9}, {3.771652005656386*^9, 
   3.7716520084194613`*^9}, {3.771743399294156*^9, 3.771743400406986*^9}, {
   3.771744015554516*^9, 3.771744047235196*^9}, {3.7717440985156116`*^9, 
   3.771744107244638*^9}, {3.7730527795739927`*^9, 3.773052791132103*^9}, {
   3.773053024916357*^9, 3.7730530415317507`*^9}, {3.77305322644351*^9, 
   3.773053652381461*^9}, {3.773053797018681*^9, 3.773053870179845*^9}, {
   3.773053930863761*^9, 3.7730539588979893`*^9}, {3.773055762687145*^9, 
   3.7730557631809177`*^9}},ExpressionUUID->"7813fda0-2376-4733-b3ac-\
4ea480707c51"],

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"Transition", " ", "Matrix"}], ";"}], "Subsubsection"], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "leave", " ", "Q", " ", "in", " ", "matrix", " ", "below", " ", 
    "different", " ", "than", " ", "one", " ", "up", " ", "above", " ", 
    "recursions"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AA", ":=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", 
       RowBox[{"ba", " ", "pa"}], 
       RowBox[{"bn", " ", "pn"}]},
      {"0", "0", 
       RowBox[{"ba", 
        RowBox[{"(", 
         RowBox[{"1", "-", "pa"}], ")"}]}], 
       RowBox[{"bn", 
        RowBox[{"(", 
         RowBox[{"1", "-", "pn"}], ")"}]}]},
      {
       RowBox[{"vs", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "lsO"}], ")"}], " ", "vI", " ", "z"}], " ", "+", 
          RowBox[{"lsO", " ", "Qh"}]}], ")"}]}], 
       RowBox[{" ", 
        RowBox[{"vh", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "lhO"}], ")"}], " ", "vI", " ", "z"}], " ", 
           "+", 
           RowBox[{"lhO", " ", "Qh"}]}], " ", ")"}]}]}], "0", "0"},
      {
       RowBox[{"vs", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "lsO"}], ")"}], " ", "vI", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "z"}], ")"}]}], "+", 
          RowBox[{"lsO", 
           RowBox[{"(", 
            RowBox[{"1", "-", " ", "Qh"}], ")"}]}]}], " ", ")"}], " "}], 
       RowBox[{"vh", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "lhO"}], ")"}], " ", "vI", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "z"}], ")"}]}], "+", 
          RowBox[{"lhO", 
           RowBox[{"(", 
            RowBox[{"1", "-", " ", "Qh"}], ")"}]}]}], " ", ")"}]}], "0", "0"}
     }], "\[NoBreak]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.759229336797518*^9, 3.75922941064526*^9}, {
   3.7601910668877563`*^9, 3.760191069968646*^9}, {3.7609532359902973`*^9, 
   3.760953296684855*^9}, {3.760959349527267*^9, 3.760959368606543*^9}, {
   3.761035121392744*^9, 3.76103512193158*^9}, 3.761045760902514*^9, 
   3.7614723052140512`*^9, {3.765256247405995*^9, 3.7652562817340727`*^9}, {
   3.767609177679335*^9, 3.767609192766227*^9}, {3.77072038029767*^9, 
   3.7707203911646214`*^9}, {3.771743546774617*^9, 3.771743560995676*^9}, {
   3.7730538721810493`*^9, 
   3.773053883914093*^9}},ExpressionUUID->"497fe567-c859-4ce9-87f8-\
87d1f865c18b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NN", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"NNn", " ", "+", " ", "NNa"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.767609229418394*^9, 3.7676092418263702`*^9}, 
   3.767609303794414*^9},ExpressionUUID->"63c45999-0500-4c1c-b0c7-\
32c97772204e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FFa", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"NNa", "/", "NN"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Na", "\[Rule]", 
        RowBox[{"Fa", " ", "N0"}]}], ",", 
       RowBox[{"Nn", "\[Rule]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "Fa"}], ")"}], "N0"}]}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.7652563372065363`*^9, 
  3.767428186086334*^9},ExpressionUUID->"68345157-84e5-47b3-ac93-\
33e465314ede"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FFn", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"NNn", "/", "NN"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Na", "\[Rule]", 
        RowBox[{"Fa", " ", "N0"}]}], ",", 
       RowBox[{"Nn", "\[Rule]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "Fa"}], ")"}], "N0"}]}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.7652563533747797`*^9, 3.767428186606475*^9, 
  3.771743861492507*^9, 
  3.771746605927393*^9},ExpressionUUID->"ff70bfaf-f11f-401f-8a89-\
d781ae6bdd78"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"FFn", "+", "FFa"}], "]"}]], "Input",ExpressionUUID->"68a025c8-3abf-\
4856-b9a6-7e142eed8aa0"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.7652563766032677`*^9, 3.765274508624042*^9, 3.765275857873808*^9, 
   3.765530995977647*^9, 3.7674247653006496`*^9, 3.76742486162066*^9, 
   3.767428181159596*^9, 3.767436671148477*^9, 3.767522013505011*^9, 
   3.767609318926516*^9, 3.767692007553767*^9, 3.767692633641698*^9, 
   3.7676933847351027`*^9, 3.767693416809304*^9, 3.767693530049163*^9, 
   3.767693808398802*^9, 3.767694070658029*^9, 3.767694133378681*^9, 
   3.767694403481168*^9, 3.767694884489552*^9, 3.770366808156866*^9, 
   3.770374263532011*^9, 3.7707039017014627`*^9, 3.770713388367136*^9, 
   3.77071341874806*^9, 3.7707134918134413`*^9, {3.770715208381282*^9, 
   3.770715231783855*^9}, 3.770716897503373*^9, 3.770717068147419*^9, 
   3.770717204630273*^9, 3.770717251548367*^9, 3.770717431067676*^9, 
   3.770717525857126*^9, 3.770717803463581*^9, 3.770720363977283*^9, 
   3.770720408646554*^9, 3.771221810947377*^9, 3.771651935044628*^9, 
   3.77165241205829*^9, 3.7716524916458406`*^9, 3.771654499656795*^9, 
   3.771658930114113*^9, 3.771658998373848*^9, 3.771659353564712*^9, 
   3.77166030951224*^9, 3.771660369808*^9, 3.771660434647965*^9, 
   3.771660564321527*^9, 3.7716613543784237`*^9, {3.7716613877613688`*^9, 
   3.771661413627882*^9}, 3.7716614555948277`*^9, 3.771661497517908*^9, 
   3.771661545728176*^9, {3.771661586857608*^9, 3.771661619448851*^9}, 
   3.771661665177449*^9, {3.771661717830427*^9, 3.771661742417799*^9}, 
   3.771661835870933*^9, 3.7716618807771606`*^9, {3.77166201300522*^9, 
   3.771662040755192*^9}, 3.771662145647277*^9, 3.7716621857896852`*^9, 
   3.7716622257282543`*^9, 3.771662295863245*^9, 3.771662337204023*^9, {
   3.771740443496616*^9, 3.771740466258691*^9}, {3.771740504617218*^9, 
   3.7717405514048*^9}, 3.771743574373577*^9, 3.771743865955285*^9, 
   3.771744113046269*^9, 3.771744326276844*^9, 3.771746194093068*^9, 
   3.771746478882195*^9, 3.771746519374106*^9, 3.771746557822513*^9, 
   3.771746609763937*^9, 3.7717467208174973`*^9, 3.7717469379021273`*^9, {
   3.771747885704548*^9, 3.771747908866817*^9}, 3.7717481374945593`*^9, 
   3.771748264394051*^9, {3.7717483423507977`*^9, 3.771748368132701*^9}, 
   3.7717485206056757`*^9, 3.77174855232647*^9, 3.771748717358222*^9, 
   3.771749132968192*^9, 3.77175026190968*^9, 3.771750296992206*^9, 
   3.771750400791872*^9, 3.771750431067029*^9, 3.771750848010991*^9, 
   3.77175092122514*^9, 3.771751907849412*^9, 3.771752998523596*^9, 
   3.7717531334503813`*^9, 3.771754703702783*^9, 3.771755232894843*^9, 
   3.77175589905567*^9, 3.771758922503375*^9, 3.771759498026425*^9, 
   3.77183510295203*^9, 3.771909454189793*^9, 3.7724496018333073`*^9, 
   3.77252108880879*^9, 3.7725212451485233`*^9, 3.772521411706188*^9, 
   3.772521487554552*^9, 3.772521601056044*^9, 3.772521858421586*^9, 
   3.772522302651141*^9, 3.772523210401243*^9, 3.7730537940464478`*^9, 
   3.773053924099951*^9, 3.773053976127838*^9, 3.7731204848819513`*^9, 
   3.773122210587656*^9, 3.773122427375655*^9, 3.773122920687924*^9, 
   3.773123010921936*^9, 3.7731230611182337`*^9, 3.7731231267551737`*^9, 
   3.773123629327756*^9, 3.77312403004497*^9, 3.773124063279539*^9, 
   3.77312416637344*^9, 3.773124515965846*^9, 3.7731245645927067`*^9, 
   3.773124934510062*^9, 3.773125406702939*^9, 3.7731255314051332`*^9, 
   3.773125882766535*^9, 3.773126202925604*^9, 3.773137986560931*^9, 
   3.773138094936058*^9, 3.773138150380992*^9, 3.773140517185546*^9, 
   3.773140717284045*^9, 3.773141732253927*^9, 3.7733796348536253`*^9, 
   3.773389138593779*^9},ExpressionUUID->"bfc06eda-46f2-4700-b8aa-\
f1ae79d0cded"]
}, Open  ]],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"solve", " ", "Q"}], "-", 
    RowBox[{"hat", " ", "for", " ", "common", " ", "strategy"}]}], ";"}], 
  "Subsubsection"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fasols", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"FFa", "\[Equal]", "Fa"}], ",", "Fa"}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.771743481027957*^9, 3.771743503268949*^9}, {
   3.7717438367194157`*^9, 3.771743837517026*^9}, 3.771746450189302*^9, {
   3.7730537398200893`*^9, 3.773053745061562*^9}, 3.7730539107134333`*^9, 
   3.7730542885424223`*^9, 
   3.7730547185751953`*^9},ExpressionUUID->"71b3e5ec-ac8c-46bc-8e8f-\
d962bedf8747"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PSTYLE", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Directive", "[", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.3607843137254902, 0.4758169934640523, 0.018300653594771243`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.5411764705882353, 0.7137254901960784, 0.027450980392156862`],
       Editable->False,
       Selectable->False], "]"}], ",", 
     RowBox[{"Directive", "[", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.1450980392156863, 0.43529411764705883`, 0.3843137254901961], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.09673202614379087, 0.2901960784313726, 0.2562091503267974],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.1450980392156863, 0.43529411764705883`, 0.3843137254901961],
       
       Editable->False,
       Selectable->False], "]"}], ",", 
     RowBox[{"Directive", "[", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.005228758169934641, 0.33986928104575165`, 0.6196078431372549],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824],
       Editable->False,
       Selectable->False], "]"}], ",", 
     RowBox[{"Directive", "[", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.47058823529411764`, 0.2627450980392157, 0.5843137254901961], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.3137254901960784, 0.17516339869281047`, 0.3895424836601308],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.47058823529411764`, 0.2627450980392157, 0.5843137254901961],
       
       Editable->False,
       Selectable->False], "]"}], ",", 
     RowBox[{"Directive", "[", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5934640522875817, 0.00784313725490196, 0.32679738562091504`],
          FrameTicks->None,
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
       0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`],
       Editable->False,
       Selectable->False], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3607843137254902, 0.4758169934640523, 0.018300653594771243`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          
          "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[
        0.5411764705882353, 0.7137254901960784, 0.027450980392156862`],
        Editable->False,
        Selectable->False], ",", "Dashed"}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.09673202614379087, 0.2901960784313726, 0.2562091503267974],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          
          "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.1450980392156863, 0.43529411764705883`, 0.3843137254901961],
        Editable->False,
        Selectable->False], ",", "Dashed"}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.005228758169934641, 0.33986928104575165`, 0.6196078431372549],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          
          "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.00784313725490196, 0.5098039215686274, 0.9294117647058824]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.00784313725490196, 0.5098039215686274, 0.9294117647058824],
        
        Editable->False,
        Selectable->False], ",", "Dashed"}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.3137254901960784, 0.17516339869281047`, 0.3895424836601308],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          
          "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.47058823529411764`, 0.2627450980392157, 0.5843137254901961]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.47058823529411764`, 0.2627450980392157, 0.5843137254901961],
        Editable->False,
        Selectable->False], ",", "Dashed"}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`],
              RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5934640522875817, 0.00784313725490196, 0.32679738562091504`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          
          "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.8901960784313725, 0.011764705882352941`, 
               0.49019607843137253`]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[
        0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`],
        Editable->False,
        Selectable->False], ",", "Dashed"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ulist", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.01", ",", "0.05", ",", "0.15", ",", " ", "0.25", " ", ",", " ", 
     "0.5"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"blist", "=", 
   RowBox[{"{", 
    RowBox[{"1.5", ",", "2", ",", "3", ",", "5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"llsOstart", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"llhOstart", "=", 
   RowBox[{"-", "4"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imax", "=", "1500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lhOtab", "=", 
   RowBox[{"lsOtab", "=", 
    RowBox[{"llhOtab", "=", 
     RowBox[{"llsOtab", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"imax", "-", "1"}]}], "}"}]}], "]"}]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"delta", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"llsOtab", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", "llsOstart"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"llhOtab", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", "llhOstart"}], ";"}]}], "Input",
 CellChangeTimes->{{3.773057332820138*^9, 3.773057354667398*^9}, {
   3.7731205382538*^9, 3.773120556674842*^9}, {3.7731215888363934`*^9, 
   3.773121625246204*^9}, {3.773121680386454*^9, 3.7731216867275257`*^9}, {
   3.773122063610848*^9, 3.7731220728758707`*^9}, 3.773122191371787*^9, {
   3.773125528026533*^9, 3.773125528520507*^9}, {3.773126179494692*^9, 
   3.773126179778405*^9}, {3.773137910397121*^9, 3.7731379104671803`*^9}, {
   3.773138122329754*^9, 3.77313812611611*^9}, {3.773140612721541*^9, 
   3.773140622383747*^9}, {3.773141721107753*^9, 
   3.773141729730323*^9}},ExpressionUUID->"4b51c49d-a808-4544-8230-\
a64b7c1c9718"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"j", "\[LessEqual]", 
       RowBox[{"Length", "[", "blist", "]"}]}], ",", 
      RowBox[{"j", "++"}], ",", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"h", "=", "1"}], ",", 
          RowBox[{"h", "\[LessEqual]", 
           RowBox[{"Length", "[", "ulist", "]"}]}], ",", 
          RowBox[{"h", "++"}], ",", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"subs", " ", "=", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ba", "\[Rule]", 
                RowBox[{"blist", "[", 
                 RowBox[{"[", "j", "]"}], "]"}]}], ",", 
               RowBox[{"bn", "\[Rule]", "1"}], ",", 
               RowBox[{"z", "\[Rule]", "0.8"}], ",", 
               RowBox[{"vs", "\[Rule]", ".8"}], ",", 
               RowBox[{"vh", "\[Rule]", "1"}], ",", 
               RowBox[{"vI", "\[Rule]", "0.8"}], " ", ",", 
               RowBox[{"u", "\[Rule]", 
                RowBox[{"ulist", "[", 
                 RowBox[{"[", "h", "]"}], "]"}]}], " ", ",", " ", 
               RowBox[{"pa", " ", "\[Rule]", " ", "0"}], ",", " ", 
               RowBox[{"pn", "\[Rule]", " ", "1"}]}], "}"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"test", " ", "=", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"lsO", "\[Rule]", "0"}], " ", ",", 
               RowBox[{"lsV", "\[Rule]", " ", "0"}], " ", ",", 
               RowBox[{"lsI", "\[Rule]", " ", "0.8"}], ",", 
               RowBox[{"lhO", "\[Rule]", " ", "0.8"}], ",", 
               RowBox[{"lhI", "\[Rule]", " ", "0.2"}]}], "}"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"QHAT", "[", 
              RowBox[{"LHO_", ",", "LSO_"}], "]"}], " ", ":=", 
             RowBox[{"Simplify", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Fasols", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"lhO", "\[Rule]", "LHO"}], ",", 
                  RowBox[{"lhI", " ", "\[Rule]", " ", "LHI"}], ",", " ", 
                  RowBox[{"lsO", " ", "\[Rule]", " ", "LSO"}], ",", " ", 
                  RowBox[{"lsI", "\[Rule]", " ", "LSI"}]}], "}"}]}], " ", "/.",
                "subs"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"isolate", " ", "dominant", " ", "eigenvalue"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"AA2", "=", 
             RowBox[{"AA", "/.", "subs"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"LL", "=", 
             RowBox[{"Eigenvalues", "[", "AA2", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"isolate", " ", "Dominant", " ", "eigenvalue"}], ",", 
              " ", 
              RowBox[{
               RowBox[{"substitute", " ", "in", " ", "q"}], "-", "hat"}]}], 
             " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"Lambda1", "=", " ", 
             RowBox[{"Simplify", "[", 
              RowBox[{
               RowBox[{"LL", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "/.", 
               RowBox[{"Qh", "\[Rule]", "  ", 
                RowBox[{"QHAT", "[", 
                 RowBox[{"LHO", ",", "LSO"}], "]"}]}]}], " ", "]"}]}], ";", 
            "\n", "            ", 
            RowBox[{"softmaxsubs", " ", "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"lsO", " ", "\[Rule]", " ", 
                RowBox[{
                 RowBox[{"Exp", "[", "llsO", "]"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"1", " ", "+", "  ", 
                   RowBox[{"Exp", "[", "llsO", "]"}]}], ")"}]}]}], " ", ",", 
               " ", 
               RowBox[{"lhO", " ", "\[Rule]", " ", 
                RowBox[{
                 RowBox[{"Exp", "[", "llhO", "]"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"1", " ", "+", "  ", 
                   RowBox[{"Exp", "[", "llhO", "]"}]}], ")"}]}]}], " ", ",", 
               RowBox[{"LSO", " ", "\[Rule]", " ", 
                RowBox[{
                 RowBox[{"Exp", "[", "LLSO", "]"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"1", " ", "+", "  ", 
                   RowBox[{"Exp", "[", "LLSO", "]"}]}], ")"}]}]}], " ", ",", 
               " ", 
               RowBox[{"LHO", " ", "\[Rule]", " ", 
                RowBox[{
                 RowBox[{"Exp", "[", "LLHO", "]"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"1", " ", "+", "  ", 
                   RowBox[{"Exp", "[", "LLHO", "]"}]}], ")"}]}]}]}], " ", 
              "}"}]}], ";", "\n", "\t  ", 
            RowBox[{
             RowBox[{"Lambda2", "[", " ", 
              RowBox[{
              "llsO_", ",", " ", "llhO_", ",", "LLHO_", ",", "LLSO_"}], "]"}],
              ":=", 
             RowBox[{"Lambda1", " ", "/.", "softmaxsubs"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "take", " ", "partial", " ", "derivatives", " ", "to", " ", 
               "calculate", " ", "gradient"}], ",", " ", 
              RowBox[{
              "substitute", " ", "mutant", " ", "for", " ", "common", " ", 
               "type"}]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"DllsO", "=", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"Lambda2", "[", 
                 RowBox[{"llsO", ",", " ", "llhO", ",", "LLHO", ",", "LLSO"}],
                  "]"}], ",", "llsO"}], "]"}], "/.", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"LLHO", " ", "\[Rule]", " ", "llhO"}], ",", 
                RowBox[{"LLSO", "\[Rule]", " ", "llsO"}]}], "}"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"DllhO", "=", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"Lambda2", "[", 
                 RowBox[{"llsO", ",", " ", "llhO", ",", "LLHO", ",", "LLSO"}],
                  "]"}], ",", "llhO"}], "]"}], "/.", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"LLHO", " ", "\[Rule]", " ", "llhO"}], ",", 
                RowBox[{"LLSO", "\[Rule]", " ", "llsO"}]}], "}"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"try", " ", "and", " ", "graph"}], "*)"}], 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"llsOtab", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "=", "llsOstart"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"llhOtab", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "=", "llhOstart"}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "2"}], ",", 
              RowBox[{"i", "<", "imax"}], ",", 
              RowBox[{"i", "++"}], ",", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"llsOtab", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "=", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"llsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}], "  ", "+", " ", 
                    RowBox[{"delta", " ", "DllsO"}]}], "/.", "subs"}], "/.", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"llsO", "\[Rule]", 
                    RowBox[{"llsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", 
                    RowBox[{"llhO", "\[Rule]", 
                    RowBox[{"llhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], ";",
                 "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"llhOtab", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "=", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"llhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}], "  ", "+", " ", 
                    RowBox[{"delta", " ", "DllhO"}]}], "/.", "subs"}], "/.", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"llsO", "\[Rule]", 
                    RowBox[{"llsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", 
                    RowBox[{"llhO", "\[Rule]", 
                    RowBox[{"llhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], 
                ";"}], "\[IndentingNewLine]", "}"}]}], "]"}], ";", " ", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"lsOtab", " ", "=", 
             RowBox[{
              RowBox[{"Exp", "[", "llsOtab", "]"}], "/", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"Exp", "[", "llsOtab", "]"}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"lhOtab", " ", "=", 
             RowBox[{
              RowBox[{"Exp", "[", "llhOtab", "]"}], "/", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"Exp", "[", "llhOtab", "]"}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"lsOtab1", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"h", "==", "1"}], ",", "lsOtab", ",", "lsOtab1"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"lsOtab2", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"h", "==", "2"}], ",", "lsOtab", ",", "lsOtab2"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"lsOtab3", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"h", "\[Equal]", "3"}], ",", "lsOtab", ",", 
               "lsOtab3"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"lsOtab4", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"h", "\[Equal]", "4"}], ",", "lsOtab", ",", 
               "lsOtab4"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"lsOtab5", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"h", "\[Equal]", "5"}], ",", "lsOtab", ",", 
               "lsOtab5"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"lhOtab1", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"h", "==", "1"}], ",", "lhOtab", ",", "lhOtab1"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"lhOtab2", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"h", "==", "2"}], ",", "lhOtab", ",", "lhOtab2"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"lhOtab3", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"h", "\[Equal]", "3"}], ",", "lhOtab", ",", 
               "lhOtab3"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"lhOtab4", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"h", "\[Equal]", "4"}], ",", "lhOtab", ",", 
               "lhOtab4"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"lhOtab5", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"h", "\[Equal]", "5"}], ",", "lhOtab", ",", 
               "lhOtab5"}], "]"}]}], ";"}], "\[IndentingNewLine]", "}"}]}], 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"plotcode", "=", 
         RowBox[{"ListLinePlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "lhOtab1", ",", "lhOtab2", ",", "lhOtab3", ",", "lhOtab4", ",", 
             "lhOtab5", ",", " ", "lsOtab1", ",", "lsOtab2", ",", "lsOtab3", 
             ",", "lsOtab4", ",", "lsOtab5"}], "}"}], ",", 
           RowBox[{"PlotLabels", "\[Rule]", "ulist"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "PSTYLE"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"time", ",", " ", 
              RowBox[{"freq", " ", "oblique"}]}], "}"}]}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"PointLegend", "[", "ulist", "]"}], ",", "Bottom"}], 
               "]"}], ",", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"LineLegend", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Normal", ",", "Dashed"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<healthy juv\>\"", ",", "\"\<stressed juv\>\""}], 
                   "}"}]}], "]"}], ",", "Top"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "subs"}], ",", " ", 
           RowBox[{"ImageSize", "\[Rule]", "440"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"p1", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"j", "\[NotEqual]", "1"}], ",", "p1", ",", "plotcode"}], 
          "]"}]}], ";", "\n", "       ", 
        RowBox[{"p2", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"j", "\[NotEqual]", "2"}], ",", "p2", ",", "plotcode"}], 
          "]"}]}], ";", "\n", "       ", 
        RowBox[{"p3", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"j", "\[NotEqual]", "3"}], ",", "p3", ",", "plotcode"}], 
          "]"}]}], ";", "\n", "       ", 
        RowBox[{"p4", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"j", "\[NotEqual]", "4"}], ",", "p4", ",", "plotcode"}], 
          "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "}"}]}], "]"}], ";"}], "              ", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}], "}"}], " ", 
    "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7730566274137297`*^9, 3.773056683170569*^9}, {
   3.7730567672475452`*^9, 3.773056858688188*^9}, {3.77305691948628*^9, 
   3.773056940962776*^9}, {3.773057278005589*^9, 3.77305728311971*^9}, {
   3.773120666046565*^9, 3.773120666598049*^9}, 3.773120712893669*^9, {
   3.773121030914275*^9, 3.7731210715614433`*^9}, 3.77312121064639*^9, {
   3.773121582799996*^9, 3.773121584841608*^9}, {3.773122995245453*^9, 
   3.773123001764228*^9}, {3.773123040678013*^9, 3.7731230462376337`*^9}, {
   3.773123256628949*^9, 3.773123259580885*^9}, {3.7731234067135878`*^9, 
   3.773123408546856*^9}, {3.7731237021484737`*^9, 3.773123710594989*^9}, {
   3.773124027366087*^9, 3.773124042132649*^9}, {3.77312446420382*^9, 
   3.773124465172329*^9}, {3.77312538158503*^9, 3.773125403750918*^9}, 
   3.7731255911275177`*^9, 3.773137981818544*^9, {3.7731380209158583`*^9, 
   3.773138029929637*^9}, {3.773138083491914*^9, 3.773138091308333*^9}, 
   3.773140524130018*^9, 
   3.7733891202336483`*^9},ExpressionUUID->"4e12e417-3f00-4ee8-8786-\
54b84b52cfc9"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
            
            LineBox[CompressedData["
1:eJw913lYjH37x/EpSyFkL2v2JITcsvaRUEmiJFSGVilN+17TPu2zZy9bQhJC
tpRQCEXInj0JhUiWfvMcv/mezz/P8bqv+c55ndd7ruPIyI0+K11VORzOky4c
zv/+////12xcfnnh8HZPsbHyP2CSQHf9sWhmdewY5esglzJr4tPD+PbCQ8z9
UVncukjlErMW+icdCUiuZR6K8N4P3i1tZNZB2srD45dyJEqPwqHU5k/JA5nH
YHvK5qE9JjGPw5dboy/XLGTWhZ7J3sEv1zLroYvf+Iy5fsz6SLNpOv4+mXky
/paGmr3bw2yAxfqjTeaeY56KjSsKL366yzwN/LPo1vGReTq0n/rtC+giVdoQ
qkUP59qMYJ4Bu4pzZ7NnMf+H5LZFhuttmWdCq6d6h9yH2Qi/898ctExlnoVL
lwJ+Jxxkng3jgOfq5leY52DwT/1xO18yz8W0JwatCR3M8xCQ9M2j53CZ0vNR
l3X95qx5zMZIHNT3Wl9HZkCt/IRrTqTSfKD3bJdxH3ez6wuQa/Cm/Xcpu74A
AevHr376ml03gfaCQ3PkanLldRNkn/mzwFBfac5ChOVcO1y2gl1fiFqnld4W
Iey6KRxOtJk9yWbXTfFFc0ddTCW7vggHtsfkWX5l1xdhSOc2q6XDspTXFyNG
e5Agw1xp/mKUS+et0g1m15dAv6JWRz+XXV8CD+6w9wUP2HUzPO/d4FKhvlV5
3QwPv1gty5irNMccLZmXk4b7sevmeHOvR4jsELtugV8flqzs95pdV3iLS+T5
4duU15fi0WRztVMOSvOXYu/m4skTd7HrlqjO6KNuVc+uW+Lj2LyFNuO2K68v
g6OZ3/BgH6X5yyBce0jw9zy7bgXzvC+i6Ro7lNcVnjnJwJerNGc5hv72jxpy
ll1fjk89J+06OHCn8ro12k9d27I7VGlYo0XjetKeV0rzrbEspM9935W7/t+l
1ng/5ODltutKc1agvdfY8assdivPr8CoxXt6fa5Vmr8CYQ8cemduzlaeXwHj
75P8LdRzlOdXwrX+YvUOZ6WxErk2E1zVbijNX4kTr7XruxnvUZ5fCff+D1bx
KpXm2GBy3/IsZ9+9yvM2eHD6rucgu33K8zbIDXlrOrz/AeV5G5g7nr7tOT1X
ed4WCzM6lX/mHVSet0XJR46/b02e8rwtBvx6N6lk7WHleVsYzxF8/tAvX3l+
FQa85ouPdSlQnl+FnFMxqYHDCpXnVyHzZ3lrNve48vwq3MjaWfW39oTyvB2+
eGmdy00oUp63g05YqtVv/mnleTss6jlS5e6jYuV5O1xPf6U+5NB55fnVWHZ4
+o2xmpeU51djSG5Yt8e7ypTnV8OmR+2H1ulXlOdXw46zZb2zX4XyvD3m+MgP
HE67qTxvj24T07sv4lYrz9vj0SBp+LTce8rz9nBMr1DNOfxQeX4NVLvk9OM6
PFWeX4MxZScnJBTXK8+vgVpm6nPdma+V59dAmzsyI9TnrfL8Wuzus7QjbOF7
5fm1WLswbObFkw3K82tR1+X32P3VH5Tn12LPyIJdm442Ks+vQ8EQzW+eaz8q
z6/Djtnftvd8ozR/Haof1nyzsmlSnl+HV8b6q/YUKM1xwEH7rPd57UrDAc7d
HMOuzf6kPO+ApzffWob4Kl3qgA+VxZt35ijNccQVj7uTd19XGo7YEC7JlX1i
5x3RZ7in0LHnZ+V5R3xY1uPl3glKc5ygsdO98YuJ0nBC4JLDQUVrlOY7QW1o
eunSLey8E+a96/GeE8POr8eQTsvN+4rZ+fUoX3l8YNEedn49fnbyN+tbyM6v
x6rzDhNXXmTnuWgStUkl15XW4eLLfXFdSy37Pi5k2xpT4l8ozeViS1XBCO4H
9v1cjE8cs0n+VekcLpZcWM6Z+ZvN40LzfNj25Z2+/L/ruSguebq8qbvSnA1w
5Vs8GNRXaZ0NyDo868QTLaWxAVNj3qzHCKW5G6D16nfgsrFK8zfgr5pGebeJ
SudswPrWKLdwA6VLN2CDWfvbgzPY/A0IFJ4wls5m8zci9dPUdlNjNn8jZo/6
NbVkIZu/Ee3a1gc6mbH5G5EwL61Ey5LN34jFvdR2cazZ/I1IqW0dWmLD5m9E
0oKlz21Ws/kb8d7lqsWVtWy+Mya1me7o48TmO2OWMPHpvA1svjP2SlZ+s3Bh
853BvTQjZ7Y7m++MI1tqYnt5svnOeHesemilF5vvjIsO6bUePmy+MybWb/nZ
4svmu6C4S48LLgFsvgu8NTVNLwex+S6wc/m3q0com++Ct/POXFsQzua7oBfe
HnaNZPNdUKC+UDckms13QVNQea+wGDbfBX2e7R7pFcfmu+LA9yVayxPYfFd0
Hbg0e3QSm++K/o3aaxoFbL4rTqVefb4vhc13xeIHeaXWaWy+K6K9Oie1pLP5
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

             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]], 
            LineBox[CompressedData["
1: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
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
            LineBox[CompressedData["
1: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
9kwiu8Vi5SXbfB+yKBaNQ5WpUrI4FvN7eE9YQ5bGorDq4fODZEUsjgb09ykl
62Phmx997j9yQSxeOP1o0vgq7R+LkZNv9fmTXBqLVguGDBxOroiFy0pHs+nk
qli80g16EEAWxCEksVtyMtk0DsebOrbVky3jEOp+QnqELIzDPssj12+QEYe0
HfMbvyG7xSHj8O0uja/R/nFw1I5r35UsjkN+p9sfhpGlcdi6acdeV7IiDp5d
3rj7kfVx2Pnx5H0puSAOwT2dx68iF8Xh8/B8zV5yaRwsHFqfv0CuiMPpO5qH
T8hVcXjTTVT2jSyQoult9eE2pXU2lqLVwGlRfcimUhz6cvwvB7K5FArZ5wIP
sqUUFkcs/hKTraS402B6ZApZKIWTR+GhdWQ7KaocAsoOkiGFqDTz8WWysxQN
Noy8/JTsJoXpQ/W672QPKUKHH5jZ5jq9XymUX4586k32k6JtxWnJaLJYih0u
lf+6kyVSXPxj4pClZKkUU0/99o8ny6Xo27t3ykqyQopXt+6l7SLnSDH7unXY
WbLe8Ly7ncffI+dJsUZm++sduUAK2ZcOaxvdqHOhFN37/+7emVwkxbBbTRWD
yCVSDPzL+ZkTudTwfm7c+XMOuUwK/HlxbCC5Qoq0i7aTZeRKw/N1HDpmFblK
CpuLd8x3k2ukaGdlXX6GLIjH5M+zEu+SjeMREzrf7A3ZNB6zfWZlCm5S//GI
bjjjnRnZMh4Wjf1t+5Ct4rF/1Wa/UWRhPFb7mSdMJdvFQ5N9K9GHjHiM31C5
bAXZOR7rNi1CJtktHtat3H/oyR7xiCo5v+4AWRSPjlaX+5aQ/eLx5N2y9ffJ
4ng0m3ik9h1ZEg/jS0fGGt2i/uOhDowMak+Wx0OsbZxqRVYY8n96p44k58Tj
7T8bgqeQ9fG4FljstJCcF4/N1279DiEXxMOxQ/mmZHJhPP4rKReuIhfFQ3rq
wdad5JJ4FHd73vgkuTQe3t41k0vJZfH4Pq5z3L/kinh8uzR51SdypaGfMdrc
Jrep/3g06ftRbk6uiYflNJ/5fcmCBLw9/M7CnmycAJ0ys3gy2TQBBRMwYwHZ
PAFxQY2uicmWCeh3/Y51AtkqAXdd98eoycIEbP2m2beZbJeA/G9hpQfJSMA5
revdf8jOCZjft/P5u2S3BPTudWV9JdkjAYcaL1j4jSxKQHvXcy2a36H+EzAu
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
nzmbp6JPQ1vLtlz/qXhR1nMiZ6tUPNaWijkLU7FqiMNKznapODkv/jhnpCI5
dHUFZ+dUVGZpG7bj+k9FWXRUT84eqZh/wX08Z1Eqdh7vs5izXyr+mG+UxFmc
CpvwFxs5S1Lhq3h4irM0FSY/393nLE+Fxc1uXzkrUvH2Q3QbM67/VNw3atqP
sz4V1ZH/OHLOM+yTe3ou54JU7Jb8CuZcmIprVQmpnItS0brQfT3nklTsd19x
gHNpKpK6fSnhXJaKHq6lDzhXpGLCc5MqzpWpaFZcYNSe69/w/VuKzDjXpOKs
hUMvzoI0LF4zzJazcRpGLd8ygbNpGrRFylmczdNwJ/f3Ys6WaYh8+zGMs1Ua
2sYGyjgL02BTK1FxtkvDwpq2es5Iw9cX2MXZOQ0/LZsc5eyWhobPff7h7JGG
L7MW3eAsSsOjpAaPOPulYbeX4yvO4jRUX+z3ibMkDetkJ35xlqZhy5gfxh24
/tNwVPeyLWdFGj60TrLgnJMGrz/u9OSsT0PxHw8Hcs5LQ9N5ubacC9LwzqwD
OBemQbXMxZlzURp+xTi4cS5JwyaXr7M4l6bh5bXABZzL0rD1Xf5izhWGz0sL
lnGuTIORa3Qo56o0/GPWNopzTRoGxYXEcxakY+TAjSmcjdPx6cD6TM6m6fi6
apmas3k6TsxquYqzZToazpOu42yVjn4tSzZxFqZDVfQ8j7NdOiqLy3dxRjoS
5uXt4+ycjn1nXQ9zdktHq943jnH2SMe5XcIizqJ0vAgNKObsl45tiuQSzuJ0
5JtIL3OWpMP1zexSztJ03Ovb/hbffzquHdt3l+8/HV3Th9zn+0+HX0zOI77/
dNiI/33C95+OPiPaPuf7T8fEnVaVfP/p6JLZ6zXffzpebTR5x/dveD/b71fx
/acjfLammu8/HXaLbL/w/afDPeRcDd9/OnKEY37w/adDb7/lJ99/Ohrb1Pzm
+89A6m47o45c/xkQjvFtxNk0A+GhsiaczTMwv0xhzNkyA7urMppztsrA79Er
TDgLM/AvZrbibJeBZuIeppyRgRljn7Xh7JyBpn117Ti7ZeCKdkR7zh4ZqKy6
3oGzKANOmzzNOftlQNHmfifO4gwsXDu5C2dJBkZsOWDBWZqBIzLTrpzlGVin
WfgnZ0UGXvbNs+Sck4FXq59146w3vI+hHf/inJeBBGf04FyQge6Wop6cCzOw
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
eayjtfBjLdUihLVMixjWci2SWWcYfh5YK7TIYa3RYjPrHC3yWedqsZ+1Xouj
rDdrcZp1nhYlrPO1uMq6QIs7rA9o8ZB1oRb/sj6uxUvWRVq8Z12sxSfWJVrU
sL6sRS3rUkO/2ez918KYdZmhb9YPtDBjXaFFJ9bPtPiDdaUW3Vm/0aIX6yot
+rP+pMUg1jVa2LCu1WIEa4EOo1g30mEsa2MdnFib6DCetakOf7M208GVtbkO
01lb6DCLtaUOs1n30GEuaysdRKz767CQtVAHb9Y2OviwttNhCWt7HZaxhg6B
rJ10CGLtrEMYaxcdIli76RDJ2l2HKNYeOsSw9tQhlrVIh3jW3jpIWfvpIGMd
oEMya7EOctah9SzRIY11tA4ZrKU6ZLKW6ZDFWq5DNusMHVSsFTpoWGvqOaee
c3VYyVqvQw7rzTqsZp2nwxrW+Trksi7QYS3rAzroWRfqsJ718Xou0mET62Id
NrAu0WEj68v1zkvr+Va9/LJ68w/q5VXUO39Wz5X1/EaHzf9z/+t936d65zX1
zmt12Po/93/l/7rRSmz7n/tfzyYrkfc/97/evFk9m9ebt6hny5XY/j/3fyV2
/M/9r3fev965sJ5t6tmunu1XYuf/3P965071zp3rnbvUs1s9u9d7Xo965571
vl9Uz971Pu9XzwH89/8/y08/Rg==
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961]], 
            LineBox[CompressedData["
1:eJxd13lYzN3/P/CxhxBCCCFkiRBC8URRhEoIYZCEYtKqdaqppqaafcqerUJI
QvYQskdFsg1C1jsi2b/zuz5z3udcP/+4HvfpzHNe7+f75brrvXy928rGPB7v
UTMe7//9/b8/tRMvXZzS8+caxUT9f8DTpi8qgu4TG6Bb0Xn3uqlKvY1g1s0g
8cpZYmOEjDwScMFWpbcJYs7sGzDiCrEpbozu6/veU623GVJFu3JXNdXo3QdT
w3v2N7pAbI4c016bT2Sk690fpsXLHdcqM/S2wLAJ9n/fntmk9yC8uhAYFztg
i95DcCS/w0W/L1v1Hooeue0zjizcobcVTsd8/jAhYqfew7HH9XJMmPNevUeg
tbfz5Burs/QeiWr5/eI+e7L1tsY6h0uDn//L0XsUGsn7vnKI3a/3aJRsHHA0
a3iu3mOwWnNg9/FOh/S2gUVxfNvP3fP0HovU39vWv3Q9ovc4zHgdkVhzNF/v
8fiTMCC56YwCvW3BM3MUyfoc19sOpccbr3rrWKj3BDw4LL0wu/SU3hPh0MCf
+/vOWb2Bs9JGDYfzi/5nIfC8RcTgI1UX9eeTsN7U3koVfFl/PgmDDnlVH8gs
0Z9PRkXsaLu6wJv688l4aPql/EV8qf58CoI7+XVuY1OmP58Ci4knXUyc7uvP
7fEh9OPssO0P9ef2iP7xaWOq4RP9uQOqhvynfmGl1Z87IHPrZbvXp57rz6fi
Z90VxdiuL/XnU9F7wv6/y5yq9efTED9QfH3ZrFf682mo13pU7LJ8rT93RHrR
uEWNP+otdITXoep+L+Vv9OdOUJQdcHliVqM/d8K/wBjPk9v05k1H7zkFruLW
b/Xn0xFSd9b0kq/evBmodTnt4HOJnM/AoKgH/Tq1f6c/d8amX9/Qbb7eQmfc
4VW4SjTkfCaKWvNLZ5SS85lolxOWZ9Lsvf58FnhnJ/2QjtJbOAsNV5oVjF5O
zmdD5CNUR0rI+Wy4tRPnFh8h5y6wdN4we0mF3nBBQLYsQF5Pft4FyUl3pFs6
ffifi1yQ6H2ob/4IvXmu2Nml5luTWXrDFf22FnQ9tUpvoStufhl5pSGa3HdF
Rf/mLbUact8NyjZ9F6XkkvtumGua0KPLBXLfDXZnuzdOLyf33dArItTL7A25
Pwdh0mHqyw3k/hxIq9p3S2/5UX9/DlYeHfZqd1e9i+agV0kv0Q8LvXnuuLfw
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
3Q==
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 
              0.49019607843137253`]], 
            LineBox[CompressedData["
1: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
p452SUW9/6Xfn1T+P1bs6sM=
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJw93HlYjO37BvAIRSF79iyRPUsk4bSHUISEDNpo0aq9pn3aZy9bktCLSIVQ
FKUsJYlCMWQpWyHJ/pvf8b2v5/3H8Tlu98ycz/WcM8/tj3fEjj1rbTuqqKg8
7ayi8v9//u+/lvn/+1PB/lSB6tz0D/+0nzOro+bblx4ZU58xayFg6/yXJ1bU
M/eFqsWVkkybOmZtdD3yZaIN/ynzEFy59KDVJeUJsw6upO9rc7j2mHkktl+8
9fFFQy3zaFg19ivaokkeAy3NulmrZ9cw68Fr79XhQxwfMY/HynG/ng9Je8g8
EXdPjPBIelbNPBmvTJ5duaFD1sdOx7dj7jg8YJ4KNd3TMbcuVDFPg+b3/gYV
3cjTwZtkqV1vc595BnbL/qm3FFcyG0C1eW+H9vHkmagb/qEof9I95ln4fGS+
sWavCmZD1HRrrtj37y7zbDQ7bd+s/eMOsxHUk5+Nn/HnNvMcLPmcnyLVIBtj
qMaIzPpRt5jn4pPn7QnnlpQxzwO/X8L7s66lzPPRN+PFCb/0m8zA0BlrKrIV
Jf8zH9gw6umIX6OZVRbg4BzHee2uxWx9AVZsGqpiXnyDrS/EnwlLqs4MY+Yv
xBarkKaC4OtsfREa+nd1mvS2iK0vQt0hldizFswqi5HRbJb4o7SQrS9GsrZ+
3Q0wqyzB/Ul+VZLAa2x9CX4VHXCUhl1l60uxes9hZ01JAVtfivCYG/zwU/ls
fRm2Z86vjbl7ha0vQ+9Ld39kf7vM1k3wz2xHiGwMM98Ei3uNeXnP+hJbX47u
ast1O6XksfXlED1df6K24SJbX4GFF+dUf5/CzF+B+l6TXvYMvcDWVyJ72IzY
qsfn2fpKuC3QLWmdyaxiCosxG70n78tl66Yo9jKaZKTCrLIKI7Oji6sdc9j6
KoSUL+9X8DSbra/G+J1jRDlrmPmr8WFg0SPf0nNsfQ1qvkyaUbWQmb8GiXOr
egUXZbF1Mxyyujdn4SJmmOFvxZ22i4ln2d83Q8qS9dV9Us78z4VmOKl2M6/b
uUy23xzb6x9bdCw7zfabw3/Wnm+mL0+x/ea41rD+zvB/J9l+c4z39vANG8qs
shbD9+hqGRn/x/avRY75z8bETRls/1rk+Trm/HE/wfavRda5yFtrw4+z/etw
dcvpQTYRx9j+dRg05Vv/Fl46278Ogq5DizsfTGP71+FU0s4XUZeYVSwQfs12
9o4aZlhAMH9QX/k3Zr4FThUuuDC671G23wLvivtu6zmdWWU9Vk9bvmTjWmas
R91tI8kfN2b+ehiNa96uKqb963HggyR7Vzbt3wDH159tpz6g/Rvwom3Y1M2t
tH8DFIK9CW/7sTyFSs+O++/RLGaVjeD9dVysZ8WMjVibNV76NIDyb8QL1Ybe
zYdp/0bE/shYyrtB+y0xZMKPkAlvab8lipe7n12pwa4n3xLZFq6Wl6cwF1pi
VxVWulowq2zCG5d+Afa+dP03wcXZISglhfZvwvGnl92HFNP+TRiz0bfrlyba
bwWfNeMmGmixecIKZs8GLPo5k5lvhb373GFmzVxoBT9fcwEiaf6b8XjA6v2V
Z2j/ZlwtHXZVtZb2b8YuS6leXQe6fzaj8Pj2Y5snMqtsQcr2kpawjczYgqqf
MQ0bwpj5W7BswsXIR2dp/xaMk1QN6lxP+7di9q/pA193Y/crtuL9/v3TfGfT
/atcD7xpWuzAXLgVAwe+DL6VzKxiDZeWYX3jbtF+a0gtM4N7/qL91mh7N8h2
4yTWj0JrlCT0E9vzmFW2oWBB7N9FUurPNqg0DLnbUsbM34Zhi58scf9L+7dh
1aF5irszqH88PM+wnd3ZiVmHh2P17gN10pnBwyFrXY+R9cw8HmQzpTa9BlC/
eZi1rqfhF3PmVB5O7RlpezueuZAH4dWLosO3mRU8rPjPUuKtzr4vVLZjq1Os
q+UyZp3tOJ9nusMkir5PtiP5QfrDVfT9wtuOwG8bnfd0Y98//O0Y8Pqcau4q
5tTtCOrgfHqkmLlwOwYPO3/heg2zYjsiCpaePTCMfZ+p7IAP79SO83bMOjvg
ViR5PiCLGTvwvN3M985PZt4OBB1zvl27lL4fd8B4vcNFEylz6g6Mjha6jW5g
LtwBg7eqBZcHsu9XxQ6ELfSsSltI37870aHLioQ1Tsw6OxHRTzbtppy+j3fi
YW0/fc3rzLydaJimqzf2EzN/J6bPz/00ZDD7fk/diV2dbeO+mjAX7sRiuwKc
82ZW7IQo2St8ywn6fbDBiCMNGr9rmHVsMH9pxC15V/Z7AhvI+p1smW7MzLNB
3vj57U/20O+NDXYFXj0kSWdOtYFV8qJG2yfMhTYYmFs6waoX+/1S2IC/OkrT
dzmzii36eEpC74Qy69giREtUb1XADFv0uJJRpv+DmWeLUfL/Vm+cSb+Xtuj2
e/uzWk/mVFtU1+ivKcxlLrRFr7NVr7XbmBW2iBQ4b/pkSL+/dijv9LzWNJBZ
xw5GY820Ftxghh0sfHpPqe3Gfs95duiw8fbH4RbMfDvY+b6TjjnMnGqHuDvh
qr/eMxfa4XVnrwunjdjzgcIO/qFN91bG0vODPdZ0XDO8qZ5Zxx7q89LHyaex
5w3YY+tio2m20cw8e+jdfbNo10t6HrGH+7VMowtz2fNKqj0yrN+W8w4wF9qj
h3Pj/qBfzAp7GL6Yqj/Gmp5/HHBPNGngnhvMOg7IXhb4zm0Ce16CA1IDX6w2
kTPzHLD3RX7f7p3Y8xXfAfbWs43rPJlTHWDRo0+XB43MhQ6Ie62pqsVjz2cK
B1wy7D065wmzyi6sslK7U2/Jnud0dmGAx4q67CfM2IUL1q8qN/DY8x9vF3zP
2N9qbqLnwV14+Cu/smoOe15M3YXhSSod74czF+5C95/f5qtXMit2Yem04tWJ
Q+n5czfeekz8GejMrLMbw9sydD5eY8ZudPuWfbWtL3ue5e1GidXwn+edmPm7
cetZ4KRlpcypu4FRO76WjmbPw4W7Md/Rd+rGCGbFboTXLx/Vr4menx2xucrN
ZpQZe77WcYTIfObP9MvMcES1aOyWq3rseZzniH1vk/1l++l53RFjuh6+Za7F
nudTHbG/Ys6cITHMhY4YIjRfOVydPf8rHPGupelHZAydB5zQtti0jN+LnRd0
nOBau/rcnEPMcELkWuOhjZPY+YKn9A5J5cUbzHwneI57UF1vzc4jqU44ecvd
KuEfc6ETvK/1kPw9xs4zCicEPr8RarOWzjvOONT5cGlbp3L2/s5Ir/65/kMB
M5zR/uKAXkAgOy/xnHGi56aGukXsPMV3xvNXoulp6uy8leoM/o7xp766Mxc6
4+scncW/FcwKZ6x/lWZQvZbOby74NNNuvLiMWccFmeNDnq9YyM57cIGr56rL
WoXMPBf8WXhu/dcF7LzId0HXbLHav1LmVBdcKtq3zXgtO18WuqAxszb1rIJZ
4YLP29wMLT3ofLoHAR8fTtfvxs6vOnuwP/bupQnHmLEHpQZvog0Xs/Mubw/u
NIki575l5u/Bm+NWqwclsPNx6h4cHjyi6bghO08X7oFnwKyEnDfMij3QWzlK
oJ5M529XqMhsjOxM2flcyxU7h7aZRqiy87uOK3bPWqwyoIBZ3xWmHkNOlfiw
8z5ckVaSusNgJvv3ADNXPGg7drvTN2aeK7Y4TdKoyGX/fuDqir+8318kRuzf
F/iu6F7xwP3BfmahK37ZL1jT/JM5Vfl6Z3oHnLN68T9nuaKueuOVV5eYC11R
kdNn7nrtl/9zpSuM5sUZ3PdiVrji0lxDu3FVzC2uuFv/TjZ1UgPL7wbHJ8e+
FUYya7khPWKTa/YzZh03GD26+urVjFcsvxu2nbFYPieaGW4wazC/cvAps5kb
2uPV/FonvGb53XAgIrdyqh+zqxsqi/Q+L7vJzHfDe+2Koklab1h+N8g2Xj1S
v5E51Q3GL0J01x9iznJDfdP7CqmCudANTjvNrh8e8Zbld4PNwm7+/jxmhfL1
En/zpxxibnHDv1u7dUpqmFXcEbRutu4yrUaW3x2RX7ftL1rKrOOOI8+1Exb4
M+u746T58KfVmcxwx/bmEd+jnzGbuWNCb/ube7o3sfzuUHkY6ikzYnZ1R93v
t+bd7Jj57tjvpHmhPpFZ6I7LnyteD8tjTnVH+9uSP3XPmLPccT9hsGJMp3cs
vzsuTjqkq6HHXOmOBnl6r+QVzAp3yA9FCZ46Mre4QzJtnnpDLLOKB1SPfEu7
cpJZywMvBKt+uZUx63hAtqfDwt6vmfU94NRQOiND5T3L74GTg2YOmz+Y2cwD
UxMCHr2YwczzQN/lj4r3r2J29YDCM/qFhy0z3wN9NLbk7Q1gFnogN3an42kx
c6oHBo8adGFoBnOWB3o+PN5Slc9c6AGD7sv7VFcyV3og0/HJJb1XzAoP9Lu7
eWxtG3OLB+7Zhi9vUv/A8nvCLWxl/o5BzFqeeHrRrnzFBGYdTxSevBh8Yg6z
vic2px5LCFrJDE84F2xze2jFbOaJrFudrc/tYuZ5wvP+edMBPsyunjicEPhT
I5KZ74lbzZM/SCTMQk9sdB/glpPKnOoJ29X7j7lkMmd5ondOptetS8yFnhgX
MudwaQlzpSfWDbHLdbrPrPDEn87ZQ/PrmFs80daj35BLbym/Fzb8eX/b7gvl
98L+xJoRZb8pvxeKy0Pannf5yPJ7Yd8h079ZWszwwmLhu3tzBzGbeeHys5ev
BKOYeV4wiuxwQDqR2dULpR65BjsNmPlekB7b8LxtLrNQ+fqjdp80X8qc6oUB
p4rEXquZs7wgqN8fZLOBudALGVf/m69jzVypfL1F/aUnbZkVXrh42mlsZ2fm
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
inDT9eR2CcqLkmQbyL8lOPqzvm4jWUWKL/2sRm4id5Li3/4edlZkdSkmdv97
YjNZU4pFH8Y3biFrSRGQmzTGmtxXiupnS3du4/ovxTqFUQqP678UgvF7a7Zz
/Zdi/MRfPXZy/Zeiy5q7i224/ktx8+d7H1uu/1J0lGw5Zcf1X4rP3jp19lz/
pQjqYqSxi+u/FMHJpwx3c/2XIiLM28aR678UewalJjhx/Zfi/emxF525/ksx
OUrrmQvXfym6ftmi6sr1XwqPaT3HunH9l2Jr7Ljl7lz/pfCec2aXB9d/Ka4F
HRZ4cv2X4kH8v2NeXP+lcEqpLNrL9V+Kgy/71nlz/Zcqz98VrT5c/6XYdu2f
hh/Xfymunz45wp/rvxRPve8bBHD9V+ZftNckkOu/FBumHNgUxPVfChXLhbuC
uf5L0b3G2ZvP9V+K5uvDw0O4/ktxcYpVYijXfyluTRq+L4zrvxSFd1yPhHP9
l2JJH/OMCK7/UuRoXs+M5Povxe6CknNRXP+lKBpjnSvg+q+8f0ziz0dz/Zei
0/D152O4/ksxKf1iTizXfymMKy5kxXH9V85PZHE6nuu/Mk+9+HgC138pzI56
HE7k+i9Fr/J2uZDrvxR1i0bHi7j+S9Hy8XuImOu/cv8ZLy8J138pttsdtpdy
/Zfiz9e9ljKu/1K8mfZ3mZzrvxQXfs2cmcT1X4reo0eNSub6L8U0fnGPfVz/
pUhSDPnBuVXZ5z6TX+7n+i9Fxesftw5w/ZcifHho1kGu/zKURpXJDnH9l+H1
ywrfFK7/Mqz9It9ymOu/DHO8Rs5L5fovwzo9j2FHuP7L0PlmzB/O2jKc7ez4
NI3rvwyVB/vlHeX6L8P9uXGSdK7/MuTvq3Q+xvVfBkvrV0uPc/2X4eGsW8NO
cP2XQVjB/8Z5hgy9b2veyeD6L0NGhcvh/7j+y1AQlOF+kuu/DJv9riw+xfVf
BpVt//U7zfVfhtOlHq85m8rQtGpIbibXfxl2CNJDznD9l6FEo8fqs1z/ZRi2
22pgFtd/GfynxzZw5smQ9u3I6XNc/2VwME71zOb6L4ORKGpODtd/Gf75beqQ
y/Vfef2CBtzk7CnDQJ0b0ee5/suw/vlW0wtc/2WYMaep+0Wu/zK4ZtlVcA5X
zievJj6P678MgeVzTS9x/Zchy2Z/18tc/2W4+flTCWepDAfeGodc4fovQ/CF
iDn5XP9laLhzu5VzqgxfJd0zC7j+y1Dms8bmKtd/GTq9FA26xvVfhncGj+5x
zpIhsXZoeCHXfxl+Ttg9q4jrvwzmwvwmzvkyeO/sf+A6138ZDDv6rrzB9V+G
Izdf/+RcJoNM3fq/Yq7/Miwe3rChhOu/DAbb9qre5PovQ9CggWc518pwLu3u
plKu/zLMXypWLeP6L4PZWsfTnF8pP1/vTRa3uP4r+1e55RfnDzI8qvI+cpvr
v+z///91S+9w/ZfhRH77O87tMqwcvz3hLtd/GU41vdYv5/ovx4DZgirOneQ4
vX65RwXXfzm++43vc4/rv9IvJmZz1pLj53Vzs0qu/3J4rtv/kbO2HL3L1GLu
c/2X4/raA7pVXP/lMNPdUMh5tBzrXWZbPeD6L4f95qVfOU+UY8TAoNhqrv9y
nK98MfIh1385TE+5X+JsKEfHyqlrHnH9l2PXTp1XnCHH0+j5PjVc/+WItxVq
1HL9l6O6f98UzqZy5fW9M+Ux1385hnnmFXK2kEN301OzJ1z/5fgdYaDgvEWZ
p0+Zy1Ou/3JEakt/c7aRQ3Jyf3Qd13858uvr+tVz/ZdDXrz5CGdXORa7ak98
xvVfDtWWPhc4+8jxwHzN/Odc/+VwSLtTypkvR7+P0WsUXP/lqDGKfcRZIMd4
aeWWF1z/5Qj+Z/WSs1COotAJ9i+5/svRqrPoPedkOfrWp7k0cP2XI+jiys+c
U5X7z87zeMX1Xw4UB7RyzpDj4OcuXq+5/iuv57RnrZyz5Dgequr5huu/HIMf
e3/hnCfH9EnGrm+5/stxysv8I+dCOZyO5+1q5PqvvP7Z7q85l8mxMI7Pa+L6
L4f3qIYnnCvlUNgfsHjH9V+Oh0tPlnOulcM3U2vpe67/cthE3ivgrJBjSv7b
GR+4/svxb6bVKc6Nytd/NnbER67/ctzbZy7n3CLHbNPabp+4/stR9zg/iHO7
HP11Vb5w/i1HQM+jNs1c/5Owwuf4I86dkqA3T8Okhet/Ej7Pq8rjrKn0ht96
n7n+J+E3LyaZc98kPJoZqPaF638SFp576MV5SBImnZA2cNZJgl3zZbOvXP+T
kG29vICzXhJayjCulet/Erp1SJNy1k+CS63zP84zktBD59iub1z/k3DvuMkD
zsZJCDHaZNzG9T8J2zNq0jkvTsKp/GLN71z/kyBbMMKTs2kShnX49ISzWRLe
3piwoJ3rfxJszZ8e52yZhD97/mj84PqfhN6vxa6ceUk463mwmrNNEva/GGT4
k+t/EnZ86nGAs1MS4jb7/vl//x/7BJQS
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
uz3nAi2sOnFepYVfF86FWhR147xRC70t5yIt1vTkvF2L7N6ci7WY58B5n+nz
duRcYrp/BnA+Yrq/BnE2aDHBmfNpLZ4O43xei8ARnC9r8WUU5zLT5zuW8y0t
TrlwLteiy0TOD7Vwn8zZqMWqqZyfm+7HaZyrtLCfyfmN6Xpnca7Wwsud82ct
Fs7lXKMFPDjXatF7AWeRDh0knM10eOLJ2VyHTG/OFjoMX8TZUodKX86tdAj1
52ylg0UAZ2sdCpZwFuvgsJSzjQ67gjjb6uAs5Wynw61gzvY6jA7l7KjDpjDO
Tjp8C+fsrMPcSM7QYU0U59E6PI3m7GK6/ljOk3QYFcfZVYeAeM4zdUhN4Oyu
w45Ezh46XJBxluggSubso0NjOWd/HaxSOAfq0DaVs1SHVmmcw3QwS+ccpUM9
BT//OtTJ4Odfh4+8U3S4mcnPv6mvLH7+dYjN5udfB9ccfv5Nfeby869DFe9V
Oqjz+PnXwVfJz78Og1T8/OvwjPd2HVaq+fnXYYyGn38d3vEu0SFfy8+/DiN1
/PzrYOB9WgcPPT//OtTP5+dfBw3vMh3EBfz8m/rmXa6Dy3J+/nW4zduog9sK
fv51OMu7ypRvJT//OpziXa1D/1X8/Ouwl3eNDiNW8/Ovwx7eIj26ruHnXw8t
b3M9zNby869HBG9LPe7xbqXHhEJ+/vXYzttaD8t1/Pzr4cPbRo/zvG31+Hs9
P/965PC21+Mpb0c9mmzg518PT97OeuznDT0ab+TnX4/+vF30iOU9SY+TvF31
+MF7ph79NvHzr8d83h56KHhL9LjK20cP8838/OsB3oF6RPKWmvbzDtOjhneU
HsP/4edfjxTeMj128k4x9clboUeLIn7+9ZjDW6lHGG+tHqW8C/T4zHuVHoO3
8POvRxLvjXoc5l2kx23e2/Wos5Wffz2ceO/Tw5t3iel+4X1Ej4O8DXrc4n1a
jw+8z+vRfhs//3oM4F2mh5T3LT2yeZfrcYD3w/+xUY93vJ/r8ZN3lR5W2/n5
1+Mv3tV6jOL9+X9co0cc71o9/uEtyscp3mb/Y/N8XOdtkY/HvC3z8YN3q3z8
sYOf/3xY8bbORz/e4v+xTT668bbNx1TedvlYwNv+f+z4P3/vlI9A3s750PNG
PvbyHp2PR7xd8vGd96R82Ozk5/9/1mfmozW/7v4/9vif/ZJ8OPD2ycdw3v75
8OAdyPz/AEQ0eik=
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
Nb3wLJa/HvX5jrIuuSx/PeZ82fj06BmWvx4bF3n2XHOV5Tvj74yhNroVLN8Z
fYJCsh8/YvnOOKaMHH70Nct3Vv1+HPZN+o3lO+NVtxe9wzXllO+M9IKlhcHt
yUXOaNk6uz5aj1zrjCzHR2fSB5E1XGDzcMTcC2PIBi44d/nvkS9TyHBBicuH
VsZzyPYuKNt73SliKVnogoYMZd3jtSzfBR2WxWfM9mD5Lhgn6HLgYhDLd0FO
yd0Bc0Qs3xUi44MDa+Us3xVaA/ZfjdrJ8l3ht7zHQJPDLN8V3fcFLvt1huW7
QiYRB924xvJdsbH7wpycOyzfFVZrPmpue8ryXTEj9MHWLR9Yvhsah52T7PvN
8t3wJzyy2RVtBeW7Qf/qwtafu5Ht3VA1IOXiqAFkoRs6bn46J8iInOmGx51H
n78/hVzkhssJO0zN55Jr3TAoKr22yJassQE6QRXF89aTDTZAmTGmy1tvlr8B
vls/PEoLZ/kbsNY/ctayFJa/AXc35W0anMHyNyDsQrBXyxyWvwHrt0/w+pHP
8jfg9F//pJ9XWb47NsX3r2t3l+W741SovXLMc5bvjuWpBy47f2L57vj463JK
7j+W747Bwy7otu6gpHx3GHz+K/TRJxe5o8ph5JtPw8i17jh+ca5f+ESyxkbY
yw/MGmBJNtiI2oR3wvtLydiItspWFtudyPYbseCRxanNPmThRvSunPl7XSTL
34hsU41x66QsfyOczM6LfHey/I3oFDe017Y8lr8J0mlTO905z/I3QWi+TGxQ
xvI3YS+GnRM+Zvmb4HijpOjre5a/Cc2ke88FN7H8TRgTKX6s2z6V8jdB+ffU
rBJ9cu0mZGjn9kseQdbwgCjCTe5sSjbwQM16s2IbKzI8sKhN4wvblWR7Dwx3
ONTd050s9MCM2Q2R24PJmR44UHVy2dNElu+BAUccCidmsHwPuNuerdl3iOUL
4KtoXjf8HFlHAGVFTdOVUnY9AjREOSz1e0I2EuBbWq+eUxrY9Qmg+gPAr6dm
2v9sLUBpempqh85kewGy7x45qDeALBBgrOaJ55ONyUIB+gX4b/C1IIsFGN1u
vvfVpeRMAc5Img8f7ULOE2BVZN3F3ABykQDp6QUbLBPI5QJcEt5Z+jOdXCvA
IOemExcPkxsEOHxLVLC7iKzhiY5jF2zdUUHW8YTodl70sTqygSfiPFKP1H4n
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
vHXlUG65wltfjqNvS3gbyGHfq5T3QDkqhlbwNpTjS497vEfIcedlNW8jOVan
PuJtLIdw2FPeJnKM3VnH21QOwZ9XvCFHjelb3uZyhK77wNtSDk3PT7yt5Ji9
/itva9V+zX/wXiLHtza/eNvKcb7gD++VcvRf9o+3vRyXHmlq8+dfDkdrLd4u
cvjmtuTtLkfOb23eAjl2jGvL20eOm6va8/aX44FPR97BclgEdeItlCPBswvv
KDnMbLvxFsnxcHQP3olylDTq8har7texnrzlcvjY6/NOk6OlRh/e6XLsk/bl
nSnHM91+vHfL8VLan3e2HMM1B/I+KIeu4yDeeXL8KBjM+7gcE1ob8s6Xo7PV
UN6Fqv1EDeNdJEfjseG8L6vOQ/UI3sVy9Ps+kvdNOSpbj+Zdrvp8djXifUeO
qh5jeFfJsbvzWN41chxq8R/vWjk6fFJznWq/d41518sx4ug43u/kWCwaz7tB
1ceyCby/ylFuYMK7UY49z9X8Rw7nzIm8NRSYv2wSby0FgrQn89ZWwPC4mtsp
ELbclLeOAsd/q7mrAs9Tp/DWVQCjp/LWV6DqgpoNFGhYMI33QAVk1Wo2VOD+
avAeoUCPWjUbqa5/1XTexgqI76nZRAE9qxm8TRX4dlbNUMBmhBlvcwXGp6rZ
UoGLf9VspUDXdea8rRWwuqzmJQqE9rfgbavA1RA1r1Rg5j012yugOWKm2vlX
vX+Yml0UCC9Ts7sC7r1nqZ1/BX65qNlHdf1H1eyvQM+fag5WoHKKpdr5V72f
UM1RCrwqUrNIAYd/ak5U4MPk2WrnX4FtfmqWK1T/v1JzmgIJL9WcrsDXXnPU
zr8CxxaoebcC98LVnK3A4qNqPqiA41M156k+Px3mqp1/BfpNVnO+Ap+d1Fyo
wNoUNRcpEHJKzZdV9+OxmosVGK1lpXb+VddrqOZyBQZZqfmOAhs2qblKgX0p
aq5RoC5XzbUKDCxTc50Cm96ruV6Bgjbz1M6/Am2GqLlBgbQZav6qgNkqNTcq
0Hezmv8oMFisZg0lFmarWUuJC+fVrK1E9D01t1Mi5p2adZSo15yvdv6VUHRX
s64Su4epWV+JTlPVbKDEE2s1D1TCYJ2aDZUo9lHzCCU+RavZSAmRUs3GSmTu
VbOJEpNOqtlUiQVX1Awlflaq2VwJ/WdqtlSi7KOarZQY1KRmayW+tV6gdv6V
8O2uZlslEvqreaUSZqPUbK/E9olqdlRip7maXZSYv0DN7krssFOzQIm969Ts
o4T1RjX7K5Hnp+ZgJUrD1CxUYr9IzVFK/CdRs0i1ny1qTlRCuFPNYiXm7Fez
XInLeWpOU6JDvprTleh9Xs2ZSrS4qubdSuTeVHO26vWVaj6oxOpqNecp4fJE
zceVsHih5nzV5+WNmguVcGtQc5ESRd/UfFmJ57/UXKz6fP9T803V/dOyVjv/
qn5bq/mOEl07qLlKCZ/Oaq5RIqe7mmuVKOmp5jolrvRRc70Sx/ur+Z0SQYPV
3KCE4TA1f1UiY6SaG5VoNUbNf1T7N1azRip2T1CzViquTFKzdiquT1Fzu1QU
QM06qUgwU3PXVCyZqWbdVHy3VLN+KlLnqtkgFT3mq3lgKkKs1WyYimeL1Dwi
FZNt1GyUCs9lajZOhdxOzSap2LZCzaapSFmlZqQico2azVOx0kHNlqkwXKdm
q1S8d1SzdSqk69W8JBVTXdRsm4o7rmpemYpVG9Rsn4padzU7psJmk5pdUnHZ
Q83uqRjr+T//HwHHAA4=
             "]]}, {
            Hue[0.5585438199983166, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxN2XlcjN37B/DsWSIkoRh7CGUNxSdrFKIkWkwpLUr7vk37tM9e9uwJyZ59
ZAshW2Wtx5qHh+zZf/N7fc859/380+v9OnPNOdf53Jdnmvp7BC72aqmlpfWw
jZbW///8339N0/73s4H81MK9o3l+r1wfEmvD5fOup38/1BDron+/9q2bWt0h
1sPt/QOc3fxuEhvAdfeBCYO0rxIbYvk7J+9Fxy4SC3Ahdp/OqhkVxAOABX1C
z307QzwIDWsmh7cIOUE8BLpx3USbjh0lNsZlQVp8z7WHiIfjaPLW/es/lBGb
4FTG1K7q2fuIR+G5YJ6FYshuYlOE/G17tW7qDmIztPn6bJmjuoh4DIak9Tvy
uJZ6LBywYcjG99Tj8Oq4Vqmi3Rbi8RBP+zDiQj/qCYhR/eM8wpx6Ih75bqq6
YkdtDrl6Tu0mX+pJSKv1VexOpp6MoftqbzSup56C0t6vPi0/Qm2B0hsntP7c
oLbEqGVh/jcbqafiv1EFXapabiWehrCtV9s3GVIDfU/VFk+YSCwCLtjucFy3
iK5b4d7gFYV6/nTdCoO2zRu1KZ2uT8dGl8hVo7fQ9ekI07coUZ+k6zOwaHrU
IJsauj4DMetL219pouszkVOsdWFcx21kfSbe9qk7lz6YWGsW3nkOX3xoGl2f
hTK5jv6eZXR9NrxGzZe4hdL12Whh82NMRQ5dn4Ouc77bVO+g63Mw6lrYevEZ
um6N9u4dqt7V0HVrXGg5/oH2e7o+F7q+Qx89brudrM/F/Vj3CeF9ibXm4aN/
/aCa8XR9HgpdK+PazafrNjiZdV7SxZOu20Cw1XbY5xi6boshd15mnJDSdVtc
Ep4N9C6m6/Pxaspm079n6Pp81OsEHky7R9cX4FyQh+jPG7q+AJ9vL73j35I+
zwsxrnTq+jsGxKKF+Ns1NmP8aLpuhz/Ndp2Vs4hhh5R+q0M/O9PX2+GNVHF9
SQix2g4ns091PCmm9YuQ2c75++DNtH4RCn3nTS88QusXwSfSOKJ7Fa1fhF5r
F3Rc+5TWL4bbwkD34d9p/WJEvX5+vrLLTlK/GBeenFwdPoRYvRjdTiclmVkS
a9njp0tD3z/2xLDH2B8d7R750Xp7VPzTvsf1JFpvD/Wmux63Cmm9Ayb84z7o
3/203gEplblTDC7Tege8O/kuyeUJrXfAIqniyrEvtH4JPngeeTxcZxepXwK3
ifNSjg4iFi1Baf+N0c4WxOolSD96Naa3A7GWI25/mmjxeTWtd8TZ37/XvE6h
9Y5oOmKr/rGe1jtiWP+L940P0/qlWBtc5R5WReuXYnBo3c/Hz2n9UmxscdR6
1W9avxTt+l59qaNfTOqdsGfogpB7o4jhhBX7M9JOzyEWOSFywa/yS0JitRMG
NGzZ9iGa1i/DzuCOD6fKaf0ybB8v/1S6l9Yvw64zSaLpl2j9MojOjNH7UU/r
l6MmaSJqvtP65TBbHqms7U7+fRYtR8LABdv/jCRWL4dv592/bKzpv9/OCLzb
f5TagxjOOBJpUOkcT+udYbHv2rJ+hbTeGWE6QSEdD9F6FxwcNHuL4Aatd8Gn
mP3hK17Tehd82TU9sbJ1Cal3QXTGk/kuAmItV8zffCq4jwUxXLH5cnJsWydi
kSv2DHL4ZRRG612RnvhPmoeE1rvhfYfokrt7ab0bjm/u8TvsCq13w63YgK4z
X9J6NzTkasVNb7WH1K/ANscht4MExFiBhz59Sm5aEotWIDO/8/oVzsTqFWi5
daRl/2haL8SmTgeH9SggFggRofffjylH6PsJYfTI3lZ1h1goxMtR2ScGfaTv
L8SJnqHPXunu/Z+LhNhgPWZVw2hitRD6S62edV5I3CBEw63wX6FriLXccW+s
zhLdPGKBO44cOyZ9vo8Y7vDU3eb04Tqx0B2ntNMWTXxHLHLHoM47Bx/rTP7/
XuSOquI3icGjidXumPP8aSdvO+IGd7TfczWmMJh+HvCAS89N0W3lxAIP3D7Z
9+SBw8TwQPmLJx/X1RALPeD80KamoplY5AE9g3LD4X1Kyf4e0Bd7Jd6yJFZ7
YN3F/OPHhcQNHhiwLEL8LIVYayX8/6zas3AXsWAlRO8vP/tzlRgrYTtxwJcP
74iFKzFfx2THsO77yf4rYT/lzsmdE4mLVqI8b04rPxdi9UpYObaxDksibliJ
Lf/VO13aSazlifqlndq5VxELPGH/esSQWR+J4QmrpBGXJnUin6eEnljwrntm
RD9ikSdMD3vMvT+GuMgTwwTfwj1mE6s9kV7bIrHbcuIGT5h5dah5HUA/n3mh
+dbn/xqTiAVe+DSn3RRdFTG8MPnc+zHCErq/F+ZXXLG9f4bu74WVgkEt4u7Q
/b3w3522V60b6f5eCK5tHoDfdH8v/O3WNtOj2wGy/yqEOVyMKRtKLFiFMge3
qOGWxFiFJ1fyW91aTCxche/pRzZv9yEWrcLu4hu3diQQF61C+M0UwT0FsXoV
Mr1H6o3dQ9ywCv/9vj9BfY7u743p2xz04uvo/t7o4jJist97ur830jYdmShu
e5Ds741Dj3tvqjUiFnmj24BlWsvGExd5Y9l+m0+d5hOrNT52QOezJ3GDN170
Gt/YOZ5YywfuZsFGbkpigQ8a93yf+3QfMXywO8i904ZLdH8fzJRatcmpp/v7
4OJs1B5spvv74Mv3nkO7diOfx9U+CHXctH7XCOIGHyz3ufY4Yhb9vO6L0+fV
hYkriAW+2HekOroimhi+aJGQZgoFsdAXAdLiNd9LiUW+MHo2t/HdFeIiX5iP
v2zf/wXd3xdegXd8pVqHyf6+KPoR/2KaIbGWH1b1n5w60pxY4Aeb0JdtnB2I
4Ydfw++aXAkiFvpBpbxxOiqXWOQHQcwAkV8JcZEfeop2WG6+TKz2Q578dEXP
F3R/P5TM8nlyt+URsv9q/B463aNWQCxYjcH98wYIphFjNSYct/i635VYuBrf
nT8dzYgjFq1GQn53q+L1xEWrUWdYEdrtJLF6NXoMe2d6+QFxw2r4Wji5Xv5B
9/dH7/FrG7r3Ib9PCfyhN2jYjn1TiOEPH91VhUoXYqE/lm5eV1IVTyzyR5tN
rW/abyYu8kcrv4c/R5wjVvvj6HjH4Y7PiBv84TH4oOOdNsfI/gHItDIXbTcm
FgTAasqM3VdtiBGA0j8za2cHEgsD8LNLVbfecmJRAG6Vir1nHSMuCkDbU4ue
X3lIrA7ADNdh64u1ysn+Aei43GrL08HEWmsQOPJv52gbYsEa2Fz++9c/mBhr
MLi5t/xsAbFwDVonr/o3+AyxaA2uVJqPSHtBXLQGbQxHJPzodJzsvwYOij5d
7owjbliDS/GjdHRdibUCscX6ZsnBNGJBIC5/LzM6VUqMQPh1v7FpZB2xMBAF
77z9tFuS34dFgfgU30Y934S4KBApwcFP/zgSqwOhe+hYT6Nk4oZAnBszYPfu
ffT36SAofox7tuM+sW4QMhJ39+je9iQ5TxCeDfGVfxxDbBqEkC/pB2cJiRGE
5W7mVTp5xHZB+DXkuoXtKWJhEKIddq5s+YY4KAgPe5psM+t9ipw/CEl7K4QP
5xJLgjDK6EzrFjHERUGQPnX4sa2EuCwINxdI9198SKwOgnW5ldJb5/T/XB2E
v0te9c2eRtwQhG1nt1WYhRA3aV7fcvB3lx3EWsGYOUVi2fk+sW4wYnf76czR
Id8/CIKxZ3BSo/Z0YtNgJH64brckkhjBOF7lcnXkPmK7YNyfNvKh/BmxMBin
OnTvmNn7LOk/GB93KJ51XkwsCkbghcvvh2QRS4Kx7vyIU7criIuC0fJbUk33
X8RlwYh8cuvll95q0n8wpgzaYzDKnLg6GE1tO889tIS4IRj3niQhPZS4KRgG
ricu75ISa4WgT0zcLoMyYt0QdNRJLr5/g1gQgr0tXeRv/iM2DcHCYfamC3XO
kf5DcDJjzpw2I4ntQtBmfN7mzvOJhSFYtuv639UBxEEhKAisG9k3j1gUgsFO
6e8G7yeWhGDA4+w2qdXERSEo+bxw/KSPxGUaG6mnztYj3xepQ6DaO+CfPROI
q0MwdP6r+37LiBtC8KAs/HlKHHFTCFZ6/Dj+bTP9vikUJUfNul4+T6wbCve7
pps+viIWhOLDNZNusZ3Ok/5DMfbEtD7uZsQIRW3TCM8djsR2oZAJjBTWccTC
UOQneS+w2UocFIov32aOKa0kFoVCb6zkQfB7Ykko2l+Of6zSv0D6D8VBK/sq
o6nEZaHoZmk4tt0qYnUoakJcC+3ziKtDcerexbhWx4gbQhF47PHyng3ETZrX
tzy8M789/f4tDOcUmdf9xxLrhmHVmZjx+12JBWGY9XeI5VIxsWkYXrRZOsXr
EDHC8Fd7S8L9J8R2YajO6Tj/cIdLpP8wbCopffZlAnFQGG5/tI/YtJJYFAb/
1j1Gl0qIJWGw+dY8cvAZ4qIw6B2XiFu9JS4LgypRNndu78uk/zBcCg8L+mpN
XB2GI9fafugQRdwQhiIHnUPpu4ibwnCmoU7qW0usFY7GlAbnQ+0qSf/haPq1
/PZKc2JBOEaF1RXH+BKbhsPj2qPUb+uIEY7RJ2N+368itgtHqz/v1/X/SywM
x/Gr02uum10h/Yej3/MGgyeexKJwuKfh1KJCYkk49oWntDeuIi4KxxCJ4SSh
Fvn+tCwcBl2iQr6PI1aHw/jtzmsffYmrw1FZrDPXZjNxQziUd/Qft7hH3BSO
81tee/foeI30H4E/nwYdS7Ui1o1AZb/NaQuiiAURWFQzPDZ4P7FpBPqkuJu8
fUmMCAhjQ3uf7ltF+o9A89I/B586Egsj0P/264XO+cRBEegVYzNxcCWxKAIO
Gxetn9riOuk/AgX7x6/bMZm4SFMvnjDVKYy4LAJ66nXxDqXE6giMiD85ubCR
uDoCy971nNl/4A3SfwQCTwU7/OdK3BQB2z0fu/0oJNaKhNE25+6z7hLrRmLx
Ysuaa13I99eCSNyST76SbUNsGoncUw5zkjOIEQnL/6zW7j1PbBeJHWde/mil
VU36j4TjrP7nrPsSB0WiZFnQsG0WxKJIeEbvO9LVmVgSCTObsnpZNHFRJLob
FPYaXEhcFol/x/a+cekosToS46bdE0bcI66OhJXx7lFjPhM3RKJdVfe85m63
SP+RqOomu3nZjFgrCj1XtJm6yY5YNwoL+hv1iwkkFkRBz/XCoWV5xKZR+Nso
M5+yjxhRqDeZ/tKwitguCuV9B3/89S+xMAqGk7fl3W9/m/QfhYvDjr4pMyYW
RUFa5zsxaQ6xJArB69w2Wa8iLoqCs+F82zZpxGVR2Hgp2//INmJ1FK5MUQ5f
WkFcHYXA9fkHGxuIG6Kwa/RdM5+/xE1R+DY8svaOEf17RTS697l5d5gFsW40
dh756eqznFgQjRnbV5fkRhGbRmPRF+GXAhUxovG+LjQh7TCxXTRmLu6e5XCb
WBgNJ3Erj1ZNxEHReOlxf4lE5y7pPxoBA0NPfh9OLInG570B7y2tiYs072em
WuLsRVwWjce/ly6zSyZWR8N9yJA1fTYTV0ej/mZDl5MniRuiUfNs/PmRdcRN
0fj29VePkM/EWjF4OC5vc7ruPdJ/DKqG6LXwMyEWxOCtad2L3tbEpjEI35nZ
qnAlMWIw3Tmxd0MCsV0MLm789OXDWmJhDJyyJvtXHSYOisHmfR/d1twkFsWg
8cPokzWviSUx+KemKLp1a/L3paIYXP++b9NXI+KyGHz/Jp+8dyKxOgY6JyJ9
By0iro7B+Snh9m5+xA0xsHxVbLIshbgpBq03jx2vt4H+/SoW2apJx/MOE+vG
on+fR7qVVcSCWM3vg6OKzj4nNo3FrN+Da8N+ESMWY8vTzF51ryX9x8Le6+IE
/RHEwlgsCP4c3WI6cVAsWtYWri12IhbFYuTorGkdA4klsRjd/4pgWBpxUSzq
fO1/t1hPXBaLAfs/b1aWEatjIXXUe/LsInF1LPSVooK3D4gbYvHk/YSj+98T
N8XCfeXwUSNb15H+47DLu91vTwNi3Tjca/t12FITYkEctk5efrEViE3jUHBB
1uhnT4w4tD909EjOKmK7OOy/sGipbzSxMA55D/pptcghDoqD2c7L/9pvIhbF
4eY5xTKPMmJJHHxczFQmFcRFcVi4fcWHg3eIy+LQruehii/PidVxiHs01+fL
F+LqOMxelD77YNv7pP84/PNP5WWTnsRNcbi8dLiL11BirXgcOTwh2mUisW48
bp4oXtttDrEgHpaThliKHYlN47HY/Per017EiMe7Xk8HHA4jtovHifOlMatT
iIXx0Hk5QPRcShwUj8agHZf7FRGL4vF0drvXRqXEkniETp6TWH+SuCgegZ5L
jb2uEJfF48yjZ6n7a4jV8ehT39v87DPi6niM8Yx4pWii/cejfHzGZLPftP94
OCefe6Bo/4D0n4DdX+eFqnsQ6yagwuVq2eH+xIIEeF8ytwoZSWyaACEO3/lu
TowEyLo6GNjOJLZLwOzkP2d9FxILE2Bhgjj75cRBCThxc9Df9l7EogS8K+n6
MzeQWJKAxQu3DGiIJi5KwPkmkXGLVOKyBMwbvvDsh1xitcZmcWsPFhBXJ6As
ZITvzC3EDQnwkek37CohbkqATWXw/seHaP+JGCu9lfHyFO0/EZtKu/Y6f5H2
n4hEf8tuYTdo/4l4Oji6/48a2n8iBmv992lJPe0/ERfvlo0Xv6L9J6LY6rhU
+p72n4hWdRcPhHyj/SciWmg31eQv7T8RvUfGPznTlvy9vSgRQ4I7mY/oTFyW
iACF7fvgHsTqRIyO09klNySuTsQctUJLOpC4IRHN52Xr/YYTNyWi6x4D/f5m
9O/5IrQZmN/pyERibRFaNe/rNXQqsa4IndeE1UTOJDYQwXHpgAe75hELROhV
b3bimB2xsQjKlos7FDsSm4pwdb+7S7QLsbkI+1JXw8SDGCKEDd4685w3sbUI
Zwe7fjEPILYToUOc/mN5CLGTCHoxPqm3I4mFIqyf0SnkSxyxjwhRp+uG/04i
DhLh7btzZv+mE0eJcOdmXbvT2cQiEcribUwiJMRiEeS3vQz1lcQSEfycZPYb
1xIXinBY7mzTaRPNR4SZWwJiV24lLhbBR1C4bNtOmpcI/j7Vy6pKiMtF8Ggx
7t2TUpqfCF3dOmY8PEhcKULt7SpZxVGap+Z8F/olKE4Q12nuT6fh0KIzNF8R
Jsj6b/xxjrhRhNutx23Jv0jzFmH6nZ2Du14hbtbct8X8vMQqmn8SVmVOt3x4
k+afhOve72SD7tD8k3B/Zft3zjU0/ySI4rbsSbpP80/Cott9h6oe0fyT8H21
9Ym19TT/JOTpzj2d85Tmn4SNYw6nB76g+Seh6m3W6umNNP8kTOpodbbNG5p/
EpwGVNw5/h/NPwkx+yO+uzXR/JPwy2pu4pePNP8kYM+eg/FfaP5JeDZuQ/23
bzT/JCQ+KLHz/EHzT4J92p8F53/R/DXnnbd8QI+/NP8kBBUP6Lq8xSOSfxLq
KzyEslbERUmYv/GW/Zk2xMVJuLeoduSTdsRlmvPPkI3+2J64PAnZNo8Kf3Qk
Vidh4T8Li7/pEFcmodXk+etfdyGu1pzP/e++6q7EdUmInOfeZ1934oYkBNRO
N0rsQdyYhJya+W9n9yRuSkLR1w7q1r2Im5OQsP/ljfLexFrJkAgmLFhpSKyd
DJenU0Ja9yXWTcbS6yZrNvQjNkiG36FxYSP6EwuSsUIn9siBAcTGyTi3bqjH
6EHEpskw+rJq9/bBxObJeKQXeLzrUGIk49/KlLMRxsTWybAR/Hx1ZxixXTIy
Llq5DRtB7JSMBpt620gTYmEyTANiHp8eSeyTDJ8pj81/jyIOSsY/+J4+3pQ4
SvP+ijfvVpkRi5Jx46FWgXQMsTgZhjOObz8ylliSjPXuVRZ3xtH8k1HUbWTK
v+Np/skYOVVn/c8JNP9keMn/2dnWnOafjOSxXpUdJ9H8NedfuFHQcTLNX3M/
xx7dbD2F5p+MlUsuf2mmrk7Gvh1LDryyoPknI12vTnDLkuavycvhh/uRqTT/
ZFhuvyRVTKP5J2Om9u6qNaD5J2NOaMiomVY0/xTceuZ8W286zT8Fa0Pa32mg
1k3BS/vcecUzaP4paH/Nb/HqmTT/FLjrrm01fBbNPwXCEekRz6lNU1B8utf5
dbNp/il4W3FMa/4cmn8KHGbMmP2T2joFrb4LSnZY0/xT8O31pOm2c2n+KRjz
5ffA99TCFMTYr/LMm0fzT8HvTs09h9vQ/FMwyuPS4grqqBTUDAs3XmpL809B
p4FT9jZSi1OQbPG8KWI+zT8F06vvaLdcQPNPgfPdtm2zqItS0LKF/o/OC2n+
KXB8O/GrhLosBdt6z+ioa0fzT8H5NmVzc6jVKejSa/25Noto/ilYuv1Schx1
dQo+nN+woYm6LkVzY2Z9PRbT/FNwbeUM/VvUjSnofnGa3NKe5p+Cok7Tt+2i
bk7Bpr36Dl0caP6pGCO3OBRGrZ2KQbdfXq+l1k3Fq6l/ysyX0PxT0aXDQN8C
akEq2i4obfmZ2jgV/qpDmQscaf6pKHFr2WEXtXkqmsVD839TIxUhN9YMWryU
5p+K5UOe391ObZeKK0OW7PlC7ZSKra6LD850ovmnwmib6WcptU8qFnh2iH1M
HZQKvVdqu6HLaP6pmCz+nRBILUrF1w9juhylFqdim82mDj+pJanI97SOmbqc
5p+KXzVtvUXURanYOzj+vpq6OBXv7xg9+EtdplmPGBFs6UzzT0WE+vjOaGp1
KrTEpcmHqStTYVVZ0ekddXUqPq5PsR3iQvNPxbix9nNdqRtScfGCbwc5dWMq
TkTVqC5TN6XCdqHoyw/q5lQ8azl05EhXmn8aHjxbOdONWjsN0QdKrPKoddPw
yH/eiNPUBmlIG7qm3RtqQRrW3zB61NON5p8Gx6ap+2dQm6bherwyfQ21eRpa
ZV7wLqRGGup/L3A6R22dhsVOha6vqe3SMGbJizjdFTT/NKiLXE5OoBamwUTU
rq8LtU8a/kbe3i2iDkpDp/e5K7dTR6WhqurdwsvUojSk6+eHvqYWp2FG+rvb
HYQ0/zSUC0JDRlAXpmH2JV9HG+qiNPhXtE3xoy5Ow17HVb/E1GVp+DU999JO
6vI0lNj4vjhPrU7DkJO3XBqoK9Nw5WmG6S/qas15VRM9e7rT/NNQXRz504y6
IQ1dV1z9bkPdmAbl640eXtRNaUi9azspgbo5DWsj+yapqLXS8XTlHMtSau10
aN94HXSRWjcdx7716PeI2iAd85RX532kFqSj1uzL13YeNP90hEpDhhhRm6Zj
sW6XR2bU5pr308roPZsa6ZjeNuP5MmrrdBQG7rUIoLZLx6bctMEiaqd09Gov
2yKjFqZDOWHGoe3UPumw9vnlcpQ6KB0Blt23XKaOSofTh5tJddSidMzYFdDi
NbU4HdVHeg/4Ti1Jx7r3zS+0V9L80/HjX6OFBtRF6bCwlq8YSl2cjtgvjr0m
UJelAyHOCTOpy9PxuotYspharbmPMccXCakr05GZrz4fQF2djiRfr8YY6rp0
CK97nsugbkjH6KpgOwV1YzryDo8vKKJu0uQxz65gL3VzOkp/L11cTq2VAUW/
B1fOU2tn4Ju+898b1LoZ2Cx3/Hyf2iADD89OK3lOLchAUXDSgPfUxhm4syzB
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
tfMwLGa0MbNuHvTGLZ3EbJAHw76G85gFebAIFi1nNs5Dr+XpfsymeXBvHh3D
bJ4HyYrETGbkwasgopDZOg+f1vfcxWyXhzhXzyPMTnkIPud2nlmYB8et2reY
ffJQdXPlE+YgzXm6hLxhjsqDR5/xzcyiPJzZUdr6MMs/D+uXNOgyS/Jwr/Ka
IXNhHoYrQoyZi/JwfnrNWObiPCxe2jyVuSwP120ezGUuz8NCabwDszoPY6XP
3Jgr89Bnr44vc3UeBk75HcJcp7mP/ENxzA2a8300S2duzEPUruh85qY8DGnM
LmRuzsPvRt8tzFr5uF6jV8KsnY/S2tyDzLr5MO9Yc4LZQLOe9a6CWZCPJz51
V5mNNa8/qLjNbJqPGQGDHjCb52PjOvE/zMjHsvEVjczW+YgZc/s9s10+qpOO
f2V2ykeSTvRvZmE+1p3o2voIy1/zfr6pHZiD8tH78y1d5qh8tDf7qc8syke/
D1pGzOJ8/Kf1fACzJB82xjuMmQvz4TV81ijmonzoXbowlrk4HzOPDprEXKbZ
74DXVObyfDz2Ec9gVuejXU6uNXNlPuovhM9nrs7HwBNWi5nr8oHOHx2ZG/Kx
W5jhzNyYj0bblkLmJo39VnoyN+djycI9PsxaEiRnP/Bnbi1Bwr4PQczaEpjg
QxhzJwm6Xrsfxawrwdfbe+KY9SQIv+8tYjaQYIlr51RmQwmCHmzOYBZI0PKq
YTbzIAkCtqblMRtLsLj2gZTZRIIT9w2VzKYSLDSwLWQeJ8GEvz7rmc0lePMt
dBOzhQQPfQO2MEMC3RNLtjPPlKC/zchdzNYSLI//vJvZVgKj/Xv2MttJsN3C
fj+zgwQ9RG8OMDtJ4H0r7DCziwRH098fZRZK0Oez83FmTwkerD5xknueJVg9
teMZZn8JhCcWqLnnW4IMk7QK5jAJujWUXuCedwk8+lZdYo6TwHD040ru+Zcg
wunpVeZUCTrWP6zi5kGCkjZXbzDnSDC0875qbj4kWGqedptZIUFzxeK73LxI
MP5NjxrmDRJcenujlpsfCfRaaj6hU2+XINBz4ENuniS4anP2EfNeCQreLXrC
zZcE3ZMf1jMfluDaZJd/uHnT3J/N3afMpzTP64sZz7n5k2D4lD0vmC9IcCqm
wytuHjXnu+PeyFwlwaPgA6+5+ZTAJeX7v8x3JZg0dvJbbl4laNoT+h/zIwkG
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
jmSe/TV5if/n/wPV8jwh
             "]]}, {
            Hue[0.7946117974981064, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
WPPwvO9L8p8Cz03KX252kv8UxKQNVJ/1lvynIMBjhWnqB/Ivua83ISEdn8l/
CpSjHMV6X8l/CnRHl57Y+YP8S+5zsvzlL7/IfwqQuOCW8R/yn4KikqamfVJn
mf8UZO/Iu/lzAOOmFIxcqltrMpjxkxS8exl8tHAo47YUHGr4mvVVjnFXCgbX
+bivGcG4OwUr5oiXiEcx7k2BevPUv51jGUulInPKvfMLJzCWSUVAs5lv/CTG
CqlYY2k7+o4qY6VUTPQ+XDF+KmOVVEh596x21WCskYpJsz42ls5irJkKWSkL
w59zGWun4ueFzkrd+YyRiic1FuOTFjE2SsWV+87+N7QZm6ZiyNaGKnkdxlap
iJmOX2Z6jB1SwduVMkO4irFHKkpybEwermHsl4qlbuGOo9cyDkvF3397PMxN
GHNSMftSuiN/I+PUVBzg9q27s4kxNxXjnpRNH2bBOE9yH4le39ZsZVwoOZd+
Wx5ry7gkFc/Xf7Q/a8+4LBUOD7X/fnZifDYVmuKszGlujGtTcUK+dKitJ/lP
xYqVdmFcH/KfCp9T2x5e2UH+JfcbGKL6I4D8p+KIrKft9BDyn4pfwr4ky3Dy
n4pzB78WJEeR/1T4bh178FQs+U/DoS1z8trjyX8a+l36HS6XTP7T4G60fq12
GvlPw4RJb6SdMsl/Gu794p9IzyH/aXiqNN6ggk/+07BI1+D6ExH5T8ORinbt
v3nkPw1dq88I1fLJfxry1vKfr9lL/tMQvltXwWM/+U+D/+7UeWlF5D8NRZor
lh0uIf9pyGmYodlwlPynQc5SecTrUvKfhhiLV8/7V5D/NNReWy+YdJr8p8F6
/qyFS8+Sf8m+g+subqoi/2n4WhG70PsC+U+DMDxPEH+J/EvuY5f787w68p+G
4bgoX3qN/KeheFzAzMs3yH8a2rZtnvfwFvlPw79biye+aSL/adh2rPvrz/vk
Pw029VtODn5M/tPguWO5zZhn5D8Nk+ND3095Qf7TMM+hzVmzjfynweeLSd3y
V+Q/HZ0lQlmD1+Q/HWcjcnQ2viX/6VjyerS55Qfyn462bqnN2z6T/3Q4TJ+5
1OUL+U9HbIH3IM/v5D8diz/tPe/TS/7TsX/5/i07+sh/On7M3fDY7y/5T0d8
b6yef79zzH86yjaOyvYbyNgqHd8Cui5vH8zYIR3V05+98B7K2CMdieevtbjL
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
e1P/cxHpwbHe6lOj939Foh5E
             "]]}}}, {{}, {}}, {{{{{
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9962255642274206}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9962255642274206}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9962255642274206}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9962255642274206}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9962255642274206}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.9648752734059507}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.9648752734059507}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.9648752734059507}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.9648752734059507}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9962255642274206}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9962255642274206}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9962255642274206}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9962255642274206}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9962255642274206}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.9648752734059507}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.9648752734059507}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.9648752734059507}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.9648752734059507}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{34., 6.500000000000007}, {1650.1491666666668`, 
                    0.9648752734059507}], 
                   
                   Offset[{34., -6.499999999999993}, {1650.1491666666668`, 
                    0.9648752734059507}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999998}, {
                    1650.1491666666668`, 0.9648752734059507}], 
                   Offset[{9.999999999999998, 6.500000000000002}, {
                    1650.1491666666668`, 0.9648752734059507}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.01`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22., 4.884981308350689*^-15}, {1650.1491666666668`, 
                  0.9648752734059507}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9925372149143402}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9925372149143402}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9925372149143402}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9925372149143402}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9925372149143402}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.824388308601054}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.824388308601054}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.824388308601054}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.824388308601054}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9925372149143402}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9925372149143402}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9925372149143402}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9925372149143402}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9925372149143402}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.824388308601054}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.824388308601054}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.824388308601054}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.824388308601054}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1650.1491666666668`, 
                    0.824388308601054}], 
                   
                   Offset[{35., -6.499999999999992}, {1650.1491666666668`, 
                    0.824388308601054}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1650.1491666666668`, 0.824388308601054}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1650.1491666666668`, 0.824388308601054}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.05`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1650.1491666666668`, 0.824388308601054}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9954945005997519}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9954945005997519}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9954945005997519}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9954945005997519}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9954945005997519}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.8946322125704919}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.8946322125704919}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8946322125704919}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8946322125704919}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9954945005997519}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9954945005997519}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9954945005997519}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9954945005997519}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9954945005997519}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.8946322125704919}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.8946322125704919}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8946322125704919}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8946322125704919}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1650.1491666666668`, 
                    0.8946322125704919}], 
                   
                   Offset[{35., -6.499999999999992}, {1650.1491666666668`, 
                    0.8946322125704919}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1650.1491666666668`, 0.8946322125704919}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1650.1491666666668`, 0.8946322125704919}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.15`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1650.1491666666668`, 0.8946322125704919}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9861245024647478}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9861245024647478}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9861245024647478}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9861245024647478}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9861245024647478}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.754142190700559}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.754142190700559}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.754142190700559}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.754142190700559}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9861245024647478}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9861245024647478}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9861245024647478}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9861245024647478}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9861245024647478}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.754142190700559}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.754142190700559}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.754142190700559}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.754142190700559}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1650.1491666666668`, 
                    0.754142190700559}], 
                   
                   Offset[{35., -6.499999999999992}, {1650.1491666666668`, 
                    0.754142190700559}], 
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1650.1491666666668`, 0.754142190700559}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1650.1491666666668`, 0.754142190700559}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.25`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1650.1491666666668`, 0.754142190700559}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9694747827486747}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9694747827486747}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9694747827486747}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9694747827486747}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9694747827486747}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.683888691732104}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.683888691732104}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.683888691732104}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.683888691732104}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9694747827486747}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9694747827486747}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9694747827486747}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9694747827486747}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9694747827486747}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.683888691732104}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.683888691732104}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.683888691732104}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.683888691732104}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{30., 6.500000000000006}, {1650.1491666666668`, 
                    0.683888691732104}], 
                   
                   Offset[{30., -6.499999999999994}, {1650.1491666666668`, 
                    0.683888691732104}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1650.1491666666668`, 0.683888691732104}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1650.1491666666668`, 0.683888691732104}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.5`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{20., 4.440892098500626*^-15}, {1650.1491666666668`, 
                  0.683888691732104}], {0, 
                 0}]}]}}}}, {{{}}}}, {{}, {}}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> False, 
         ImagePadding -> {{All, 74.19999999999999}, {All, All}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["time", TraditionalForm], 
           FormBox[
            RowBox[{"freq", " ", "oblique"}], TraditionalForm]}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 440, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           RowBox[{"{", 
             RowBox[{
               RowBox[{"ba", "\[Rule]", "1.5`"}], ",", 
               RowBox[{"bn", "\[Rule]", "1"}], ",", 
               RowBox[{"z", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vs", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vh", "\[Rule]", "1"}], ",", 
               RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"u", "\[Rule]", "0.5`"}], ",", 
               RowBox[{"pa", "\[Rule]", "0"}], ",", 
               RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
       
        FormBox[
         TemplateBox[{"0.01`", "0.05`", "0.15`", "0.25`", "0.5`"}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm],FormBox[
        FormBox[
         TemplateBox[{"\"healthy juv\"", "\"stressed juv\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Normal", ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
      
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {2, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}], ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#3, ",", "Above"}], "]"}]}], "}"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
            
            LineBox[CompressedData["
1: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
ub8E926Urazl/hJ0tD875BP31/x5q6e1X7i/BKPH4vh37i/Bpeg3AT+5vwRz
rtyc2MD9Jbjj/+fnX+6v+XldfXK1f1B/zfv2HO3XjFwkgZ7WRKOW5FLN9/9P
8q4VuUwC9VTD7W3JFZrzoT2XdiBXSXB+rW2bTuQ6CbTWVJ7rQq6XYOzLIvfu
ZK1kbJz3t3dPsk4yxjZJuN6LrJuMs26uAX3JesnYVb2zX3+yIBk9n40vHkg2
SIbO9oFeQ8hGGqe6dxtGNklGsFa3M4ZkJMPdvNeKUWSzZOy/HNUwmmyRjBNn
5m02JtsmIz/Cz2QCWZiMk6ua3ZtIdk6Gye76DZPJnslQplu3mEYOTMbtiG5b
TcmiZKRnTB8zkyxOxoLx5Vdmk6XJ+Bn7eOlccnoyFhbPqzInZyZj7xSDgIXk
rGQ01/NrZknOSUar1DFSa3JuMr7dd+i5hPsnY3fvZjttuX8yVMqew5Zz/2Tc
cdpz2J77J+PvuayxQu6fDLOL/U+u5v7J2KDqOsGR+yfj6Iqok+u4fzKejnc1
duX+KRhlejPHjfunYJ368HAP7p+Csws77Pbi/im4FlHby5f7pyBj8kKFP/dP
wS7VKJ0g7p+C/emKkBDun4K7FiE1Ydw/BdLCSnsR90/Bpn/lJVHcPwV1f63+
i+X+KSgosN4Tz/1TELXwqW4i90/BCXVdkIT7p6CNKuVFCvdPwYKpuXNk3D8F
5jHuBxTcPwVli492UHP/FJzJiPFK5/4pODjn7e1N3D8F08eXGW3l/il4PX95
yjbun4JCV8/327l/Cq6v15u1i/unINXAJmMP90/BVP+B37O4fwrSBifO38/9
U/CwZdz2g9xf871f6307zP1ToB0zY85R7p8Ck+wW6ce5fwqKOq+pPMn9U2ET
sWzcae6fivid7yPPcv9U6Bh3v3GO+6diacXzbvncPxX51rNWXeL+qcA4sz0F
3D8VjkPeVRdy/1SMLzIwusb9U9HzSEuf69w/FSf9447f4P6puJm1++st7p+K
4Xccx97h/qlYH3jV8x73T0Wt/vUDD7h/KnZM8Kos4/6peIczgsfcPxVOe/fY
PuX+qXh4b3zqc+6fikrD9QUvuH8q/rWdWf+K+6eie8nFYW+5fyqiz7xeXsX9
U3Gq38Gk99w/Fd1m6p/5wP1TNfs5qrKW+6ei47Z3nT5x/1R8HD9vyhfun4qa
OZZO37h/KlbU/E3+wf1T8Wqi9fGf3D8VkyYsLP/N/VNx+83Hhj/cX4rIySZ9
teob3UyKwQZD0ISsI8XCpLxVzchtpbg2pT6sBVlXitltH23SIXeR4s0ph5Ot
yXpSnP+WUtqW3EsKd3eHd+3JAimU58q0OpIHSjHP62u3zmQDKdJaHR/elWwo
xfMf3aZ1JxtJMSOjl2UPsrEUfxYWOOiTTaQ4ad7Oqzd5shSlBd/D+5Ihxe6y
iKR+5JlSXJLvVQ8gm0nRsdotcxB5vhQNBTezhpAtpEisvX54KNlGipV915wY
TraV4vIP+ekR5BVSSP8tyxtFFkrRbffJc6PJa6Wom7T33FiysxTFv4fmjSO7
SdH13+TTE8ieUhwxfXZ8ItlXivBtbQ5PIgdK8ezOpb1TyKFSDPPR3jaNLJJC
50uB0pQcI8XZjNYJM8hiKaw33QqZRZZIcfu57oY5ZKkUI6ZcXzGXrJRivtXv
eebkdM3vQ8rWCQvIW6SYanSo/yJyphRvpw5ta0neJYWlpPVXK3KWFHY5Cx7Z
kA9oeraoPb+EnCPFggNvt9uSj2t6hI6JtiPnSpHUvmT1CnKe5vf56EGsJOdL
Ubjhdi8huUCKrz+NfjiQizTvf+HKrTXkEikK7ov3OJJLNd/3t3fIOvI9KU5t
DF3oQi6TYvjZrX3Xk59oft/a3ax1I1dIEfG0WZ47+bUUgZ0nxnuSq6TwGeNg
4U3+IIXzYp/uvuQ6KbJHOD7xI3/V9Nc23BZArpfCcH/eqiBygxTB6W36hJC1
ZMgtbvsolPdfBo+HxxThvP8yHH33ZZ6I91+GcQUX/kXy/sswsaDV0Wjefxms
31x2iOX9l2Fg4fP28bz/MnQ7tPC0mPdfhgFKbYdE3n8Zsge/ay7h/Zdh1b1v
e5N5/2Wwf9B9TirvvwwzJk17JeX9l2H1l+Whct5/GX49te+k5P2XweKh8W4V
778MOVdLjdN4/2XodKzfxXTefxmcr3Wft4n3X4Z5ATtvbeb9l6HG/4TlVt5/
GQa9mFqawfuvmTd1tHkm778MFerwS9t5/2UIjO4xfifvvwyTJ3/bvYv3X4b5
e5t32sP7L4Oh07Tgvbz/Mnx7kfYsi/dfhpFLmk/bx/svw5RH4Zv38/7LMNOl
4csB3n8Zgqv8zQ7x/svwbHhV+mHefxmEP+e9yeH9l8Gl9eYRR3n/ZXjZ5r7X
Md5/GW5v+X7kOO+/DLHmf2tO8P7LIJVVDzrF+y+D5Ob5Zbm8/zI8Ng1KOM37
L0NU094nzvD+a+7XcODJWd5/GTY/MdQ6x/svg2uX7X3P8/5rfn5R+0kXeP81
vz/XQqzyef81z8W1jhd5/2V42t7d7xLvvwyfP2lHXub9l6HnvKPiAt5/GSZl
xUuu8P7L8KVNkqSQ91+GT+VXxFd5/2VQ3DGNLOL9l6FMp5X/Nd5/GbaXD1pX
zPsvw4pXO2yu8/7L0OJv4tQS3n/N+499N/AG77/mfG5Ry5u8/zLUvTGuZDfI
sHf0xMu3eP/liB/6YnMp778cIzeYeN3m/ZfjRda8GXd4/+XYIR3Q6S7vvxy7
H998yu4iRw/Y7rnH+y/HbI/r6+/z/svxt6PxyAe8/3IsuLK1hj1QjpDuXfY9
5P2Xwyp2x5oy3n85tgTY9Czn/ZejCuNuso3l8NO3iHjE+y+H25CcEY95/+UY
7yIsZ0OOlkXro57w/suxue1Tg6e8/3LoVpwvYc+X432xvvsz3n85YPy37XPe
fzl+Cz2z2bZyzPAJnVHB+y9HvYvhY7ZQDktBoucL3n854hZsa/qS91+OrTF+
SrabHFONuw14xfuv+R57Eg+zfeUI1H4y8TXvvxz9Z3e+xA6VQ2k50ewN77/m
vk+WlLBj5PgT4rvwLe+/HMcyN91kS+QYnX57fiXvvxzZkn7X2Eo5VsbKZ1Tx
/mu+h5NhHnuLHLVfvo95x/svx82Sn3vZu+S44DlZ/z3vvxwPpxRK2AfkSPPK
aGDnyDF3aIlrNe+/5vutXvKQnav5879nTP/A+y/Hv2Ob97Pz5XhkuLZzDe+/
HB7vdgaxi+SQLnJ4xi6RY0DWDtNa3n855H3dd7LvyWFWeK3pR95/OYbIzq5m
P5FD225uPrtCji4Vgb3qeP/l8C5aFMCu0uxnxt1S9gc5xPdaDf3E+y/H08s/
Ithf5dh1cMd9dr0cXc92GPaZ91+OX39mhLG1FOjiNfMWu5kCsvqugi+8/wp4
rT7nwW6rwE+naefZugq0yc5s85X3X4GtJ98sZesp0LVV553sXgocaz6ihi1Q
oOrPhPHfeP8VuDLKJJxtoMDswtFX2IYKXCs3aPOd91+BRZ79LNjGCrwN66tk
myjw5/Xgh+zJCpzyn9TjB++/AnO+CO3YMxX4r/XmTWwzBW7a1ZSz52v+vO9y
vXrefwWMHlQtZtsocLouXc62VaBuoMdN9goFel9xb/WT91+BX102z2CvVaD1
vB+hbGcF7ibFnWC7KWDw1byG7amAc+q8gb94/xUoXBFrxw5UIGrhv1R2qOb8
vLMFbJECDw3y6tkxCvieamb4m/dfgfcn01ayJQqsehIgZUsV8L699yJbqYCP
8bDP7HQF0tO1+zfw/itgGGdkyc5UoCT4dAR7lwKqdxkH2VkKCCe9esQ+oMCL
m+KWf3j/Faisl41lH1cgppn2KnauAlPGliWw8xQYf67HcXa+AqtvX33KLlBg
l+p1i7+8/wq0GuI9il2iwKuN3kvZpQo0/KwMZ99TIHfevd3sMgUQP7GE/USB
nTt6fGZXKKAt9u/+j/dfgX09rSazqxQwH39IyP6geZ/Dkhh2nQLbLT/uZX9V
IO3Vw2J2vQLzBpjVsBsU0C8y7aD1k/ZfiaSoQiN2MyWWNzy0ZOsosa8swJvd
VokOx/fK2bpKXBzocpTdRYndZ87dZuspEfRvTx27lxKv/Qd30CYLlNiaMWUE
e6AS3rU189gGmvNlJs5sQyX0rvWNZRspMXzIru1sYyV0ba6eY5socWV/Yjl7
shLNYz9+ZUOJJaN/dGhCnqnE4D87hrHNlCgf9XUme74S79t8WMm2UOLnzaRA
to0Sz4/ck7FtlbhedXUfe4US83Y6XWYLlVjd9uhj9lolds7b/4XtrARE1m2a
kt2U0L++vz/bU/N+M09MZPsq8amJlwU7UInCbhVO7FAlDiY3DWOLlNDxeiJn
xyixqHB9FlusxLDUo+fYEiX8rh25w5YqsdTDtZKtVGJhwNPf7HQlZt1ro9uM
vEWJLX7fB7AzlRg7J2MCe5cScaObmbOzNO/bY+hK9gElvF6082LnKLFs3bFo
9nElTsb1VLNzlTjSfWYWO08J249GZ9j5mt/v5y+usws073dq6VN2kRITZihq
2SVKKMxV/9ilmt8H9Urd5uR7SmRXfRSwy5Rw1p43mv1EiTbbNpiyK5QoCF1u
yX6tRG/rLg7sKiX+PEz3ZH/Q7Nv5dxHsOs375bZMZX9V4pj3l63seiU6bTp4
gN2gxOWH48+ytVR4fCf1GruZCh2NTj9k66hwV3bsDbutCqbpEV/Yuhq/6K3d
gvdfhQSd1PZsPRU27b2rz+6lQvniDwZsgQrJWeXj2ANVqB6zZTrbQIXeccaL
2IYqzB69cznbSAXZxap1bGMVjC8192WbqOCT9yuCPVmFExOKkthQIea0exp7
pgriK7U72GYq7Hpqdog9X4UPkWGn2RYqHDdKLmDbaN7HKfAW21YFx4xpj9gr
VHCyfPWaLVSh5481H9lrVXBrfukn21mFvXV/mrbk/de873C99mxPFYYO6ajH
9lXByPpdP3agCod6bx/ODlXB5IvJOLZIhS9Tj0xlx2h+vmtrM7ZYBYNnMy3Z
EhWOaDnYsaUqJE5YtYatVKHg7TQ3droK3b2a+rG3qPBkwr4wdqYKgzcbx7F3
qZD7c0cKO0uFDke+qdkHVHDuPWIbO0eFsxvn7mUfV+FOhPlhdq7mvgZjT7Hz
VLB5r3WBna/Csl4nCtkFKlh1trjJLtJ83wF37rNLND0yJj1ll6oQ8lDymn1P
hWl9CqvZZSr4X6r8zH6igrLT55/sChWarXijpcP7r/ke1RdbsqtUWNJG3J79
QdOrhUlXdp0KK4bc0Wd/VeH78SX92fUqjP5xxYDdoOllLBjF1lJDdtRxHLuZ
Gm9PqCexddSYFXXMlN1WjUi7vDlsXTWSRUcWsLuoETBOYc3WUyPktMMydi81
vpv3XsUWqOE+vHAte6Aa6aoVrmwDNZZfrfBgG6pR3GDlxzZSY5zXsWC2sRp9
VjURsU3UmK2FWPZkNQ4kuyWyoUbKNHEqe6YabgsUSraZGq1qkzey52vuszQw
g22hRpcLVjvZNmqELeudxbZV46Bd2QH2CjUqv0UfYQvVuGEvOMleq8b8goNn
2M5q5NgZXmC7qTX/f2/LZbanGgPK/1xl+6qRJrAsYQeqcWWJupQdqsat7Bv3
2CI15s35UcaOUWPYis5P2WI1Srv0f8GWqNF864A3bKkabQV679hKNRKK/n1g
p6uxJf9RHXuLGvdGZ39lZ6rx36z19exdapgN6NfAzlKj/kvxP/YBNfKeOTdt
xfuvRkTr3y3Yx9U4uTWyNTtXjYXnG9qx89TIlbl1ZOer8Xry7S7sAjUsXg/T
Yxep8W9/kD67RA2/U+f6sEs1/Yb+6Me+p8aOQYMHscs0fW7MM2A/UaPNdMfh
7Ao19u32G8l+rUa5XuhodpUaHfICjdkf1LA8vH4Cu07z/Tot/o/9VY0mzcZN
Yddr3ndnG7Ab1PjTvnw6WysNm9ZuncVuloYPF23N2DppGDezjTm7bRqsdE4s
YOumoWDYEgt2lzTsvVprxdZLw8Vf4YvZvdIQ+byFLVuQhs/SODv2wDRcG/p3
BdsgDWsKNqxiG6Zp/r5434FtlIYjTuPWso3T4L092YltkoYeM585syenwW7d
kPVspGHbAJcN7Jlp+C3d6cE2S4PJ1Qde7PlpuPG0iS/bIg1V1UP82TZpcNaZ
Hci2TcOzufbB7BVp2Fi4IZQtTMNmZUA4e62mx7VgEds5DW1CAqLYbmnodn5D
zP/8f5tnf3U=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]], 
            LineBox[CompressedData["
1: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
80z/fcRXUPfn/X+9qdFu
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
            LineBox[CompressedData["
1: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
hzuYvwpH4ttme+xk/irsSOli8K2Q+auwYtnjn+G7mb8KM5/tsPm9h/mrkHG6
p0nYXuavxgJT582fipm/Gt3Xtrzmup/5q/F8QN/Tdw4wfzV0v09Om3yI+ath
aRpgufMw81eja2O7P61KmK86T29c5nWU+asxd/mYw2XHmO+G6E6j7hueYL4b
Xhy/MznoJPPd0K9VutbFU8x3g7FyVd8Opcx3w+iL7UsdzzDfDeU3Hj/ecpb5
bhgVdUb24hzz3dDlhd0b4wvMd8eM5vc/CS4y3x1F86aVrL3EfHf4tDGfdaOM
+e6oO964pNEV5rujrW2h7rCrzHeH9+rXdsvKme+OcsHwdUnXmO8O0ap973df
Z74HXrvOWVxxg/keSPlWVFdfwXwPjDc139HmFvM9MM9JL2/AbeZ7YMNnw5rJ
lcz3QPP7Xbzs7zDfA93s3Bd43GW+B4asnrc5/B7zPZHpc8dRVMV8T1jGXBDL
7jPfEz+rTk7PfcB8T4yFiWjLQ+Z74ujcCcu3VzPfE3Wnmt7a8Yj5npi7cem7
7TXM98TLlLeH8h8z3wutbo0as7GW+V6YuT4rVPmE+V7o961PXPpT5nshsu7r
UuEz5nuhMKq6tf9z5nvh2LGMTStfMN8LzdYp9Oe+ZL4X5v5cKhz3ivneqIk1
rulTx3xvbE1pO1b3NfO98eS9QU49LfDGlFe9G1e+Yb437t57GnXoLfO90aPD
93aKd8z3hnle1Xn/98z3xrbvr3LnfGC+DwIOOeeZfGS+D5wX+tzRqme+Dxrf
bT3lHi3wwX7XQe92fWK+D2Y0XXs/+jPzffCin46e7Rfm+yDTqqOi11fm+0CQ
OtHnPa21BifxMe/oN+avQUhc8PCE78xfg94HWpnM/sH8NZC2uJ3UsYH5a/Cs
feX8B3TeGjwYpi3f+JP5a/DdYIrNyv+YvwYjZtvH9v7FfF/kJzeMeUrr+eLW
+IuBeb/5PL5w/mNjseyP2ma+yPjQVKb/l8/ni58D7KNu0ba+ODFA/i/1H5/X
FxWmf3tM0fr4P/v64pHsfPUPWuiLzdZNsbuR2mJf3De4NmtFY7XzfPFcV1+7
XRO1i33R/thNrzN0qS8u7L6T4qutdoUv3Ao/Lu/ZVO1aXyxrWf3xCl3vi/fa
VghupraWHwwa3Zpv2FxtPT8crm0x5DJt6Aeptd8tXx21zfzw5HOEZZcWasMP
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
jzX9lyM2eo/bE03/5Rj8++nuZ5r+y3G5zakPLzT9lyOk1eQhdZr+y2E+08fz
jab/cvzsbLX9nab/qv0vVNR80PRf5S0tO33S9F8O2c8fVl80/ZdjTMf14d80
/ZfjwdjvO39o+q/Arb26935q+q+A89FHjX5r+q/AhWyfgX81/VfAILXUViuT
/Vcg+tqdwMZ0RwV+5RYrtWl9BTKHzT/cjO6uwLCzp2/r0IYKVMY3fGhJGyuw
cue/5q1pEwVKne/1bEsPUuDmk9gR7WgzBYJsG03vQI9UQPLAflEn2lyB5juT
XbrQFgqceir17UpDgS27I8K70ZYK5A+wjOtBWylwNPxDci/aRoFXpyLTjGhb
BSZ0+JTeh16g2kc6O70v7aDyInlKf9pR9bzBlxIG0AIF/jR7HWVKu6jed7df
gYNpNwXGXfznPpT2UuBFp5+Ow2hfBRz1X88eQQcqsOD+TYtRdKgCOU6HBoyh
IxXQO6HoOJYWqt7H28A/4+gEBcq+LXhuQYsU8Kkec3kina5Ah7xeu0GLFcCk
NhlTaLkCGw439bKkcxT4raUzczqdq4Bdly7GVnSe6n7rR/6ZSW9VfS9xzpWz
6ALV91K6dedsercCNuv/i5xLFyuwt8nqOfPogwo4vHrbYz5dokDo8LS3C+gT
CgTemH5kEV2qwLPthrEO9HkF5JsMZi6hyxRI3ji6rSNdrsDfpODby+gKBTzG
VStW0JUKROW4L1pJVykwMMawkzNdrbqPK41vudC1Coxe2D5jFf1ctc8P2+lu
dJ0Cn0Slf9zpd6r3UeN0wJOuVz3/lbGrvemvClwxnNF1Dd2gwMu96Zd96d8K
pExvFepPaylhu++ScSCtrUT346U3gmgdJfoO/hkaQrdS4vV1f8MwTf+VsFg1
9GK4pv9KTDli5hGp6b8S/gmhraI1/VciO1NnT4ym/0rckT+dFavpvxIbF+i8
jtP0X4nLKREJCZr+KxH5YULPJE3/Vfnj5x1O1vRf9Xz9jtikaPqvml/l9yRV
038lQotiA9M1/Vfi297XTTM1/Vcir9suRZam/0og71Ifiab/Svx9g2Kppv9K
rN6hP16u6b9q3xjb8wpN/5WI6PZmVram/0rM6f3qZo6m/0roj525aJ2m/0rE
N2l/f72m/6r31Wfqkg2a/itRObbm/kZN/5UwfvHcPk/TfyXqzjpUbtb0X4lP
PuPn5mv6r4QoPrNsq6b/SnisnY/tmv4rcWFG+uEdmv4rMdN4nOlOTf+V6Hpu
+cZCTf+VuH34V9vdmv4rsVbcXrhH038ltGq3fijS9F+JniMOLi3W9F+J9M5T
Lu3T9F8Jl062ww5o+q/E5KOP1x7U9F/l1M9ahzX9V0K3beqqI5r+K3G+fMeV
Ek3/leg9Y/bgY5r+K7FcKzLzuKb/qu8nbNSHE5r+K9FmWITNKU3/lSjaNmfn
aU3/lUicv0/7jKb/SmQd2rr8rKb/SsyfNvDIOU3/lXgbPrXNBU3/lWh27ZPz
RU3/lXhRPLrkkqb/qudb10H3sqb/Sjz+leJ4RdN/Jdynr999VdN/1ft+bfWr
XNN/JQrny62ua/qv+vtP0fIbmv4rYTmk5eMKTf+zYRM4xuSWpv/Z6DdIx/e2
pv/Z6Hsy6nClpv/ZGJqx9tcdTf+zcUtr2aR7mv5nY0rE5dgqTf+zYbe89ux9
Tf+zEd8yv/FDTf+z0VDTfnK1pv/ZiBw7LPqRpv/ZiAv+d7RG0/9sDPkU/fWx
pv/ZmN1k3+Anmv5nY37TbNenmv5nw3vO8Nxnmv5nw31kws3nmv5n47ZuZtOX
mv5n41n/eeavNP3PRuKD6+51mv6rfj9QZ91rTf+zkW/5r+yNpv+q51178Ptb
Tf+zsev0gD7vNf3PxqbGgjkfNP3PRvpuh9CPmv5nw7lZp831mv5no9xeWfZJ
03/V+3/16MNnlf8PL0I75Q==
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961]], 
            LineBox[CompressedData["
1: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
JBrut9/5TvNHomzspK2qApI/Eia6Jgt7E9dHonZQ/KUBxM2REG7dMtKAuDUS
BwZou40hVonCss6ecZOJNaNQ0torfDaxQRTEWZlWC4lNotC5eK3qcmJEYe/w
z4X2xNZRMDO7relCzIuCgYWfjxdxUBT6PTPZHkDMj0LK+4KqCGJRFDJk/SsT
iIuVz50189OIy6MwY8gvh1yaPwpr+yz+Laf5o3C+wT59C80fBdtY+ecSml+5
P8l/cRnNH43Ux4g/SvNHQ7tnZOFJmj8aXiohm8/R/NEYsliaUkvzRyO2dZbt
TZo/Gnn7LndrpPmj4X5KUfKI5o9Gj15qY57T/NFwNvSTv6H5o6E/Z/jbTzS/
cj9SR3+l+aNxrPbV8p80fzQuT9i2rnMayR8NzfROa9SJm6MRXcabpUHcGo1P
8zTUtYhVYuB7zLFal1gzBqor5O76xAYxMBrWq82Q2CQGS4b18h9LjBhMMnx6
ayKxdQxOPrk7YhoxLwZ+/0xxm0UcFINvLxfkzCXmx+DLjOW7FhKLYhC4RrFv
KXFxDMaUeWxZQVweg2WFP+NXEVfH4GvqdisHmj8Grxvl3dfR/DH47/egv1xp
/hi8jA5e6UXzx2JTfVOTH80fi6E78mwCaf5YjN5+50QozR+Lc4VP+0bR/LHQ
ivqyNo7mj0XbomUSPs0fC/PJg6pSaf5YDJJsbRDS/LFY8LLPk2yaPxZ193c9
ENH8sahcnn9ZRvPHYpfNoN0FNH8scsZ7RBTR/LGY5LHXtJjmj0WPI0M+7KT5
YyEb8Fm6h+aPQ+xNl/H7af44ZHnknThI88fh+vZjpkdo/jiYbVXb/xfNH4cB
Z0o1T9D8cVh8/JbvKZo/DgV5B46dpfnjMHmn77fzNH8cLu6ebHyJ5o/D7j1T
7eto/jh01dgcco3mj4PeLlHqTZo/DjXyuVm3af44+AbcSrtL88dhz7DAyCaa
Pw5Xe81b95Dmj8eHfwNMH9P88bjaw6D7U5o/HiZtMTef0/zx4FftynpF88dD
40ON+RuaPx6WiSqv3tH88Zj7Mjr1I80fj5Hqq3X/ofnjYWVVWfIvzR8PhezC
qK80fzyc5m3a1k7zxyNqqkufHzS/8vveNon4RfPHo0p1SsMfmj8eo00FYzqn
k/zxkHkuiVAjVklAXO/Ck12JNRPwZHbhV3VigwT4Z3qN7UlskoCa4fqrexMj
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
O5mbRZCdPs38QgRP0T3mFuXvWe0f5vfK38PgHrXsvkU40zic+bMIxjNmM7eL
8NB8FfNPEXw/+DGriHF+UTKzmhiaSwuZ1cVY1n6IuZcYq+0uMWuKobL+EbOW
GLt12ph1xPBM7lbH7l8Mk616zAZi6PpPYjYUY+nHRcxGYkwb6chsLEbvfgHM
JmKcO5bEPFWM733lzKZijB5dymym/H5fTzJDjPqk68wLxbha+4TZQoz51/5h
thIjJkf1Crt/MQ5raDPbiWFgPYrZQYwKmxnMzmIka1sw88ToV+TA7CGG8KUP
s48YTp+jmP3FuHtJyBwkRuv6AuYwMRyr9zBHKftrOcYcJ4bX/RpmvhizpQ3M
qcr3M/A5s1AMeP/DnC3GiKQ/zCIxBD69r7L7F0OuN5i5QIy9W42Yi8QY9mka
c7EY9n0WMJeIwfu9krlUjJIzzsxlYrxd6ctcrvz7o+HMFWLkvUlirhSjpS2H
+ZQYx28WMleLsSNpF/NFMUrVDzPXKvvwPMV8TYwHBZeZ68Uw3XmbuUGM24K/
mZvEsEQL8yMxCu+0MTeL0R2/mF8of8+CbtfY/Yuxandf5vdiTNoxmLlVjKKo
kcyflfvGTWRuF+PeSVPmn2I8HTWfWUUC1yBLZjUJZhfYMatL0H3bOuZeEixO
9WLWlMDdIpBZS4KsD5HMOhIcDuEz60mwrEnIbCBBP30xs6EEiUsKmY2U3892
O7Ox8vOxl9lEAre+h5mnShBQU8lsKsFB52pmMwl2NF1mhgRLZt5kXijBvYRG
ZgsJePv+ZraSoFfVC2ZrCYYfecdsp3xfeW3MDhI0rfrO7CyB4s8fZp4E9pKu
19n9K/f36s3sI8HvwP7M/hJ0PaXLHCTB5VZ95jAJPmqMYo6SIHuAMXOcBGbq
k5n5yn6ez2BOlUC0z5xZqOzDaQFztgSG7RbMIgkm81cwyyRw+XcVc4EES1et
ZS6SYMQ2F+ZiCeKb3JlLJJj3y4e5VLmvTwBzmQRT+oQyl0vw9Fckc4UE4ffj
mCslGF+SxHxKAst1aczVEgxTy2K+qOxvUx5zrQQH9GXM15R/Ly9grpfgXHsR
c4Py97h8O3OTBPqSXcyPJLh9aS9zs7KvdweYXyjfR+cjzC0SWPQ4xvxegorO
J5lbJXjw4TTzZwly684xt0vQu6CG+acEhQ51zCpSVPe4zqwmBQ7VM6tL0WVx
A3MvKYbU32PWlOL28ofMWlJEn3nMrCNF9xHPmPWksIt5yWwgxbGLLcyGUixX
fc9sJMXE6Z+YjaUIWNfGbCKFKPoL81Qpuma1M5tKkZT3g9lMiosZv5khxc3o
TjfY/SvtosZsIYWuaTdmKynk6j2YrZW+3ovZTgpNYR9mBylOz+zH7CzFpKda
zDwpzscPZPaQYk2/Qcw+UozcosfsL0UnfX3mICl2KYYxh0mR28WQOUqKERtG
McdJYVJnxMyXYuCQccypUqj6jmcWStHtwETmbCkutExiFkmRojeVWSaFhsV0
5gIpTviZMhcp+02bxVwshXSTGXOJFG575jCXSuGxH8xlUkSUzmcul0KwdSFz
hfL95SxmrpRiVLgF8ykprtovY66W4t+JVswXpWjrvIK5Vvm+b65kviZFosyG
uV6KPatWMTdIYdbLnrlJirSzq5kfSeG0wYG5WXkf/RyZX0gx+4gTc4sUQqt1
zO+lKHrqwtwqhSSIx/xZigXfXZnbpZgf7878U4o+PzyYVWQoCfViVpNh2ytv
ZnUZzO18mXvJYHTaj1lTBhj4M2vJUJmwkVlHBqt7Acx6MgQZBzEbyGAYF8xs
KMPamhBmIxkce4YxG8sgswpnNpHhizCCeaoMm89FMpvKkPslitlMhiTDGGbI
cNE6lnP/MhyJiOPcvwynC+I59y9Dw7EEzv3L0ONWIuf+Zbj9ms+5fxmqvydx
7l+Gk91SOPcvQ69+qZz7l8FBR8C5f2X+wWmc+5ehdlA65/6V71NbyLl/Gex7
Z3DuX4Y5nTM59698P20c82W4+ySLc/8y9L+Szbl/GbofzuHcvwwvpbmc+5dh
ZFge5/5leGYt4ty/Ms9YMef+Zfjzh+NiGY7dkXDuX4asnVLO/Ss/P1jGuX8Z
ppnJOfcvg7uqgnP/MlRd5rhSBs+MfM79K7+/RQHn/mVY3rWQc/8y7KnmuFaG
a5GbOPcvQ4zxZs79y6DzmOMGGXxyijj3L0POrC2c+5dh5UuOm2U4n7OVc/8y
vJiyjXP/Mnxr5Pi98vOiijn3L0PZwO2c+5dBr4LjdhkeLd/BuX8ZLr3gWEUO
/ZidnPuXo6F3Cef+5ei0jeNecphN2MW5fzlmVXGsJcfnxbs59y/HvnqO9eS4
t2YP5/7l8H7EsaEc89aXcu5fjvBmjo3liOLt5dy/HNseczxVjh+O+zj3L0fX
uxybyWG8Yj/n/uU4V8PxQjkGzy7j3L8cyQc5tpLjmsEBzv3L4SLm2E6O/ioH
Ofcvx/SNHDvL4dfEMU8O//mHOPcvx8r9HPvIodevnHP/cqyO5DhIjtCHHIfJ
kW1+mHP/ctRt4ThO+f1/ccyXo9z5COf+5Zh0gmOh8v1qH+Xcvxx5QRyL5LCv
41gmxxuDCs79y7E8kuMiOdZc47hYuc/gL879yyEI5bhUjpM1HJfJkaN9jHP/
cozy5LhCDl4Fx5Vy3Ox0nHP/chxYznG1HLaFHF+U4/dzjmvlGD++knP/clSG
cVyv7L+K4wY54jud4Ny/HGpLOH4kx3+ZHDfLceY6xy/kGKF5knP/cqy35vi9
sm8Rx61yqNZz/FmOB72rOPev/P6WHP+U42EaxyoKWJ/nWE2Baz85Vlegcfop
zv0rcC6QY00FVEo51lJA/oRjHQXiB5zm3L8Cvaw4NlDuT+LYUIHwvzg2UqCu
hWNjBRSDz3DuX4EryzmeqkBSAsemCvQ7xLGZAvsecwwFYjXOcu5fAXtzji0U
2LuBYysFBhZybK2AXQ3HdgqcbeXYQYGhg6s596/Ms4hjngJmQRx7KKC9iWMf
BU6f59hfme8tx0EKDOh/jnP/CpjO5jhK+fluHMcp4CzkmK/AvIMcpyoQeJtj
odLfOM5WoMvg85z7V+CTOccyBZp4HBco0JrMcZECP3dyXKzA9hqOSxQweM1x
qQLN3S5w7l8BGHFcrvz+FhxXKPDFm+NKBWakc3xKgX93cVytQMRFji8qEPeU
41oFdP9wfE3Z7+CLnPtXvg9TjhsUeLeK4yYFrAI5fqTAq0yOmxVQ3cXxCwUS
znLcosBfTRy/V6CsjeNWBSb0quHcvwIyQ47bFeCZcfxTgfF2HKvkY7I/x2r5
2JrCsXo+CjZx3Csf0sMca+bDq5ZjrXyMfsKxTj4efeZYLx8belzi3H/+////
nzj3n48u0zg2yseApRwb5+OjM8cm+UAQx1PzEZXKsWk+xhZwbJaPifs5Rj7u
nuZ4YT5q6zm2yMeFZxxb5WPHF46t87G262XO/edjvA7HDvmYN4Zj53ysmcUx
Lx/ayzj2yEdPR4598lHny7F/PjZF/8//ByKQXvc=
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 
              0.49019607843137253`]], 
            LineBox[CompressedData["
1:eJxdl398U/W5gAPjKlxgK16cUYtGQY0ILgx0UWG8yg8rFglYNGChaWlpgELT
Nm2DVA1QSpSCASoEqRARtDoGEYtWVyDy41oFIUrFKqhB0WWKIzqcQXDe3c9y
zvn28R8/j8/z8vb1tKfhmoLSSUVdTSbT8f8ymf7/3//5Jzly395RV/00e9XI
9H+QcUO/e/6Wcxp3l1nLrNsHr1yd5gxZHXjlpWO3NqS5r5S8O/C5v53R2Cxf
Fwz9rvv+p9KcKdNfG9XyyK41abbIJR98ua3nN2vTfK0sqPvXmkMz1qV5gCyZ
HVx3fsL6NF8vC695p2hwlw1ptsrh26p/deKGZ9M8UE4vy91+aMHzaR4kT3b9
tnnwpy+k+WZ5aMiBu9tnvZhmmzxzR2n7tuv+lOYh0jW/Y6j1ij+n+ffi2Ons
sXTi9jQPlQNP51qHno6keZjsT70+5vq8HWm+RQ7XzB8ytGdzmm+V7xvN9wy9
sDPNf5AHRl1XsFda0myXo7tGznnz6zfSfJvkDzywcddvdqf5dsk8eYP50VPR
NN8h6yPnf5ly+b40D5fZ71zberz5QJpHSK9b53cZv68tzX+UK4ff6Dg87lCa
R0q3kZ9t7NY/lmaRCSdCS16b8P5/2C8SbfXWDgy1p/2dctmitidzvziW9nfK
iDk7z4wxf5T2d8mw53tdVdb/eNrfJVWyN3f3uRNpP0q+eerX33y49tO0HyXx
Tb+0ffDLZ2k/Wn5/lbPbtPXxtB8tv27N7Zl9zcm0HyPf5DliexrS7B8jKyZN
f2dBSvNjxV6+b/Vf7/s87cfKOfMnq3s/nWbT3fKvwV1Lnzuu+bulIfP8K5de
+kXaZ0nX955/afXdafZnSfbBYOpyr+bvkYOmpp0L1mv+Hjk30vePWbs1P05a
Z278fP4nmh8nhx9teffGc5q/V1ZVTr36yz6n0v5e+cI9dNPF1jSbsuXkxkXX
xu/QfLZkT/4wuGO85sfL5p4b9rw+TfPj5WjBgSPWEs3fJ+vLArmD5mv+PvnN
axkV39RqfoKM7HchL/Ck5ifIkLo9U69Zp3mHHL96xKXvPZtmcUhT1oZh21/U
eofcM+Wx12KRNEcd0mdnJDvrNW1+ohT+yvbM9bu0+YnysfmRZQ/v1eYnymvP
dZ898S1tfqIcW3njwNcOavOTZMHFB2pfPaLNT5LZo8L9phzV5ifJmsk3bnrh
mDY/SSb+Ov/Uix9p8/fLjDne72ee0Obvl+/31Nz05afa/L858c7EgSe1+ftl
z6hL1t/xhTafIyOG/GV3vy+1+RyZNOzprh98pc3nyIK3Ro4tSmjzORIL9O79
/t+0+cny4SV/WHrVN9r8ZLlt+ZF1409r85Olx1LTV/nfavOT5ZKTi45M+7s2
/4B8l1O6aNQZbf4BuaJwfqpvUpt/QO69esvPRzWOPiB32uqGLfpOm39QzrzX
94prvtfmH5TpJ/v32KGx/0FpPLVwxK3/0OYflNy97x7bprHJKfsTFx3PPKvN
O2Xjgc/sCzX2O2VbpOPtExpHnXJsjzXH9oM2P0XmF8+vr9FYpsg9Y+dftldj
/xS59+Jxy7r8U5ufIrmfHvLcobFpqrzyVmy0R2OZKjUF180Pa+yfKvU/NFQe
0uenSsm3b4XO6vMPydHE/9x2+Y/a/ENScot9y+0a+x+SaZ4e103ROPqQ/Lm9
909ejU25Ym7s6Vqhz+dKfOcTy7fo87kyMDWu+Q19Pld+e2x7l8P6/DSpWHbt
xs/0+WliXTdnxxl9fprcP6Xb9H/p89NkaV7+mz1T2vx06TLu1nOXaSzTpTH0
ytX9NfZPlyN99mQP1jg6XSYOuWHNrfp8nuzNeP83I/X5PPnVkMTBsfp8nsjC
8x+P1+fz5JPUwOwcfd4lK/uMGjxVY4tLurmPP5Gn/3kuWbCvzFOoscslsd2L
Em79z3fJ4KzwhRKNwy4Zb63b6dH3uSR716ArvRrHXbKlz8fDqvX9+XKTd0iP
h/X9+bJmx50bavT9+eK8dNW5R/X9+eK332xZqO/Pl5nHI79drO/Pl967x5+s
1ffny5lnP15cp+/Ply/8H3YJ6PsLJK9X1fTH9f0F0l4bbnxC318gR3/8Zfcy
fX+BvP59l7Z6fX+BBHd+8vpyfX+BvPNdaM0KfX+BHLiql+tJfX+BFM/96rKg
vn+GOGa8vEdnywwpua7duVLfP0OO+dac0tk1Qxb7+xeu0vfPkOYR9R06h2fI
zI6371qt758hLzXveU7n+AwpnzLigs6mQjk4yDS+Qd9fKNJj5xqdpVDObD/3
kc6uQrnpiumXPaXvL5Tn/1w0QedwoeyaHFikc7RQrqwd+rLO8ULpceXB4zqb
iuT6US91XaPvL5L1Nw+4Xmcpkn4Ha8fq7CqS8sI+hTr7i+SIvcdjOoeLxGp6
fq3O0SLZX5y5Ted4kSQXNe7V2TRTvhoy6QNj/0yJPlb0lbF/pvw+9dMPxv6Z
8tIPQ7ut1ffPlJbEzX10Ds+U7HUX99M5OlPMBR/eoHN8prw/c+cQnU3F8uaB
V2/X2VIs3+7/+106S7HMPD9vnM6uYjledfdEY3+xdP+07kFjf7H0DN4+zdhf
LGej8wqM/cVyfvXNxcZ+t4waWjvH2O+WLV/6So39bnn82ksrjP1u6brZVWXs
d4urumC+sd8t9l7X1Bj73XLnXZseNfa75UjlN35j/yyZvKzLYmP/LEmcS9Qa
+2dJa/uWOmP/LPn66B0BY/8sycvd9rixf5ZYlpqWGftnSfKGW+qN/bPEefS+
5cb+2XLTqQkrjP2zZYP/9ieN/bPlrQ0ZQWP/bEl2bzfYP1seyK9baeyfLZuu
u3GVsX+2/GHHLoPjs+XiMWNWG/vnyBDTmwZb5kj96SENxv45Ej0fMtg1R1z/
/aPB/jnSejL7KWP/HFlx23qDo3Ok9vXPDY7PkY0/9V9j7C+RZYE8gy0l8sbn
TxksJbL4kbcMdpVI731nDfaXyOi+V6019pdI/dujDI6WSHjoTIPjJTKgcYnB
prniGLvJYMtcWVzaarDMlZcntBvsmis/X/61wf650vXnn5X9c+X+/hkhY/9c
OfiKxeD4XPn4vd8ZbJonx58ZYbBlnky5ZZzBMk/GvDLZYNc8uc3mMtg/T7bs
nWVweJ5c9Fi5sn+e9PY9rOyfJ+/sXqjsL5UjBQFlf6k4y1co+0vlwZ9WK/tL
5cWL1in7SyVz0zPK/lJZeuxZZX+p/G3rFmV/qSwY/KKy3yN78rYanOGR+nHb
la/HI+azLxts80hmQbPy9Xnk4LpXDXZ4JLGxRfl6PRL1vWGwxyP3WluVr98j
1+3YZXDQI2su36Pc45FN+VGDIx65aPmbyn0eGbthr8Exjzy/dp9yr0dkwX6D
kx75cdwB5f4yWdL9f5X7y2TpToUtZTLn/reU+8uk9guFpUx6FLcp95fJpZ8p
7CqTZ7PfVu4v+/ff3xX2l0lHz3eU+8ukX57C4TK5/E8KR8qkPKlwtEz2/O6g
cn+Z1M1SOF4md25QOFkmeYcVNpVL9k8KZ5RLwbWHlPvL5YexCtvKZbJbYSmX
Q3UKO8qlcZPCrnL55S8Ke8rFelRhf7nck1A4WC6rziscLpff9X5Xub9cpJ/C
0XJJ3qRwrFwm3qZwvFzqxiicLJc/ORQ2VcjHUxXOqJD+hQpbKmRdicK2CnnQ
q7BUSPEChR0V0rFQYVeFvL5UYU+FmJcr7K+QCysVDlZIxRqFwxVS97R6f4X8
cYN6f4U896x6f4Xs3qzeXyENL6j3V8hNL6n3e2XJVvV+r0S2qfd75YWIer9X
Sneo93ulT7N6v1eW71Tv98rXr6r3e+XGFvV+r2S/rt7vlUlvqPd75a6/qPd7
5epW9X6vJFSOeWXjLvV+r9yzW73fKydVNlXKvD3q/ZXyd5UtlVIcVe+vlMMq
S6UMeVO9v1LqVHZVygcqeyrl6r3q/ZVSqHKwUsIqhyvlI5UjldJjn3p/pdhV
jlVKkcrxSlmmcrJStqtsqpLDKmdUyWmVLVXSfb96f5Vcq7JUyXCVHVUyQWVX
lRSp7KmSKpX9VRJQOVgl61QOV8kWlSNVsk3laJU0qxyrkt0qx6vkgMrJKnlX
ZVO1fKhyRrXEVbZUy1ed7q+Wv3a6v1rOdLq/Wr7rdH+1/LPT/dWS6nR/tZzv
dH+1mA6o91dLN5Uj1dJd5Wi19FA5Vi29VY5XS4bKyWrpo7LJJ5epnOGTTJUt
PrlSZZtP+qksYAd6F7wH7EcfhA+DI+ij8DFwHH0S3jS/M2fM79xb4G1gQe+A
d4E96P3wQXAYfQQ+Co6hj8MnwaaHO/cZD3f2FrANvcA7wC70Hng/OIg+DB8B
R9HH4OPgJHrTAjx/sGUBvv/hBexA74L3gP3og/BhcAR9FD4GjqNPwptqcH8N
vv/hbWBB74B3gT3o/fBBcBh9BD4KjqGPwyfBpkfw/f8Inj/Yhl7gHWAXeg+8
HxxEH4aPgKPoY/BxcBK96VE8f7DlUXz/wwvYgd4F7wH70Qfhw+AI+ih8DBxH
n4Q3PYb7H8P3P7wNLOgd8C6wB70fPggOo4/AR8Ex9HH4JNjk79x39+P/B9iM
3gJvBdvQ2+EFnIXeAe8Eu9C74T1gH3o/fAAcRB+CD4Ob0EfgW8BR9G3wMXAH
+jh8ApxEn4I3LezM3RfifQhvBlvQW+FtYDt6gc8CO9A74V1gN3oPvA/sRx+A
D4JD6MPwTeAI+hb4KLgNfQy+AxxHn4BPglPoTYvw/MEZizr3ZngL2IreBm8H
C/oseAfYid4F7wZ70Pvg/eAA+iB8CBxG3wQfAbegj8K3gWPoO+Dj4AT6JHwK
bFqM9/9iPH+wGb0F3gq2obfDCzgLvQPeCXahd8N7wD70fvgAOIg+BB8GN6GP
wLeAo+jb4GPgDvRx+AQ4iT4Fb6rFz38t3v/wZrAFvRXeBrajF/gssAO9E94F
dqP3wPvAfvQB+CA4hD4M3wSOoG+Bj4Lb0MfgO8Bx9An4JDiF3rQEzx+csQTv
f3gL2IreBm8HC/oseAfYid4F7wZ70Pvg/eAA+iB8CBxG3wQfAbegj8K3gWPo
O+Dj4AT6JHwKbKrD+78Ozx9sRm+Bt4Jt6O3wAs5C74B3gl3o3fAesA+9Hz4A
DqIPwYfBTegj8C3gKPo2+Bi4A30cPgFOok/Bm5bi538p3v/wZrAFvRXeBraj
F/gssAO9E94FdqP3wPvAfvQB+CA4hD4M3wSOoG+Bj4Lb0MfgO8Bx9An4JDiF
3hTA8wdnBPD+h7eAreht8HawoM+Cd4Cd6F3wbrAHvQ/eDw6gD8KHwGH0TfAR
cAv6KHwbOIa+Az4OTqBPwqfApsfx/n8czx9sRm+Bt4Jt6O3wAs5C74B3gl3o
3fAesA+9Hz4ADqIPwYfBTegj8C3gKPo2+Bi4A30cPgFOok/Bm57Az/8TeP/D
m8EW9FZ4G9iOXuCzwA70TngX2I3eA+8D+9EH4IPgEPowfBM4gr4FPgpuQx+D
7wDH0Sfgk+AUetMyPH9wxjK8/+EtYCt6G7wdLOiz4B1gJ3oXvBvsQe+D94MD
6IPwIXAYfRN8BNyCPgrfBo6h74CPgxPok/ApsKke7/96PH+wGb0F3gq2obfD
CzgLvQPeCXahd8N7wD70fvgAOIg+BB8GN6GPwLeAo+jb4GPgDvRx+AQ4iT4F
b1qOn//leP/Dm8EW9FZ4G9iOXuCzwA70TngX2I3eA+8D+9EH4IPgEPowfBM4
gr4FPgpuQx+D7wDH0Sfgk+AUetMKPH9wxgq8/+EtYCt6G7wdLOiz4B1gJ3oX
vBvsQe+D94MD6IPwIXAYfRN8BNyCPgrfBo6h74CPgxPok/ApsOlJvP+fxPMH
m9Fb4K1gG3o7vICz0DvgnWAXeje8B+xD74cPgIPoQ/BhcBP6CHwLOIq+DT4G
7kAfh0+Ak+hT8KZgZ+4WxPcDfC9wBvq+8GZwJnoL/ACwFf0geBt4GHo7/HCw
oB8NnwXORu+AzwE70efCu8CF6N3wJWAPei+8D1yD3g9fCw6gr4cPghvQh+Ab
wWH0m+GbwFvRR+CbwS3oW+Gj4P3o2+APgWPo2+E7wCfQx+FPgRPoT8MnwWfR
p+AvgE0rO/fdVuLzALgX+gz4vmAz+kx4C3gAeiv8ILAN/TB4O3g4eoEfDc5C
nw3vAOegd8Lngl3oC+Hd4BL0Hngv2Ie+Bt4PrkUfgK8HB9E3wIfAjejD8JvB
Tei3wkfAzehb4FvBUfT74dvAh9DH4NvBHehPwMfBp9An4E+Dk+jPwqfAF9Cb
VuH3P7j7qs59L/gMcF/0ZvhMsAX9AHgreBB6G/wwsB39cHgBj0afBZ8NdqDP
gXeCc9G74AvBbvQl8B6wF70PvgbsR18LHwDXow/CN4BD6Bvhw+DN6Jvgt4Ij
6JvhW8Ct6KPw+8Ft6A/Bx8Dt6DvgT4Dj6E/BJ8Cn0Sfhz4JT6C/Am1bj5381
Pv/D9wJnoO8LbwZnorfADwBb0Q+Ct4GHobfDDwcL+tHwWeBs9A74HLATfS68
C1yI3g1fAvag98L7wDXo/fC14AD6evgguAF9CL4RHEa/Gb4JvBV9BL4Z3IK+
FT4K3o++Df4QOIa+Hb4DfAJ9HP4UOIH+NHwSfBZ9Cv4C2NSAz/8N+P0P7oU+
A74v2Iw+E94CHoDeCj8IbEM/DN4OHo5e4EeDs9BnwzvAOeid8LlgF/pCeDe4
BL0H3gv2oa+B94Nr0Qfg68FB9A3wIXAj+jD8ZnAT+q3wEXAz+hb4VnAU/X74
NvAh9DH4dnAH+hPwcfAp9An40+Ak+rPwKfAF9Kan8Psf3P0pfP6HzwD3RW+G
zwRb0A+At4IHobfBDwPb0Q+HF/Bo9Fnw2WAH+hx4JzgXvQu+EOxGXwLvAXvR
++BrwH70tfABcD36IHwDOIS+ET4M3oy+CX4rOIK+Gb4F3Io+Cr8f3Ib+EHwM
3I6+A/4EOI7+FHwCfBp9Ev4sOIX+ArxpDX7+1+DzP3wvcAb6vvBmcCZ6C/wA
sBX9IHgbeBh6O/xwsKAfDZ8FzkbvgM8BO9HnwrvAhejd8CVgD3ovvA9cg94P
XwsOoK+HD4Ib0IfgG8Fh9Jvhm8Bb0Ufgm8Et6Fvho+D96NvgD4Fj6NvhO8An
0MfhT4ET6E/DJ8Fn0afgL4BNa/H5fy1+/4N7oc+A7ws2o8+Et4AHoLfCDwLb
0A+Dt4OHoxf40eAs9NnwDnAOeid8LtiFvhDeDS4x+v8DdgfJNg==
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
E5a/DZOuz5/f8Irlb0N7i2Dc9U6Wvw1/JNfVLnxl+duk8zDP9uxflr8NrnrW
584NjKb8bfhRsnfVZQVy6zZIXiQPuT2GzHFDdWr2kOYpZBU3uOeuNfs0gww3
OK1cfFd+PtnBDad/d2XPWkrmuiE48mfx+lXkPDese/RbKdqC5buhzlvccGIj
y3fDCzmP9tdOLN8dN2vVtkz2YvnuOLo6dKFTIMt3R3XS2NCiKJbvDr8+NzR6
kli+O6ad0TNewWf57pDXNHi+ZzfLd8fsnQc+fT/E8t2hMXdu/MZilr8dWRXV
eyrPsvztuPtr2ZJZlSx/O76kcXfsr2H52+F+2WvO6AcsfzvGHOzJED1l+dsR
MFg+efQblr8dIbnHp+Z9ZPnbMaHuobvWD5bvgeuhN2c69uFSvgd0Cj78mTWA
DA9c7uN19M8gsoMHRky8rVM/jMz1wL/07P2Hlch5Hqhuc+2KHEOu9EBWVY3K
xonkVg9cbbJbvFCVzPFExvPTy5U1Wb4nHIr9FvyeyfI9ETpHd+yrOSzfE4Fh
Rd21C1i+J75c8Kg4r8/yPTHHfBr3CFi+J25U8JfmrmD5nrC6avWTv5rle8F2
jfrZ1LUs3wsvMy4FJFqxfC+EdTfqJmxk+V74pzG9f9IWlu+F2DlRT9OcWb4X
Vm4UXxW6s3wvnDVYeG7fDpbvBc8Wrcrjfix/B5ZmrH5+KZjl78C6gfaj70ew
/B1Y5aPr2RHD8nfAZmP5s35JLH8Hcm+e852czvJ3ADqjpi/ns/wduLbnrNw2
CcvfAbvQ6BEZe1j+TqxusFt9Lo/l74TR/AUn2w6z/J14VNPXdOQxlr8Tf0zP
jDUpZfk7ETlqpSr3DMvfiX0aJ90uXGD5O1Go/u3d9yssfycytyuX6t5g+d44
/HPihYjbLN8bxvuU5KvusXxvHG8aeGToQ5bvjZIvg0T2T1i+N3JldOqLn7N8
b8z8nOvQ9zXL98aGMGdju3cs3xubdY+knvnI8n1Qe1Q4XekrWcEHSXpmM4J+
sufxQas+h9f8j6ztg5t/WzcZ9Y+h5/NBz21VQekgsoUP1N73WaCiQHbwwbZT
5auFI8k+UsemPJAbR+b6oLnh/IM4FTLPB2/mCs37qJPzfJCx0XlV7AxyqQ9W
Tom4OmAOudIHkTnzKjMXkOt9oPfn1cqxi8mtPqioe297ZBm52wcrbhf/0F9F
5vji0m/ezPtmZAVfHLjC+eppSVbxxa0qrw1ytmRtX1iMN7E6upn190Wu/tDP
5s6svy9MZfTmfXdn/X1hc2f1uEM7WX9fTHaoKbYMYP19UTDC4EP/MNbfF+VX
FrVWRLP+vjC4uzYpOIH19wUPo97OT2P9fVF/dnq/Xh7r7wvHYK3nlySsvy+c
g25FJeWy/tL7bc57bXWQ9ffDKoH7aPUi1t9P+jeAxtG/ill/P+zakvvuwWnW
3w8G5VHC0vOsvx+cepaM4l9h/f3QsfdAUOAN1t8PYTOCyjffYf39EDMw47lJ
A+vvB72cio96j1h/P7xa1do56xnr74f29KYnaq9Yfz+ofU69NLmD9ffD4kkv
cyZ/ZP390NNa56P2lfX3Q8kcQ5NZv1h/P3xdtlhdr08s9feHTEz5YJOBZAV/
+B2u+GM/hKzij3dnLDmBI8ja/vikmDqaP4YMf1wOC151chLZwh/Tx88XPVQj
O/ijQPyyz98ZZB9/rO13WDR9Lpnrj8EDCy026ZJ5/jjXoLyIt5Sc54+wmdrW
NUbkUn/IxmoWDDAlV/pjXPvyOcbryPX+aNe8+TPDhtzqj6O1fwc0bSZ3+8NK
1cBO3YX1D4Cu+fPeEA/WPwANJkve3vNh/QNQ+L1i2oxg1j8A8zWrq1IjWf8A
fMu/W/EhjvUPQNyilaNsUln/ABRfO/rwOo/1D8A9rah/OtmsfwDGC4xzju5l
/QMgNzMnf2o+6x+AFr8+0w4dZf0DoD1x0nT1k6x/APbNERwvPsf6B0A0sO8Z
vcusfwDG2I83vl3F+gfgvI3YY+sd1j8Qu3drTP7RwPoHInyVyCe7ifUPxN+h
hzYves76B+LloildL16z/oFwOv9GNbOT9Q/EKc3aAQZfWP9AcF+W7e75wfoH
omBgalsJJ476B+Jtmn7HjoFkXiDOLassnjOUnBeIJW9GLvypRC4NhPGsZam3
xpErAxFWt+b4rink+kDEp5sf9JlGbg2El+lmXzNtcncgZEfsmThrIZkThEAV
7RPDl5IVgnDrk6nmHyOyShAqLNWyOk3J2kFI3/6zvdWSjCC8v66g/2Qj2SII
Mi5nUpscyA5BKK5b/KzZjewThD0j+um27WT9g/CwzTPvUyDrH4Qpu1+Ok4lk
/YOQa/jkxLh41j8IEWfrHHXTWP8g1O82WGgnYP2DwA29MD9mF+sfBNPb9U7F
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
nnX9ONtBdo9B8ISf49W+k31ioHKrNSpPJo32Pwad95XmTRtO5sbgnPLsNVcm
kZNjsPbYh1anWWReDEzn6/VV0ifnSNdvGHfjvjE5LwaT+tcs2b+BXBSD0I69
3FAXcmkMHK9POOjoRy6PgdXtnrM2XHJlDKDY+2BTJrk6Bj/fqQ3dmUuuj4Gc
RUFY5lFyUwycVtzRulRObpX2NVLEz5vk9hj45k+qWvGQ3B2D/TI19ftfkXtj
ML18cITsZzInFgPnDX8azUmn/Y/FmJB5AwcMIyvE4mLylxF7JpCVY5HysN8Y
g5lklVhElxrO+ryIrBmL7ZWVbmUmZO1Y7A889zzBlqwbi3Vc4fFtbmTEQsa4
+/WGILJxLApddh3akEC2iMUj5bQ/riKybSw+1H0enHCI7BCL+fzZb0+fIrvH
4r7gfuHnq2SfWIwr2L9tWQM5JBYh1zMW57WSudJ/P+3W8mHd5ORYHKw7Jsj8
R+bFInPw3RUTh2XQ/sdil8z3wMsTyXnS97VUbYm3FrkoFgZZGWe0l5JLY2FW
sudHX3NyeSz2Xfms+mYzuTIWdm92rH2yg1wdiwf/qWQ/jyTXx+KVh+2obxnk
plj0LNzTPmEfuTUWrepHp9mUkNul64fEfD1wmdwdiyZTG/e/d8m9sYjflrfP
6zmZE4eQI/JnOj+SZePw5VZKdRQnk/Y/Dvpcw29TFMnKcVi1LH/T48lklTjY
3rcedXAuWTMOe38vM4o0JGvHYcxCYT9PK7JuHLKtzvh5upIRh4/zNpRGBZGN
4zDfb1tzfhLZIg45k8aOaMkh28ZBI6gjaPpRskMcJgv56qkXye5xCJo7cvmf
WrJPHNq9LnXEtZBD4rA6ZOzSid1kbhwcPWQcavtk0f7HYePfPT6ZI8i8OETZ
m/Jd1Mg5cTjXdvOV+UJyXhyO/RqSusaEXCRd/8SzwGETuTQOkQ4hm5J3kMul
6zuUa6uiyZVxWK8WM26UgFwdhz/d83ZE5JPr47Bhgczr72fJTXGwvjOyMLmG
3BqHA9Ytj7SektulfbXVc999IHfHYfzxePkWDo/2Pw7Lpv0+v24QmROPPnz7
7fUjyLLxyB1XNstuAlkhHqtOLx77UZ2sHI8OH/vlWdpklXiYjS04v2gRWTMe
Iw8+Fn4yJGvHw/NIW9vpNWTdeDj2e1UZY0NGPEYvmrR4kyPZOB4XRo7whCfZ
Ih4Gau5OcwLJtvGQM+ldoBVNdoiHg8HdPwtSyO7xeDFXvdZUSPaJR+Pqnee8
9pJD4uG/ZNXDXYVkrrRfW7z+g5Pk5HgE3NfijKkg8+IxqYur53mTnBOP7v6d
f2rqyXnxOBs8ymV+M7koHlo3nsYWvyaXxuO7nqXv3G5yeTyaM66urPpJroyH
fmrxWOf+fNp/6fs92SAzTIFcHw/D91MmVI8lN0nzZtaHZ6qRW+NRNsNQz0mb
3B4PlaGTdxrqk7vjMXWi6by5K8m98SjmPj+gtY7MScDOD3oPdO3JsglI9u5p
tXAjKySgfkx7W5AfWTkB7xpm/TgaSVZJQN9hk3S7ksmaCdh8YEPFEhFZOwHN
4SfzcveTdROkf39Zyxl0jIwExJqLviWcJRsnoP9ozf0K18gWCfjm3TvyaB3Z
NgHnZukFWz4mOyRg21LX53Kvye4JOJRs4FnfTfZJwP66BwsLfpNDErA1M9gp
TVZA+5+ApJ7bslwlcrL0fpfPG8erkHkJyNGKQM5Mck4CdP5lD63QJeclIML2
RcNHI3JRAhzvhB+Zt45cmgDB2uaypM3k8gTEr7gxonM7uTIBMyPWvXEIIlcn
4N6i92ZvYsn1CThibukekUVuSsDN8bkbVXPJrQnoOKezvLmI3J6AMz+fG+af
IXcnYGjBBW7UNXJvAj7H6Y/zuEfmJOJgps4Ct6dk2URsG9/YE9hBVkhE47CC
MMk3snIiWuTF76v7CWn/E5F56r3nEEWyZiIOPbZWcZlI1k7E8KYXs+pmkHUT
UVjT54KxHhmJkDxLf/ffSrJxIoKOVL4OtiJbJMIqZvn9GU5k20RYP1R59Nmb
7JCIMlHjuLpIsnsi/CXLqy+kkX0SUTzwkkzFLnJIIsqfy/ysLyRzE6FjZ9rw
4ww5ORGKwfPKFlSReYmo5j6oTbpPzknElZyzK7payXmJUFrdYuL2kVyUiP+m
VMl8+0MuTcTz9ZsO7pIX0f5L36/N8LWW48iVibDf17hQZTq5OhH3jeRT++mR
6xPhU3fI//cqclMiprUNVB1sQ25NhIXmtFuzt5HbEzH3b2SWRyC5W/r+3GWO
X4wn9yYiod1wjaqIzElCs/va/AOHyLJJaJh56+WC02SFJJy5/WTRq2tk5SRY
zTJ9XnCfrJKE8H1e/WJfkjWTIPNEszngM1k7Ce3T+uyJ7ium/U+Ca5pCyMHh
ZCTB8dmQomdTyMZJMFM2d5wzj2yRhP1ZN5/sNSTbJmHOkmFmqlZkhyTwRrl2
XXUhuydB7HX8e2gg2ScJHtb++aaJ5JAkjJ7cM2thNpmbBKXHo+8tLiInJ+Ha
7ZDr9ufJvCQYTnBdlX2bnJOEKr8X2Z3N5Dzp84mPfbbvIhclwXrOEkn7X3Jp
Elqy717NUpDQ/ifBRbjxjOUUcmUSzhrlnpyjQ65OQs3Q8b0zV5Lrk2CfpXnH
yJbclAQcbtkR6kFuTYJl/IypdyLI7UkoeXRv7qIscncSxn92en7zALk3CaZD
Nvj4lpE5yfib/X3moltk2WQECoM2T35CVkhGDufNao0usnIyftjDwIyTTfuf
DFVtzwTeCLJmMrKOLNreo07WTsa+tYELQxaRdZPRfOXRkvHmZCTjC1f5Tqsj
2TgZz96817oZSLZIho2c7IXaFLJtMjzqNC/37CU7JGNMX6XMpafI7sl4zNsb
efQm2ScZE64de6HbTA5JBleir/DuI5mbjCc6rg6XZXJo/6X9djhMPzuGzEuG
2oaUWw1a5JxkTP7qIlA0IudJPaTgTeBGclEyZvyYM/nfTnJpMlwOqeUVx5PL
k9EqfHItZje5MhlJyp0d4aXk6mQEJC4Ozr1Jrk/GMfHPuldPyU3JcHpUYGn5
hdyajKZVYzzb5XbR/ifj36/EqAIVcncy2t8nfU1fSO5NhvWT8YtyzcmcFGyx
O3Ou0ZUsm4JDX+Y3L4gkK6SgyfXv8OsisnIK3OS774YeJ6uk4JVTAHdTFVkz
Bf+Oxu12f0rWTkFX2TH+gR6ybgru3x71dMCQ3bT/KbCtFHzKUSMbp+Cpeo6p
7VKyRQpSCte5rrAh26bgcdyhiw4+ZIcUnFgyr+5oCtk9BS/cvMdOPUT2ScGY
vGy1ugpySAp0T1f5FfxH5qZArqs7qbSbnJyCQBGn6/2gPbT/KbAU356xUY2c
k4KztpPrew3IeSmYX9fsdseOXJSCL/tbYhsCyaUp+Fuodnown1yegnfxdelh
x8mVKVD2m1AwsZpcnYLBFvzs3lfk+hS8bXv1S5aTS/sv3R/rMT4W48mtKfB4
nCK8p0tuT4F1UefAJGtydwo2azj7BvuRe6XPbxkfdCCLzElFhrt7Zf9ismwq
9B6W/cy/TVZIxULnogfR7WTlVMwo1fgtGbCX9j8V99trNN5PJWumornutXyk
IVk7Fav67XdZ40TWTUXi8S/v7GPISMVgm9tbjueRjVNxcD4ndnEl2SIVriXB
Y4a2km1TcWWJRtdkzj7a/1SklGpWh6iQ3VORfK46ZMQysk8quv6T1H92JIek
4sfpwPzRcWRuKhKuH6uNzScnS/ts6pk6/yaZl4qsmfz02e3knFQIJ9m/8Ru0
n/Zf2u/wY2XOLHJRKgq9TYc2rSWXpuLtvutlv/zI5ak47qT711NCrkzF5hE5
rdMukKtTEXzzmfWCFnJ9Khq1R2iZ9Mmj/U9F7+hXYftHkFtTYR51QjRRndye
iv82/eLc0iV3p6JufdKqXabk3lQslmz+LN5C5qRBR74l45IvWTYN3fW3ixQS
yApp6Plh1ZiVQ1ZOg1fptHz942SVNGjtiy5RqiRrpuF86dT0cY1k7TSc1Ulv
smgn66YhwezZnDO/yUhDZFUfPRPFA7T/aRCtOsMfok62SIPdd9HLvvpk2zQM
95j9cJoF2SENvxVHjopzJbtLrdBhNSyc7JOG0+F+Rvd45BBp/rCS3dcLyNw0
PNjSqtBVQU5Og1pwkbPZAzIvDTdlRqx/2UHOScPl78UHT3AO0v6nQbYkd8yZ
0eSiNIwoPB77RYtcmoamKo/jnivJ5dL3M1Fv+8Qt5Mo0NHq4ZskHkavTsL4v
fizIJNengZ8wL2FfAbkpDRpqz0YaXSG3puGFSE2g2URuT4N6id1rs0/kbun+
3DL5d3IQnW/pTUNLlV2j7VQyJx36Xcc2L19Klk1HPFdrl7ctWSEd9pOqUl74
kZXTcUZm88JdGWSVdMwaO/pEdhFZMx0jP2zu13KdrJ0OK8Fgsx3Pybrp+OqZ
WrDyFztvk47xv77P9xydT/ufjiOHjFWfziNbpONvlNfe3RZk23QUGgQ+LtxB
dkjHEu1Lw/unkd3TUbBhWNrpIrJPOl7dqE8tu0kOScdmzRmOcq/J3HQ4Z+i6
nO5H54GS0/E2XvvT6SlkXjpOiCRe8svJOekYNcJj+WVHcl46dvjbvLkdQy5K
B0fx/YN5B8ml6ShLuJH58xq5PB07dzccVGkjV6ZD+3l4fmF/Op9UnQ71n++1
+Rrk+nQ0VBh8aDEhN0n7D6tOE3iRW9NxtGrVteIscns6op10rOaeJndL39+P
3iFTHpF70zF2jP7NqF9kTgb2f5i8ZbUKnZeSzYDm6f1XE1eQFTIQ6nXp7XxP
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
sMGB2SsbC4deMvKX+v8AWh3rJg==
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxd2HlYTO3/B/AQyhOyZx/LkxCyZ3+jyNqgCPFMG2lTaV+nfdpnTTyWsZc1
e1kylgghhJAMQh5b9uy/+V3f+z7nNv5xva67e855n/f5zJyZHq4r53o0NDAw
uN/YwOD////fv7oJ//tfS/43gHiLb899PauJjfC7w0mh2LaK2BS9Mj4qnP3u
EbeF5w/7ghubK4nNkFZz4Wbx89vEXVDx9cC+vybeIhYgr+TGUMX+m8Q9MaXb
TJNuY24Q98b+iKuyyOpyYnOE7T8aMnfkNWILeBUMXtGgpoy4Hy79cOlxWXOJ
2BIbz87vXHWplHgg8jo9X2D8+zyxFWbFYYjhohLiwdh5yttAXHmWeAjyHbz2
zwg9QzwUe54Pq3UZepp4GIRDIt68M9YQD8c/LccYXKg7STwCFxrsbr63/jjx
SNypvVg3pc8xYms8877hvi2skHgUNks6Xhn14gjxaPR9J606H3yYeAyc2i2b
N7/zIeKxaDvh4n7LOweIxyHEafHY49v3E4/HgKxtD7JSCognYPustocD3uwl
BsInrUxxfLb7fxYDH027f31Zt5OsT4Qb2vaXNMkn6xNxP/dH/LtOO8j6JBj9
Tiw+02YbWZ8Ey0lCe1XyZrI+GZGXJIvN1cTiyUj59J/PlyK6boMNRx7XGVXQ
dRvsHDB7/OI3dN0Wmd8GZr8x2kLWbTGzJL7+TC9igynwvb/5n8rxdH0K/vG3
9xm4iK5PReaj0SHngun6VPgviPNZI6PrdnDq/uvQrj103Q5t/zJo8PUiXZ8G
78r7bWOe0fVpMD+zMG5Eo61kfTquue+e10VALJ4OYct15X3G0fUZePZmSLD9
Iro+A3ua/ntSEkrXZ8JY6xNxSUnXZ2LjlLPfTQ/Q9VnQDp0R73KNrs/CteuK
V+df0fXZmJu/xnFqM3r9Z+NL0MJD1X2IDewx5+97PxJs6bo9xC7zLg1yo+tC
jLrheaZaTAwhYj0uGss20L8X4mzGpwbTThBrhHC7vX1cs3t0/xxs+nH0RuUX
un8O4r91+1TYbjvZPwc/1j/V7B1KrJmDbYXvuxfPITaYC6thklP/rSTGXHy5
ZNfCOovun4ufzbaPz99N989FfKr7jImX6f55OLXwzY+G/9H987C2+OybOiNy
f4rn4Y1JgbK5BbFmHnxqcycsnkrvXwfcXl/Zo2oZMRwg29BznjyZ7nfAp3/q
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
+fhM2s65NAWXj3w/wLk8BWN+OZ3iXJmC/Crny5y1Kfi30vgO59oULFnm+phz
ne78az1fc65PQdeC7vWcDST4/VPSsJrrXwKbhjtMOJtK4Pcgsj1nMwli1cYC
zgIJ4mbN7cvZQoIOlQuGcLaS4PzfXcZwtpZgYotNkzlDgobOtTM420ngVvZh
HmehBL6mJYs5O0lwrGyJG2eRBO3WnvLi7ClBSeNXAZz9dceX1YRxDpPA4vDO
WM5i3flXTUjmLJHA2GtbBmepBPWHq+SccyU41+J5Lme1BMlFJRs450nQ5n34
Vs4FEri+NNzJuVCCjdeW7+OskeCEZsshzqUSzKgsKuJcLkFbi13FnCt151MU
dpazVoJEaa9SzrUSvN6+u4xznQS93rW9zrleAnvnJbc4G6Si/mryXb7/VLTu
K3/A95+KGTbiR3z/qWjwcc5Tvv9UXG5s9ILvPxU+E7e84vtPxX3P3nV8/6k4
Z53xge8/FXM973/m+0/FhvzW3/j+U3Esf8hPvv9UXDEda/CQ6193fvGDGnH2
TMWbdc2bcPZPRcfvt404h6Vi15CMvziLU+F1a0ALzhLd+fqfMOUsTUV+lnUb
zrmpSD60uR1ndSqWuX/vwDkvFbFdJnfiXJCKzAURXTgXpqIiY1M3zppU9LYq
EnAu1Z3vgdM9OZenoq34eG/OlalIMNxhzlmbis3bEy0416biwSWHfpzrUlFy
o4Ml5/pUtOp6dQBngzTUNw4bxNkoDUbP2w3mbJqGkR3yhnA2S0OTlwOHcRak
YfuhncM5W6Thy9nOIzlbpSFmWbw1Z+s0bHtePYoz0rBeOngMZ7s07MyLGMtZ
mIbXQcfGcXZKwy7rd+P5/tPQb3h38P2n4Vm+zUS+/zSoKlwm8f2nweJdyGS+
/zRoRyXa8P2nYebzVFu+/zREWkmm8P2n4fL02Kl8/2mY5LXSju8/DXNOO03j
+09Dq7gx0/n+02B2t8MMvv80nP3ymnep7vo3K57J95+G42Mks/j+0zDl6MzZ
fP9paLj9L3u+/zR0sSrhXZeG4KhwId9/Gprvt5jD958O9fsbvI3S0cIjbC7f
fzq69O84j+8/HSnLDvMWpAPWsxz4/tPRUaPlbZWOHl39Hfn+0+Hn+5030mF/
NX4+3386Rjs3WcD3n44rQ5J5O6WjsW9DJ77/dDzsHcnbMx03VtXx9k9HYKDr
Qr7/dGisr/MWp8Ooeuwivn/d64Vt4y1Nx7Tufy3m+0/Hjme+vNXpOP7kCu+8
dOzp19+Z7z8d7a4l8S5MR6uaB7w16WgeNXQJ3386eucn8y5PR3HUHd6V6ahu
ar6U7z8d9YsCedemY2DyCd516TBdY/gP3386DmyeztsgA8/3Z/E2ysDPinLe
phm42LGViO8/AxWZ9rwFGZg6PoO3RQa0Iy/wttK9XrKBC99/BnaPtOYNnR39
eNtlwOHVZt7CDBxqcpu3UwYk+5q68v1nwPbdSN6eGWh2exlv/wzsWa7kHZaB
m/s0vMUZOH/0JW9JBmIl7dz4/nV5+o3nnZuBVTs8eKszsLJJBu+8DDQU7udd
kIGX6bd4F2ag8nQ9b00GzL92cuf7110v67G8yzPgK3HmXZmBvm8ieWszUOO/
lndtBgw7FPKuy8CxZxW86zPQ9lkdb4NM1HUy8eD7z4RZujlvU53HgrdZJqYN
XchbkIkXwQG8LTJhbpzK20q3/m4jb+tMGAw/whuZ6HrnMm+7TBRVaXkLMyGa
/om3UyZsexsv4/vPxEa/Lrw9M5E0YBBv/0w8d5/IOywT8WbzeIsz0W6mO29J
JtAomLc0E/KJSbxzM7GimYq3OhMCl6288zLx2u4g74JM1J47zbswE0Mqr/HW
ZGJ/0gPepZmYXP4f7/JMaI594V2ZiQtTDZfz/WeiQ4Qp79pMDHTowrsuExsq
+/Cuz8Q546G8DbLw4cU43kZZEEfa8TbNwibNXN5mWYg97sxbkAVrv2W8LbJw
+t5K3lZZ6NEonLd1Fua+iOONLAzITuNtpzv+ZzlvYRYa9/iXt1MWIky38BZl
QXl+J2/PLDy1OcDbPwvNM4t4h2UhRa3hLc7CDfEF3pIsrBh0lbc0C8f2VPDO
zYLhz3u81Vk43u0R77ws/N32Oe+CLHhXv+JdmIV7Me95a7Kw7vMX3qVZuDDl
J+/yLKT5N/Tk+8/Cp6CmvLVZaOFowrs2C69ateJdl4Xc3e141+vW/+7E2yAb
z2O68TbKhk9hT96m2fC4ac7bLBt7y/vxFmSj0/6BvC2yIQkewtsqG/u7jeBt
nQ3PPaN4IxvOPcfxtsvGwhjwFmaj5ZnJvJ2y8febKbxF2ZjVaDpvz2z0ajiL
t382Fr+05x2WjbhTc3mLszEw1pG3JBv1/Zx4S7MRdnYR79xsWE1bwludjX0n
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
KqHE0A==
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJw13Hdczf37B/AyQwghIwqRWShCeNkZKSGhqNAw6rR3nfauMzqnhSIphOwQ
Qsiu5JZdMhKSEYn4ne/jd133Px7Px7t313md6/MybkXb3tViSzslJaWnHZWU
/vfj///XNPv/f6yhH5Wg+yRO6HXxGVkFHmeil9XFPCarwe/kYpk08D+yOgZH
jh108+gDsga6dK5R66tXQR6MvJKmhEO/75K1MMC5pXHNxFvkYZBWzgk/0XSd
PAJzJhpsHqlbSh6Js/mL9ZqvXSbrwn/BxbfZHpfIY4COFk5vGs6Tx+HYp/75
zo+LyBPw+sITx+Ixp8n6ULIKHnb07gnyRCTv/PMl58Qx8iT8sBFfjc06Sp4M
+5b4p81jC8gGkHaecbPr13yyIZrcd80vuZlLnoJg6aHjc2bsJU+FzZ2n4cUr
2UaYclqv1mU7exreNRzfaRXJno7cYj0bv93sGfh7VzWl/AzbGIFPgwQ2FeyZ
+O4//f6QD+xZUC08rNOnYw55NjbEzHE0GsoGRFHd6+KnkYVAq3ZV/66r+HwO
2o3sHnjEhc/nIHjVECOPWD6fi/EDzlSa7+PzuXjSeXLVzEt8Pg/4FyeY8ITP
5yGpe/Za9WY+n4/cd0caX/TcR+fzMeFW8YeAMWSlBSjrpzK+ej6fL0C/IdeV
Xm7g84Uo+f61ytuXzxcib9L02mAxny/Cz0HC/KoDfL4I17QaGjdc5nMTbAmr
Odenms9NYHPgybYfn/h8MSwbvkl7t6d9ChfDPNPZz6c/73cJ+o56PM9wLJ8v
QUJEatj6WXy+FIX2nlEt5ny+FEMPjh4/YBOfL4NnbeLrMk8+Xwa1iuXXe0Xx
uSn2jTMt/iPnc1P4LPyYK87j8+Vwadfg/+gMny9HarPX1qobfG4Gyd+FPxIf
8bkZcsPfdunyjs/NIbyX2mPJDzLMse2V6Z9VHffTx5tjRJGm03h1cok5OuYm
i/4bRlZagawMHaeVE8lYgVGDNu7eP5vvr0DCKN+8SlO+vwLf1ve7+ng937eA
4dse7S46830LhD5zWhrqw/ct0CvhrK1OJN+3QKvLt9pDEr6/EpJtxeb9svn+
SuzJs+7jcJjvr0ST9yqfnef4/kqk5uSeOHeD76/CMecnDZer+P4qdPhUOe5E
Ld9fhYwsW9/kRr6/CrY/TxWv+c33V6Pd26NPVFXy6P5qbCtpyz2qThauRsXO
sW+hTS5Zjd57JGsujycrWaLj/EkFE6fzfUsEDfFKkCzk+5boK6lLfW3B9y3x
fc71Lbob+f4aXBlwLnLDNr6/Bpedpgqjffj+GsQ7dn+UE87312C65YOOJ5P5
vhVuzjQPK8rk+1YYiyfFx/L4vhVkJke0sk/wfSuIHkI94hLfXwvfsJhfNrf5
/lr8Vzd3woRHfH8tUqYbqDa/4vtr0cXT/v3xRr6/DtU1SzWcWvn+OuQoD6xX
70Q/nwrXYfGl8n1ne5FL1uHcev9US03++XY9+tmZd/qoS8Z6xc+PtQb+Bnx/
PTSKpmxWBt9fD8+0L5WhS/m+NYoELhd+W/J9a1z59tLG1Z7vWyO0euvHZzv4
vjV8/Wdnzffj+zaYVX/s4P4Ivm+DzUHmc9qL+L4Nyof9kq7L5Ps2MF3+qaJg
P9/fgG7Vr3Vbj/H9Ddh5bui1uRf4/ga8LfeuiCrj+xvgmLPN5/oDvr8R6qun
vlR+yfc3ovRitd60Br6/Ee+uaydvb+b7GzG1Xan2TqUDdN8WCw9YdyvrRtay
xalPIS5N/ciwxaizV7f3HUa2tcWclzdHTh1PFtpCdHtx8WojcrYt+p4YsMxt
HrnEFtNXTP0eu5xcY4u6KeUVWWt5vh1WH1+sfGIzz7dDyWqT3Vddeb4dNIed
uVrhz/PtcHX9vfjnkTzfDiu7D1R7J+L5diiYKXRuzOT5is//fGHht/083w69
XAf8+XGM59sjyrXH5pZinm8PQUjB3583eL49jq/8XNtcyfPtYeiybPjX5zzf
Hrv3nnn0sZ7n2yPBOa/P22883x6lHQZ8eP6X59vjq3eKW1WXgzR/Ez6b65+7
qU7W2oRWS9mjC0PJ2IS8f8rPCseQbTch4p7p472GZOEmjE/4WCMFOXsTgmy+
tI9YSi5R+HyvlR6W5JpNcDHNf2Fnx/M3w33/mdNm23n+ZhjWf2ww9uH5myFe
ujdudBjP34wSUe2+vok8fzM+rHEwUU7j+ZthuSk7/ONenr8Z7UpPbX50mOdv
xpcvEb8uF/H8LThbvt+s4CrP3wLXPQJP+T2evwUZr5o9hY95/hZ0Hdp1w9bX
PH8LlhfMNV71medvwbq1LYNmtfL8LZjfY3EX3Y6HaP4W+NsMUOutRlZygGHn
fsZ/BpK1HFDoeirtrQ4ZDkhRmTaxQp9s6wDLI0fUimeQhQ648OvLnLyF5GwH
rIo6fF+yglzigA/jrUuDrXm+A95NWzJmmyPPd0RAnLyblTvPd4TTycnuC4J4
viMi+753nBzD8x3hWLPyh7aU5zsifWj9yF67eb4jcgu/tFM+wPMdMXSqTPrl
BM93hLlKRe2rizzfCc49g39U3eT5Trh80PzJjSqe7wTrsMey8y95vhNK1kRN
LGzg+U4ovr/3VG4zz3fCV8O1Y3Yq0e+PS5yQPv1EqrQbucYJuw5mdEzox79/
dobFsCcBkdpkLWc8OqfZTjiODGcEH/+WFTCVbOuMuWp3rX3nkoXOEM39O9vb
lJztjO1nL5l7WfF8ZywJnCD32sTznRF1fll/HxeevxXvbNo99fPj+VuhHKdZ
HxTB87eibOzKBeHJPH8rYrxn/4rN4PlbMWSTQ1dJLs/fivtjDEIyC3n+VhRe
bLPZf57nb8WTGcqHj1/n+dsQaO3gXlLB87fh4ptZJ+8/4/nb8LR3tG/NO56/
DfPadK59/crzt+GbcmNWp788fxumjdjVY3CXwzR/G07ueN5vsjq5ZhuUli24
uHQoWWk7Tn5Y09VhDFlrOyCOVAozJGM7Fn4euz8LZNvteOYvV7q0lCzcDtmF
v+o1luTs7fDOTahvZ8/zt6Oi0lI4agfP346Zr+1rTX15/g5kleSqeYfz/B0w
ftm+T3YSz9+BnkkrPt1O5/k74Dpl5b5f+3j+DjzKumA8upDn78CQiVPOrzvP
83dggP7KEUnXef4OJP/LDLxawfNdcHd9bFnrM57vApEsUtWgnue74Mztj8tc
v/F8F6wf3j2p4C/Pd0HB35FVH7ocofkucJi0Y/j4vuQSF6hN7ygUaJFrXPBu
a+fGU2PJSq7I1Alxa5tC1nJFTadtPRbNJcMVd/pdKJOYkm1dMeTnun01VmSh
K5zVhuTqb+b5rtC7+OBemCvPd8UPv5k6j/x5vitMOvYqGB/F8wV4ImlxiBKT
1QRIa5Ssrd3Jr0eAF/s8omflk/UFOKQ7/PuuE/z6BND+NSTn30WyueLjrz1O
3XSLX68ANyXnH958SBYI8PKJtu2kWn79Akw6vnH6ro9kkQBz311w7NrCeQTw
GB7wwa89/fm7UPH5ut4p+9CDXCJA07qn7WwHkssFyOhya+d/OuQaAbrYH003
m0huEmDEsPQ/t4z5z/Nu2C+PLzMxIau5ofx0qNLNlWQtN3jN3pG3dCNZ3w3W
d6eUlG8lww0aPy+YWnmTzd0wz+GxxatQsq0bBjZZVrokkgVuOH749722NLLQ
DR59IpYm7yOL3KCjsm/J8EJythsCfne6f/Y853dDpz9mTy1ucH433L0zwL2x
kvO7YWrrD1nCC87vhqJGt8XjGzi/G8o6dU8ub+b87lhhscfgvFIh5XfHsT1z
dyR3Imu5o7406+tmVbK+O2wmNFyb0ZsMdwh8zer7aJDN3WHg8mvdJ02yrTu6
q/cYWjacLHBHp8KjhvtGk4XuUKr8kxWqRxa548R6tY22huRsd4TEKHtiBrnQ
He2b615qzyGXuOPQ/hs5HRaRy93xqvfZkvpl5Bp3zB95eeo9C3KTOxKWvuly
yoqs5AF791FGuzZwfg906Rd1NWoz5/fAg3l/Cty2cn4PRO8JbbYRcH4PhHp0
3b3Um/N74L+90XnTAzm/ByZcfdt7bBjn90CaRu/awTGc3wPDdzX1Vkvi/B5w
6eRwoEMK5/dA2y2L3NZ0zu8B4aiUzl+zOL8H/gzvUNGQy/k9cDXNr92bQ5zf
A7aTy3bWHOP8HrAMKMl+fobze6L8P72ezy5wfk+MTq6pf3qV83vC7mH6hOc3
Ob8nnK8PrX15n/N7YovrZOXXDzm/J+5USJLfP+X8nrB/15LQVMv5PaG/X7O1
5R3n98SKDqcftWvk/J44/NtjZI/vnN8TGYmd3g1s5fye2Hp9wMDRSvT/50o8
8aTEssSoE7ncE54HNj1ZrEqu8UTl5Ton697kJk/c2+SzXaDB/3/PCzkdit9E
DiGreaFx6rKHO0eQtbyQe/zSjFNjyPpeaDI9NOC+PhleaO6yx7VhCtncCzI1
/VmdZ5JtvdCu6HWkzjyywAt2kSaLFiwmC70wRe9VmIMZWeSF11mG02JXk7O9
8Ovn1a2H15MLvRAm6qbxwI7ze2FGW/ScVkfO74WrPY6/G+bC+b1woOpfV1NP
zu8F36zXh3z9Ob83CttV3MoVcn5vHP5vklNVFOf3RvR0r4gOiZzfG5UyJa0p
Us7vDduM6TOc0zm/N74uiPpvVxbn98bDunlfH+Ryfm+49ahI6lbA+b1RVRhT
MP845/fGSJWrS0OKOL831HIfbj9/kfN7Y9iOPmq/Sjm/N4bsvGNodJvze8P4
2vIXvhWc3xvOVa+7nH/E+b0h6Pmo6O9zzu8Dzf7bPsx7zfl9YFZftyeugfP7
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
xh+47TmX+5+KAf+dL/in8P8BwpxP/A==
             "]]}, {
            Hue[0.5585438199983166, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
             "]]}, {
            Hue[0.7946117974981064, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxd1n90U/X9x/ErP6Rq1ahMAxYJipq5yqIWCT/Et4gaETVAhYAFArQQoEDa
plgV3eVLkYAoEdjMADVONrMNt6CwhVnHFdFlo0JUhDiYxAkSESHT+rUqyNfv
We+9H578k/M4b17nxet8zj2HPlPnja7ppGnavq6a9v+///1TvPm/v/mOX018
G+dfcP5HH3S4RNbc4mzpd8vuDjvks/TsAe47d3W4u/ztxXNW9hma6bBT3tx3
w3svdHqjw2Xizcxu/nrwXzvski+XOatuCKQ7fLmce+KBTssyr3S4rxTmzrns
+qtSHb5KFm9bOfmsEb/rsFtOvDKlZePJ9R2+RpqXTt1efeOzHS6X+0Z+8aMt
Y033ky+e+nj/tQ+Y9sj3E54bs/Vp09fJY1dUdp6ZNn29/Ox42a+u/MD0DfLz
9FlHjn1jukJGXJiY8VrP5zrcX+6/4p6h0cGmb5Sn547+aHiV6QGy6vHPtn6y
wLRXVt887+CkZ0wPlBeemLtk7WumB4njjYfXLPmX6cEyKFM96uyTpodI5Oqu
Ezqfl+jwTfKl+/e/uraX6aESntfncPEnpm+W3sXBmwYMMi0y/+XGpUfu6LAu
8m3Lp68WK837LbIhMjN4/RTzfov8vNvmu9bWmvdhcl7ZhyMue8C8D5O9L+/r
8WfdvN8qvs0LvbOWmvdbZdTGf3a69SnzPly+Hnzk8lFx8z5c1tb0GvabZ837
bXLOd4erKteb99tk1137ttT+1rzfLv/e+urEUy+Z99ulNvefd3q+bN7vkD53
H7y0dbN5v0N2XJfaedkW8+6TK98c9+NeLebdJ8erJw3M/tW83yn3nhk5efPr
5v1O0Y9pjzW8Yd5HyNw9iQvr3jTvI+TdPSPKh/7NvN8lR5+7qeVAxrzfJW8X
/9N7wj/M+0gZU1MzaOMO8z5SjI8vWFRoNe93y0Pejy7svNO83y3T/lD9x867
zPs9UpVZsfuoaf0eeX5b+WtG1rzfK503DZy18B3zfq88OGjsbz3vmne/fL52
Ws+safFLae9IxZT3zL/vlxfOuHzEIdOGX655feoTE3eb+VHSdk/hwh2mZZTc
UN77/X7vm/lRsmDAnj8tNW2MkjPK1i7eb1obLWdt3/3d1XvM/GjZceCFbbWm
9dHSrTHW8HvTxmi58uGz1xw0rY2RyX/Ztsm518yPkcXz8zf6TOtjJJe7ZGmD
aWOMdH9i/dlrTWuVcnv8JxdutfKVcvSCJccOWPlKWXbxo4dPWvlKmddl9tAe
OTN/n0za806/603LfbJ+UOGYz7R+n/x1jyM10bRxn/Q6NeK5sJUfK45u8UML
rfxYefraccmnrPxYcTt+eVbCyo+VRZHZ7pes/DjZ2PeyPlus/DiJLl547nYr
P04u+lnvrjut/Dg5MnRer71WPiAN93aZdcDKByRev+XEJ1Y+IFev33vocysf
kHOfHVjRZuXHyxhP7VffWPnxsu1PO/qfsvLjRY4/q3X5wMyPl2fm/DRYYlqb
IPmPD0wsNS0T5PI66eQwrU+QwX373HeRlZ8gj+371cSLrfz90vvF2y/vYeXv
l5d3fZe81MrfL6lE+de9rPz9ctWF/7jAZeWr5I3ZY0/2sfJVcnf7sdeusPJV
8t6HleOutPJV8nbFV61XWfmJ8v6EYh+3lZ8oR15xjf+xlZ8oB950NV5j5SfK
gKy/6SdWfpI8fWhfdbmVnyRvrmwZcq2VnyS39Xr9jH5WfpL8e+qKzZa1ySJT
k+N/auUny+jI7OOW9cny+E09mjxWfrJcNHFPm2UtKF8eeGn6daZdQRn1yKqd
liUoaxI1115vOhiU0tuPL7KsByX60qfvWk4EZe7hkz1vsPqC8tuhb1VZzgfF
s2hX3LI2RX4xYM0uy64pMnD92jMqrP4pUvPu0J9aDk6RVXWHApb1KdKcLDxq
OTFF+u3+5fOWjSnycf9bX7ecnyITVro/tKxNlZZtS9otu6bKOQN/6ehv9U+V
E02xqywHp8rQx9YNsqxPlbI7CyMtJ6bK2CNrJlo2psqpq3K1lvNT5dg64yHL
2jRZ5ahfYtk1Tf6yodsqu3+a/HrImmfs/mnSd4q8aPdPk1PGeSm7f5pc39+Z
tvunydD/zNlq90+TEy/2fsvur5aBLw1utfurZVL3Xe/Y/dVS23poj91fLcu2
LNtn91fL6Na/HbD7q+XiS37zsd1fLWM+uvaw3V8t47dMP2L318iy5nGf2/01
UvrkmUW7v0ZGrn7wC7u/Rnzvb26z+2vkjR7G/9r9NbJw67p2u79GfrPt3m/t
/hoZ/Nb+7+z+6dJ26R0n7f7pcteOp763+6fL909vPWX3T5dvu72n3Wj1T5et
oZ1nWE5MF//uVzpZNqbLS/0Xd7acny7fjBzexbI2Q8pf+cK2a4Ys/ddTXS3L
DNnsuuJMy8EZsuqVF23rM+TgRlc3u3+GrL1shW1jhpz3yZe28zPkswP3ltj9
ITn/nRdsu0LSe07RtoSke+DGs+z+kDx59Xzbekgur07ZToSkftkh20ZIbi29
+Gy7PyTBUcNsazPl8fQs266ZclN8hW2ZKVNu3mg7OFNOfrXLtj5Tdpz8zHZi
pry9sus5dv9M2fpZme38TFk36Hrb2iw5ueE2265Zsqh2nG2ZJe7nZtgOzpL4
jPm29VnSeGiR7cQseb5/TOmfJQ/Ur1X6Z4m26ddK/2y5zvFHpX+2XLL2z0r/
bPlq+lalf7Y80vyW0j9bDnd6W+mfLWXFd5X+2fL3QE7pny2LfP9S+mtl398/
UvprpfGTQ0p/rfR88VOlv1b2XvS50l8rWkVR6a+VYed9qfTXSkvyK6W/Vr4v
aVf650jvim+V/jmyrd8JpX+OXHHypNI/R/q8cErpnyPD+p5RavfPEWNRJ9vG
HFm6vbPt/By559MutrW5srCtq23XXKkqnGlb5sqnb3WzHZwrZ64ssa3PlRl3
naX0z5XVbYqNufLdk2cr/XPl8KXnKP3zRF+n2DVPPrygVOmfJ98vUBycJ69/
qFifJ98NOFfpnyezlio25smr7ynOz5MnLzlP6Q9L5D7FjrB8+YRiV1gWvq7Y
E5YVRcXyw/3S8237w/LyMMXBsDwwXXE4LGVLFOthKaxXHAtLT0NxIixHcopT
YYkdV2yEZUgXh+1sWHpcojgfllFuxcWwlHgVa3Uy6XbFjjqJjFHsqpPpkxV7
6uSuWYqlTm6KKPbX/fD/J8XBOlm3WHG4Tq55QrFeJxetVhyrk8lrFCfqxJVQ
nPrh3/trxUaduH+n7q+T6B/U/XXS/LK6v06u+pO6v14e3KLur5eFLer+erlj
q7q/Xna+ru6vl17b1f31cuNb6v566ZNR99fLv/+u7q+Xh3ao++vleKu6v15u
3anur5eHd6n76yWeVffXy9p31P31En1X3V8vwffU/Q1y5W51f4PsVe1qkEfe
V/c3SPc96v4GWafa3yA99qr7G2SZ6nCDfKlab5BROXV/gyRVJxrka9WpBhn6
gbq/QR5VnW2QV1XnG+QL1cUf9v5T3R+RUaodEXlItSsiz6v2ROQN1RKRg6r9
EdH2qfsjcqnqcERuUK1H5E7VsYhMUp2ISJ3qVER01UZEVqjORuQZ1fmI/E51
MSKbVWuNYqh2NMoO1a5GeUe1p1H+qVoa5WPV/kb59LT9jXLstP2N0nba/kb5
5rT9jXLytP2NcsZ+dX+jdFVtNMpZqrONUqo63yjnqy42ygWqtflykWrHfPmR
atd8uUS1Z770VC3zpUy1f770Uh2cL71Vh+dLH9X6fLlCdQxOwCnYgLNwHi7C
2gOn2wG7YA8ssB8OwmFYh2NwAk7BBpyF83AR1pqwH3bBHlhgPxyEw7AOx+AE
nIINOAvn4SKsPYj9sAv2wAL74SAchnU4BifgFGzAWTgPF2HtIeyHXbAHFtgP
B+EwrMMxOAGnYAPOwnm4CGsPYz/sgj2wwH44CIdhHY7BCTgFG3AWzsNFWFuA
/bAL9sAC++EgHIZ1OAYn4BRswFk4Dxdh7RHsh12wBxbYDwfhMKzDMTgBp2AD
zsJ5uAhrj2I/7II9sMB+OAiHYR2OwQk4BRtwFs7DRVj7GfbDLtgDC+yHg3AY
1uEYnIBTsAFn4TxchDX9dJfADtgJu2A37IG9sMA+2A8H4CAcgsNwE6zDUTgG
x+EEnIRTcBo24AychXNwHi7ARbgd1hbi/WEH7IRdsBv2wF5YYB/shwNwEA7B
YbgJ1uEoHIPjcAJOwik4DRtwBs7COTgPF+Ai3A5r/4P3hx2wE3bBbtgDe2GB
fbAfDsBBOASH4SZYh6NwDI7DCTgJp+A0bMAZOAvn4DxcgItwO6wtwvvDDtgJ
u2A37IG9sMA+2A8H4CAcgsNwE6zDUTgGx+EEnIRTcBo24AychXNwHi7ARbgd
1prx/rADdsIu2A17YC8ssA/2wwE4CIfgMNwE63AUjsFxOAEn4RSchg04A2fh
HJyHC3ARboe1xXh/2AE7YRfshj2wFxbYB/vhAByEQ3AYboJ1OArH4DicgJNw
Ck7DBpyBs3AOzsMFuAi3w9pjeH/YATthF+yGPbAXFtgH++EAHIRDcBhugnU4
CsfgOJyAk3AKTsMGnIGzcA7OwwW4CLfD2hK8P+yAnbALdsMe2AsL7IP9cAAO
wiE4DDfBOhyFY3AcTsBJOAWnYQPOwFk4B+fhAlyE22EtiveHHbATdsFu2AN7
YYF9sB8OwEE4BIfhJliHo3AMjsMJOAmn4DRswBk4C+fgPFyAi3A7rC3F+8MO
2Am7YDfsgb2wwD7YDwfgIByCw3ATrMNROAbH4QSchFNwGjbgDJyFc3AeLsBF
uB3WluH9YQfshF2wG/bAXlhgH+yHA3AQDsFhuAnW4Sgcg+NwAk7CKTgNG3AG
zsI5OA8X4CLcDmuP4/1hB+yEXbAb9sBeWGAf7IcDcBAOwWG4CdbhKByD43AC
TsIpOA0bcAbOwjk4DxfgItwOa8vx/rADdsIu2A17YC8ssA/2wwE4CIfgMNwE
63AUjsFxOAEn4RSchg04A2fhHJyHC3ARboe1J/D+sAN2wi7YDXtgLyywD/bD
ATgIh+Aw3ATrcBSOwXE4ASfhFJyGDTgDZ+EcnIcLcBFuh7Un8f6wA3bCLtgN
e2AvLLAP9sMBOAiH4DDcBOtwFI7BcTgBJ+EUnIYNOANn4RychwtwEW6HtRV4
f9gBO2EX7IY9sBcW2Af74QAchENwGG6CdTgKx+A4nICTcApOwwacgbNwDs7D
BbgIt8Na7HR3gUvgUtgBd4edcBnsgvvCbrgc9sAVsBceAgs8HPbBI2E/XAkH
4Co4CFfDIbgWDsMRuAleAOtwMxyFl8MxeDUch9fBCXg9nIQ3wCl4E5yGW2AD
3g5n4FY4C++Gc/B+OA8fhAvwUbgIt8Ht8AlYewrfP1wCl8IOuDvshMtgF9wX
dsPlsAeugL3wEFjg4bAPHgn74Uo4AFfBQbgaDsG1cBiOwE3wAliHm+EovByO
wavhOLwOTsDr4SS8AU7Bm+A03AIb8HY4A7fCWXg3nIP3w3n4IFyAj8JFuA1u
h0/A2kp8/3AJXAo74O6wEy6DXXBf2A2Xwx64AvbCQ2CBh8M+eCTshyvhAFwF
B+FqOATXwmE4AjfBC2Adboaj8HI4Bq+G4/A6OAGvh5PwBjgFb4LTcAtswNvh
DNwKZ+HdcA7eD+fhg3ABPgoX4Ta4HT4Ba6vw/cMlcCnsgLvDTrgMdsF9YTdc
DnvgCtgLD4EFHg774JGwH66EA3AVHISr4RBcC4fhCNwEL4B1uBmOwsvhGLwa
jsPr4AS8Hk7CG+AUvAlOwy2wAW+HM3ArnIV3wzl4P5yHD8IF+ChchNvgdvgE
rK3G9w+XwKWwA+4OO+Ey2AX3hd1wOeyBK2AvPAQWeDjsg0fCfrgSDsBVcBCu
hkNwLRyGI3ATvADW4WY4Ci+HY/BqOA6vgxPwejgJb4BT8CY4DbfABrwdzsCt
cBbeDefg/XAePggX4KNwEW6D2+ETsPZzfP9wCVwKO+DusBMug11wX9gNl8Me
uAL2wkNggYfDPngk7Icr4QBcBQfhajgE18JhOAI3wQtgHW6Go/ByOAavhuPw
OjgBr4eT8AY4BW+C03ALbMDb4QzcCmfh3XAO3g/n4YNwAT4KF+E2uB0+AWu/
wPcPl8ClsAPuDjvhMtgF94XdcDnsgStgLzwEFng47INHwn64Eg7AVXAQroZD
cC0chiNwE7wA1uFmOAovh2PwajgOr4MT8Ho4CW+AU/AmOA23wAa8Hc7ArXAW
3g3n4P1wHj4IF+CjcBFug9vhE7D2NL5/uAQuhR1wd9gJl8EuuC/shsthD1wB
e+EhsMDDYR88EvbDlXAAroKDcDUcgmtt/x+T8MBG
             "]]}}}, {{}, {}}, {{{{{
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9991500460145655}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9991500460145655}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9991500460145655}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9991500460145655}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9991500460145655}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.9648706449273605}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.9648706449273605}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.9648706449273605}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.9648706449273605}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9991500460145655}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9991500460145655}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9991500460145655}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9991500460145655}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9991500460145655}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.9648706449273605}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.9648706449273605}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.9648706449273605}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.9648706449273605}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{34., 6.500000000000007}, {1650.1491666666668`, 
                    0.9648706449273605}], 
                   
                   Offset[{34., -6.499999999999993}, {1650.1491666666668`, 
                    0.9648706449273605}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999998}, {
                    1650.1491666666668`, 0.9648706449273605}], 
                   
                   Offset[{9.999999999999998, 6.500000000000002}, {
                    1650.1491666666668`, 0.9648706449273605}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.01`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22., 4.884981308350689*^-15}, {1650.1491666666668`, 
                  0.9648706449273605}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9930830943428831}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9930830943428831}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9930830943428831}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9930830943428831}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9930830943428831}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.8946217073167562}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.8946217073167562}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8946217073167562}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8946217073167562}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9930830943428831}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9930830943428831}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9930830943428831}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9930830943428831}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9930830943428831}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.8946217073167562}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.8946217073167562}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8946217073167562}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8946217073167562}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1650.1491666666668`, 
                    0.8946217073167562}], 
                   
                   Offset[{35., -6.499999999999992}, {1650.1491666666668`, 
                    0.8946217073167562}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1650.1491666666668`, 0.8946217073167562}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1650.1491666666668`, 0.8946217073167562}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.05`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1650.1491666666668`, 0.8946217073167562}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9861998238913879}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9861998238913879}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9861998238913879}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9861998238913879}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9861998238913879}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.8243688287603732}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.8243688287603732}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8243688287603732}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8243688287603732}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9861998238913879}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9861998238913879}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9861998238913879}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9861998238913879}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9861998238913879}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.8243688287603732}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.8243688287603732}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8243688287603732}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.8243688287603732}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1650.1491666666668`, 
                    0.8243688287603732}], 
                   
                   Offset[{35., -6.499999999999992}, {1650.1491666666668`, 
                    0.8243688287603732}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1650.1491666666668`, 0.8243688287603732}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1650.1491666666668`, 0.8243688287603732}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.15`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1650.1491666666668`, 0.8243688287603732}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.8915571249634013}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.8915571249634013}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8915571249634013}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8915571249634013}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.8915571249634013}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.7540947920663663}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.7540947920663663}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.7540947920663663}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.7540947920663663}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.8915571249634013}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.8915571249634013}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8915571249634013}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8915571249634013}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.8915571249634013}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.7540947920663663}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.7540947920663663}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.7540947920663663}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.7540947920663663}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   Offset[{35., 6.500000000000008}, {1650.1491666666668`, 
                    0.7540947920663663}], 
                   
                   Offset[{35., -6.499999999999992}, {1650.1491666666668`, 
                    0.7540947920663663}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1650.1491666666668`, 0.7540947920663663}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1650.1491666666668`, 0.7540947920663663}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.25`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1650.1491666666668`, 0.7540947920663663}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.6553457245301247}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.6553457245301247}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.6553457245301247}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.6553457245301247}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.6553457245301247}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.6549120912546351}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.6549120912546351}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.6549120912546351}], 
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.6549120912546351}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.6553457245301247}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.6553457245301247}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.6553457245301247}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.6553457245301247}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.6553457245301247}], 
                   Offset[{0, 0}, {1650.1491666666668`, 0.6549120912546351}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1650.1491666666668`, 0.6549120912546351}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.6549120912546351}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1650.1491666666668`,
                     0.6549120912546351}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{30., 6.500000000000006}, {1650.1491666666668`, 
                    0.6549120912546351}], 
                   
                   Offset[{30., -6.499999999999994}, {1650.1491666666668`, 
                    0.6549120912546351}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1650.1491666666668`, 0.6549120912546351}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1650.1491666666668`, 0.6549120912546351}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.5`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{20., 4.440892098500626*^-15}, {1650.1491666666668`, 
                  0.6549120912546351}], {0, 
                 0}]}]}}}}, {{{}}}}, {{}, {}}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> False, 
         ImagePadding -> {{All, 74.19999999999999}, {All, All}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["time", TraditionalForm], 
           FormBox[
            RowBox[{"freq", " ", "oblique"}], TraditionalForm]}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 440, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           RowBox[{"{", 
             RowBox[{
               RowBox[{"ba", "\[Rule]", "2"}], ",", 
               RowBox[{"bn", "\[Rule]", "1"}], ",", 
               RowBox[{"z", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vs", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vh", "\[Rule]", "1"}], ",", 
               RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"u", "\[Rule]", "0.5`"}], ",", 
               RowBox[{"pa", "\[Rule]", "0"}], ",", 
               RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
       
        FormBox[
         TemplateBox[{"0.01`", "0.05`", "0.15`", "0.25`", "0.5`"}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, 
                 GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm],FormBox[
        FormBox[
         TemplateBox[{"\"healthy juv\"", "\"stressed juv\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Normal", ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
      
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {2, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}], ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#3, ",", "Above"}], "]"}]}], "}"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
            
            LineBox[CompressedData["
1:eJxN13lYjen/B/CDEFliGkJIitAQhexv2UISZUqWiqIonfa9Tsup0372smfP
HkK2kT2EbKMQDSGExliy/57v9Tv3Mv/M9Zr73OfzvJ/3+VxDnyVBc32bi0Si
By1Fov/9+///aZxw7uykXl9XKCfo/gO69z37qUUcsT6C25vMtsshNkTfMUNP
FGwgNkKHqz3q+xUTG6OZTev1dWeITWCw+euJ27eJTdFhQb79p2fEZhhgXTHD
qYnYHEkvEw0etVXp3A+FP22rd/QktsSygp399lkTD0TBnEjpf5OIrRC/+sj2
GDfiwZjw384FU1cSW6NLXrh2fiLxUAx4+WLFURXxMCwf4d5xaRGxDdIiNtZ4
niK2RVGroa4HbhEPR2GuW9cF9cQj4Nln7Xuvn8Qj8X7FvPsXjdQ62+GPm1Fv
5IOIR0E/JS/ynD3xaHxe+/n9Eg/iMbA44W0QFkI8FtXn8wu/ZRKPw+dGxeWf
W4jHo1V17b3kU8QTkFwXuiDnHjGQ4nC+n/l7nSVA5NVAl1ntNbrziVi9a8K0
jgN0lkzEXM+bx8RTyLk9Xm8oOh61hJzbY9bNX0cHS8j5JJgHjE9bs4GcT4L7
4JF+50+R88lYNXyS8eEacj4ZWm/XW+E/yfkULF7d09PQVKs7nwK9mWGmefY6
i6bi4Fij3j98yflUNI/62G1ZJjmfBo9eAfl/7yfn07A0w6Vpwd/k3AFVKkWO
3k9y7oCsU47Fj/vl686no3oban446yyZju2nim+L48j5DPzXWVk6cyc5n4EP
T7aM33KPnM+E7ITrnZzWBbrzmQiXJlX1HaWzyBFPYtzuJQaQc0fYZ72p/GsT
OZ+FLTcyskTV5HwWKia3+LC882rduRMUvZzzejjpLHFCmsas2dRscj4bb9tl
7elyjZzPhmKnfvhZwzW6c2f8PnlZUaqbznCG3+sgk8JNOkuc8brXtDyvdzqX
OaP3kcWLTSau1d2fg+Tjh/ePyNcZczDj7mcbs/c6S+bA6efBUp+563T35yBi
gNmDtaU6i+Yib361S4rFet39udhn1Ef9Y7XOkrn4pOx0v3fXDbr7glfvWz9p
g84iF2z79lVlOnSj7r4LbPPFFh9v6ixxgdzYZV7dxELdfRfs2/UpN2ibziJX
nHk8quBKl026+65IGWpU1GOtzhJX6LtcGFQ9ZrPuviv8Wutrr3XYors/D7Vf
jCdcWrFVd38eWvUbWr+naZvu/jwYZa6t8z63Q3d/Hg7FfK7pVb1Td/9PjBnQ
fMtOxz26+39iZbBjqc3I/br7f+JL0bv76kUHdPf/RPue4SeQekh33w0X7vpe
LB16RHffDUOnbQ/IyD+mu++Ga4E73/T7dUp33w1bMsKd1r4+o7vvDvuddXny
pxd0991xLOifC32XXtXdd8eo0vQEf9lN3X13bGzY37fT5b919+dj77jOsjth
Nbr787Hf4MbgPt5PdPfnw/D6urIP257p7s9H7cpRv2/vXq+774FCF//rqHip
u+8BUc265qYfX+nue8DnxHqx9cXXuvse+OaqH1e/uEF3fwFMh8+K8r+lMxbg
h4nx3WCrN7r7C9D673m/BYXpXLYAkx/uLh63X2fRQnw+1l3av1ZnLITbyy6h
kW3e6u4vxOtHzuduWulcthDiJLd9K2bqLFqEJ5/XGQxYpjMWQWxx4efJeHJ/
ESLu51ntV5L7i/C6a8uBK7eR+4uRpPfP1alHyP3FCNfbvzj9Arm/GG9G2wb7
3ib3F6NZvlthx1py3xO2SQ/37XlN7nuix7fsHos+kfueiOj+2H2s6J3uvify
t574y7uNziIvHIj8Nu2fTjqbekEinmtZ0U1neKGz6adJQ/vo7OWF+2Pq8npa
6izxwrKHjZ7rButc6IUjXsnbj9qSeV444fjBMmq0zrVeSDR/vevZBDLfGzlt
vDq3nkLme+P0pUvSJ9PJfG9kSQOl8U5kvjfkix6LauaS+d6YO7+Xf0s3Mt8b
/y42LfvqQeZ744+pXbeXLSbzveFSfN/HYwmZvwSO3c58ueJL5i+B5/N+vX73
J/OX4IfdPacxAWT+EnxamXRrQhCZvwRn3i4+bR5C5i9BZ9f+ooYwMn8J6teu
dM+PJPOX4FJFoJ9lDJm/FKf2phUXxpH5SxF8ylLdLJHMX4qD9jkLHZPI/KWY
G9xlTHIKmb8Ujm3FM7dKyfyl6JMVoTmUTuYvxYR/Xnc4kEHmL8XPLb/Wrc8i
832wu03x7zE5ZL4PEk30J07LI/N9cLDXhPstFWS+DyZkn5QfUZL5PrhwvEUb
DzWZ74OVxzJqGjVkvg8eno7cGJtP5vvg2PCF974WkPm+iOlZ0TJoDZnvi/Ko
T1uq1pL5vrjRfpC53Xoy3xcuFfPe52wg831x801Q2P2NZL4v3lW8aNtrE5nv
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
738+jvL2y8eojfz+56NE5/8DusFn5w==
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]], 
            LineBox[CompressedData["
1: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
kBhz1pjctCCHicEbabxpGVkgxuaKQ5+Xk2PFiH+UKrAiJ4rxXb+510qyUIzP
PmdkNmSR8v0wYNgqskz5fgve715NzhTjjuYyrh15p/L7Oc7as5acLcalY8XD
1pNzxdhysEK+gZwvxoE6uz4byYViHDkminYgl4hx8LnzVx65TIxTDfUum8jl
Ygwc23rHiVwpxjvDw/NdyFViBIsHFWwmV4vxd98kdVdyrRg1z774bSVfE2NM
udcDN3KdGL6ifbM8yHeV+amTyLex/Iuxux6fPFn+xfBXObKUz/IvxrzjTTne
LP9ibJ/z6psPy78YZk3F5n4s/2L0U1m63Z/lX4z/mo43B7D8i1F49YdBEMu/
GKnfB0YGs/wr85jf91IIy78EjkNe9w5j+Zegp2CvVTjLvwSGagslESz/Eoi+
3rgVyfIvwXP7xWpRLP8S6HgVLY1m+ZfAx1IlNoblX/n8gWtOxbL8S7Dx5Z7W
OJZ/CbrdfqmdwPIvwdVPuqsSWf4lyLfxik1i+Veedzl1JJnlXwJxT7UnKSz/
Eig8PLunsvxLcGhCw+Q0ln8J6k3W26Sz/EvgeuhDgIjlX4KmDVmZYpZ/ifLv
ExvLJSz/EgxYj/tSln8JxgsWfJax/EvwddeW3gqWfwl4GaVjMlj+JdhuoTM3
k+VfgqmKiyuyWP4l+LRcumk7y7/y+y2V+O5g+Zfg15qL0TtZ/iXYs2iqaBfL
vwRTGm7v2M3yL8HsZ6V5e1j+JSgbdLsom+Vf+bw5+mU5LP8S1Ko+LN/L8i+B
yayaU/tY/iX4EfynMpflX4IPgqjKPJZ/5T7abU/uZ/mX4GxSyPEDLP8S3HnY
VpLP8i9BVnJNQQHLv/J+zvmcfZDlX/n8mBDFIZZ/CVL+OiYXsvxL0NX4UFgR
y78EBbftth1m+Zdgtfm2DcUs/xLwJ741L2H5l+Dt37szjrD8S2CxeDK3lOVf
gkLBN9WjLP8SVI3Xb2W+K8H1ilf3ylj+JTiZp37yGMu/BP0dju88zvIvwW+b
h+EnWP4lMP0Yal/O8q+cPzN7bgXLvwT+R801T7L8S2CbE/yFuU2CsLPTr59i
+ZdgrGtgXiXLvwRzP5uHnWb5l8L5SKH1GZZ/KVS+5Yw9y/IvxeI+k9qZeyvP
TZZdrmL5l+L3A5Wscyz/UuwYuHHLeZZ/KcbNWWlwgeVfiqPRTf+YuVKMHT/8
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
e2TAxtRGVUfp/wO1JJPd
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
            LineBox[CompressedData["
1:eJxd1n2YzPX6wPFv6hSd0paHykM29miTtLK0Qm6sjKwMNgYrg8Vgrdnn2bX4
WsvOsphllyVlKtV4bJROk1RzIu0vOk0nsqffVnMctKfQiJwhdX79rjPfh337
x/X29fFyX/d1X9w/Y+G4WS0URfnfPyjK///83x+RwYc+HHbftXnrB8d+QcaW
n898b4/WLaVF95Z1nS9pHSdDWnzV3z1gQ6zbyojnSluuqND6HtmZ3fOJwEmt
O0nF6+u+PN2zJtbx8vq8rz/9sULrrvLvN89nn/mX1gny2ban/+eG9NpYd5d7
Hz1Q+d7HWifKW6WF/ww/uTHWPWT5zb8mb/tC656i2qb/8IFzU6x7yVV1X23j
/XWxTpJ+jhcPfviD1r0l7BrwWbsTm2P9qHT68dvMrO+2xLqPfHzH2Rdzem+N
dbJMnvrIvryjz8e6r8ig70v+cWpbrPtJ8netfT2dL8b6MTna99apPyVsj3WK
pO0bmHnyhVdi3V/sQ+5NLhzzWqwfl9veOTAwOHRHrAfIzpL9gxLdu2I9UIYO
8fzzXJ+9sR4k77Tw3lLi98f6CVHaDfe+v/mNWA+WXs+1eqvywv5Yi0xafOf7
iZ+//d9WRV4uOPFzXc67se9D5IuvSnt7WwVj34dI1uFpf7vc6lDs+1Apbt/h
s3eiR2Lfh0qfu5Je2Nn1WOz7MLGFG1b90fF57PswqRwz6qG0yhOx76nS/vay
vGsDvop9T5Xdd/6ya8TVb2Lfh0uH4WdHV2/8R+z7cJm6Z/PlI0/+M/b9SRmw
75WLjurTse9PyvUDQx87vfpM7PsIee0j74g3R52NfR8h1e9veTX1H7FWLDL7
LzOuPmj7LvbdIptvbrFnRiDWykgp3P54vHpLU+z7SPnmRJdReSNjrTwl82/5
fFPbZdr3pyR6JVBY6te+j5KViQ8sH/R37fsoCfx98aDV17XvadIhpVdaesd/
xb6nySflY7am94u1MlryRp/q0vVp7ftombD3wPd9Z2rfn5b7bz/5+U8F2ven
ZXzo59E7V2rfx8j7+37t6q3Vvo+Rt3q8nXD7y9p3qwy/8bEJ978ea7HK7GiP
dX84oP1+qyR+3fBR46FYB62y+kzbth8d096PlWlBV0XDce39WPFf+q7+4Ubt
/VhpVTBze8Mp7f1YKdl9tej7Ju39OEk9f8O63Ava+3Eyed+2BUsuae/HyXTP
9js6RLX34yR65vHO1uva+/Fy67LBd/dQvo+9Hy+TPjla6r8x1up46fVltx++
vznWwfEy+OH/pIRbxVpJl+fWXVqz8TbtfbrcvfTlwjZ3aO/T5eD25CtT7tTe
p8ujOSW1+W2098/IkLG9nNPbae+fkXnFS6X73dr7Z8T97WNzj9yjvX9GOp/c
8VtqB+39BGmvVv91e0ft/QRp5Wg9p6mT9n6CXIs/3umu+7T3E6TduV1xCV20
9xNl2f6pyfHx2vuJErW3GdPyfu39RPml/skbvtE6OFGGTbTUv9RVe2+TBUXz
brB1097bZOWoxnO/aa3apP7wQH9dgvbeJhfiLti6/0l7P0l2jEj6xqe1TJIL
81t1u7+79n6SjGqrRNdpHZwkD8zf0+mK1spk2byrx5D0B7T3k6Xy0NRbdmmt
Tpa4yYk3/aJ1cLJ0vK80mJqovZ8iZ85NOODWWqZIm847Zn2stTpFOl594OEb
HtTeT5FcaZ3XT2slQy6OP1Y9R2vJkD9V7mis0VrNkNujE73v6+8zZOfVRd3O
6O+nyrq5ia+17KG9nyov+KxzHtRanSq3De393Aitg1NFWvgLZmqtPCvSf/+f
Fuvvn5UjXxR9WaO/f1aqT3/++k79/bOS8dCiL9/X30+Th+8dnfW5/n6atPt4
keeU/n6aDHnq6LSf9PfTJO1I8LLykPbeLs9u+mxOa63j7XLpTNlnHbQWu5Sc
f1m6a223y28Dpv41SWvVLrsemLLqca29dvnf/f8qH6Z10C72+LhPR2kdtsup
J3Y6x+v+dJn/9dLSybo/XfyjJl+36/508fS955fZuj9dWlz4oCxL96dLeJRn
a47uT5c9feLGFur+dLn8fSdfie5Pl7fS/u1bovszpOjnMZPLdH+GfFI67sMV
uj9Dgp++ftat+zNkzL7Xjq3W/RlycvOdxWt1f4bs/CAz4tH9GeJ67oN+G3R/
hpw9emFMre7PFEdO3uBNuj9T3v1jZcvNuj9T7j/VY+8W3Z8pScq9fbbq/kz5
8bPGzc/r/kz5aMKnp1/Q/ZnyXZc27b26P1PUk7seeVH3M+XDFxb0eUn3M6Wx
863dXtb9TOlju1PZrvuZ0nvk5aN6q5myIe0W9yu6nyn3Tizv+6ruZ8rFFmtO
6B3OlLV5Pee+pvuzZFmbSRf1jp8lvqQr2T7dnyUZRSdO6W2fJSOsgdE7dH+W
dE0Y69fbO0vsK1L/uFP3Z8nKoT2m6R2eJXdkrt2ttzJberf/6ZLe8bNltHqs
7y7dny0PVK3O1ds+Wx57vman3upsafn48G/09s6WFN+l23fr/mx5p/TH/nqH
Z4slvmyG3socsT71Y4Xe8XPkaE7BTr1ljrzY9+lP9LbPEffBvd/prc6RHq3r
W+zR/TnyS+bHHfUOzpGU4i8f1Ts8R7480tGit+KQv396YIre8Q45OPr4Ar3F
IWsWrVyit90h7ySfX6O36pCMh7tuNXyH2DoO2mH4Dkn+Zvxbhu+QN18qCRr+
XLH94fAnhj9XEnsPOW74c2Xk9Ru+Nvy54mzR7ozhz5Wh71WcM/y58sRzsy8Z
/lxZ3ea9q4Y/V359p/Y/hj9PyqzXbtqr+/PkkZOXWukt88Tx3KrWetvnyaHh
R+7SW50n/z67p73e3nnS60ZLB72D82TO81s66x2eJylDdsXrrcyXjrct7Wb4
8yXhzx26G/58WbO5LNHw50u3Awd6GP58iR490tPw50uk/85ehj9f9vRwJBn+
fNm48sZHDT9LrvyypI/hZ4n1pq+TDT9Ldn3XpZ/h//77gyMfM/wskWUZKYaf
JW0vTepv+Fmy+L1hjxt+lrw6u+MAw18ghRNOGR2/QL5q2DzQ8BfIgPhhgwx/
gfz25LdGqwvk5NiFTxj+Anm092Wjgwuk7sPswYa/QHb/7VujlWx54j6LGH62
WMf7jJZscd51wxDDz5bzP44zWs2WTvkvGO3NlvadTxsdzJZ+0xKGGn62vPrK
NKOVhTJi/Eaj4xdK1qF6o2Xh7/9+/9to++/f+3YdZvgLZe+xkUZ7F8qZsdlG
BxdKpxYeo8MLZXG7141WnHLxg6NGxzllSu+zRsc75ava34xOckrH9u1Sjb+f
U3adfNBoq1MG/TrQaLtT6l592minU7IvPmu06pRAdIHRHqdsO7HIaK9T5m1z
G+13yhPza4wOOqUxbZvRIadUTNhhdNgp4bo3jI44ZXa3d41WcsR50yGj43Kk
9chPjI7PkTG/hoxOypGynidN8+fI9XCjaf4ckYRTpvlz5Offzprmz5Gk4h9M
8+fIni0/mubPkY7zLpnmz5Gvz18xzZ8j4YeumebPkdoHfzXNnyMnfviPaf4c
mVLUYrgxf46MDd1ktJIrgWs3Gx2XK3dea2l0fK4c//xWo5Ny5fvy24z+/X/T
me1bG23NlUPuO4y258qob+KMduZK/r13Ga3mSueBbYz25Mp4S1ujvbnyxuB2
Rvtz5Wi39kYHcyXpiqlDuWIL3G10OFemzb/HNH+uuOLuNc2fJ1/5TB2XJ3P7
djDNnyct3zZ1Up5s6dXRNH+eXNlqamue/KVFJ9P8eeK1m9qZJ4+/bWo1T7rc
0tk0f558bDW1N08+rTG1P0/UL0wdzJOM2+8zzZ8ne4eaOpwnv+WZOpIns140
tZIvDx81dVy+HL5o6vh8eaZdF9P8+TKon6klXzamm9r6eztNbc8X9ypTO/Ml
+yVTq/niCJjaky87jpnamy+zvzW1P1/2RUwdzJdqJd40f748eoepw/myoZOp
I/nS6kFTKwXycrKp4wpk/GBTxxdIr5GmTiqQB8aZWgqkfLKprQXSZYap7QXy
8FxTOwsksNDUaoEcLTC1p0DSF5naWyCLVFP7C6T/ClMHC2RXpXn+AnlzjXn+
AplYbZ6/QA7XmOcvlNObzPMXyqEt5vkLpeB58/yFcmGbef5CmfSSef5CmbLd
PH+hTHjVPH+h9POZ5y+UazvM8xfKkl3m+Qvl4m7z/IWStNc8f6E4XzfP//t7
v3n+QsnfZ56/UKxvmOcvksFvmucvkrb7zfMXyVfmTiqSJW+Z5y+S+D+b5y+S
P5vbXiSPvG2ev0j2mlstkvsC5vmLZIW5vUXyhbn9RdL/HfP8RVJj7lCRnDZ3
uEi6HzDPXyQzza24ZIu541xSb+54l/xg7iSX3P2ueX6XPGVuq0vyzW13yV5z
O13SYG7VJVfN7fn9zz9ont8lD5nb75LB5g66xGHukEsqzB12yfvmjrjkW3Mr
xXLC3HHFct7c8cUSMXdSsVwytxTLSXNbi+UTc9uL5a/mdhbLNXOrxfKLuT3F
cvd75vmLJcHc/mJJNHewWLqaO1Qs8eYOF8vPzeaHr5Q09+NKmvvxJc39pJLm
vpQ0960lzX17SXPfWYL54Xvge+H74Qfhh+CH4UfgK4sw/yLMvwjzL8L8izD/
Isy/CPMvwvzwPfC98P3wg/BD8MPwI/CVUsxfivlLMX8p5i/F/KWYvxTzl2J+
+B74Xvh++EH4Ifhh+BH4ymLMvxjzL8b8izH/Ysy/GPMvxvyLMT98D3wvfD/8
IPwQ/DD8CHxlCeZfgvmXYP4lmH8J5l+C+Zdg/iWYH74Hvhe+H34Qfgh+GH4E
vrIU8y/F/Esx/1LMvxTzL8X8SzH/UswP3wPfC98PPwg/BD8MPwJfUZv7LdXm
fpza3L9Hbe7Hq839RLW5n6Q291PU5r7At8C3wrfBt8N3wHfCd8FX4bvhe+DX
wffC98H3ww/AD8Kvhx+C3wA/DL8JfgR+FL6yDPtfhv0vw/6XYf/LsP9l2P8y
7H8Z9g/fAt8K3wbfDt8B3wnfBV+F74bvgV8H3wvfB98PPwA/CL8efgh+A/ww
/Cb4EfhR+EoZ9l+G/Zdh/2XYfxn2X4b9l2H/Zdg/fAt8K3wbfDt8B3wnfBd8
Fb4bvgd+HXwvfB98P/wA/CD8evgh+A3ww/Cb4EfgR+Ery7H/5dj/cux/Ofa/
HPtfjv0vx/6XY//wLfCt8G3w7fAd8J3wXfBV+G74Hvh18L3wffD98APwg/Dr
4YfgN8APw2+CH4Efha+UY//l2H859l+O/Zdj/+XYfzn2X479w7fAt8K3wbfD
d8B3wnfBV+G74Xvg18H3wvfB98MPwA/Cr4cfgt8APwy/CX4EfhS+sgL7X4H9
r8D+V2D/K7D/Fdj/Cux/BfYP3wLfCt8G3w7fAd8J3wVfhe+G74FfB98L3wff
Dz8APwi/Hn4IfgP8MPwm+BH4UfjKSux/Jfa/Evtfif2vxP5XYv8rsf+V2D98
C3wrfBt8O3wHfCd8F3wVvhu+B34dfC98H3w//AD8IPx6+CH4DfDD8JvgR+BH
4SsV2H8F9l+B/Vdg/xXYfwX2X4H9V2D/8C3wrfBt8O3wHfCd8F3wVfhu+B74
dfC98H3w/fAD8IPw6+GH4DfAD8Nvgh+BH4WvuLF/N/bvxv7d2L8b+3dj/27s
3439w7fAt8K3wbfDd8B3wnfBV+G74Xvg18H3wvfB98MPwA/Cr4cfgt8APwy/
CX4EfhS+Uon9V2L/ldh/JfZfif1XYv+V2H8l9g/fAt8K3wbfDt8B3wnfBV+F
74bvgV8H3wvfB98PPwA/CL8efgh+A/ww/Cb4EfhR+Moq7H8V9r8K+1+F/a/C
/ldh/6uw/1XYP3wLfCt8G3w7fAd8J3wXfBW+G74Hfh18L3wffD/8APwg/Hr4
IfgN8MPwm+BH4EfhK6ux/9XY/2rsfzX2vxr7X439r8b+V2P/8C3wrfBt8O3w
HfCd8F3wVfhu+B74dfC98H3w/fAD8IPw6+GH4DfAD8Nvgh+BH4WvVGH/Vdh/
FfZfhf1XYf9V2H8V9l+F/cO3wLfCt8G3w3fAd8J3wVfhu+F74NfB98L3wffD
D8APwq+HH4LfAD8Mvwl+BH4UvrIG+1+D/a/B/tdg/2uw/zXY/xrsfw32D98C
3wrfBt8O3wHfCd8FX4Xvhu+BXwffC98H3w8/AD8Ivx5+CH4D/DD8JvgR+FH4
ylrsfy32vxb7X4v9r8X+12L/a7H/tdg/fAt8K3wbfDt8B3wnfBd8Fb4bvgd+
HXwvfB98P/wA/CD8evgh+A3ww/Cb4EfgR+Er67D/ddj/Oux/Hfa/Dvtfh/2v
w/7XYf/wLfCt8G3w7fAd8J3wXfBV+G74Hvh18L3wffD98APwg/Dr4YfgN8AP
w2+CH4Efha94mvs3eZr7LT3N/ds8zf04T3O/rae5f4+nud/J09yPh58APxF+
T/hJ8JPhp8AfCF/gp8K3wE+Db4WfDt8GPwO+HX4mfAf8LPhO+PnwXfBL4avw
y+G74VfB98CvgV8Hfyt8L/zt8H3wd8P3w98PPwD/IPwg/MPw6+Efgx+Cfxx+
A/xG+GH4p+E3wT8HPwL/Mvwo/OvwlWrcfzXuvxr3X437r8b9V+P+q3H/1bh/
+AnwE+H3hJ8EPxl+CvyB8AV+KnwL/DT4Vvjp8G3wM+Db4WfCd8DPgu+Enw/f
Bb8Uvgq/HL4bfhV8D/wa+HXwt8L3wt8O3wd/N3w//P3wA/APwg/CPwy/Hv4x
+CH4x+E3wG+EH4Z/Gn4T/HPwI/Avw4/Cvw5fWY/7X4/7X4/7X4/7X4/7X4/7
X4/7X4/7h58APxF+T/hJ8JPhp8AfCF/gp8K3wE+Db4WfDt8GPwO+HX4mfAf8
LPhO+PnwXfBL4avwy+G74VfB98CvgV8Hfyt8L/zt8H3wd8P3w98PPwD/IPwg
/MPw6+Efgx+Cfxx+A/xG+GH4p+E3wT8HPwL/Mvwo/OvwlQ24/w24/w24/w24
/w24/w24/w24/w24f/gJ8BPh94SfBD8Zfgr8gfAFfip8C/w0+Fb46fBt8DPg
2+FnwnfAz4LvhJ8P3wW/FL4Kvxy+G34VfA/8Gvh18LfC98LfDt8Hfzd8P/z9
8APwD8IPwj8Mvx7+Mfgh+MfhN8BvhB+Gfxp+E/xz8CPwL8OPwr8OX6nB/dfg
/mtw/zW4/xrcfw3uvwb3X4P7h58APxF+T/hJ8JPhp8AfCF/gp8K3wE+Db4Wf
Dt8GPwO+HX4mfAf8LPhO+PnwXfBL4avwy+G74VfB98CvgV8Hfyt8L/zt8H3w
d8P3w98PPwD/IPwg/MPw6+Efgx+Cfxx+A/xG+GH4p+E3wT8HPwL/Mvwo/Ovw
lVrcfy3uvxb3X4v7r8X91+L+a3H/tbh/+AnwE+H3hJ8EPxl+CvyB8AV+KnwL
/DT4Vvjp8G3wM+Db4WfCd8DPgu+Enw/fBb8Uvgq/HL4bfhV8D/wa+HXwt8L3
wt8O3wd/N3w//P3wA/APwg/CPwy/Hv4x+CH4x+E3wG+EH4Z/Gn4T/HPwI/Av
w4/Cvw5f2Yj734j734j734j734j734j734j734j7h58APxF+T/hJ8JPhp8Af
CF/gp8K3wE+Db4WfDt8GPwO+HX4mfAf8LPhO+PnwXfBL4avwy+G74VfB98Cv
gV8Hfyt8L/zt8H3wd8P3w98PPwD/IPwg/MPw6+Efgx+Cfxx+A/xG+GH4p+E3
wT8HPwL/Mvwo/OvwlU24/024/024/024/024/024/024/024f/gJ8BPh94Sf
BD8Zfgr8gfAFfip8C/w0+Fb46fBt8DPg2+FnwnfAzzL8/wN/XlvA
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961]], 
            LineBox[CompressedData["
1:eJxd0390U3Wax/Hrj1m7LoP5o2rO2NUroga36N2xSFSERy0QoOAFCgQoeEt/
kBZcoqJELHAd6k7UigEqxFlwr0NHAuJsdNCTwY5eFCXuIGaA1TCgXrFqcBk3
Owc1ul3d2TP5cXn3n55XnnzyOc95zvfyRctmtJ2tKMqxHynK////619+3Buv
337pd50bxhU/kN/9sKf5tb0lV8nRtp9dfLpmY9Ee+YO5MPXkqpKr5Tlf5+T/
GijZK1PmXep7prG36BoZ+vC4/ucOlqzKwH3jP1o768mih4n22s5Do0+VPFzG
iPLA85s2FX2V7B8cNbVq3uaifXLe/U/3zbwlXvQ18tWjz657fvJTRdeK5+RZ
27rW/6Loa+XaZPXYi/5hS9GapF/5cOsVE54u+h/lf15semzEr6yifyrXhkND
7p24rejr5bLkZ6vsLX1F18mX/d7Voj5b9Ch57bp/fTBwbHvRN8h1L5+8MXl0
R9Gjxds86p3t1+wq2i8P3OB5w/n410XfKLV3Xf/SpiEvFH2T5Nd/Mbnl2xeL
vlnMro55N097qegx0nHlNZcVRqSKvkVGjbj41ltefqXosbK6787d7RfaRY+T
nhkj39VyrxctMudQ19eK+dZfbYpc2fj8+Sf/7vfF+a0y6saF7Y2zM8X5rTJ0
5/j8yJ2Hi/Pb5Kk/yeQ3p79fnN8mN52c1PfW138szm+X67LGxLHyYXF+uwxs
/9O9g6uc4rxeDr5w/Jt3NnxcnNfLZTfsDqkdJ4rz8fL+udV9HUM/Kc7HS9Or
/Rd0rytamSAXzz+8se/PpfkEuX9A5lq3DhTnE2XtuDUjVppFmxOl46mdr338
YmkekFEb1lzTe6w0D8g2z7MbrMHSfJJMHr+2PX7xp8X5JDl3594LXhhZtDJZ
zv63718+Nq40nyxH9tqj3ptWmk+Ro9+tbBw9vzSfIr+MDOxd0VaaN8ikFV/t
KdxVmjfI9pvvHvK395XmU2Xx8/ETuZWl+VTZcXxN6sCa0nyaPDJ0l/XR2tJ8
mphmwDP+56X5HfJJ8IvJP3m0NL9Dfvn+590rekpzXX78nnUgvK5o0WXy3vP2
XxQrfV+XHy7fH1ixvmhbl+a+usNbN5Ty02XYiV99t3FjKT9dvq16eE9zbyk/
Xeq/3Lznx0+W8tPlp/eMjm4tWZkhU0fuePPCTaX8DPFeaExfWbI5Q04+t6H9
YMn2DLlkUE9Vby7lZ8oj5w6N3lGyzJTHZ7emzJLNmTLbt+f4jpLtmbJ9csOE
A+V8o/zo1AUXnCznG+X7P+wfdla8lG+URR89NeHCku1GeeTl1suuKlmZJV90
nz+6rmSZJRMu/UCRcn6WeEbqH0wq52fJl5d6/n5GOT9b3mjafM7ccn62DBs2
5+2F5fxs+cXrD29tKedni3bTM9sXl/NzJLz8xaol5fwcObZj/vG7yvk5smrN
nhvD5fwc2XT1lXX3lPNBuXJD+ti95XxQDv6udux95XxQzm3b1n5/OR+UgfV9
C1eU83Nl/9CaayPl/FxpHbnzWNnmXHns66NLHyjn58pVq6d9VrYyT847mJuy
spyfJ19u/dwq25wn3x87K1e2PU+qPuq64sFyfr4c/GbsrLJlviz49sPVZZvz
ZdroF54p254vK1sPvVrJN8kzO7X3K/kmSY/f+J+VfJNUf2wNVvJN0nNy4Pyu
cn6B/M3ZRy4qWxbIe/3vqmWbC6TntyNGlG0vkOvkKq2SXyhPL/t+VCW/ULZ4
TtxUyS+UhTXfjq3kF8qqc9puq+TvlNteu3V8JX+ndL/87MRK/k451LV9UiV/
p0TvaZxSyRtyePIrDWWrhsQf/Hxq5fcMGfUvJ6aVbRjy77/efUfl9w35Ykmr
XrZlyLJl31RsGzJ1yT3Ty3YMOWfq0YqVZrEXXDej0t8sVy9YUbE0y8Dm31Rs
NEv7d59WbDbLBtUzs9LfLJ6W6yu2m2XECb1ip1nOeqKjYmWR3HH96orVRXJi
xRMVyyI5dXJrxcYieeiHHRWbi6Tzkt2u/kUSjPW7+v8y3/aGq3+R3L3ubVd/
ixx56KCrv0WGPnvI1d8igzXvufpb5Kuzj7r6W2THsmOu/hb5/P4PXP0tIiM+
cvW3yNZex9XfKk/u+9jV3yonXj/h6m+Vpzd/4upvlScmDbj6W6XzQ5etVvnv
eZ+6+lvlkjdcdlpl3E8+c/W3yVUtLqttcrXlsrRJ7WGXjTb54H9dNttk/eWf
u/rbpHOcy3abLA667LTJlLtcVtpl/2qX1XZpe9xlaZe+p1w22uWTbS6b7XLv
Lnd/u1i/cfe3y9O/dff/xa+6+xfL4dfd/Ytl+lvu/sUy7m13/2J56ffu/sXy
5jvu/sXy4Lvu/sWSz7j7F8uwQ+7+kFxx2N0fkrOOuPtD8oLbRkgC/+HuD8le
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
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 
              0.49019607843137253`]], 
            LineBox[CompressedData["
1:eJxd03+Q1PV9x/FvM0l64qmbeLZr56zfM2dmg4hf5YAFDnmLh65w6hc4YIED
vsARNuZIvui1buRMvtUT1wD6rRxma5j6HYN2jaR+E09mG4/hy49pV4vp1xbt
Ekn7nYSOm4rpV8V2g5fadro/vve8f24e+9rXvuc97/l0bPrmsi2fURTlnc8p
yv/9//+/cMHxY7f+8YV7nlxQ+0C6L/z08u+/W3eLLPrKfd/Yum1vzTG5ct/R
ofyndbfJhx9s2HL02dGa47J08S+v/ty6fTW3y8d7pry6f9ZTNaty+quvXTZl
3vdqvkbOfuvV+3ftyNfcKc+N7u1c1vZ0zV+WXf86ZXzqnP01J+SB2EU/vKH/
mZqnytb8xfe03PdszdPklTfzlX27Xq55urww89Prk6+/UrMmvZfH9dPZYs03
yovzTrx+9Mev1nyTVP5m34F/2Huk5hny2vZ5/3SXeqzmLnnmP6dfNf7eiZpn
yluHNr/94sxSzbMk9btzbxz+7d/XPFuGR97oOnapX3NSPrli4YGfzfrHmueI
Hzz409nLT9U8Vy6bueHK8VvfrnmeTP1C72P+h/9cc7d8ftu+R15On655vrw7
9LQznP15zTfL8x+uaLli7Ts1L5Af+I+cue7iMzWLbL30yGXhkzVbItv/YN2M
az6p57fIy088kv/V4l/U8ltEH9j8ePnRmpWFMvcnHd/dcqieL5QHn1nxxd+c
rue3yp7sC5e2flzPbxV3+tobD1/0L7W8R0r9tyiPXlmz1SMrD3766yevreeL
5Ofp9z44Pr2eL5LbP1i27O9m1vPbpMO9e3bHvHp+m3xt3pHsrAX1/Hb5xdM3
/X7fwnp+uyz6oyeeGuup5yn56Ohb4cht9Twln855aOG7t9fzO2T5T175y49T
9fwOObfzr/79+B31fLHc8P7evo2L6/liecl5bfvpupUlsvTFX8dnLqnnS2Tb
c4MtO+pWemXbYXeL28h75T82v3fV6UZ+p/zo+Q6t2sjvlLvVv/i3y3rr+V0y
57eViY66rbvk2Ka3X7+hkd8t+57funxuI79bEtd9ft3CRq7Lf73zh99J1S26
XHvhmuvvbHxflyem33VEr9vTZdvEmezyRn+pzD52zZ4Vjf5Sef+hO760qtFf
Ksnvz1idbvSXyq4X/nrR6kZ/mSy+ouNCw7JMfvWzNx9e0+gvk+lbf3muYW+Z
rDl7yfy1jf5yWbdh7gMNy3LZoVYKDVvLJdi682TD3nJ54Oqxd5v9PulLbp9o
9vvk1RU9rf2Nfp8M7FoVb9jrk9/rfbyjYWWF7Lr2qUTDskLW7Pzo+mZ/hYzt
uPimZn+FTO24bmazv1Km3LlndrO/Up4/u35Os79SLnzl2Nxmf6V89pY35zX7
q+QL7U53s79KHv5o/vxmf5V8e+BQ094q+cGSL97c7KclNphuWtLy0m/2NG2l
xTx+qGkvLV9/761If7Xkfvx+pL9aHn3r00h/tUz90SULmv3VctX8eNPKGlnX
qzYta+TovV9u2lojl3deF+mvkSPF6ZH+Wpk1dGOkv1Y+emxGpL9WujtmRvpr
5b9XzYr0++XqRbMj/X659ELEVr9cNZKM9Pvl/vcjVtbJ6flzIv110rUjYmud
KD+M2Fsnh9+IWFkvn1Si/fXyt7+L9tfLc5fMjfTXy/ErI1Y2yGe+FLFskClT
I7Y2yNYbov0N8tCMaN+QZ2dFrBpy0Zzo7xnyztyIDUMWdEd/35Al8yN2DGm/
OTrPkMNRB4bctCA6f6M8FrW6UU5FLRtlikTnb5SZUVsb//fi0fkb5d6ovY2y
M+pgo+yLWtkkTtTqJnkuatkkL06aD1ub5KVJ8zfJ2KT5m6Q4af4mOTRp/ubJ
31c3T/6+wAZswQ7swQGsDEy2CgtswBbswB4cwMoWzIcFNmALdmAPDmDlq5gP
C2zAFuzAHhzAylbMhwU2YAt2YA8OYCWD+bDABmzBDuzBAax8DfNhgQ3Ygh3Y
gwNYuQfzYYEN2IId2IMDWPk65sMCG7AFO7AHB7AyiPmwwAZswQ7swQGsbMN8
WGADtmAH9uAAVr6B+bDABmzBDuzBAax8E/NhgQ3Ygh3YgwNYMSc7BquwBgus
wwZswhZsww7swh7swwEcwsp27A+rsAYLrMMGbMIWbMMO7MIe7MMBHMLKvdgf
VmENFliHDdiELdiGHdiFPdiHAziElfuwP6zCGiywDhuwCVuwDTuwC3uwDwdw
CCtD2B9WYQ0WWIcN2IQt2IYd2IU92IcDOISVP8H+sAprsMA6bMAmbME27MAu
7ME+HMAhrPwp9odVWIMF1mEDNmELtmEHdmEP9uEADmHlfuwPq7AGC6zDBmzC
FmzDDuzCHuzDARzCShb7wyqswQLrsAGbsAXbsAO7sAf7cACHsPIt7A+rsAYL
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
AQ8UGX0=
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
BCk5eUfdMmh+EkzeV+NxL5O4XL8+JpsMZsppnhLM+thnxyEFcbUEnn0/hXZU
0Xz17nR0i7+auE6C8C3uYy5qaN4SYN8wD7Ns4gYJOr/Tzlq+nuYfg4fCiKZ5
G2j+MZge+eRQ7Uaafwy61UwP6riZ5h+DHVdDPWxzaP4xsM7aVuC/heYfA+Om
8xes19L8Y1A4Ljj+WC7NPwY37dcuqtpK84/B62d/nr/cRvOPwdz1otk/8mj+
MRi0amJekx00/xgcfXPMsGU+zT8Gym1rk1oV0Pxj0OpzgI3xTpp/DB5g5YJG
u2j+MQi+63z5C7UkBmnVX8883U3z19/Pezf7a4U0/xiM7+WQfHgPzT8GUs9W
cVl7af4xUM12mx+4j+YfA1OPYy3mFtH89fPvtj5rvp/mH4Oq3V9Tv1LrYnC7
35bQsgM0/xg063UzJ+MgzT8G6u6/Wi08RPOPwYV087sdD9P8YzDrwfe2d6jr
YiBJvHpRcYTmH4OVbTa1nXmU5h8Dwz+GP/5SC2Lhc8pRub+Y5h+LV7Gpb5cd
o/nH4mbzWWYtSmj+scha86HXQWphLDZeTezqVErzj0XXjpfb/6C2ikV9yrCO
64/T/GOxZ03diJEnaP6xyE2sDLtKbRuL3qXSr+4naf6xuBPsdbiB2ikWtwen
lSWfovnH4oLujJWZjuav//xHW5vmUYtjMcwzdv6g0zT/WLwsDhUeopbEwvyj
e4T1GZp/LKZOeeZbQi2Lxa8ebi3HnqX5x0ITaLzoKLU2Fs53brkOK6P5x0Ka
l2C5m7ooFpP77ijreY7mHwt1YeY4DbUuFmc0q7OMztP8YzHOs+eTEOrKWBhc
je7zgro6Flp1hzULLtD8Y9Fl/7TjJ6jr9PdvMaOXRTnNPxYlf/rsSKNuiEX5
0BL7D9SCOIyTHu3vcJHmH4e2EdvHH6Y2icPTdk8yTC/R/OMw5eDWfn7UwjhI
v3w2vUptGYeJ4lNOlpdp/nF4GX3ml4TaOg6exuuNqqkRh+YTj8UNqqD5x+Hk
rMDAGGr7OHzr9evpTWqnOJR2dr5rfoXmH4eLu0IXB1B7xEHX1tz7DLU4DmP/
GJi1uUrz19/PsE0rnKklcfhh4bowj1oaB49taZ/eUMvi0HOJs82IazT/ONik
Vs0Oo9bGoSrsbYdT1AVxsOgRvrVRJc0/Ds9zRn+3oS6Ow/6Hp3skUuviEG2U
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
bnq/08zF6QhzOv2NWZeOsqlugxJZ/ulotdbEjbkyHZO6VqqZq9PxLml7OXNt
Oo7dUv1grkvX3/7WAUks/3S8n3ndhbkhHZ9FFqnMggxUDt1+jNkoA6HSeS+Y
TTKQ322IqZTln4Gg9ZPALMyASJm2htkyA7GK9hpmqwx8a3XvFLN1Bpx9/qtj
RgYuGw1vm8zyz4BVvwprZvsMJBodWMbslIFlN14kMIsycHebeDezRwaapc2t
ZBZnoH1a0mfmkAzEZXUxS2H5ZyBC1XocszQDY11XLGGWZeBRSddo5uwMNBJP
0DJrM1AyuFzHXKCvZ/OpWuaiDIxzshCksvwz9PvrP92ZdRnwfjRzAnN5Bury
27gwV2YAB2eFMFdnYP6KJmrm2gysaTN+P3NdBkwNP1Uw12cgIG5gHXNDBpLP
vWqUxvLPRKuGId2YjTIx4t8/o5hNMjHk8CJ7ZrNM3PKa6MkszETu6kMxzJaZ
eLSzdD2zVSYeWDjuZ7bOxP1LCeXM+qdpfuisR8y2mXBsXfiF2T4TKS47WqSz
/DNxb8CEnsyiTORM8hvF7JGJwYumz2QWZ8K2x8llzCGZKLSp9meWZOKaV1YS
szQTvoN+b2CWZWJhzxZ7mbMz0XDzjI5Zm4myy31uMhdkYql05DPmokzMif30
lbk4E18HLDfKYPnr17M+uhNzeSZ6jprXn7lSX7/z7bHM1Zk4ccRkJnNtJoZu
NnBhrstEsPMuL+Z6fX4jW4YxN+jXY61lMrNAho/Qf6upDWX4/ES1g9lIhhnx
Lw4xt5Rh39zvZ5hNZLjsdbmS2VSGa1+WPmQ2k8Go5eHXzF1liDt7tYFZKMPJ
QXuaZFKb66/vOK8ds6UM36Yd7848UIYSwfv+zFYyVMW+GsU8Qob+F/ZNZraW
wensv3OYx8sQ5rFxMTNkCNh21p3ZRobWS46tY7aV4XdoZBjzLBmO3jNJYLbX
j7sEZDI7yOB9u2A9s5MMz7vv28bsKkNiU+keZpEMu5xHHGV2l2HKs0M6Zg8Z
FnobX2L2luHggZE3mcUy7AgeXcMcIEPTYJNnzCEy+HmefsscIUMPw5lfmSUy
TPy+5w9zvAwnvr1qKmP9IIN4d6M2zGn69Tnx5R9mmQzKG2XdmVUy7M8QWzBn
y7BN/n0Q8yZ9/iGikcxaGc4+2D6eOU+GZ06XpjAXyNA1+qodc6EMhU8OzGMu
ksG9fYgT8yEZnHO6L2MulkHaOn8l83EZOr5p682s09d7fJkfc5kMfQzlIczl
MkRN2RHFXCHDnu9b4pkrZXDYFpXCXCXTPy8my5irZZAXv1Ez18igbhe5kblW
htrxn7XMT2XI3zl/B3OdDNXl2buZ38gQaHShiLlehqSqB4eZP+u/P1kPSpgb
ZHhVfP4U8y8Zbm9ZX8YskKOsyPEis6Eckjl/rjAbyWF5T3aDuaUcJgdb32E2
keP3qJD7zKZyfD995RGzmRyue9s8Ze4qh8HCiXXMQjl6tnJ+w2wuh/vAFfXM
lnI0b+b8mXmgHCXvJzYwW8lxenS7X8wj5Lg6uOovs7UcK3onNJaz/pfDy61P
M2bIUTj6sDGzjRwD3o5ozWwrR6+KvLbMs+QY07VJB2Z7OW70djRjdpBjhGV2
F2YnOVr4XO7O7CpH6Mj6nswiOe6cadqH2V2ODQvbWDJ76K8/yHgAs7c+n6Rv
g5jFclTm3rFiDtBfr3jXcOYQOT4Y+o5ijpAj+kz/McwSOXb1qx7HHC/HEL/Q
icxSOdrcbD2JOU3v2OwpzDI5eh/6ZxqzSo7Jm5NtmbPlSBZ/sGPeJEdf0ZzZ
zFo5wjdr5zLnyXHTqW4ec4F+fU73cWAu1H9+s8WOzEX6ccdYJ+ZDcpx/kOvM
XKzPq/yoK/NxOV5PKlvKrJMjIPCCiLlM/31KO+3GXC5H//0H3Jkr5OjeYuMq
5ko54s+EeTBXyeH2Z54Xc7Uc858JvZlr5CjY9MKHuVaOgzN2rGN+qu9HkyW+
zHVypHdo6c/8Ro7p4QcDmOvlCHJfEMT8WY4HH18HMzfI8Wt6ZCjzLzkWxDcL
ZxYo/uf/R4xgNlTgwbBmUcxGCiT+FxHN3FKBjQ2vJcwmCvzJdIhlNlVgwIUj
ccxmCrwqaZfA3FWB+CSPRGahAu9ti5OYzRWQdG6UzGypQNeO01KYBypgtTg+
ldlKgfQfx9OYRyhQZFqfzmytwD5dt0ze/woIO06T8f5XYKCVp5z3vwJBvZMU
vP8V8DPSKnn/K1Dx5aCK978CoxudVfP+V2DblCsa3v8KlF67kcX7X4HXpTez
ef8r0KNb5Xre//r1b1a+gfe/AstlpRt5/yuQfGnXJt7/Cuguqjfz/ldgUm5E
Du9/BS6uWLaF978CZ3tP1PL+VyDmk1ku738FDj19zy1VoN7o7Fbe/woE+yq2
8f7X5zNkaR7vfwWi5lts5/2vwKPXr7g36e+vReEO3v/6vHWe+bz/FWjSxbyA
979+vfrd5y5UYNivjJ28/xUI1P67i/e/Ps8+b7mLFViSnbWb978Cn5r9W8j7
X4FNMf9xl+nXp13CHt7/CuSU997L+1+BL/tOcVcqsPmW0z7e/wr8nfqeu1qB
hFZxRbz/Ffg52nQ/738FZl7fyv1UgVbPBh/g/a/A0ahi7jcKZO389yDvfwW0
4jLuzwpseDjtEO9/BSb+Oc/9S4H7d20O8/5XYnu4jttQiddvxxzh/a/EurH7
uVsq8cLL4ijvfyXqpOu5TZW4tNm4mPe/EscPhHJ3VeJ+5XNuoRKdDeYf4/2v
xKhZpdyWSsSU9Crh/a/EGQcpt5USLXq/4R6hRNKgOaW8/5UYHrGXe7wS9f+0
Os77XwmvJl7cNkoMnHuO21aJEz+7n+D9r8TqdsHc9ko4brjC7aBE4oZeJ3n/
K/G5UxC3qxIOPcq5RUpE7zc7xftfiUZ3VnN7KGGlOcztrYT7FwMd7399Xj9m
cQcoUVGo4Q5Rok/bR9wRSpwdZHGa978SkUbe3PFKGOYXcUuVeNn6M3eaEvun
jjrD+1+Jo/bB3ColFo88yp2txMmGL9yblGijHX6W978Sk6zE3HlKLNm7m7tA
CaMez7kL9euR1KOM978Sya8XcR9SQmufyV2sxLuSc9zHlXg1+Ce3TokvRUPO
8f5XwnnqCu5y/fexXs1doUT54QvclUoYbGjgrlLim9byPO9/JXyuLuKuUcLN
IpG7VomUwoPcT5VQuddy1ykxc37LC7z/legaOpq7Xom8muXcn5XoJUnlblBi
+upD3L+UmKWu4RaosLKVYTnvfxVu3OjPbaTCxTp77pYq/Ds/iNtEhWXtNnKb
qtB54CluMxU8tj7h7qrChJAmF3n/q7CoqC+3uQoZs2dwW6qwdb4X90AVZp5J
4bZSocWWXdwjVNj8+iK3tQqBu+q4x6sw4mHTS7z/VbBMNue2UaF8zyRuWxUU
c5Zyz1Lhuk8Yt70Ku1tpuB1USLTaz+2kQnL1ZW5XFZ41e84tUunfT/5yu6tQ
b9jpMu9/Fb7dHsrtrUKatR23WIUzA9y4A/T3eyCUO0SFL1dl3BEqXInN55bo
5187wR2vQsXRm9xSFQrGv+ROU6Gj6A+3TIVHvdtX8P7X55XclztbhZbKcdyb
9H8/aS63VoUNWW7cefr7UQdyF6hQO0HKXaiCUr6Bu0iF5YpC7kMq5Ew6yV2s
r1d7jfu4/vu2v5Zbp8LegA/cZfr63hhc4f2vgmGndtwVKhz/1ZO7Uv/9yh7K
XaVC5FtwV6sw4Pdc7hoVTpUv5a5VwW6eD/dT/fWyw7nrVLDISeZ+o8JN9yzu
ev39vs3j/qyCufUB7gYVfk87xf1Lv76dK7gFagQequY2VKN5h2fcRmpsmPCB
u6UalkN+c5uocfaV0VXe/2rY+ppym6khOtuDu6savk/6cwvVaHdtJLe5GtYp
4LZU45bpTO6BahSuW8htpcbejcu4R6ghW+/Jba2GnZc/93g1UltHckONPkmJ
3DZqvKvK5LZVI78hm3uWGr8+5nLb69enbBe3gxrL1x7kdlLjYX0pt6saV2eV
cYvU+Bxbwe2uxhdlFbeHGu6SGm5vNb7ZPuUWq7Hy3WvuADUG+H7iDlHj1fUf
3BFq2LRtdI33vxoPhjTnjlej22ATbqkaF1p25E5TY0lFN26ZGgE+5twqNaT1
/bmz1ejiOJR7kxr7c0Zza/XXvzSBO0+N1vencBfo1+vaDO5CNXJ2zuUuUuOj
x0LuQ2qMau3CXazGy/Ui7uNqrG+5ilunRvyqNdxlaswrEHOXq+FwI5C7Qo3f
T8O4K9VIr43mrlJjx7l47mo1IlXJ3DX668/O4K5Vw/6DgvupGo0lWdx1avT8
sZH7jVr/+6vlrtd/X/fncX9WY1p9AXeDGsFd9nD/UuPc8P3cAg3SxhzmNtSg
26Bj3EYaXGx9grulBtUPddwmGhzcXMZtqsHWmeXcZhq8qbvM3VWDssBr3EIN
kj/e4DbXQL7sNrelBi1O3OUeqMHsFg+4rTTYZVfLPUID6/D/uK01cN/8nHu8
Bs77X3JDg6VH33DbaHBr33tuWw1ub/jIPUuD7SFfuO018J7RwO2gwaJWP7md
NLhf9pvbVYP2YkEl738NhrVpzO2ugc/WJtweGnztZ8TtrYHxDmNuseZ/9jPc
ARqUR7ThDtGg4k5b7ggNuluacks0+OPzD3e8BqqdZtxSDZre78ydpoG6UTdu
mQYOwh7cKg0kI3pyZ2vg9G9v7k0aPEUfbq0GrmP6cudp8MCyH3eBBoltBnAX
anDy7UDuIg1izg7mPqRBrcyKu1iDto7DuI9rMKn9CG6dBrLykdxlGlgEjeYu
12BI1zHcFfr1LBnLXalBk/njuas0+Pt4Ane1Bt+8/uWu0aDhDbhrNejqMZn7
qQbZNVO46zTws5vK/UaDG/uncdfr+7OdLfdnDZJ8ZnA3aDDmjB33Lw3umMzi
FmQhZfFsbsMspG2aw22UhbN353K3zIJr23ncJlkImTKf2zQLvcULuM2ykJDl
wN01C8eOLeQWZuHSbUdu8yzce7eI2zILtwwWcw/MQiMTZ26rLLh0cuEekQWD
7q7c1llo330J9/gsaDst5UYW8k2WcdtkYW5jEbdtFoo//B/PysK3+8u57bPQ
8Ywbt0MWuuSt4HbKQudYd27XLFi6rvw//Z+F5cNW/Z/+z8I1w9X/p/+zoL75
f+ydhcIcj//v/wdo6cMf
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJw13HlUzO/7BvCQVLYQkpC0C0lIigshEkWUCpWiTfu+Tvu0z172QZQ9e1Rk
LSqKEKEQ8pFkz/6b3/nej3+c13m6555r3l2HmWYa7xG40qu3nJxcS185uf//
+39/uuf+7+82+lsOD77ssn+/+hlZEc7DxzauPPSErALtMbeS1/dqIatiwoRP
Q7U3PCKrgftRc9rm6odkDfR2vDMo0PIBWROpU2aGv7naRNZC9oArhxpd75G1
MbtSRzdV6S5ZF8cWjw4/e6uBrI+7rj86DefdIRuiqmvF93PD68lGWDlvztvm
IbXkyZCerNp4d9pNsjEGm10JFUZXk6ci3fHZ3+a262QTjF1uU7Fk8zXyNCid
c7TKVr5KNoXGhEfa9jWXydNx69075c27qsgzkCQ5ODxg+CXyTFjZrnq+dUQl
2Qy5qibnj1mUk2ehUE2Ruzz1PNkc3NQ+Atf/zpFnQ1i93bfH7yzZAm2rDqdF
KpwhW+KS0qeAdedOkecgv7TbcWXcSfJc9HERjB+56gQZKLp4d0D4rNL/mQP4
Ryj5L3U+Rufz0NumKmK54xE6n4fphl0uLzceovP5CCpWfB4XWULn86E7S6F9
fMoBOl+AgM/bPRa6F9H5Aog5ZcOyNffQuRUkfxLUTpuQOVZ4udZx5R8rdr4Q
E3pEVpsc2flCDA6tnN3lw84XYQ5vx2xRHDtfhB+L5r5ek8/OF2OPZKuT6V52
vhj9WjV6DM6wc2v8GiM1NK1h59bIqnPutm1h50swrmvU2qAudr4Ez6eNbOH3
2kvnS+FckXJ5vyqZsxTN3B/rduixcxssDFWd7GXOzm1gn/P05Kdl7HwZBm9u
PjBrAztfhp3L7Y/qBbNzW1RVqOTtS2bntvhc8yF6u5CdL8eSOt8F/YvY+XIs
XfLct+cUO18BZbewd/5X2fkK1OhNkwu7y87tYBJzT6L2nAw7vB4w44TnB/b1
dnjwznqW+x9ylR0OnX6gMKL/Ppq3x8sd4p5MNTLsEcnJHXpVh8yxxwuF1u03
TMhV9gj32zdr61w2vxIPSqwU5i5j8yuRuWfj/nInNr8SbzcXOwz1YvMrYRLw
8sfCYDa/Ck06/yavjWfzq+D344/N8kw2vwqt16MC9cRsfhW8TtSlvZayeQfs
Spi5IvcIm3dAZcJgrzFlbN4B+39ZzCm8yuYdwNdVnfbvNptfjQ0DD3JWPWbz
q3Go4KSN5BWbX4177QP31XSz+dV47Nud9O4Xm1+DfzebGv8pUD+wBmeXG/kr
DGV9WQPz+Kej5caQq9bg8RHJrvd6ZDlHpEt/7r9jwuYdwR1/pPmAJZt3hH+b
xb1QazbviL9z+hjMXMXmnWCm+djz4zo274QDPvVK+7zZvBP6pJwRLgtl807Y
1HA1siueza9FXGsvnUwum1+LcTeuyY8Rsvm1kP4bHntoJ5tfi33vhr6ZWsLm
neH4fsG+UyfZvDMOK3f2Na5k886warB3L65m884o0estr36XzbtA9/zAWdwn
bN4FRu7zrD+9ZvMuqJ3qHOH0kc27YLff9L7lv9i8K6rqf09TV9hP864YIVgx
N0KFzHFFjoe3+x11cpUr/LNxV0eHLLcOBSWl1dFT2Pw6bJPPD6+dxebXoayl
duBoKza/DpnHs6u8l7P59VBqmltx2onNr8dh58pJ/zzY/HpcjVsJ6y1sfj0k
+x6P4UWy+Q3wM2jsepDE5jfgQKfHY40cNr8B52sTFDwkbH4DTo99VXBAyubd
sGXejJP/HSJrumH7XLmoyWfY7bnh8sla5ZBLZDc3HGrTyz5zk92+G7bpnVX7
cY8sdUPxNdO7Fs/YPjek/+Pe53SQ29ygd6Nm7vVPbL87Ki8vmKT8h+13h3pX
9vkV/ejfD7gjoDz+n3gI2c0dk64sHvV0NJnjjobBIZo6umSpO3SGvZoUYEyu
cof25O61ZebkNtm+Tysq+ixk/z554PVgU3+7FWRND5z7bMXZtZbt98Bn3YOD
ujay/R4w26Q8aW4A2++B83HbuvlRbL8H+rePDHidzPZ7INDo7nmLXLbfAzXG
x96ICtj+jZAbZdj/wx62fyOeTnKfaXOE7d8IEWdw4sGzbP9GnPQWf1G6zPZv
RNjjnwf9a9n+jagt+FTaeJ/t34hvlk/VZ7Wx/RvBnVrXs/c/tt8TEt9Ul8Ff
2X5P3NFKWpXwj+33RO2mb90flIppvyeW59xb4KlK5nhie951l5axZKknzFfO
sl5tQK7yREzjOrW708htnthlottiP4cs5wW5mza7m6zJml7o19su1HkVGV74
OifB6+U6tt8LITvepwR6s/1eOF6S/ORvCNvvhWeKH+P48Wy/Fz4OqgzR47L9
XlCHZW2VgO3fhM667cJ1O9n+TTjy62Hzn2K2fxMS0qqL95xk+zfh1euRA5dU
sv2bsLJoxfAv1Wz/JgxPuVO39y7bvwle5+7NXf2U7Zfdfr/wmP4dbP9mfH11
kHv9E9u/GaGJiyNS/rD9m/HuSu8VCxXp/1dum2G0Pnhs/2Hs/1ub8fmkcnfT
GLJ0My5e1b+zV59ctRllakrVYdPIbZsxfGf9i6VzyHLeWBkeP0lnCVnTG563
+57s40CGN9YcMI99vZ7t90Zg3kNhvQ/b7435mzkK58PYfm+UjbjytCSR7ffG
VrNh2juz2H5vbLrZ9FIsZvt90L9upZ5Qyvb7IPu/az2iw2y/D84MWeGx/Szb
7wMdxd4BBy6z/T5olXuic7aO7feBl8FN4a2HbL8Pzk8ruvzyBdvvAzyZcb5X
F9vvixt+5qnaP9h+X1yc7mS0TP4g7fdF61DD8qjBZDdfoNnc/JA6meML5VqF
U206ZKkv+g75PVljKrnKF41jYs+5WpDbfDFrzMPVexeT5fzAcV4z7P1KsqYf
XhWZ/LBYz/b7Yf2JrSoCH7bfDyeij3p0hrH9fugpTO2x4bD9fjiz37ClNJvt
94NvpnTY6AK23w9f7z85lLWX7fdHsVrdwX9H2X5/TJhoPyrmPNvvj6nJC3v/
vMb2+yM6JnpLYgPb7w/nfac3Kj9h+/1xod/Z99vesP3+UA03VZ36me33R1nV
s9a6v2z/Flj0d10boEzPJzS3YHnvZZnDR5CxBW2ai6OujCe7bcGF988mh08i
c7Yg02zXmUmzyNIt8FytNLzTily1Be1rdq0utSO3bcGTRfcTY1zZ85cAlKzT
3LHUm+0PgJFZ50nNMLY/APwB0rrfiWx/AM493fnxWTbbH4DQo/MNqwvY/gBs
P/o64cw+tj8AvYOefj94nO0PwIzhETuLytn+QMyJ+RW5v5rtD8RCr9P5R+6x
/YEwP/Gy83wr2x+IsKiagvp3bH8gNs3ZVfjmO9sfCGu1nd/7yR+m/YH41vSj
YrIKuS0Qtya87nbRIMsF4fgF3vZ8fbJKEJbE6ly/aUrWDMKagvpw5Xlk4yCY
nT5+xt6WjCCUD+zO2b2WbBcElcLSPl+8yG5BGD5+iNaKEHJQEBqDpnSXJpA5
QbD10YsYlU3mBeGEzrAKbgFZGoQStf63/u4jlwZhvqFuSWwpyxeEv03R6/9V
kBuCsH6++tfMmyxvEK5sUg8b/YDcHYRzGjkvT71g+YNxcC7HZtUHlj8YA24o
nP7xi+UPxrvHk3WKFen5r3EwvnxTKHYZTkYwunt2zBupRbYLxnnLv78fTSa7
BaPy3Mzn+2aTg4Lxqu+ab2HW7Pl0MNSyvKxsV5N5wdBLDLln5EGWBsN9UObh
YYHk0mDs8zzT1CuOXBWM9ht9HL9zyQ3B8DvAMf8iJrcFI/20WUbPXnJ3MNq+
mi2ULyXLhcD5fl7cyEqySgjyZlhPN7lF1gxBe0ZopMNDlj8EC5rG2SS0s/wh
cGxyLTv+keUPgeSfeXXHX5Y/BId31CYaDDhK+UNQ26j5X/AoMicEIadtB13R
JfNC8MZp05dRpmRpCDY+TyyKnkcuDcHDnFLd58vJVSFYf31wip0ruSEE3pPP
Xq72IbeFIOVk5X+LIsndIXjAm6dwO5UsF4p1vus11gnIKqE4stxk+pfdZM1Q
FNY8cRIeJRuHIui/hHzzcjJC0bl29vO3NWS7ULxzmbFmzwOyWyiqW8Xf3NpZ
/lDEZiXd0v/E8oci8LLW455/LH8o+pwpmtQ4kF5/kYbiqa9p/YnR5NJQvKyW
u7zNgFwl+/pt5kNyZpIbQrF1j+qNtIXktlBc3nb1TcYqcncozBclJAjc2es7
YdAJiRfsDySrhMGv9++Jl+PJmmEY8GPGqlfZZOMwyCdsURm6jYww/Hrd5re4
hGwXhgcXm7aknSW7haGlLm9s3TVyUBiqRzumj75H5oQhXS7qaOhzMi8MlZpz
djR9YPnDMCK6x3nOX5Y/DK4bez6WDjhO+cNgtYPvYzSa3BAGtSXqt0oNyG2y
+T//jZ5jRu4OQ/HF9ZubFpHlwmEx4N7p0NVklXBoPC8eoOFJ1gzHq/NzI+tD
yMbhuFf473dGEhnhaFRaccCGR7YLx0bdwli13WS3cJhtXZzWdZQcFI7SPXW1
9RVkTjj6jNzqeLaWzAvHMr/xU0sek6XhcDj2xG3fW3JpOPR5Vh+Ke1j+cFSe
8P30uA+9ftcQjveD++3f1J/cFo5bU8uGfR9K7g7HdfOq+TnqZLkIrN7nMUNX
i6wSgUOz2j9dMyBrRgBa2XHeU8nGEVjSvOuhCnu9EBEYPdlb8SLIdhHYaDt1
WJA12U12++cW/ta1IwdF4IzVp+oXjuz1xgg06KTF7NtA5kXA+oWtms9msjQC
T5127p8WSC6NwJBL13X7RJKrInBYqi59mMDyR0CntXv4iXSWPwIDT+zKyc9j
+SMwZU+sYqiE5Y9EVW5brssulj8Sa4v1xi85wPJHoivwyI3Zx1j+SAjO1yZP
O8vyR2Lq/pdrjS+y/JEw2rPKzuQGyx+J+5vjfGfdZvkjce/PpSMLH7D8kQgo
TRrt+Izlj0TFMN3yLa9Z/kiclRvGy+xi+SNhKDy+69A3lj8Su/U83zX8Zfkj
obp2W8xvBXp9ty0S0r8VdpMGk7sjIW9gFrJxJHv9NwqqmtEvd40jq0Shv1tX
SaseWTMKlyT9qnWMycYyS6fPDzYjIwq26f+NvQKyXRTmR211V1tCdotCQ93Z
QWH25KAoTP19zvD+WjInCno7h12Y7UHmRSHSfd7lYl+yVPb1Qy9YjQoll0ah
I/u7NS+WXBWF2gthdwekkhuiIJEcfZWXw/JHIWbsuIwRYpY/CnUOi8v37WT5
o3HafH/6jAMsfzR21Ja9v32M5Y/GgZ7eX/3PsfzRaN/Xd49KFcsfjYTtC76d
r2H5o3FRhB/ejSx/ND7pJh0b85jlj4b5jSz15hcsfzR0Lr6cV/iO5Y+GtdEw
g/VfWP5o7P4pbTL4w/JHo/HR8CW/+tLr+VXR2Dz7V9bdQeSGaFyyadl1fCS5
LRpKncgUaJK7o9Fz+NzyWAP284AYRF+t/exjQlaJgc4A5fj1s8maMSj7+a/L
yYpsHAOzwtnL19qSEQPdWJvdG9aQ7WIQVnXxtd8GslsMHOR1DBK8yUEx+Ok8
yE8STObEwHBJ/xOnY8i8GByuOPKvOYUsjUGOfKpLn1xyaQzsbmrdnCZh+WPw
XX60re9ulj8Gz37+fXeghOWPQcAU90NvT7D8Majc0JRjUs7yx+JP1LuCpGss
fyzu5M9qeFDP8sdiw0N7c5OHLH8sQgqrHwvbWP5YTNGffPbXW5Y/Fq+fqTX6
fGb5YyEaNNr42W+WPxbLf1Q/dFKgn89wYhFTfbLu0WAyLxY/4gOGuY8iS2PR
+0tuaZcWuTQWv2v2lSQbkatiMdJ5vtyYGeSGWFSf+1VeOZfcFosh293bPJeQ
u2Nx1rlvyNBV7OdDcTBqiwy/4UpWiUPojiUfOJvImnG4GqfcPi+IbByH3q1L
nJRiyIjD+HSJ3cMUsl0cFuQlNB7OJbvF4ZJbfmt6ATkoDu+LVyd672H54/B4
/rozdodZ/jicM5uaPvcMyx+H6UdcvpleYvnjsOO2l/LUmyx/HO7cfXhj2j2W
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
rYAKsnEGhoSP5xVeJ5tl4Mtx26Drt8nIwJ2Nx8u/PCRbZ8Ctb52v7nOyXQba
PqtFOP9HdpLdXtqv+7zPZLcMXB9yM/nmb7J3BrT6VIfJK1yh658BnzbDonmD
yVEyr1NXSlIjczIg8jm8/cp4MjcDe+a2r1KYSOZl4EV4ucEyU3JhBmYMVhsu
siRLM7A1p3Hgs0Xkkgys+ne8v6EduTQD90b7K0StJZdlYIrt8a/VHuSqDJjd
HNY4yp9ckwHs1+ZtCSc3ZCDn3TrDqwnk5gysPWFUoM4lt2VAOOlDfSif3JGB
SQ1frt/eRu7OgK5zQsTEInKPbP+3ygeZR8lyXPy0f/j07VmyIheTy1qTbarI
KlwMnPis4thNshoXpxNrk4fdI2tyoRQjqI1+Qtbnwvrt4Lznr8jGXDhdH3p5
6QeyGReFy1xdzvSQwcUWLemq8b3p/fTWXGQFpErz+pPtuDj1e4/ZH1WyExc2
61KHbhlLduOCo3BI+5ke2ZuLQRGpXnZTyUFcXF8VVXvVnBzFhUT0dJmZFZnD
xbpd/1qP2pK5XFj6j4nVdiTzuDh5ykd1hxu5UHau3H+vqi9ZysWR/hrqeaHk
Ei7Ukg6HKMaTS2X5uBV7UtLJZVwcqli0818+uYqLw+tnuMRtJddwsTfBv/HH
XnIDF4a6l75GHiE3c9Gd/KPy2xlyGxd9hz4ZF3GJ3MHF+VqNId9qyN1c2fP5
zRkRd8k9XEB1XdT3Fvb5hUxk5YsfRb0iK2bC2XeX9GcXWSUTR478uhLXQ1bL
xIH3ejP+9aLPQ2hmIjxF9CGpP1k/E71OH2yXH042zsTPVzeUuWPJZpnIvDvf
sb8+GZlIPud3KW8q2ToTM7MyzIbOJttl4pxh0zmxFdkpEyUFGSajlpPdMiHQ
ati5w5HsnYnaoqauce7koExUnz6tvs+XHJWJ7hbuCN0wMicTyvUeD0viydxM
/N5mu3JiBpmXiQndtnFHeeTCTAxa5LF0yjayNBNlY1JOlO4jl2Riutm+A1OP
kkszcfvO8bEnz5LLZHkbeYNMqshVssdrpIHfiZvkGtn92bPGwPgeuSET+nc/
WR57Qm7OxMuDd3dOfE1uy8RcuWrLkg/kjkycvbxjqPYPcncm/CaOGbK7N32e
pScT9/oNmjxqAPt8SxbOvJu6XjCcrJiFTaHWEuVxZJUshHAG1Sbpk9WykBo5
5+P3qWTNLOxM4P3xn03Wl7n8QnubFdk4C32FwdtXLSebZUHpzeYR1x3JyMKz
NSuWTncnW2dhdkLzxCJfsl0WJk8/dXxIGNkpCwMa8m7Fx5PdsnB4g3pwRzrZ
OwuXP8oX2vPIQVmIbvwz7fxWclQWjGpOzxq3j8zJgs36xztTjpC5Wdisobn6
9RkyLwtOdWYOiy+RC7MguNCcf6CGLM1C2vczv/vcJZdkYehWbv6GFnKpbN9v
Zcvz7eSyLIQr/Pyh0kWuysLbzcPLN30n12Sh6Mm48AtyN+j6yxzQqjFAmdyc
haxzY4pdhpHbZNdHq0TxoAa5I0v2/MpuxhcdcncWfI6807acQu7JwnHF1TdT
zMhy2Tif6qdWM4+smI2LccP6KduQVbIRUjIja4kDWS0bG1yvSdLXkTWzYV97
YvzlTWT9bGQs/jnuRyDZOBvlKbvTJ0eTzbKh3XRwqXsyGdkwC9R352eTrbOx
8NjUSxdFZLtsvLR9ufbtTrJTNkyPeegOKSa7yc6HPh01o5TsnY3fLzIMnM6T
g7IR2SFdGnmFHJWN7PyAEGEtmSPLqwPJkSYyNxtH1AIOX3lK5mVDYupcfP81
uTAbMS8CE199IEuzobRJ2+BTD7lElmf0962/etHnyUqz4X8quLpXf3JZNnxC
9IvlVclV2bjje2Gy/BhyTTYsLzSuktMlN2RD5fqEAT8mk5tlj2dwsG3XTHJb
Nq5uzBjYBnJHNixmzJl/ewm5OxvNZ2Kel60k92Rjt/rk57td2OfdcqAwb83M
FE+yYg7OvvjzyGMLWSUHV29bXJoTQVbLgdd4s6cjEsmaOZgTq2X4LoOsn4Nh
ZhY7ynlk4xx0F90z4G4lm+Wga/rCm3Z7yciBVfmvoOGHydY5aBAHjXxwimyX
g+nvJp4SVJCdcjDx0TVzm+tktxwElTwv+ldP9s7Bj78zO44/IAflYM+Q3F8u
reSoHJjdP3O/TweZk4PWyQVbirvJ3Bx0TNC9sOgHmZeDF4reJ5/3qqHrn4Np
pSG2UcpkaQ5eF/gnKw8jl+Tg+Yhc68LR5NIcuGRqFIzXJpfl4HJcmNcBI3JV
Dloe/zukO51ckyP793n2hr2W5IYcDF16OnrUInJzDtQj+3/KXk5uy0Gfwk+X
fqwhd+RA896kFo8N5O4cTN4tnF29mdyTA/HbAY90g8hyubg+W3w4KYqsmIuu
VvPDDzlklVw8lR/XoJ9JVsvF4ufhQ8P5ZM1cjHmQ7luxlayfC0vekYa/e8jG
uXAwWG1pcYhslotvi3sfDDtJRi7k5i4ZUHKBbJ0LHaN7Gx5cIdvl4uzwdTv+
3SI75WJbv7ILE+6R3XKRMOXmqfktZO9cOPdkclxfkoNy8UpbUT34HTkqF/y3
XtGcz2ROLkL6Pi7I+kXm5iLu8fGA/D70+VBeLr6kLv6e159cmAuVT8MnZg4j
S3Nx7mtRn4TR5BLZ7W8QxmyZQC7NhdZgcabjRHJZLub2CzW0YJ8/rcrFDk5/
x9GzyTW5yP1lr/R1PrkhFz/sVsy+uZTcnIvkK+PfFKwkt+XikdIfBXdnckcu
bDcbirU9yN25iD2umPPCh9yTCzOnAa+3BbPPv+bhcuqlnbbRZMU8dKpcOfqT
Q1bJw+3tN1X2cslqebDh77m8gEfWzMOEaRPLWwvI+nn4Jl3XE76bbJyH/a0L
wxSKyWZ5aGtVMOQfIyMPDSmPVEecJVvnwaRogLG4kmyXBzfVvpGDrpOd8vBo
v+WrpDqyWx4aDRdHfLhH9s6DRlSNjmMLOSgP5psSPpS9IEflyZ6Pz76j+h+Z
k4d3295W+X4kc/PgWJRedaGHXf88LG3UuyUvd4uufx6ae/c8su5HluZhn6pZ
Z/ogconMzXP+XBxOLs3DuqHRSh81yGV5mBPsM3CMNrkqD55ZJX0XTCTX5CGr
sb3Lw4TckIfV/BfX42aRm/PQ/2VsBg/ktjws3y813rWY3JGHjSFrLu5fTu6W
XT9x2aTi1eQe2ePTqyd2rytZLh/D4HKgYCNZMR/W/nMOpfuSVfKhqDksLTCY
rJYPjreb6coosmY+Np67cmZyIlk/H8/uvVPom042zkef2r0693PIZvnwab06
eLeQjHx4ROGqxzaydT68VcbN0dxDtsuH6YTYhIfFZCfZ7aunJXOPkd3y0WqR
bD3tDNk7H8qSutsPy8lB+Vj5+u6wiCvkqHzczlYbMegmmSM73zK9afcdMjcf
7u33l018QOblY/+BCwmlT9j1z8f7Y2XeU16y658Psc55pZK37PrnI8T6vJt6
N7v++Vi08pZ/+jd2/fNxzX3IpM7f7Prn492GaqlNH/p8ek0+Rrw2qy5SIjfk
gz/hxu7vg8nN+Th25YWB1QhyWz4c6od7ZWmQO/Kxhv/D7pYWuTsfE1Nnv+9j
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

             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxd0310U2W6xuHtKJ7KoEZFzRkRIiJTsWDEonEs+igFAxYIWCBAgQBtSWlL
0+/IZ+QzIGgUlMiABiwaRpQgiFHrEA7oREXMKA5RUHIUtTo4E7U6RXE8nDXd
e7/++KfrWg93797rXfuqGTVjy36jadrRLpr2/z//8y97+39+Zjp/avKN8+re
Q373UadzZP2JAT/+9eYPO22Rt3u/dtk31Uc63V0e79ftaMuhw522SpPXk1pY
/m6ne8jLxaNG/HxrqtM2eaW18KyHIwc73Vue3PfOxvF3vNHpPpI3eu5lN7le
73Rf0Uavb9T27e90rgRWVQy+esW+TveTZzcVTJrcf2+n82TVhNDyx994pdMD
ZNjeW8NaKt5pu1wx+JKi7PV7On2DnMrZfOOFR3d1eqB0W7Pt0/0Hdnb6Rsl5
d/eg0ft3dDpfpq4/8tzIkds7PUjqe244XnfBtk7fJDfVxfp8dHxrp2+W8j2x
CdVFWzrtkMVb9z6/16P7Fjl1Rbj/jY26/yDn//WH9a+v1H2rvPbAI7P8j+su
kJcv+uTxYbt0D5b+Pa54ZkBS921if6bhpv4f6b5dXE8s/nLwt7pFrisuvnTy
fz35HwdEutYtGrygR6e1O+QPx5qaN9yg3++QP87NrNs6TL/fKYUj5l+6ZrJ+
v1Pe7Lkoe4tPvw+R6mnvTX1gqX4fIle+WbO9NKzfC+WK7Ji8Nc/o90Ip+mDf
oDdf1e9D5QLXpL+mDun3obKm7oWeUz7W78Pkqg/+fevok/p9mPyxcuicWId+
v0tKvmv/YcvZLZ33u+Sdbt88Oub8TmtO2fLN3TM+v1S/O+XLOxf1XHGlfh8u
I2oHlRf30e/DZX/vcV9X9NPvI6Th5parjl+v30fI6ML0kb/k6/e75dxFQ9vy
b9Hvd8vTE9bsyh+s34vk3vz9D74n+r1IRl5ku6pHoX4fKYNHHNl8+V36faTc
/oSrx6Hh+n2UrC5YtmFYkX4fJWVr9hStGKXfR8uzY2TbIy79PlpefvyL5U1j
9btLahpbBw4o7rS45Ks87+LEOP3/u+Rf+9d9ap/Q6YRL3hz/vXexW8+PkZZe
Je+/OFHPj5Gf9+RvfW+Snh8j94yKXpaerOfHyPXDW+x/KdHzY8V2/jfJLVP0
/FiZtmThyqqpen6svHt5l++vmabnx575XrpXpnRr98ig6qeuq/bo+Xuk3/ND
Jv2sO3CPnHr1HW3xdD1/j8zac9bFp3VrxeI+EK6smqHni2VFwz3p93QHiuWD
L3dedONMPV8s13pW7lulWxsnj66ds+Sobhknvzn602fXlOr5cdKr578qZ+tO
jJMtd05es023Nl4eyXfGP9Ut4yV917Ex/12m58fL4Ymn9ozQnRgvo9/5V4Ff
tzZBrhsxfOAW3TJBbnul2/GkkZ8gXQsfWXbSyE8Qz8DPZpxfrufdsv3Wnjuu
0y1uuf/nLzbdpTvglupn3546XXfCLZHk2ivvNfITpSKw/DcPGvmJcnLVvoFP
GvmJ4s7Wpl4w8hNl5ZSLf3rdyE+SO5q3vPM3Iz9Jvtj0gfczIz9Jti0fd/xb
Iz9J3ury2vBfjPxkuXbKha92naXnJ8uTk/xFl+oOTJZvV+07r5fuxGTZsdfZ
JVe3ViKlV/UZZTfyJbL3rIJvbzbyJTJ104x/32bkS2RRR8XCoUZ+itz175sX
3G3kp0j63A/OGWPkp0jzZ6Ge4438FOm+6at3Jxn5qfLbI69fO83IT5XkoIp+
M438VFmxYenRciM/VT6uHzZktpGfJs/kTp9VbeSnyZKdl470Gflp4q0tOFVn
5KfJ+yUjfY1G3iO1C2btadZt80jv4xPeudf4fR6p//aJP8/T7fHI4Jp5KxYY
v98jkX2f5S3SHfHIxq5P7AwYfR5Z32q3Ltad8cgvR7+ZscTony6fftV13VKj
f7rct/zeZ5cZ/dPP5C/Zudzony4Te94fWWH0T5dej9YsCBr902XlOQOHrzT6
p8uubX27rDL6p8vdU1c8b1ibIU2RxrH3G/0z5JPm058ZlhkyKP/iOauN/hny
Vs6GvxsOzJB5wbJpa4z+GfL22Te9aTgxQ7offDXvAaN/hoydsnmFYW2mXFTr
P2rYNlPe/+lQ7oNG/0z552V9fYY9M+WSdPtOw4GZMt667R+GIzMleF20b8jo
nylLVo6eZDgzUwbN/n6lYa1UIuO+fMGwrVS2RBs+NiylUn/h0bMfMvpL5Zkf
JvU1HCiVRd/1H2Y4UipvXL1ypuFEqXy4fNNCw5lSGTA6vN6wViZf9H/yOcO2
MikPn9hvWMpkSU7giNlfJvtvfvRLs79M2scN/dHsL5O1t24772Gjv0yKwkcv
N5wpk8NXtvcxrJXL3KdzbjBsK5cnpvYvMCzlMvlYwzDDnnJZ68yONhwol4eb
drgNR8ql9peEx+wvl8WTBnrN/nLZ9d2FNWb/rDNfWFmj2T9LZr9bMM/snyUf
VEQCZv8s6d3lsWVm/yy5Pjtgldk/S256t+IBs3+WLHjZ9bDZP0t65X31iNnv
le9yCx4z+72y+taijWa/VxYGej1h9nvl+HMvbzb7vfJ7W+8Ws//M/z8y8Smz
3yuTg2VRs98riY3OP5n9FfLFH87dbvZXyLIRm581+ytk8709dpj9FXLxHXNj
Zn+FhNtad5r9FfL8qs+fN/sr5HLrqV1mf4WcNfmH3Wb/bLn8x+MvmP2zZei8
F/eY/bNlwLCFL5r9s2XjU4PiZv9sefTQx6Yjs2VOeu5LZv9sCSW7vmz2zxb7
gw+a1irlq/O6vmL2V8rVXeaZlkqZM/hT055KiXuGtJr9ldJ44UbTkUrZ8tHX
phOV8tY9t7xq9lfK8X8uNK1VyXl995q2VUnj9B9NS5WcPueGP5v9VXKocqbp
QJX89quHTEeqZPjbraYTVdJzygnTmSpZfTRnr9lfLYFl/UzbquWatcNNS7WM
cpSb9lTLoZaA6UC1vHTOY6Yj1ZII7DCdqBbvbQdMZ6rF5Tmi9M+RWed+qfTP
kV6jTin9c6RlbE7C7J8jOf0vMx04k2/vbToyRy798wDTiTmyd9MtpjNzZNXW
Iaa1Ghn0eZFpW40MrBlnWmqkddQUpb9GfnqoVOmvka5DK5X+GrHW1yr9NeLv
26z018hz3vlKv0/m33mfaYtPtNZlyt/jk9ixlabtPql4Zo3y9/lkzYCHTLt8
cqpynfL3+uSiivWmfT450m+D8vf75OMXNpoO+aTqgieUPT4pdWw2HTvTf/OT
yj6fvHHBVtMpnzy+7yllr09eGRs1nfXJqwe2Kftr5cLfPaPsr5W24u3K/lpx
Nz+r7K+VO5c8p+yvFc/cHcr+WpkwNabsr5XH7TuV/bWy4VvFgVoJbn1e2V8r
j43YpeyvlQ8/URyrlVE1u5X9tfJxVnHqzN/jfUHZXyub/qY4Wyuugj3K/jrp
uUGxpU6eziq21ck8eVHZXydXrlIsdfLbQ4pddbKrW1zZXycLhyn21ck78xQH
6uTn7YpDdTLpQ8WROrnhnJeU/XXyVj/FiTopG6U4VScFNYozdbJyjeJsnczd
plirlzv2K7bUS9ejim318mNWsb1eHF1eVvbXy/9erthVL7+7VrGnXn5yKPbV
y5N3KQ7US99xikP1smm64ki9XFmtOFYv8WbFiXpZfJ/iVL0EVynO1MvRhxVn
62XZBsVag/xxs2JLg1wdVWxrkH7PKbY3yEu71P0N8kFc3d8ga19V9zdIdp+6
v0G+e03d3yB/ekPd3yCXvq3ub5DBKXV/g/R9T93fIIffV/c3yN1pdX+DrPtQ
3d8gO46p+xsl8rG6v1FmZ9T9jXLBJ+r+Rln3qbq/UU6fUPc3ivNzdX+jNH+h
7m+UUJu6v1HWfqnub5SlX6n7G2X639X9jZJ3Ut3fKG2qU2d+39fq/ka58R/q
/kZ5XbXWJCP/qe5vkjdU25qkIKvub5KnVEuT5Hyj7m8Sj2pPk+xS7WuSX1QH
mqTwW3V/kyxRHWmSvapjTdKuOtEk13yn7m+SYtWZJlmgOtskW1VrzfKGakuz
/F21rVnOa1f3N8s1qqVZClS7mmWsak+zlKv2Nctc1YFmWaU61CyPqY40y9Oq
Y83youpEs/yP6lSzpFRnmiWtOtssn6rW/PK1aotf2lXb/PLTr/b75ezv1f1+
yVHt8otFtccvl6j2+cWqOuCXK1SH/NJTdcQvvVTH/NJbdcIv16hO+eX3qjN+
6ac6C2v3/toW2AbbYYFdsAf2wQE4BEfgGJyAU3AGzsLaXOyHbbAdFtgFe2Af
HIBDcASOwQk4BWfgLKzNw37YBtthgV2wB/bBATgER+AYnIBTcAbOwtp87Idt
sB0W2AV7YB8cgENwBI7BCTgFZ+AsrC3AftgG22GBXbAH9sEBOARH4BicgFNw
Bs7C2kLsh22wHRbYBXtgHxyAQ3AEjsEJOAVn4CysLcJ+2AbbYYFdsAf2wQE4
BEfgGJyAU3AGzsJa4NfOgS2wFbbBubAddsACO2EX7IY9sBf2wX44AAfhEByG
I3AUjsFxOAEn4RSchjNwG5yFO2DtPrw/bIGtsA3Ohe2wAxbYCbtgN+yBvbAP
9sMBOAiH4DAcgaNwDI7DCTgJp+A0nIHb4CzcAWuL8f6wBbbCNjgXtsMOWGAn
7ILdsAf2wj7YDwfgIByCw3AEjsIxOA4n4CScgtNwBm6Ds3AHrC3B+8MW2Arb
4FzYDjtggZ2wC3bDHtgL+2A/HICDcAgOwxE4CsfgOJyAk3AKTsMZuA3Owh2w
thTvD1tgK2yDc2E77IAFdsIu2A17YC/sg/1wAA7CITgMR+AoHIPjcAJOwik4
DWfgNjgLd8DaMrw/bIGtsA3Ohe2wAxbYCbtgN+yBvbAP9sMBOAiH4DAcgaNw
DI7DCTgJp+A0nIHb4CzcAWvL8f6wBbbCNjgXtsMOWGAn7ILdsAf2wj7YDwfg
IByCw3AEjsIxOA4n4CScgtNwBm6Ds3AHrK3A+8MW2Arb4FzYDjtggZ2wC3bD
HtgL+2A/HICDcAgOwxE4CsfgOJyAk3AKTsMZuA3Owh2wFsT7wxbYCtvgXNgO
O2CBnbALdsMe2Av7YD8cgINwCA7DETgKx+A4nICTcApOwxm4Dc7CHbC2Eu8P
W2ArbINzYTvsgAV2wi7YDXtgL+yD/XAADsIhOAxH4Cgcg+NwAk7CKTgNZ+A2
OAt3wNoqvD9sga2wDc6F7bADFtgJu2A37IG9sA/2wwE4CIfgMByBo3AMjsMJ
OAmn4DScgdvgLNwBa/fj/WELbIVtcC5shx2wwE7YBbthD+yFfbAfDsBBOASH
4QgchWNwHE7ASTgFp+EM3AZn4Q5YW433hy2wFbbBubAddsACO2EX7IY9sBf2
wX44AAfhEByGI3AUjsFxOAEn4RSchjNwG5yFO2BtDd4ftsBW2AbnwnbYAQvs
hF2wG/bAXtgH++EAHIRDcBiOwFE4BsfhBJyEU3AazsBtcBbugLUH8P6wBbbC
NjgXtsMOWGAn7ILdsAf2wj7YDwfgIByCw3AEjsIxOA4n4CScgtNwBm6Ds3AH
rD2I94ctsBW2wbmwHXbAAjthF+yGPbAX9sF+OAAH4RAchiNwFI7BcTgBJ+EU
nIYzcBuchTtgLfRrnwPnwN1gC9wdtsI9YBvcB86F82A7nA874AJY4ELYCRfB
LrgYdsMlsAcuhb1wFeyDG2A/PB8OwEvhILwaDsHr4DC8EY7ALXAU3g7H4N1w
HG6FE/ABOAkfhFPwYTgNH4Mz8Am4DT4JZ+F2uAM+DWsP4fuHc+BusAXuDlvh
HrAN7gPnwnmwHc6HHXABLHAh7ISLYBdcDLvhEtgDl8JeuAr2wQ2wH54PB+Cl
cBBeDYfgdXAY3ghH4BY4Cm+HY/BuOA63wgn4AJyED8Ip+DCcho/BGfgE3Aaf
hLNwO9wBn4a1h/H9wzlwN9gCd4etcA/YBveBc+E82A7nww64ABa4EHbCRbAL
LobdcAnsgUthL1wF++AG2A/PhwPwUjgIr4ZD8Do4DG+EI3ALHIW3wzF4NxyH
W+EEfABOwgfhFHwYTsPH4Ax8Am6DT8JZuB3ugE/D2lp8/3AO3A22wN1hK9wD
tsF94Fw4D7bD+bADLoAFLoSdcBHsgothN1wCe+BS2AtXwT64AfbD8+EAvBQO
wqvhELwODsMb4QjcAkfh7XAM3g3H4VY4AR+Ak/BBOAUfhtPwMTgDn4Db4JNw
Fm6HO+DTsLYO3z+cA3eDLXB32Ar3gG1wHzgXzoPtcD7sgAtggQthJ1wEu+Bi
2A2XwB64FPbCVbAPboD98Hw4AC+Fg/BqOASvg8PwRjgCt8BReDscg3fDcbgV
TsAH4CR8EE7Bh+E0fAzOwCfgNvgknIXb4Q74NKw9gu8fzoG7wRa4O2yFe8A2
uA+cC+fBdjgfdsAFsMCFsBMugl1wMeyGS2APXAp74SrYBzfAfng+HICXwkF4
NRyC18FheCMcgVvgKLwdjsG74TjcCifgA3ASPgin4MNwGj4GZ+ATcBt8Es7C
7XAHfBrWHsX3D+fA3WAL3B22wj1gG9wHzoXzYDucDzvgAljgQtgJF8EuuBh2
wyWwBy6FvXAV7IMbYD88Hw7AS+EgvBoOwevgMLwRjsAtcBTeDsfg3XAcboUT
8AE4CR+EU/BhOA0fgzPwCbgNPgln4Xa4Az4Na+vx/cM5cDfYAneHrXAP2Ab3
gXPhPNgO58MOuAAWuBB2wkWwCy6G3XAJ7IFLYS9cZfr/AMi3kqc=
             "]]}, {
            Hue[0.5585438199983166, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxd0398FPWdx/Gpp9eosV0rp1vNeSNN223lvMXL6apRP2LEFYMMEHCBSIaQ
H4tGGCTWbRphqrEuijhq1K0XdZScbGlaFgi61linHu2tirha7O1J2seoOR+r
oq5Ky5bL4fUe3R+TV/7Zx/Pxfrzzfnwfn8ec1b5mQecxiqIcOE5R/v/3r3+F
S//665Z+FYmu2xYduHi85Bp5+Cu7HzvzrlzJPhn/z6eOvHDymyVPk/+45IlP
n/389ZL9ct63r3z9s/59JddJ5obnzxt596WSVVn6+pp9vuN/U/J0uWT16jd+
+saLJdfL2EmTxSP1TsnfkvvX/+LInlefKzkgx+195qVfH5cu+bty2gvH1J+/
b7TkGXLFr7c/3n/8zpLPkZOP2s47jdtLDsqsLR//ZPzDbSXPlLPXfuO9PR88
VfK5sk3bfkB99cmS/1nmPrmx/4J3ym6Q6NILVhqHy/4XObxt89i/124p+Txp
O/Wmy2ZOL/t8WbhZvv70+WWH5MU1NbuumVv2BeLfsO7+P7WXfaHov/nixGSs
7Iuk+5dbP1i2uexGeX7b3MM1w2VfLAe+aUS2PFv2JTIzse2FM14r+1IZfnVi
2fKJskVuWnNg0/w/l2yK/Lzub5bvP2m4lF8mnx63ODt2VsnmZfJK+/T332wo
57Pksom39v9+djmfJbc/XRO489pyfrn84fknjw50lfPL5dwvTz6+ZV05b5LV
j3797w+sL+dNMs+96sKr4+X8Cvm87sHbvmOV8yvkmU+SZ+94qJzPlpd72756
+lA5ny1z5GDdg3Y5v1I2/GDr9quHy/mVcto3+1R9azkPy+C8uWMf/6Sch2Wg
54sXvzJSzq+Sz041mn/7s3J+lfStuuOE5u3lfI6cPGv6+3ekyvkcefb2G6y7
d5Tzq2WfsXxf585yfrXIyy0Hz9hVzpvl3CVth3aVbTbLzr6t7587Ws7nyusL
uv40VLY5Vzbc2XffHyv5NeL/9oWPXrq7nF8jv3jsJfPWspV54j/xaOOOSj5P
nnx36NbxSq7JwIEntipPlyyafLT4lP8+s2xTk6+etP+cUNmOJr9655WWuWUr
82Xt/TuObav058uN63a8dmOlP19mFaf/U1+lP19a9twcH6j0F8hoXSx4T6W/
QP72qa+tHqz0F0jtI1b/I5X+Ajmy/c57Hq/0F0r7rjUvb6n0F8oVpx5etLXS
XyhHrH+Yu63SXyg3nDAjM1Lpt0hHX/eBn1f6LbJ05isPpyr9FpG3N564s9Jv
kS3u7bN2VfqLZE1HcvZopb9Idrw2W91d6S+S4dEFv6vYWST9u4dWP13pL5YT
Tjvm44plsay4ezDyTKW/WG7ve25Hxc5i2fBf8yYrVq6VOb27LkxX+tfKv0Un
VldsXis71t7zSMXOtbJx4ykvVKxE5Crtid9X+xH54MHg4Wo/IoWW+2ufrfQj
orbdfGbFyhIpfnbDP1YsS6Sru3BBxeYSOXXaqqZqf4lc8tDZc6v9pfLgpg0t
1f5SOeTaS6v9pXLWzl+1VftL5acfndhR7S+Tkaee7K72l8kDDVuur/aXyfHf
+NaN1f4ysY9cuqbab5V0/ktrq/1W+eDqvpuq/VaJf2f3umq/Vd69d6y32r9O
NuYTN1f718kXjfO/V+1fJ0uMD6t2rpMFa3puqfaXywORXNWyXLoeOzdW7S+X
3PT1VTvLZdG856tW2qQ98FnV0ia+5Wd+v9pvk98tubxq5y/5nPaqFV12n91f
tarL8jfuq1p08X2ypWpdlz/83S7P/9dl5MUXqrZ1Of26lz17urx10W+rdnUx
tr7l2V8hd467nv0V8vZJ73n2V8innR949lfIxTUfe/ZXyC1f+9Szv0LWP/q5
Z3+F1P3yj579FfL0HYc9++3y5jF/9uy3y7bLjnj222VF8/949tvltrMnPfvt
8t33PLbbZd5t/+vZb5ePjj3q2W+XmTd5rKyUf33VY3WlnHz6F579lVK71GN9
pdx7r8fmSlk45rG9UjJve+yslLovKX3V/ZWineGx0iGNMz1WO+SByz2WDvlw
gcd6h7zY5rHZIeuv99jukL51HjsdcrTPu98h4R969zvlrh959zvlk7u8+53y
6GbvfqfsvM+73ymXD3r3O+X6h7z7nXJhwrvfKc/92LvfJUcf8e53yUlD3v0u
+dhrvUu2Perd75I5j3n3u2Sf106XXPS4d79LHvZa6ZZ3vVa7pd727nfLMq/1
bol7bXbLz7y2u+VVr51ued9rt1uUJ7z7UTnFazUq072WqJzjtR6VC7w2ozLL
azsqV3ntRGW+125UFk/ZXyVLp+yvkrYp+6ukfcr+Kumcsr9Kuqfsr5Lrp+yv
khun7K+S1VP2r5e1U/ZhgXXYhG3YgV1YuQH7sMA6bMI27MAurPRgHxZYh03Y
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
IbgRFrgJDsPNsAa3wBG4FdbhDjgK91T9fyek7mI=
             "]]}, {
            Hue[0.7946117974981064, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxd03FwnHWdx/EfCJjDqKuGmZUL8ACBrhjhIeRwgUi/0gArhPZpm7bbNqRP
NdJFozxoKCuk8GCjbNvQPoVAF4z69CjMnlbuwSm4Ax3u4SbM7NXc+HjGc4dL
9XEo3ipVn5vJjSsWxnHM7j55559nXvPJZ7/zne/8LvzsXWs+f7pS6n/OVOpv
37//Rcv//g0Xv0r6elau17/9+qLbpPuC1YW1D/x80QmZP+3HP133wZ8uukOO
3fvs576wcGzRSdmtX5X89dbXFt0pu684++Dec19dtCZbL3z31TenX170RdJ1
4up/ntz+4qK75OHXO5f/ceiHi75UHnvf+f9fPeu5RafkX1Y8cdad60qLvkwu
HvzVG39uf3rR3XJs25feevuy/Yu+XLxtP9lx3lUN69Lzy9HZC69r+Er5y5bN
M2pFwz3yge0d//H8LQ1fJS/MfPzOy9Y03CtbLy+eM7yx4X+Su7e+evJTZsNX
y4bj614u39HwJ+XdAy/d8/Jow2n52cGrp3u+0vA1kv753e+039vwtfK18d9M
Lb+/4evkdf/xX1UeaLhP5qNX9j7/UMOfkkcveKH77ImGr5ff1aZv/d9vNLxc
os7lyeGHGxb57x8cWPb1wqJtkWMb3rxrZFcj/7T821+SZ39kdyP/tDy3YXL4
yYbVDXJl5/seVHsa+Q0ie/51z6qG1QoZXvnWhyab+QrxrfO2vNTM++Wi7T2v
HW/m/fKt87r+q97Mb5Q/bz9n/P2TjfxG2Z94e8V5DaubxK8eMD7WzG+SfcP3
7Oxp5jdLVDlt1zXN/Gb5hzPPePP6Zp6R7duWnbqhmWdk/wUr//GmZv4Zuey1
7h2ZZv4Z2XdsauUtzfwWWTF69Plbm/kt8vpB3x9o5rfKG3v27butmd8qL525
5RMrm/mAnP69Y880bQ/IwSueO21VM79NHjx39uam7dsk86eBHa18pVx5r/Zs
K18pL0ze/ForXyU/frv9eCtfJV9+QP9jKzfkmVfe+07TYshZdx14r9H8f0Nm
djz7waZ9Q0ZfnD2nabVazvj9jnObltVycOeHz2/1V0vPW/+ptfqrpfLkGxe1
+mvkNz+7r6vVXyMXO89f0uqvkb3f/86lrf4a2Vhcu6zVXytjzx5vWdaK8e5N
qVZ/rXzCPNCyv1YufXGuZTUo+3e+52Ot/qCcfu2ylu1BWXbfDS37g7Lqxg0t
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
             
             "]]}}}, {{}, {}}, {{{{{
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9970317998349771}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9970317998349771}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9970317998349771}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9970317998349771}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9970317998349771}], 
                   Offset[{0, 0}, {1639.974437691456, 0.964828145957682}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {1639.974437691456, 
                    0.964828145957682}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1639.974437691456, 
                    0.964828145957682}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1639.974437691456, 
                    0.964828145957682}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9970317998349771}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9970317998349771}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9970317998349771}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9970317998349771}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9970317998349771}], 
                   Offset[{0, 0}, {1639.974437691456, 0.964828145957682}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {1639.974437691456, 
                    0.964828145957682}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1639.974437691456, 
                    0.964828145957682}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1639.974437691456, 
                    0.964828145957682}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{34., 6.500000000000007}, {1639.974437691456, 
                    0.964828145957682}], 
                   
                   Offset[{34., -6.499999999999993}, {1639.974437691456, 
                    0.964828145957682}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999998}, {
                    1639.974437691456, 0.964828145957682}], 
                   
                   Offset[{9.999999999999998, 6.500000000000002}, {
                    1639.974437691456, 0.964828145957682}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.01`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22., 4.884981308350689*^-15}, {1639.974437691456, 
                  0.964828145957682}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9941587603189909}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9941587603189909}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9941587603189909}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9941587603189909}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9941587603189909}], 
                   Offset[{0, 0}, {1639.974437691456, 0.8945217936249498}], 
                   Offset[{5., 1.1102230246251565`*^-15}, {1639.974437691456, 
                    0.8945217936249498}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1639.974437691456, 
                    0.8945217936249498}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1639.974437691456, 
                    0.8945217936249498}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9941587603189909}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9941587603189909}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9941587603189909}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9941587603189909}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9941587603189909}], 
                   Offset[{0, 0}, {1639.974437691456, 0.8945217936249498}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {1639.974437691456, 
                    0.8945217936249498}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1639.974437691456, 
                    0.8945217936249498}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1639.974437691456, 
                    0.8945217936249498}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1639.974437691456, 
                    0.8945217936249498}], 
                   
                   Offset[{35., -6.499999999999992}, {1639.974437691456, 
                    0.8945217936249498}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1639.974437691456, 0.8945217936249498}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1639.974437691456, 0.8945217936249498}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.05`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {1639.974437691456, 
                  0.8945217936249498}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.8178321218637494}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.8178321218637494}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8178321218637494}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8178321218637494}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.8178321218637494}], 
                   Offset[{0, 0}, {1639.974437691456, 0.8145520735350639}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {1639.974437691456, 
                    0.8145520735350639}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1639.974437691456, 
                    0.8145520735350639}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1639.974437691456, 
                    0.8145520735350639}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.8178321218637494}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.8178321218637494}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8178321218637494}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.8178321218637494}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.8178321218637494}], 
                   Offset[{0, 0}, {1639.974437691456, 0.8145520735350639}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {1639.974437691456, 
                    0.8145520735350639}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1639.974437691456, 
                    0.8145520735350639}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1639.974437691456, 
                    0.8145520735350639}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1639.974437691456, 
                    0.8145520735350639}], 
                   
                   Offset[{35., -6.499999999999992}, {1639.974437691456, 
                    0.8145520735350639}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1639.974437691456, 0.8145520735350639}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1639.974437691456, 0.8145520735350639}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.15`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {1639.974437691456, 
                  0.8145520735350639}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.6748639715940566}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.6748639715940566}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.6748639715940566}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.6748639715940566}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.6748639715940566}], 
                   Offset[{0, 0}, {1639.974437691456, 0.6748190007804689}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {1639.974437691456, 
                    0.6748190007804689}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1639.974437691456, 
                    0.6748190007804689}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1639.974437691456, 
                    0.6748190007804689}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.6748639715940566}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.6748639715940566}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.6748639715940566}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.6748639715940566}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.6748639715940566}], 
                   Offset[{0, 0}, {1639.974437691456, 0.6748190007804689}], 
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {1639.974437691456, 
                    0.6748190007804689}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1639.974437691456, 
                    0.6748190007804689}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1639.974437691456, 
                    0.6748190007804689}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1639.974437691456, 
                    0.6748190007804689}], 
                   
                   Offset[{35., -6.499999999999992}, {1639.974437691456, 
                    0.6748190007804689}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1639.974437691456, 0.6748190007804689}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1639.974437691456, 0.6748190007804689}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.25`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {1639.974437691456, 
                  0.6748190007804689}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.473410665269522}], 
                   Offset[{0, 0}, {1530.2291666666667`, 0.473410665269522}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 0.473410665269522}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 0.473410665269522}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 0.473410665269522}], 
                   Offset[{0, 0}, {1639.974437691456, 0.47336376970827193`}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {1639.974437691456, 
                    0.47336376970827193`}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1639.974437691456, 
                    0.47336376970827193`}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1639.974437691456, 
                    0.47336376970827193`}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.473410665269522}], 
                   Offset[{0, 0}, {1530.2291666666667`, 0.473410665269522}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 0.473410665269522}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 0.473410665269522}], 
                   Offset[{0., 0.}, {1560.2091666666668`, 0.473410665269522}], 
                   Offset[{0, 0}, {1639.974437691456, 0.47336376970827193`}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {1639.974437691456, 
                    0.47336376970827193`}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1639.974437691456, 
                    0.47336376970827193`}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1639.974437691456, 
                    0.47336376970827193`}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{30., 6.500000000000006}, {1639.974437691456, 
                    0.47336376970827193`}], 
                   
                   Offset[{30., -6.499999999999994}, {1639.974437691456, 
                    0.47336376970827193`}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1639.974437691456, 0.47336376970827193`}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1639.974437691456, 0.47336376970827193`}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.5`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{20., 4.440892098500626*^-15}, {1639.974437691456, 
                  0.47336376970827193`}], {0, 
                 0}]}]}}}}, {{{}}}}, {{}, {}}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> False, 
         ImagePadding -> {{All, 71.21342178179269}, {All, All}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["time", TraditionalForm], 
           FormBox[
            RowBox[{"freq", " ", "oblique"}], TraditionalForm]}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 440, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           RowBox[{"{", 
             RowBox[{
               RowBox[{"ba", "\[Rule]", "3"}], ",", 
               RowBox[{"bn", "\[Rule]", "1"}], ",", 
               RowBox[{"z", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vs", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vh", "\[Rule]", "1"}], ",", 
               RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"u", "\[Rule]", "0.5`"}], ",", 
               RowBox[{"pa", "\[Rule]", "0"}], ",", 
               RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
       
        FormBox[
         TemplateBox[{"0.01`", "0.05`", "0.15`", "0.25`", "0.5`"}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm],FormBox[
        FormBox[
         TemplateBox[{"\"healthy juv\"", "\"stressed juv\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Normal", ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
      
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {2, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}], ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#3, ",", "Above"}], "]"}]}], "}"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
            
            LineBox[CompressedData["
1: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
cCzSZX8BsSoCp144jjxBXBmB5O6vc24Q10Qg63bU+ZfEDRHoaym49ouYF4ml
t/vt61BL5o/Eg3e/PPsRm0cixGpmgy2xVSSuvAxydiRGJA4+uyD3IXaMhG/e
9n1RxPxIvOnltTGHWBCJ2lHO3juIhZE4P/Jeq5PE4kisHTYs8QZxQSSc35c8
ek5cFAnl63NtfxCrItFy8foubV+R+SMRNDbrrylxTSTqp9eXDSduiMSk9k1L
pxHz1kKnVr/KhdhgLQ43+AwNIDZfi1Mj5nnGEVutRWBCh2ApMdbikeL90p3E
jmsh1xlsUULMXwu/2e0rrxIL1qJNZdWiamLhWuTWXjv5iVi8Fr2vDWjSek3m
Xwvzk4NNjYiL1uLq486m/YlVaxHq3KdpLHHlWpTOE5+aSVyzFk/rc12WEDes
Rcm8sAcBxLwo/Nu/bFQssUEUpozLCckhNo/C+4njJQXEVlEYbbBFfJgYUTAx
qhecJ3aMwogrC0bcJeZHQX5R//5LYkEU8k/Ncv1GLIxCccSEMp03ZP4o6H8w
bt2ZuCAKvkPbDu9HXBSFE+GTxo8mVkXhbr8Pg6cRV0ah9w3bv07ENVEYarH4
sDdxQxQc+gbZhxHzojH2xd7zicQG0dhTMtZcRmwejf/GTPDcRmwVjWkD3iQf
JkY0fkvcslXEjtHwKSuLukXMj8YV2/Gz/yMWRKP6XuO/98TCaCza1XX9Hzp/
NDI6ne3Sto7MHw29qx3WGhMXRWPkjWGq/sSqaLwKwvtRxJXR6LV4+d/JxDXR
2JV88qsjcUM0Ljotv7WMmBeDf9FCcQCxQQzudLIaG0VsHoMkmbg8ldgqBg3V
ZaMVxIiBh+2TrG3EjjFY5/7v2iFifgyG+9o3lBILYlBYf/v3FWJhDJw/H3/3
gFgcg1a/Opa/pPPHQOtPk7CBzh+DIUGSfn/p/DGYOauuqM1bMn8Mxul169OF
uEb9/YonxPQmbojB27uBpUOJeevgnnL2pS2xwTq0jJrxZTqx+TpkfTGrW0Bs
tQ75190uLiPGOqTHG6SvJHZch86DF41ZQ8xfh7Gp46/GEwvUz2+qnpZFLFyH
TRtn7ckjFq9Dd4vcb9uJC9bhSNeHAw4RF61DeZ7plFPEKvXzlOumX6Tzr8Pp
U21GVNL516FtxL2WT+j862Ct03DuFZ0/Fkb+Qb4NdP5Y+Md6fv1N549F8NfH
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
vXPxeCbHfrlwnMtxQC6OLvif/w/rMiD+
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]], 
            LineBox[CompressedData["
1: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
8B1I85+DsZTdOUihXJODOMq1OfiQcl0O8ij75MJG2TcXpyn75eIk5YBc/EVZ
kYtrlANzUU1ZmYs7lINzMXwQzX8uWlMOyUV/yqG5qKP24bn4nbIqF3soR+Xi
U8rqXGyhnJSLbZQ1ubhH2ZCLXygLuVDQ71Oci6WUS3KRRLk0FzmUy3IxlnJ5
LlIou3JRQrnS6/OrcvEh5Wqv5+fOhQ/lmlxcYfnPxROW/1zcYPnXox2199Wj
M2U/PeZTDtCjmLJCj+2UA/UIpazU433KwXqYWP71WMbyr4ea5V+PtymH63GT
5V+Pb1n+9Txfaj36UE7yWtfo+ftp8Po8QY+rlIv1uES5RI+tlEv1KKBcpsd6
yuV6GCm7vNYr9UilXKXHYaZ/PTYz/et5Pmv0eMjyr0cty78e91n+DTjH9G9A
MtO/AWqmfwOGMf0bkM/0b4CO6d/A9RlsQDllGHCQcoiBf79QA84w/RtgYPk3
4DzLv4HvJ2oDlrP8G7CW5d+AIMoGAzpRFgxowvRvwAuWfwM6Mv0b4M/077Ve
7vX5LgN6M/0b4Mf0b4CS6d+AeKZ/AyYz/RvQl3KtF9d5PQ8fI38evkYEMv0b
MZDp34hFTP9Gvr8FGvnnK40QmP6NcDH9G1HB9G/EUaZ/I6qY/o14RlllxKuD
af6NuMzyb8RNln8jvmD5N+Jlam8wojNlwYh3KRcbMYxyiRHdKZcacY7l34jD
LP9Gvt+7jPiO5d/Lf5URr1OuNqIrZbcRUynXGDGbcq0REyjXGfEKZZ887s83
D00p++VhCOWAPHSirPDiwDz+/ZRe9sF58KGMPLxFOSQPvSmH5iGfcngeplNW
5WEhy38eQimr83j8SXl4zvKfh1Es/3mIYvnPw3KW/zz4svzn4SzTfx6+ZvnP
w+8s/3n4jeU/D5+w/OfhGNN/HtYz/echmem/Pn6m/zzkMv3noS3Tfx6vXz4m
vj/7mnCW7f8mXGf7v4nXQ4UJbrb/m3g/oTShA9O/CWFM/ybMZvo3Qcv0b+Lx
h5uwn+nfhN2Uo0zIY/o38f0lyYRtLP8mFLL934QFbP83YRLb/014g/V/JkSx
/JuwmuXfa73chCks/yY0ZPk34Sir/ybksPpvwjJW/03IZvXfxPuPWhP0rP6b
ILD8m3m+fc24wPJvxncs/2b8w/Jvxpts/zfzfl1pxkyWfzMyWf7NWMnyb4aB
5d+Mniz/Zgxi+Tfz/jDKjKYs/2a8yvJv5v2wxozuLP9e9oIZDVj+zfiN1X8z
77dLvdbLzF7134wuLP9mjGH5N8PI9G+GhunfDCvTvxnXmP7N6M/2fzP+ZPo3
4wyr//m8f/fNx3lW//O53gLyuX4U+djA8p/P9x9lPj8fBedzfcKLQ7w4NB9b
WP7zuZ5V+fiS5d/LvzofMSz/+fx90OTjNuv/83GM9f/5cLH+P5/rpySf99ul
+XiZ6T+fvw/l+fx9cuXz/rIyH6eY/vNhZ/rPRyXTfz42Mv3n8/67Nh8lTP/5
eMT0X4DdTP8F/DzgV+DV/xdgBtN/AXax/b8AO5j+C3i9CS7g+xMKsJb1/wV8
vwot4POFcC9WFeBX1v8XoA3LfwHA8l+AwSz/Bbz/NhSgB9O/1+cVFyCc7f8F
GMf2/wK8y/JfwN/f8vrvy/JfgH0s/wX8fFxVgItM//Xfh/V/BWjO+r8CNGL6
L8B41v8VIIv1f4VIY/1fId5n/V8hPmT9XyHvrxSFvP8JLEQl038h33+CC9GA
9X+FCGf9XyEWsf6vEO+x/q8QMaz/K+T9b1QhPmD9XyFmsv6vEH0oa7zYUIgf
WP4L+fmouJDPJ0oK+byjtBDdWP4L8RrLfyE/P7oK+TynspC/n1WFvF+qLsQ0
tv8X4hu2/xfy80ZtIe+36wrxEsu/gBaUGwsYx94HAQ/p57UQ8DOrDwIuUfYX
8DGrFwL/fh0F/v4rBH6+6yrwfjhQgJtykIAb7P0S8Cb9voMEfp4KFnCf8giB
10cIaEl5nMCfV4jAz5eTBX6+CRUwhvJ0gZ8nwgX+fkYImMfeX4G//4sFfj6L
Evj7HC1gGnu/Bb4fxAtoz953ge8HaQI/b2kEBFLWeT1Pg8DPb2YBo9n5SMAg
ynYBq9l5ScAWyhsElLLzkwAT5e0CnOw8LWAW5b0C3x/KBIRRPiigB+VyAW9Q
/tIr3y6Bn68rBH7+rPTK72mvz68S+Hn5rFf+qwW+/1wUkM32bwGbKV8XcIrt
5wL2UL4jIJft7wJWUn4kQMf0LmAf5Wde/n0sKGb6t+AM078FP1JuYeHf18+C
Csr+Flxg9cKCpkOo/i3oSllhQTDlrhb0ohxowSuUgyzoQllpwWOmfwsusXmD
BeWUR1j484UFdqZ/C44w/VtwkOnfgnNM/xbkMf1bcJbp34Lfmf4tOMD0b8Fh
pn8LLEz/XuvRFhxj+rfwfMZbeL6TLFjM9G9BCdO/1/PQWXCI6d+CjUz/FqiZ
/i28ftot+I/VSwufD22wYC+rnxZkUd5u4fcdpRY+r99rQSSrrxZ+Xj9oQRyr
txZ+3/KlBXrWf1mwg3KF1/evtKAZ03/9+8DqswUnKJ+18PpVbcFVyhct/Pzi
rn/elK9bsI7Vcwt2Ub5j4fPUWguvd48s/DxUZ8Emys8s/H7Kx8qfZ2MrIth5
0IpVrP5bvebDVgSz+m/FRFb/rXw+3NHK+yWFlc/Du1q95klWPh8JsvL7KaWV
3+8M8loPtvL3a4SVz5dg5fdZ47ziDbEilfJkK7ay86mX/XQrP0+HW5FPOcKK
RHZ+tSKd8mIrdOw8a+XzkWgrPmLnGyu/P4u38n4xyctfmtfnaax8HqCz4nN2
HrLy99ts5ecVwYoyynYv+2Ir7/82WGFn+rdiBtO/FceZ/q18PrfXyuf3ZVYc
YPq38vNGuZWfT7608vOHy8r1XmHl89dKLz5t5fqqsqKU6d/K5yXVXs/notVL
/1Y+D75uxQumfysmsfpvhYrV//r3h9V/Kz8f1Vl5v/LMigBW/234ienfxvtP
Xxvvn1rY4Mfqv43fn/jbeD8VYMMAyh1tWMLOjzYYKXe18XodaEMN5SAb7y+U
Nrxg9d/G+4tgG3pSHmFDS8qwYQzlcfXfl3KIDZ0pT7bhVcqhNtxg9d8GF6v/
NhSx+m+Dg9V/G9ys/ttwmdV/G5pQf9E2XGH134b9rP7beH+dZOP9dJoNIaz+
2xDL6r8N77D6b8NkVv9tfD4g2NCL1X8bnx8W29CK1X8bv78rseE007+Nny9L
bXz/2Wvj8+EyG58HH7Tx/a7cxu9Lv7Tx+uOyYSrTv83rPG7j88vTNn6/WWXj
9fSsjc9Hq228Hly08f3RbYOF6d+GPUz/Nr7/3LHhFKv/NmSz+m/j/VWdje/X
z2z8fsLHzuelje38+fna+f7bws6fp5+dPx9/O95h9d/O590d7Xx+pvCy72rn
8/xAO5/PBdl5fVPasYLVfzvWsPpv5/djI7w+D148zu51H2XHElb/7bzeh3rF
M93O+4Vwu1f99/o8lZ3Xi8V2XGH1387rYbQdJ1n9t/N5W7wXJ3lxmp3XS42d
601n5/NKgx01rP7buR4FO59X2r3ep2I7n79usPP+vsQrn9vtfP5aaue/p9hr
xzCmfzvv7w56Pf9yO9fbl3auJ5cdR5j+7VyvlV75Om3n9xNVdn4/edbO++1q
O99vLtqxmOnfjnlM/3auzxo7pjP929GP6d/Ofx/zqD4eNu+38/u6Z3YEMP07
+H1EYwe/7/V1oIxyCwe///Bz8N/L+Tv476ECHFhKuaMDb7P7Awe6Uu7qgIL1
/w7+e6kgB7+vVjr4/cwgByrYfYOD38+McPD7CTjwA+VxDjxm9xEOjGT6d2Au
07+D/z5nugMDmP4d/H2McGAn078DXzH9OzCK6d+Bxkz/XvGpvdbjvTjJwe83
07zi0zj47610Xvk3eK2bHfz+X3Dw+3C7g9/vFjt4fdrg4PWtxMH7+e0O/Mv0
7+Dzg70O3t+XOfAam/85+O9/yh1e/b+D768uB/99Y4WD179KB9/vT3vls8rB
98uzDt7/VDvwPdO/A+VM/w6+H1938Hl1jYPPE+44+O8/ar38P/Kyr3PgNqv/
DvRj/b+Tz0MbO1HH6r+TnxdaeLGfk88//Z18Xh/g5PWro5Pfbyuc/PdSXZ08
v4FOfh4KcvL5udLJ5+GDnHz+Guzk79MIJ/+9FpxYwOZ/Tt6/hzghsPmfE0ls
/ufk89PpTsSx/t/J++cIJ6JZ/+/k8/fFTv4+RznRgc3/nPx8pnby3yPFO/n7
nuTk/UKak9c7jdf/1znxB6v/Tn5+Nzt5fROc/Pd1die/Lyr2st/g5P1Didf7
st3Jz8OlTn6+3Ovk59kyL38HnXxeV+71fb908nmZy+t9q/B6/yu9/J124hHT
v9f3Pevk90PVTn5/c9GJoWz+74SSzf+98l3j5PcHd5z8PFfr5Oe/R05+fqyr
zyc7/zuxlem/CCuY/ov4/NfXi1sU8Xm5XxE/P/oX8fucgCLo2fnfa11RBCs7
/3t9XmARn1cHFeEzpv8iNKfn40FFOMH07/V5I4r4fRGK+PxnXBF/30KKeP4n
FyGI6b+Iv7/Ti/j9Z3gR/z1/RBE/n6iK+Hx3cRGfl0YV8fNFtMz/D3+yKSs=

             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
            LineBox[CompressedData["
1:eJxd03GQFPWZxvGOgbhJVp3ySNVENmdjVhlwjR1cyYirvMKCo26ggYUddIHe
uJiJrth6JJnIqp3ckhuSTWwD4oDrpRPAm0NIOsrFKYNnB7eSscSrJu7dzclS
9ikXxxynfecGRsHzcpWZneY7/0x95pmn3nrrrd+Mr9yzfP05iqIcnaoo///9
5084/8VDC//ygzt/NL/2g1zad838wT11N8lbjy+xjDfqjkl8fvCzKZdsrXma
nPPzO1Ov9dcdl9HM/mcyT9XdIu8HR55YerJuVV754Oh/3bR4W82XyOfvb6t8
caTuVjl0S8c1575f92Xy+NWZQ6fWPFpzQvJrq4sHDtc9W/bnFu28aPH2mtuk
6d8/fP3iV+r+gty7sFOd2f9YzZo8NfGfw7vOz9f8RRm58Dz/8iN1z5HKysRH
Fzy9o+arZMe89z617rmdNbfLkQdWb3711OM1Xy3bf9myYNx6oua5MnfgxV3f
fPDHNX9JWmVDT+7Sn9SclI+u6H/yaG5XzddI82XLR65es6fmefLJ1gtmprb8
Xc3Xyi3JXZtmXra35g7ZcfLTs/eu2l/zdfL479a+Pf1Jt+brZfPs2PNzZj5T
83ypfnLVFx6+/Zc1iyz9yccXnNr73J9tiSw7tmDG0mu9Wn6DfOJLcz439frR
Wn6DHHtvqNg5/lItXyBDV11499wjfi1fIFf3VFrffv2fa/lCSV3+3LxzR47W
8oXy8nc/NDbcF9TyTlk77H9w8u43anmnXLL9d7Mv9N6s5YtkeuyzyqGdx2v5
InltldbxP7P+o5YvFv/17p7fbqnZWizfz//DsXkv1/Mb5ZKHLthUqNbzG2Xl
vAemb43/vpan5NfvfqPnqitrtlIy/fzXtqbn1/Ob5ObVPTNO3FzPb5KFW8y7
ZEU9v1nmfuu+Bxesruc3y3ub/+30jjX1/BZ5+fnqon806vktsvbFd8em3F7P
u2T+ueZnnuqv513y33MWdx1bX8+/LOv/4tV7f3VHPf+T39ixp/er9XyJTL3i
F3uO1G0tkf1X/HHrZZl6vlQ6z1vR0V+3tVQ+7L5BeWQy12XJlaesX9Qtutz1
h7+96KXJ/+sytODR616r29PlrYHpP//9ZH+Z/ODAguK7k/1lYp04eePJyf4y
ufL2pz99erK/TFLv3PXt/53sL5fPVXZO+djX6v0/+fK9/3pO3dZyeadnbPaU
ur3lct3Ui2dMrVtZId/ZW3110rJCchPllZ+Y7K+QN6uJA5P2Vkj47J7qpJVu
+dj3+mafO9nvlvbzH1oyaatb3q4UM5P2umXFqtFNk1ZWyjUv5Lc0+itl+Jld
Wxv9lbLj79/Z2eivlLE75jmN/ir58VsX7m70V8nqV4892eivkp2njxca/VWy
6PSavY1+jzzywj1PNfo98uHw3H2Nfo8M/uE3DXs90uxdub/RT8vRYFPDkpaL
Zz3TsJWWzy452rCXlk99vRrpr5b1znk/a/RXS+mjloat1fLYrETD3moZ69Qa
Vm4Vf+bcSP9WuXTDvEj/Vnkld12kf6sce2l+pH+b/HHghkj/Nln0xIJI/za5
/v6Fkf5t8uxFnZF+r8x/OGLplTfejNjqlZ4ZiyL9Xpn4csTKGundELGskfHN
EVtr5NT2aH+N3LEr2l8rd++L9tfK+09H+2vl4LPR/lqZ9atof5389Plof53c
/0K0v07+xYv218k//TraN2TToYhVQ05HLYb0vBixYUg+asuQV6J2DAmj9gxR
RiMODPlM1EqfzIpa7ZM5UUufXBu10SedUVt9clPUTp8sitrrk+Vnze+TZWfN
/4r0nDUfFtiALdiBPTiAldsxHxbYgC3YgT04gJV+zIcFNmALdmAPDmBlPebD
AhuwBTuwBwewcgfmwwIbsAU7sAcHsPJVzIcFNmALdmAPDmAlg/mwwAZswQ7s
wQGsfA3zYYEN2IId2IMDWLkT82GBDdiCHdiDA1i5C/NhgQ3Ygh3YgwNYGcB8
WGADtmAH9uAAVu7GfFhgA7ZgB/bgAFY2YD4ssAFbsAN7cAAr92A+LLABW7AD
e3AAK+bZjsEqrMEC67ABm7AF27ADu7AH+3AAh7ByL/aHVViDBdZhAzZhC7Zh
B3ZhD/bhAA5h5T7sD6uwBguswwZswhZsww7swh7swwEcwspfYX9YhTVYYB02
YBO2YBt2YBf2YB8O4BBWNmJ/WIU1WGAdNmATtmAbdmAX9mAfDuAQVr6O/WEV
1mCBddiATdiCbdiBXdiDfTiAQ1j5BvaHVViDBdZhAzZhC7ZhB3ZhD/bhAA5h
5ZvYH1ZhDRZYhw3YhC3Yhh3YhT3YhwM4hJUs9odVWIMF1mEDNmELtmEHdmEP
9uEADmHlW9gfVmENFliHDdiELdiGHdiFPdiHAziElfuxP6zCGiywDhuwCVuw
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
DafhXtiA++EMPNDw/wHY03jP
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961]], 
            LineBox[CompressedData["
1:eJxd03GsW2d5B+BT1tILDcwbYZiRMQMB3C4wA6EYSOkXGqgLgbrpTeuUDA6Q
Mq/NqClZuKMZO4NAPQjFlEANCnBGg7iDAKYNndECOpSU3EGgXgnVHWTVgYXJ
EqEzKNusEqRpwvfGefyP9fjnn169evU97U03bbr+UVEU/fi8KPr/799+Rpd+
697LnvrIDbdfOvkh3F74vYeO3LPkmVC4s3X+Zx79kYkL4Zkrn3Pn61+35JXh
/Jcd+drj7llyMZzc+sw95xT3Trwq7F73428svnvJpbB/5gf/88Hxkp8eHnvp
Z7d9+JaPTrw6PPH0t57wq8d/bOJnhXeueMbw0/csuRxeWjj36Q++446JLwqP
2bQyfG9Ld+I14a67u4+cesvHJ35u+OGN97/41V/+xMSV8MC/3JHMvmbfxM8L
t3/s/U/aefOnJn5+OPztW95/+ZF04heEJ+761KZf3H7nxGvDhW/b9cOL3/DZ
iV8Y7opOPPyjd31u4ovD879cetKemc9P/KLwm4trD1/ylC9OXA0bil/s/7zV
m/jF4ec3rXvaG4/eNfFLws5Pfe6Rp3z3qxO/NFz2qmc/4Y+/8LWJ14V33f2B
9oX3fWPiS8In91/59N//zr0Tvyz8+tdvPre25cjEl4YjL7po70e3fG/iEC66
Lbn7MTc88FsnIcQ3/ObOcz7+4CRfH04e+P7o4jt+NMnXh/P2fKJ9wdF/n+Qv
D8mVH//pmx6dT/KXh2dcunPzN++dOLos/O/5w4OXv+Qnk/yy8I8Pn2wn7504
2hD+6c3VKwYHl/IN4fIvPfS6Tz6wlL8iHLjn1E9v+NlS/opw/g+O/u7GXy7l
rwxXPedpm+8fL+WvDPk3d7y185ul/PLw2h9c9Ovbo59O8svDd75/7n+/81ET
R7Xw0Oc2P7b3O0t5Ldz11AsefPu5S/kV4d/ecn3+X0tOrgh/eNt1O1923lL+
qnDJ43aG1pKTV4WLLn3W0Q8t568OR350/8Kdy/mrw+BnX7m5t5xvDDff8vW5
/nK+MVx13nNv+/py/prwHzvu+3a2nL8mXNd96b/eu5y/Nqz/7mWrDi/nrw3f
HJzz8LKjK8NNN/7nzfct51eGL5588pFlR/XwD+97++llh3o475z1T/328v/r
4dPHv/CCZWf1EO6/ZP2yo6vCp4cPXrHscFXYeusVV57pXxU6F35905n+VeGf
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
Z/x/Jg69BQ==
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 
              0.49019607843137253`]], 
            LineBox[CompressedData["
1:eJxd03+wXGV5B/BTf9Roo6xt6CwQcOlc7IoZXDXiFi/wKlFXuMhCLmFpgx41
ygIBFwntVaM9YtRVoqwS9Fajc6pxvNWoq2bspabtUaLdShiWMcXtGPUME6bb
MaVLDfYS0mmn494f+ew/O5/97neeeeaZ9+y3vvOqtz8tiqKfPTOK/v/7t5/R
xff94JKzjt/4qYvHP4S73vTiDU/76aJXhV9c/oIP3HLZ3WMXwvdfd/i2R368
6DWhelW7/fRrd41dDGvedsPj3zy+6LXhRXfe8863fPeesUvh0evOfsexXZ8e
+4/Crr968JrzvvSZsSfCQ3979L/vPzY79gvDb7756J0v/9pnxy6Hm75yyUPf
+N3Pj31uOOelp3z14no69rrw+uNf23jKkS+NfV54/r0fO/WNX/7y2JXwucqz
vnXvt74y9kvDEzff857WGV8d+2XhA3fcd9fzju8d++Xh8Tdvf+9rzu+OvT48
dekj5/7d5d8e+xXh66dHpz35831jnx9OGZ05d+qz58d+ZTjr9vtffuaT3xu7
Gu7+za83PXhLNvafhJ3Dlz510a33jX1B+NqeXx+88bn/NParws1v/s3/Xv6S
+8eeDPHmS1bffs+DY18YNj72oU0v+NVDY18Ubnn8pvduuu8nY18cGuvvLWTr
/2XsED7+1t/74PaLHv6tkxAePj+KP/RfY0evDi983g3NH1//03H+6lD8neHR
K789dvSa8OJ/fOy04/li/prw2E/Oecav/mcxvyT0tlxw5g9PGYzzS8KTF26/
8x9OHzvaEP7tkQue856zF/MN4Y5u9rTPnrOYvzZs+tG97y+VF/PXhs/959Hi
3hct5q8LD3z+i2d84dzF/HVhuvvLs1/24sX89WHrqnP/Zueik9eHqY3fe+aB
pbwWbv7CrfmjS3ktfOP8F+w6vpS/Ibz7WH/yWesW8zeE/7jiXceft+jo0nDq
9eu++wdL+aWhWjjrc3+4lF8Wvnj0JXFxKb8sbL3tgttPW8qnwvP7f33W6Uv5
VCj+/JUfXnJ0efjX45/44XJ+ebh+7aVHl/M3huETC08/Yyl/Y3hqctvvLzm6
IvQmrjhjOb8ivGnq3tJyXg/ve3TVxJJDPVx93ikvXP5/PWw4beqPl5zVww8e
eW55uX9l+Opbdiw7XBm+8/DBZSdXhicmnlx2dmXYNrnmRcv9q8I1D0wsO1wV
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
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxF23lcTN/jP/AihFAJkaUQIWTP/kIUilSobBNpUxnte9M+7bNXRGOJ3taS
JSmSJAkhlLW3NRTZd+/ffH+fc871T4/n43TmzNzXfTVz7xlGG7fabe6gpqb2
oJOa2v/9/N+/9rn/+9lMfqrhxqYBQ1IcnxBr4nDazz8WhY+JtXEuJKzX1i7U
ehhgWjnCav0jYn00rUz+pn3yIfFAHDsoE3fTojaE16FPTYGbHhAPxWmz7RrS
s/eJh+PuhHbt3XrUIzClvmnpI98mYhN0+JHSFFvbSDwa26XTFteOpDZFtdf6
ya8T7xGPw2y7nm91Wu4Sm2Fw5yHj/JdST8DC8+++TSu6QzwR53Vv2Cf1p54E
k+S3C+LjG4gnI+vZoJM2H28TT0H0kabovxupp6K3ZGDgkbu3iKfBy3JYkI8N
tTkGjYqX21y+STwdPq/mwsmCegYG1Tr4ZFfVE8/EisUet3pZUc/C/eBV5rE7
bxDPRrqfp92qouvEc+ByyClNdvUa8Vz00IltMGutIwa8zv5+MaA3sQBofKQs
n4OrZHwezppodU/wryXj86BmXJp7+/AVMj4f1hoe1T1aa8j4fFyWTr+gN4FY
bQFGTLDoVBN+mYwvQDB/WW6numoyboGmvFM+B42IBRbo3JwZJ4m4RMYXohN/
0OKch1VkfCEmJb+szJlHrLYI++wOVfgeukjGFyEoJ73rp/7EapZ4Ja6OVU+v
JOOWeJ2/aEWgBrGaFfZv3fl1lOACGbfCl4VJnr/+qyDji3FhZPjo6jhiwWKE
DxM5uHen40uw4p3+qtCx58n4Eujo3LVcvPQcGV+KeZj55PfWcjK+FOFDsn7b
7ygj49YIy0jppH3tLBm3xvW8sy8/aRCr2SB33X6dqvmlZNwG+dvqghYlniHj
y7Amyi9i/o0SMr4Mka2dPgoGEastx5n149Xq+KfJ+HL0eR/e533NKTJui8oA
jxunjIlhC8vFAU/aE0+S37fFsH+K3m5pPfE/V9hiQoOW17eVxGorcOzSxMBN
F4vJ/BX4YCTLEUwmFqzA3f7e2UP+OU7mr8DM1n8H6RgRq9lh2ufxbsa5RWS+
HT6N16gbM4BYYIdluWXTPm4vJPPtELTQbJPFYGI1e8Qt+3XujuUxMt8e47cE
COxXHyXz7RHsfCIi0usImW+PQS4ne5YLDpP5Dpi9d6CPS84hMt8BdiO+6kuL
D5L5Dhg4OXP63Ov/kPkO+DhgS/inVwVk/kqcTD7onvP3AJm/EgKPlSnPexIL
VsLHYKvHS939ZP5KfB46dFjAn31k/ir8cy9s6E/lXjJ/FX7HVC3aU0wsWIXI
/kahntXEFatw/dYJt+VNxGqrkTHYU2jfSuevhv/iOVqB/9H5q+G8ZfDx47pk
vYrVqB53TdptBF3fEc9+z74SOp0Yjrhf3rX+lzWxwBHOud0yk3l0viOU2pW3
+gXQ+U7oond7rzyJznfC0y+T7dq20/lOmG9w51yvo3S+E774NS3vfIHOd8aO
9aV6r27T+c6wXTZSVPqSznfGyvIo8+gfdL4z7sn0/5molU/mr4Fox8SJDYOJ
sQY6jWP+cZ1ALFiDhE6frr1YQFyxBrUauO20is5fizE/p+pd9KDz12LcK/c3
w8Lp/LUIja3Jikqn89diRJT9rDt5dP46jFOffmvUcTp/HS6Ozx8bVUXnr0PJ
Mde/t+/S+esQ5+N9y/Q1nb8eG26e1k/5Reevx1UTs+FtPcj5IliPtycCxq02
pOfPetjf3ep8ZSKx2gbsLy06ZbGQGBtQm5I5t3Y1nb8B7dld/3X2ovM3oOPF
iJBvEXQ+D7veDLurzCQ25CE/0vfc6j308XjYfsfs7cCTxDweJt07rvXhMn18
Hr7WK2sb7hMredhh8rSqpo2ux4PjX0fZNTXSh2YexqSmX33Wm1jNBYoDlt+6
jyQ2dMHrHP28RTNon1wg6XxvocyGmOcCa2VPry882i8XNKlvTvQKIFa6oH/b
Z53PScQVLrjScbdAsoOu74K/b9cvWHSMrr8R00+E1/S6SNffiDMT7oe/v0vX
34i632Muv3hD19+I8B3Gup9o3wUbMd75aGW/3uTvgXIjbszXmu0wkrhiI6Yq
tJ4XzCRu3ogCw1H9+9rSvx+bcPr0wVm5rsSGm1A/8sqRmaHE2ITmGzW1n9OJ
eZtQMbTvh8t7iAWb4IYNkSdP0/U3If/2oavldXT9Tdi21n/av//S9TfhU7fj
Bobf6PquKF/6+1aYFvn7ZuiKjKHi0x+MiOGKPr5bhiVMI+a5IsXUjj/Fhljg
ihd3X33rsIlY6QqnlyW934XQv5eueChfPOhbBnGzK3q0D/UdnE+sthlTzJ9s
cD1L19+Mr2enWF+5SdffrHr/6Jxu00LX3wwdzU0RH/7S9TfjaX5uwMk+5O+1
cjPqeUvqc0yJKzZjZ5DDm10LiJs347LBn0GXnInV3GC07HW1lh+xoRv+Oo2a
F5RMrDq6UfrzXqvvJuapjnbr+IGFJfT9wQ06cSHTYurp+m7IWW+SE9hC13fD
8LFP8tLVyPtLsxsWfrxz8Io+sZo7enZ+2X/0BGJDd4S3ZdocW0zfj9xR3qvD
AaeNxDx3hCwdIhwVTixwh97WBPshMmKlO6oVUu+ZR4gr3PHNjz8tqpqu747Y
UO3+LU/o+h4w0JgVHPqDru+BF+vkJRN7k/dHeMClcpeF3lhingf2La+IG2xJ
LPBAYJvNkxUuxEoPzB6TfuFoOHGFB+z6npVPURA3e0C7m27Ny0L6/usJh/Ab
lyqvEht64lTF9D9XXtL1PXGhMf/Rb3Xy/s3zROr4yHtrBhELPLHPdcHaV+bE
Sk806eY+znOg7/eekGy3vZXAJ272xJD2lYdz0ojVvFDse+vpgwJiQy8sKhrW
Zn2JGF4Y4fd8Qdu/dH0vTPH7yCv/S9f3wmmPgPPlBuTzhtILPr+fPHhnTlzh
BbXL/01asYq42QvOm34seuFPrLYF75Ps5YfExIZbEDn2t3LfMWJsQd+Ly9rq
rxHztmAzf8B/Zq30880WxLkVrL3UjXz+UW6BDyrTM0YRV2xBvH+JQboVcfMW
dLzpIb7gTqzmjSb9heGmScSG3ri4y8n9+n76ecob0zo4vDhQTczzxqkfyYln
XhILvGHSX+19TEfyeUzpjRe7zSsu9qaf17zRd93o2KHDiZu9cXDAJ8GuyfTz
mw+Slyu6mi8kNvTBgjI1r/criVWvJn+I1ocqN2KeD+K/xL4rCSYW+GDA/OHF
V4V0fR+M8Dog+pND1/fBDP2KpmWH6Po+CBg/9On5Mrq+L15cTfhre52u74vh
Kw7Fd2im6/tCJ2nD1YYPdH1fuF6KHl3TkX4+9YXGuL8/H/YhVvri2tcXit4m
xBW+qKrc4OQ9g7jZF9O7n9r1yppYbSv0cpyqEjYQG27Frp4vTSz96OfhrdCN
HWFqmkDM24rlowaMn5JN19+KH31/SDceoutvxaKu08+dOEfX34rXSyS6prfo
+luxbL/Gt5oXdH0+pFse3kr9QazNh0/y6Z6BPcjnc0M+/M+k6CXQz+tmfHSq
2L+8bAox+DCpKDc1WEJsy8fRvS3996wn5vHRJftw4gp/Yj4f7/PUno8SEgv4
8Jphv2/MTmIRHy5DRDNXHydW8mGkO2LIkcvEhXz0rdWqHvuIXk/wYfaxtqDp
I3E9HwPnRswr0iTXH818XM691/3kYOJ2Prb5T0l4Qa9P1LZhr4bCdMFSYu1t
8Gk+EHvdhdhwG4b5X+8qDCE224buh00W8TPp9c42TC3PKk/aT2y7De8/X/p2
vZyYtw1/CsdGLbpDzN+GId6GD9+10uujbfj24tquGg1yPSXahjubl65sGEis
3Ib9+jtEulOIC7dhZkrxszgbej22Db4zkp6ZuBHXq57PMq2RHaKJm7fBYJ2F
pXY2cfs22K2xeGJfRK/f/HBMOSvtWi2xth9uaMW0RT4nNvTDcSvxvs1/ic38
0GWE0coEfXJ9CD9sHWiU/2gisa0f2p5Xz9pqQ8zzQ/UkRfUMD2K+HzqIPd8j
jl5f+uHC8nC32F3EIj/s2uf76L8zxEo/LHrgqFl6h7jQD96HancWfSCu8MOC
I02rXvUg16/1fshtG/V+zWjiZj9U7P42XNuSuN0PJr8Mz2i40utff+gYmG2d
EUOs7Y/uIzb3OL6L2NAfYcEVa73LiM38ofFFa5TXfXq97I8vMW9w+Duxrer3
JY2Bk/qR622eP6SPkas2lZjvj/zJsal6K+n1uD+EW34N4gcQi/xx1b/vBD0Z
sdIf35Ps89VPEBf6Qx7usH56A3GFP4JNWuaXfSau98fUn31mp/Yh1//N/uiR
NWrGganE7f54kn9utI4jvT8QgNuFdR1qQ4m1A/B8WPGZWzuIDQNwxG3hEtNz
xGYBeKx97/i9ZmIEgG9u9eVOR3I/wjYA5xt1+pmMJOYF4PgKO6MbS4j5Aaj+
02RY50ssCECnx9NGGEqJRQE46Fy9sO40sTIAXfqVZN18SFwYAOW94eYTOpD7
IRUB2BvS17J1JHF9AOw/yVs6LiNuDsBpfolFaABxewAK3Q8n2ewgVguEX1X1
vzGVxNqB2NhPlNTvDbFhIMyu3CzqpUvux5gFIm3F3p1bZhAjEAG+wWmmm4ht
A3HPcVSVfRoxLxDjP3fNfHqSmB+IV19aZ95/Qu/3BMJXfergWd3I/SBRIDxP
vkjvOoVYGYiq/ftfLeARFwaiYOH9tNZU4opAhBTkP9MoIa4PhMD876qM58TN
gdCadWpVig65/9QeiMXTk1f/nEOsFoSLpia3n3gTawdBnLHQatYOYsMg7Dbc
PUOnltgsCOGC3pN4P4gRBATlnB89itzvsg1C3c/1/n5OxLwg6L678tI8hZgf
hBHB8aejzxILgvClU5LQqo1YFISU90Yd5EPI/TRlEHbkdr7lZkdcGIR782wP
nU8grgiCTf+0RbvPENcHIbT3BZce74ibg2AUPrM5Vofcr2sPgj7/cZ9FpvT+
XTBWSvpNX2FJrB2MpTP/TsrfSGwYjLujAz/NjyI2C4aVk6n7mO3ECMaW9Xti
Npwitg2GtruxefMtYl4wlh+/HXv0PTE/GDaZO9Ze1aL3G4MxuWHGxWmjiUXB
yK2effqzJbEyGO4+f2Z2dCMuDEbtgp2rXeOJK4Jx1UKzd/+9xPXBsFzUFjq0
krg5GBO2l26P+Ze4PRherdmJ09Tp/c8Q9LbfvGKhEbF2COYlHdQ5PI/YMARq
M3OavTcSm4XgWcx/TcI4YoQgCXMHqucT24ZgataCmrvVxLwQhM0MVO/+mpgf
gr4njrTt6k7v14bAyWvUSek4YlEIEuNCYt+sIFaGICbAN3ZfIHFhCO7M035e
mUNcEYLp62IaF50jrg+Bie57yYRnxM0h6OMXZhWvSe4Xt4dAWGhohnH0/nEo
sp7sjnVzINYOhfrvzWHfw4gNQ3HanGf/bTexWSh2hrQvcb1CjFDkvajMwwdi
21BMlB4Rp/cn9695oRhqkOZiPZ+YH4ohQ/uviNpCLAiFx/FLe4bLiUWh6Oic
kYPzxMpQ9P95LeT2a+LCUJhP6Rn/WI/cL68IxV7PO383grg+FD7GfqYbvYmb
Vc9fvWr5o2zi9lA8vqV+6M4lev89DJsMIqOtPxFrh0F0bGOPBUbkfr1hGAJC
QqSly4nNwlTnW+OyE1HECINR1oGwCUeJbcMw06Vu+aTHxLwwvMzdpXG2J9kP
4IehvlhRd2Uu3S8Iw5iC7/d424hFYVj/Idw+Zi+xMgxd1NvdTe8SF4Zh6uZH
0zd1JfsPFWFYED3s9YjZxPVhuFYtEYVsI24Og4k0bqHTfuL2MKxy8+xX+4Du
X4Rj9emNvep0yP6Gdji2zrw0nmdFbBiO7GP7/ZOiic3C8XTExuvzTxMjHCue
9x8jfU9sGw6PK1O8Q03I/gkvHNZuj72+uhDzw7GpNOBrt1xiQThel3RuOH2X
WBSOzgcqyv/okP0YZThafNZsfGRDXBiOTn+TXFenEFeE4/SL1c7el4nrw/Eb
e+sGdiL7Pc3hWGbqPdVzAXF7OI6/nqthF0v3gyIw7a1ceu8CsXYEzH+ZTvyp
TvaPDCPgeN5tUOl8YrMINDTujukXT4wIdHwtCdWtJraNgNbl3B6HNMl+FC8C
teYmk/5dSsyPwN6EX1dPZBILIlADSb5xA7EoAgPvzijL0SL7W8oIqPe8+sl3
PHFhBFKf3ZorsSOuiMC8szPWdAwiro+A7aVRXy7kEDdH4H7LqcJr5cTtEYDj
juEjntL9s0hc1n51v7Yz2W/TjoRpymnbs2OIDSOx5mH7l6+2xGaRyNj7wzQy
iBiR8GkNXWKTS2wbiY7+g+RulcS8SLgInBbWtBDzI7GjeGrCtl5k/08QiYkd
h/BdphKLImFkUaibtY5YGYkNcVIvnQTiwkjMi3Jyu3GYuCISQxPWvrjRQFwf
iUm6Bad1/hA3q17f2pc7pcZkP7I9EiPGOyx2WEb3J6NQOu/sGrtgYu0oKNf6
u6cpiQ2jsC3c671aLbGZatx0svvRT8SIQtsGw0nSQWQ/1DYKebedCo5YEvOi
ELlEq8fvbcT8KOgdlWRH5BILotA484j/2MvEoih0bzhfovWRWBmFmjD9AP1B
ZP+1MAquenP2LbMiroiCzXrLGUf8ieujMHfwjAET84ibo9Ac4mfwoJa4PQqj
nXS77v9K93OjUV8Tskc0lOz/akfDSffCjuxlxIbRSA5fvOtsGLFZNJo2zFv8
bT8xonHKY87ExbeJbaPxJqfxxdH/iHnRqvcX6xZjU7L/zI/GrovGpw45Egui
YfD6ddXsBGJRNO4+uxHXVESsjIbR76C1EY+JC6OR6rGveFh3sr9dEY0ygcab
umnE9dG45v5+baArcXM0kg6YuQ8QE7dHY9iEmy5nyun+uAAHpz7bt/wNsaYA
u5csF97vS/bXtQUwnLzHdfUCYn0BpE/vSy9uJTYU4ELrNL+BucQmAqztrLFh
Qw2xmQD+Tbzy5M/E5gL0Lur1JduQ7OdDAB33af4p1sRWArRojjy0JoTYVgDB
Ib1+3fYROwpg/PaeufQGMU+AmJy87Z9/EnsIUGq058aYEeT7BHwBzpnVBExd
QRwiwJVpKyboRhALBLjruu102X5ioQBap1qqJt0kFgnQt0EyLPAXcbYA5p7v
/4kyJt9fUArgUrRn5rLlxAUCCLu9u/JvCHGhABJ7Q4dpe4hLBJj38c8r66vE
FQLE8Qz3GH4mrhEgb4zN0cKB5PsT9QKsWlVl+cuCuFGA1v6JZ/56Ezernp+m
aP0ZGXGLALXbdfaMKiNuF+DHvOz/bJ4RfxfgV/dJHY270e9rxGCrZsbiI2bE
mjEITu8keLGKWDsGn9KLXOsiiPVjoDnJs5q3h9gwBhM/nYvffZnYJAZlm75k
prcSm8XgUue2lmE65Psj5jF44dx996YpxIjB3yCD+0udiK1icDbCpPpBBLFt
DBzN7A7oKokdY6DVJffG+0piXgy6/zql9HtB7BGDY7OfLbzWkXx/hR+DDq4i
YbEecUgMApI6NW8xJhbE4Mp1c4OvU4iFMXg1a5m23SJiker3nfi50auIs2Nw
cf2BvVFuxMoYLNI7pr08iLggBtURVxvaE4gLY3AzMvfVJjlxSQy+5bcvKthH
XBGDO5OzvpYXE9fE4HTSBLX8SuL6GBhqafivu0ncGIOT96o3vXpC3BwDF42g
1vnviFtiMKLNyJT/m7g9Bonu5xdt7fYvyV/1+L2/u0KfWC0WZg9+Fj8zJtaM
RY9T1pudJhFrxyL0as7R3SDWj8Vf9aQrZTbEhrFYpRv/6aAzsUksto/d5ePt
TmwWi9JF9hHqAcTmsbjYw83dS0CMWPz+53jogTRiq1i8maOhfiab2DYWnove
2uTtI3aMxbwrsmLnQmJeLHSj9yS9PUvsEYuuDzsOtbtMzI/FBd36hxm3iENi
IetlpLfnEbFANc5/b5zWQiyMxXzB+202n4hFsYgev9Xp5R/i7Fho9Z8yd7Xm
U5J/LD4n8pKUusQFsTgYvSSrciBxYSyu3HO/Uz6CuER1PKxM/5GYEVfE4r/k
d2HzZhDXxEJvy7Xi2gXE9bGoeCsvH2dD3BiLnOUHO/iuIm6OhdeoN23CDcQt
sbjpvONNtAdxeyz6azi42m8j/q7Kl/eiumMYsVocViRZRoljiTXjsK5v4tff
KcTacUDRkR2LpMT6cbDjlTb57iA2jMOGisSBQXuJTeIwSb3sxtpDxGZxWHik
cv2wYmLzOMybfGJybSkx4vB+kk3ZikpiqziMDGveUHqF2DYO20uWJGvcJHaM
w7RXL3ebNRLz4nDHJk537hNijziEmK1eYPaSmB8Hq/4/dmi0EYfEIeDMyriy
T8SCOExdd2CD409iYRzaWn0UjWrPSP5xeBTonja7C3F2HDpOS85P6kGsjMOR
0T8sTvcmLohDbjfNa3X9iQvj4Hd5TF7NEOKSODTxfxocMiauiMMmofHegDHE
NXHwOhsoNZ5AXB+Hif9VLzk3lbgxDmHdO42YO4u4OQ688SYxBfOIW+KgGTHx
9M9FxO1xUJ8/duhUa+Lvquf7cITBmhXEavH4WmP203MVsWY8ojqu77tpDbF2
PGYevHBpEY9YPx5BT3zW9dlMbBiPJa/9JtzwJDaJx/u0x7IAX2KzeDTknW3q
5E9sHo/06zor4oKJEY9HshdL2sKJreIxZbN5XwsBsW08Yn5rqgvjiR3jMabZ
3vGMkJgXjz8d9Twa04g94mEhXxD+QkTMj8eq1w8fNMuIQ+LxOO3BrdpsYkE8
4D+7YG8usTAevedr7N2ipPnHQ1kyteuwfTT/eHSY8HRI7QGafzxk5gPHuByi
+ccjaa6Gb8tRmn88AtZeGs07TvOPx9Jh2XtqTtL847E1o6rP0DM0/3hUftt7
0buM5h8PntHeNwXnaf7x+LnUouZuJc0/Hm+cjHK+XqL5x+P1n7ZszSs0/3hU
fw7t0KOO5h+PG5bFvTRu0PwTcC274EfbTZp/AjQDU7/XNtD8E9Dr2PEFO+7R
/BPw91yuzob7NP8EzBv5MavvI5p/ApweJ3WvfELzT4B1mYvS5SnNPwH8NyeS
vzyn+SegadWbH5GvaP4JCDLZPfTXa5p/ArpNKZrs00rzT8CP4LG8hnc0/wQ8
Fbo1mH2g+Sfgi07b+dhPNP8EdFkks639QvNPwPiVAcVdvtP8E6Db3Ko38yfN
X/V4HgeUrr9p/gkQVubExP+l+SdgdKTm0+1qz0n+CQhYnvz2QAfiggTMiOx0
+ZAGcWECOswoy93fmbgkAfc0F8qyNYkrEvCsr6QhphtxTQJWST/GbdQirk+A
XL1PzYyexI0JKE3qWt1Nm7g5AZbmFntu6RC3JKBmVZ5A0pu4PQE7s9bFL+lD
/D0BNs6m9T/7EqslYuQT48S9+sSaiRgWfPuyxQBi7URYHB1/6rEBsX4iKvgF
27YNIjZMRO0oowF/BhObJOLko8/XYwyJzRJxY/b3o/8ZEZsnou5keGPQMGIk
YnmAjeer4cRWiTDyORu1YgSxbSJGrZRPOTmS2DERDdnjDuqOIuYlItqa991z
NLFHIo72TZ15dgwxPxGd9XIyOo8lDknEp5P/dbceRyxIRPr2C9dSxxMLE/Fr
Pb/tkhmxKBHrt4yL/zmBODsRY88UHhw1ieafCCcpQu0n0/wT4WNb3iVkCs0/
EXpddvlkTaX5J8J61qcLRdNo/on4N9XD4LI5zT8Rf5YsEt2bTvNPxBRj/6nP
ZtD8E3G4OHDYm5k0/0Rc7xHk3TqL5p+IqJVzR7yZTfNX5TNr3uZnc2j+qsdL
FM9unEvzT0JqdFtlDWj+SXAMPqt5ch7NPwm9TLWG7pxP80+C6bRco5gFNP8k
pGy709/FguafhFz7+oGzF9L8kzBj+cpZfRbR/JMwyvhx8mtqJMFuSlbfUkua
fxJ+1PA+JVrR/JPg41RvZruY5p+E8PoJT/osofmr1q8S9myk9khC4jHxdcVS
mn8SrIwujrOzpvkn4WHrsjndbGj+qt9fMUzrPLUwCQcGt+7nL6P5q8Zv9x40
ZDnNPwlLS6siaqmVSbD8+/q2ny3NX3V8zpmZ6a+g+SdBfUDXvFLqkiSsnHVg
rLMdzT8JgRs0Xn+lrknC3utPHonsaf5JOPT0vL6JA80/CdU/P+aXUTervE0k
XraS5p+EqRmhrx5RtychYqtzsdcqmn8SZn07qPaFWk2IYUeP3Y9YTfMX4lJ+
mHUHR5q/EC9WtvISqPWFmBp8YmhnJ5q/EGFNdrnx1CZCpE3Vb1RzpvkLYd1h
ZHMYtbkQgqkB5z5SQwh/g5oIjzU0fyESepwf/pDaVoi+c2vP26yl+QvREmy2
upyaJ4RBfc/Po9fR/IVI9nTKU1DzhUgc/tBFbT3NXwgN+5kWHtQCIXzdPy+7
Ti0UYufu9SkTN9D8hehQcuivjDpbiC9RLcVfqJVCTEr7U+TAo/kLsazxmNpx
6kIhuq3bfaCHC81fiBFFK466U1cIsWn34IEV1DVCTLxs8b3vRpq/EM0Dmxd7
UzcKIc5o7VdB3SzE2eRFnrqbaP5CpCYfsthE3S7EH2Vp4XHq70Lkd/hSrOZK
80/GtsRzDjbUmsnYabo+J5taOxk3dv1Nekqtn4zrR4+OGLOZ5p+M6bddwv2o
TZJxZnd7agm1WTKOW/Zf/4faPBnL1ATf4EbzT0ax8Ni6OGqrZFRK+iuqqG2T
cXByv/0a7jT/ZIxwfC1ZQM1LRp3xGZcYao9knONn9ztHzU/G3cGxZ35QhyTj
fqaz9WQPmn8yrDq0N/hQC5Mx9tvP1fupRarXIx18/xF1djJ6q7/eoOdJ80/G
29rbbYupC5LxY6aFMIq6MBlzzqROOk5dkozdBi2fnlNXqF5vl/hrfb1o/slY
bBFcZUldnwyjXpcfBlM3JuMe323AAermZCRlTI25Q92SjPKfnft03ELzT8ZQ
DUXTeOrvydjVUXxrDbVaCp4WyDomUWumwGfhWH4RtXYKBva9Z/CAWj8Fy9L+
dtXwpvmnYItMbY4ptUkKEh6OPmtPbZaC8/pl8WHU5inQtny+U0mNFBz7UNW1
mtoqBRP4266+obZNQeXI9y96+tD8UzC0dsraidS8FBySjp+wktojBeVJZ9yD
qfkpqDu8t0MOdUgK+loWaZRSC1KgppvDv08tTMHw0E6Lf1KLUlB9Qybq70vz
T0FYUtNic2plCr5udg5eRV2QAuUZiUEAdWEKWtI/moupS1Lw4NHjm0eoK1Jg
Wl3UcoW6JgWCU6XRL6jrU3B/95wcta00/xS0jg2ZZkDdnILIf7PWTqFuUR1v
u6puy6nbU/DcfoCFB/V31fEccqRbDLVaKoriE3k51JqpUPY6YFlErZ2Khimd
K2uo9VMxLkpy8wm1YSqO/jMh5Cu1SSoGPKg4rcWn+afiZbmeZCi1eSq+HP6h
aU6NVDTemzTYhtoqFUYe0bddqG1TkZgvGh1E7ZiKb/31jFOoeanwOnG0aie1
Ryps3/7pVkTNT0X646wfF6lDVM83pLvkLrVA9fozm++0UAtTYdEpu/ontSgV
tS8ObdbaRvNPRT9h5olB1MpUaB46dmIcdUEqjGV+7nOpC1Nx39T8+nLqklQ8
H+z8ZgN1RSr+tI8p30pdk4ojQ39ZRlPXp+KyZa+0DOrGVOgNO5iyk7o5FXkV
XRYepm5JRX/R+rJS6vZUVEY++VBD/T0Vp7qfenmXWi0Ne700c59Ta6ahXvxN
9yO1dhpSV+VZ/0etn4bSuL5LtPxo/mlQ/+Cr1Z/aJA0Ps0/KjKnN0pB/9OOz
CdTmaXA5MerXbGqkQShyerCY2ioNP3ZHJKyktk1Dwh3hTx61YxrSz2yd6U3N
S0M3yeDFwdQeafiyJWp4LDVf9fzNAq6nUYek4dbpZsssakEaUh4oxbuphWno
lJx++BC1KA0tt8JzTlJnp6G6w2yn89TKNCQd3NVaQ12QhtYTXg63qAvTkBnk
Ln5AXZKGQ+Wr9z2nrkiD5OnP9DbqmjT43tNa/pW6Pg3rpi1q+UvdmIZ/V651
7uJP80/DFhv1/b2oW9Lg3/P51X7U7Wn47lNYN4T6u+r1T+z1z0hqtXR4DN/v
Mp5aMx2P++l/m0qtnY7iPxpec6j101HyruvZhdSG6dCafuGNNbVJOp57V/6w
pzZLh5rnnhZnavN07HL7dNqFGunQ77zQw4PaKh3DnYf/9KW2TYfsk4FvILVj
OgzaiqvCqXnpuPRl298Yao90bF/bZCCk5qfDy2DLoAzqkHQ8aM7vKKMWpGOp
QecbOdTCdHzs0FmQRy1KR799g/rlU2enI72lUnaQWpmOU7s9fxyjLkjHeEnc
wpPUhemIChKEllKXqF5vr+vy89QV6eg8qnF7FXVNOkT7NZOvUNenw094mXed
ujEdQ76GDb3N8k/H3YVJ1++x/NNxo9PyzQ9Z/ulw6zjpVTPLP111sSpxeMHy
z4CLc+2R1yz/DMTcnvqpjeWfgYzGCcYfWf6q8de9Lb6y/DMw9dMk258s/wzE
rX61+C/LPwPmn2ImdAig+WdAZryqS2dqZED/3omrXamtMvAsui2qB7VtBi6M
W2akQ+2YgU8Zw4r1qHkZqH1XMlmf2iMDPRc57jeg5megceYSzSHUIRlIMb3r
PJRakIGb4+fvMqYWqo7H4Nu3TKhFGcjMqvs+hjo7A3c7b9MeT61UHY9/1AdM
pC7IwBPpuT5TqAszcOTUy47m1CUZsHt++vkM6ooMbL7jWzKbuiYD2eMso0Fd
n4HX8eHTF1A3ZuDWxoWvFlI3Z6DB+pHQirpFdbyrwwYvpW7PQOJKhwIb6u8Z
8EjOG2FLrZYJ39+iHDtqzUx8c1qrvpJaOxMvXCavX02tn4k9bUsKnagNM9H7
U/23NdQmmShJ/jp5PbWZavzdG3ceyz8T2xMeijay/DMR9/T7MVeWfyaKL3tf
cmP5Z2KpqetND5Z/JizmdmvwYvlnQmNL8jVvln8mOjt1P+fL8s9Ehy8l+XyW
fybW80vj/Vj+mTiycNqaAJZ/Jq7PXDUqiOWfiQGes98Hs/wz4T5V90goyz8T
0Rt/bAxn+WciR6OfTiTLPxP6oozTUSz/TBy6G7tKwPJXvf7ufd/FsPwzYVXt
GRXH8s9EYae8Lgks/0wsmXg3OZHln4nfhuM7CVn+mTjT50poMss/ExHVla9S
WP6ZGLJuxvI0lr8IjmE2henUGiJUT+vfPZOdDyK0jS7dIKLWEuGTm/VRMTs/
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
uw==
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxd23lYVOX/PvDR1DBNcUkxLacyxR13yu3WLMmtccd9FFREkGEf9gEGGGCA
2SE/LqNh4ZZomqSk45akpuRK5kK5REpKrmhmP37Xl3POffAfr9f1+PDm5j7H
OXPm8M6SkGlLGysUil+bKhT//+//+1Mz+v/+rqz/W4E3f291uH/mtXq7IWou
pphbX623O7JXdCu7b/+13u3RZr7xyVtdL9fbA+PPTJn1y/aKenfBkIlJFV+P
u1RvJWr2WX68cetCvd/FNw9/3+tvPV/vbjje8s9P9085V+/uuDetZ5MWnc7W
2xMTrrUZ3P5heb17YeCg/fOj952pdx/MPvFoS+8dP9W7H+73nnXi9pGT9fbC
V+bckKtPf6z3AFz4pcj970/L6j0Qnw993Pp4yQ/1HoTir/47c2XssXoPxoxT
eSsKbh+p9xA0yxzZZtbGw/Ueir9qUkPCIg7VexjWLvWbMG2eq97eeNTRcfbM
lgP1/gBRq0MGBh8urfeHWD2wyZzNz/fVezhWH381vUL1Xb1H4OjAZ72jDu+t
90hEr710/d3J39Z7FLRfdDvmvLe73qMx4M43S04XflNvwLrCELc+eNf/WQcE
xp5+2Xb8zvr1MejdsU/Xbv2L69fHQP968lP/8V/Xr49Fl209ZxaP21a/Phbb
/CZ/1Fe1pX79I2Qdedms3+Ki+vWP8OevXjObBHxZvz4Oiofbbu8ZXli/Pg5/
DdwROrbIWb/+MVoYtum/21Nv3cfwbPr3ltFHhPVPMHdHh83nyoX1T/DHwCkn
w68J6+MR9c6Rr9+qFtbH4+KhsdU/PRPWfbB5601T0qsb6td98GjHnvG936i3
4lP03XCt3Q/vCuufYtT2ZptGewnrE/DPkY/dk0cK6xPwd98VJcEThPWJ+PZ8
s0O/zxLWJ+K5rdfyzUuE9Un4ZfaLaynBwvokfHb1rV2zooX1yYi9eLvxQJ2w
PhlfHPriAy+DsD4FQ9JWu63KE9an4K1rdzs2dQjrn2FWdtKAFmuE9c9weHQf
o2WDsK7CoNLR87Z8WW+oMHDX5XmLtgr/XoX53n0ml+6ot0uFSxdsU098I+yf
ikuR24eb9wr7p+Lw2HYnO+4X9k/F3O/irvgdEPZPRbxfdV7sIWH/NPSaplqu
Pirsn4a2bZWLOh0X9k+D5+WAxpt/FPZPQ4fPveLanhL2T0dQ42frfU8L+6ej
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
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxd03FwHPV5xvEfhGSUoJJrozgHIzILo5IrVjJLo8BhZPPGEeYcy3gty/bZ
lu01KOUAAWsQyREEXgdBDqomm1QJZ+Khi6OQS1GbDSPoxZiwgIFLUeJ1LMJN
ItKlOOFKTdg2Lj1cp+l0cqdbf/XPzmcePffOO+/8zrv65oHPna6U+uV7lfr/
7x//osv/+A0bXyVnLn/pPUtve7XhNnn0FeeBi9/4RcMJqf/gXmfXcLXhDulK
7Oj4hxMvN5yUGVkW/WLmSMOdMjv1H10vPHi4YU3+88xVry3Zcajh82VUW/t3
h377UsNdsn302Cfv+mWl4Qvkd6edfVbveS80nBJb+8Nod/m5hi+Ud/Z999on
Hnim4W7pPuxP7r7p6YY/IRfs/9dLVpx7oGFdXv2zzFtPdv+w4Ysk8bUr79j0
1Sca/kt59dHXkyfSMw1/UjLPP/2B73z0sYZ7pHvpwMjii72GPyVf3/PPHe+8
Od3wxXKp9ubQwL7vNXyJlO7Z/bBuPdJwWq66ILmn9u6+hi+VM1++c/PbH/h2
w0ukY33tm+/rbPoyOfux004s/njTvfKH4Ob80LKml8rpxokzJ9c0vUy+deM6
4ydm05fLDzoeeVvd0rTIi89/62DX3Q3bIstPW3z/hZPN/NPSftv/vPb7qWb+
aTH/9EVr9+PNfLmsHlozd//zzXy5PLnrqf+an2vmn5H9l11c+ujrzfwz8vvM
5Q8feruZ98nht1ZPDZ9o5n1yRiZ855HTpxr5FXKX+kj5SFvD9hUy+I+jzqY/
aeYr5K7yq4/vSzTzFfLstdcsOuNDzfxK+fWDy/uf6mjmV0r/srN+dvLDzTwj
o8+cse7oomaekR89+cr5Ex9p5islvfULc+9NNvOVsuPRczu3Na0+K//2+qEL
H1rIPyu9b20vzS7kq2TJB6++9rcL+SpZqX79m/ed3cz7Zf53i7xk03a/nHPe
f+/584V8tdQeGzjxiYV8tdyyVH78qYX8Klm07pX9Sxbyq+SGh36+dtlCvkZ6
zl/8lizka2TF5c8cXr6QGzL0wNRFfU2LIUtPLL7oioX/N+T28f1vLtg3pPP6
23euWOivlS89OHBkwbJWvviQec6VC/21csPj765esL9Wul7aeeuC1YDcuea7
X1mwDMi6sev2tfoD8v09z3qt/oDs//ePP9nqr5Ou+R892+qvkxXXL620+uvk
6cNLZlv9dXL9fdqhVn9Q/uJjlx1u9QdFMs/+rNUflBvX/OpIqz8oI870XKu/
Xj62cfnLrf56+ftzvt+yvV7e+PD/tuyvlz3WJT9v9TfI7KIdLcsGuW79rpbt
DfKbVd9o2d8gP132nVh/ozxxxIv1N4rf+8NYf6Ncmn061t8oxRefi/WzcpZ6
MdbPynMbfhzrZ+W+978U62dFrpiN9TfJ+IU/ifU3yWmHY7Y3yRsrfxrrbxLv
4ZjVZtn5WsyyWZ764KFYf7NsvShmf7O8sDJmtUV2bYlZtsi2XLy/Rf5pZ7y/
Rex8vD8kN90Z7w/Je3bH+0Py0N3x/pDY98T7W+VX98b7W+Vfvhzvb5U9hXh/
q2j3xfvbZHfcsk1eiNveJu/G7W+Tc++P97fLJXHLdlkVt71dNsXtb5drTumb
ckPcminWKb9nyq1xm6Z8/pTfN+X2uF1T7jhlHhzCasep1mCBTdiGXdiHQ1hd
jfmwwCZswy7swyGsrsF8WGATtmEX9uEQVsOYDwtswjbswj4cwupzmA8LbMI2
7MI+HMLqrzAfFtiEbdiFfTiE1bWYDwtswjbswj4cwiqH+bDAJmzDLuzDIayu
w3xYYBO2YRf24RBW12M+LLAJ27AL+3AIqxswHxbYhG3YhX04hNUI5sMCm7AN
u7APh7C6EfNhgU3Yhl3Yh0NY3YT5sMAmbMMu7MMhrG7GfFhgE7ZhF/bhEFbW
qU7AGqzDAhuwCVuwDTuwC3uwDwdwCEew2on9YQ3WYYEN2IQt2IYd2IU92IcD
OIQjWN2C/WEN1mGBDdiELdiGHdiFPdiHAziEI1jdiv1hDdZhgQ3YhC3Yhh3Y
hT3YhwM4hCNYjWJ/WIN1WGADNmELtmEHdmEP9uEADuEIVrdhf1iDdVhgAzZh
C7ZhB3ZhD/bhAA7hCFafx/6wBuuwwAZswhZsww7swh7swwEcwhGsvoD9YQ3W
YYEN2IQt2IYd2IU92IcDOIQjWOWxP6zBOiywAZuwBduwA7uwB/twAIdwBKvb
sT+swTossAGbsAXbsAO7sAf7cACHcASrL2J/WIN1WGADNmELtmEHdmEP9uEA
DuEIVndgf1iDdVhgAzZhC7ZhB3ZhD/bhAA7hCFZj2B/WYB0W2IBN2IJt2IFd
2IN9OIBDOILVndgf1mAdFtiATdiCbdiBXdiDfTiAQziC1V3YH9ZgHRbYgE3Y
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
RmnyIg==
             "]]}, {
            Hue[0.5585438199983166, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.47058823529411764`, 0.2627450980392157, 0.5843137254901961], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1:eJxd03+wXGV5B/Cjo2PoBNx2bjtrG3QtAVZNdYkRVwjyAgGWcNFNuCQrBjli
pNuSylYirBLkoFEWG2SLodx2oj22obO1mbLa2K42jkeM7dXeyraGeq0Ze6bG
eqHBbmfScdumttPx/spn/znzme9+55lnnnlfedudW9/9wiiKvvviKPr/709/
o8t/+s0XvlG4Yn238O3PH1/wqnDnL7zsip27vrPgQviPzbd9+oNX/sOCJ8KJ
R0b/dfbWby24GL55zsOXnH1ouOA1ofhX73n5zU/OLrgUjuy446lib2bBvxxe
+dX/uWXi4q8teG344dMT93/72qcWfEHoXnr75T/z2JcXXA4vOXTfQ69o/OWC
Xx36b366ed/gLxa8Ltzz8S9dmP/u4QW/Nnxt49bPzX7/swuuhKu7b6m88AVP
LviicPhvL4q+8vnPLHh9+MfPb9mef/aPFvz6cEH1ga9/5/4/WPCGsONtZ2XZ
I4t+Q9iWPPv6J39/0ReHK4Y7v/DpJxf9xvDPN5wcfeLLi66Gl6z91/XJ04t+
U7gwOat46z8t+pLwp6/6yewF/7boS8N7riq97Bs/WfTG8PXeV09dfM4fLviy
8Mqnn3lg6txFvzl88uxvro/WLfryMLj4yefPumTRIfzSDY+set21C05CeOC+
+ot//sbF/Irw9Kd2dSZvWcyvCOdc90S2+92L+ZXhb+Z/5dJ771jMrwwHX519
6DN3LuZXhQf/5McvuPu9i/lV4dmHvlC/bvdivil8q/UvX7j7fYv5pjBuDrM3
3r2YXx22XHP+dz+36OTqcNY3bnnNC+5ZzK8J//7U88+uX3RyTfjizZP3bl3K
rw2PnZ0lty/l14bz6teuv2spr4Vzn//fy+5dymvhwfY7tidL+XXhzx9+7NEP
L+XXhcdPP/Wpjyzlm8PNZ/3wuY8u5ZvD3pe//UsPLuXXh6t//GdXdpby68Mj
H7jo8SVHk+G2c784u5xPht+764kfLec3hE3hvBc9tJTfEJ54w1d+dsnRW0Lp
5Dt/cTl/S3jjO77ziuX8rWHzS+vnLedvDfu+98D5y3k9XPLMDy5YcqiHK2/9
6wuX/18P667ZVl5yVg+v+bv+sqMtYdfrnlt22BJ6nXNetdzfEt7fPX/Z2Zbw
c+UNy462hlO3X7bssDV88sqrVvS3htnxNSv6W8MzW69b0b8xbB5uXtG/Mfz3
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
             "]]}, {
            Hue[0.7946117974981064, 0.6, 0.6], 
            Directive[
             PointSize[0.002777777777777778], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
             Dashing[{Small, Small}]], 
            LineBox[CompressedData["
1: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
cqY=
             "]]}}}, {{}, {}}, {{{{{
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9977109062479798}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9977109062479798}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9977109062479798}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9977109062479798}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9977109062479798}], 
                   Offset[{0, 0}, {1606.7553437201504`, 0.9645564491696267}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1606.7553437201504`, 0.9645564491696267}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1606.7553437201504`,
                     0.9645564491696267}], 
                   Offset[{10., 2.220446049250313*^-15}, {1606.7553437201504`,
                     0.9645564491696267}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9977109062479798}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9977109062479798}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9977109062479798}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9977109062479798}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9977109062479798}], 
                   Offset[{0, 0}, {1606.7553437201504`, 0.9645564491696267}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1606.7553437201504`, 0.9645564491696267}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1606.7553437201504`,
                     0.9645564491696267}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1606.7553437201504`,
                     0.9645564491696267}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{34., 6.500000000000007}, {1606.7553437201504`, 
                    0.9645564491696267}], 
                   
                   Offset[{34., -6.499999999999993}, {1606.7553437201504`, 
                    0.9645564491696267}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999998}, {
                    1606.7553437201504`, 0.9645564491696267}], 
                   
                   Offset[{9.999999999999998, 6.500000000000002}, {
                    1606.7553437201504`, 0.9645564491696267}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.01`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22., 4.884981308350689*^-15}, {1606.7553437201504`, 
                  0.9645564491696267}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9256219925315561}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9256219925315561}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9256219925315561}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9256219925315561}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9256219925315561}], 
                   Offset[{0, 0}, {1606.7553437201504`, 0.8937951599777786}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1606.7553437201504`, 0.8937951599777786}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1606.7553437201504`,
                     0.8937951599777786}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1606.7553437201504`,
                     0.8937951599777786}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.9256219925315561}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.9256219925315561}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9256219925315561}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.9256219925315561}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.9256219925315561}], 
                   Offset[{0, 0}, {1606.7553437201504`, 0.8937951599777786}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1606.7553437201504`, 0.8937951599777786}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1606.7553437201504`,
                     0.8937951599777786}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1606.7553437201504`,
                     0.8937951599777786}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1606.7553437201504`, 
                    0.8937951599777786}], 
                   
                   Offset[{35., -6.499999999999992}, {1606.7553437201504`, 
                    0.8937951599777786}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1606.7553437201504`, 0.8937951599777786}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1606.7553437201504`, 0.8937951599777786}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.05`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1606.7553437201504`, 0.8937951599777786}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.7003210452804848}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.7003210452804848}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7003210452804848}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7003210452804848}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.7003210452804848}], 
                   Offset[{0, 0}, {1606.7553437201504`, 0.7004209062551996}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1606.7553437201504`, 0.7004209062551996}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1606.7553437201504`,
                     0.7004209062551996}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1606.7553437201504`,
                     0.7004209062551996}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.7003210452804848}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.7003210452804848}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7003210452804848}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.7003210452804848}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.7003210452804848}], 
                   Offset[{0, 0}, {1606.7553437201504`, 0.7004209062551996}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1606.7553437201504`, 0.7004209062551996}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1606.7553437201504`,
                     0.7004209062551996}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1606.7553437201504`,
                     0.7004209062551996}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1606.7553437201504`, 
                    0.7004209062551996}], 
                   
                   Offset[{35., -6.499999999999992}, {1606.7553437201504`, 
                    0.7004209062551996}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1606.7553437201504`, 0.7004209062551996}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1606.7553437201504`, 0.7004209062551996}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.15`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1606.7553437201504`, 0.7004209062551996}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.5632049305510277}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.5632049305510277}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.5632049305510277}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.5632049305510277}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.5632049305510277}], 
                   Offset[{0, 0}, {1606.7553437201504`, 0.5631500599204894}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1606.7553437201504`, 0.5631500599204894}], 
                   Offset[{10., 2.220446049250313*^-15}, {1606.7553437201504`,
                     0.5631500599204894}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1606.7553437201504`,
                     0.5631500599204894}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   Offset[{0, 0}, {1530.2291666666667`, 0.5632049305510277}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 0.5632049305510277}], 
                   
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.5632049305510277}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.5632049305510277}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.5632049305510277}], 
                   Offset[{0, 0}, {1606.7553437201504`, 0.5631500599204894}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1606.7553437201504`, 0.5631500599204894}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1606.7553437201504`,
                     0.5631500599204894}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1606.7553437201504`,
                     0.5631500599204894}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{35., 6.500000000000008}, {1606.7553437201504`, 
                    0.5631500599204894}], 
                   
                   Offset[{35., -6.499999999999992}, {1606.7553437201504`, 
                    0.5631500599204894}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1606.7553437201504`, 0.5631500599204894}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1606.7553437201504`, 0.5631500599204894}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.25`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{22.5, 4.9960036108132044`*^-15}, {
                  1606.7553437201504`, 0.5631500599204894}], {0, 0}]}], 
              GraphicsGroupBox[{{
                 Directive[
                  AbsoluteThickness[4], 
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 CapForm["Butt"], 
                 JoinForm["Round"], 
                 BSplineCurveBox[{
                   
                   Offset[{0, 0}, {1530.2291666666667`, 
                    0.37769202258959617`}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 
                    0.37769202258959617`}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.37769202258959617`}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.37769202258959617`}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.37769202258959617`}], 
                   Offset[{0, 0}, {1606.7553437201504`, 0.3776392084333944}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1606.7553437201504`, 0.3776392084333944}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1606.7553437201504`,
                     0.3776392084333944}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1606.7553437201504`,
                     0.3776392084333944}]}]}, {
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 BSplineCurveBox[{
                   
                   Offset[{0, 0}, {1530.2291666666667`, 
                    0.37769202258959617`}], 
                   
                   Offset[{0, 0}, {1530.2291666666667`, 
                    0.37769202258959617`}], 
                   
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.37769202258959617`}], 
                   Offset[{0., 0.}, {1545.2191666666668`, 
                    0.37769202258959617`}], 
                   
                   Offset[{0., 0.}, {1560.2091666666668`, 
                    0.37769202258959617`}], 
                   Offset[{0, 0}, {1606.7553437201504`, 0.3776392084333944}], 
                   
                   
                   Offset[{5., 1.1102230246251565`*^-15}, {
                    1606.7553437201504`, 0.3776392084333944}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1606.7553437201504`,
                     0.3776392084333944}], 
                   
                   Offset[{10., 2.220446049250313*^-15}, {1606.7553437201504`,
                     0.3776392084333944}]}]}, {
                 Directive[
                  GrayLevel[1], 
                  Opacity[
                   NCache[
                    Rational[2, 3], 0.6666666666666666]]], 
                 EdgeForm[], 
                 PolygonBox[{
                   
                   Offset[{30., 6.500000000000006}, {1606.7553437201504`, 
                    0.3776392084333944}], 
                   
                   Offset[{30., -6.499999999999994}, {1606.7553437201504`, 
                    0.3776392084333944}], 
                   
                   Offset[{10.000000000000002`, -6.499999999999997}, {
                    1606.7553437201504`, 0.3776392084333944}], 
                   
                   Offset[{9.999999999999998, 6.500000000000003}, {
                    1606.7553437201504`, 0.3776392084333944}]}]}, {
                 EdgeForm[], 
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 
                  0.6666666666666666]}, {}, 
                InsetBox[
                 FormBox[
                  StyleBox[
                   RotationBox["0.5`", BoxRotation -> 0.], {}, StripOnInput -> 
                   False], TraditionalForm], 
                 
                 Offset[{20., 4.440892098500626*^-15}, {1606.7553437201504`, 
                  0.3776392084333944}], {0, 
                 0}]}]}}}}, {{{}}}}, {{}, {}}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> False, 
         ImagePadding -> {{All, 61.462653704825115`}, {All, All}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox["time", TraditionalForm], 
           FormBox[
            RowBox[{"freq", " ", "oblique"}], TraditionalForm]}, 
         AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 440, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           RowBox[{"{", 
             RowBox[{
               RowBox[{"ba", "\[Rule]", "5"}], ",", 
               RowBox[{"bn", "\[Rule]", "1"}], ",", 
               RowBox[{"z", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vs", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"vh", "\[Rule]", "1"}], ",", 
               RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
               RowBox[{"u", "\[Rule]", "0.5`"}], ",", 
               RowBox[{"pa", "\[Rule]", "0"}], ",", 
               RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
         PlotRange -> {{0, 1499.}, {0, 1}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
       
        FormBox[
         TemplateBox[{"0.01`", "0.05`", "0.15`", "0.25`", "0.5`"}, 
          "PointLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3607843137254902, 0.4758169934640523, 
                    0.018300653594771243`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5411764705882353, 0.7137254901960784, \
0.027450980392156862]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5411764705882353, 0.7137254901960784, 
                    0.027450980392156862`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.2901960784313726, 
                    0.2562091503267974], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.1450980392156863, 0.43529411764705883, \
0.3843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.43529411764705883`, 
                    0.3843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.005228758169934641, 0.33986928104575165`, 
                    0.6196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.00784313725490196, 0.5098039215686274, \
0.9294117647058824]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.00784313725490196, 0.5098039215686274, 
                    0.9294117647058824], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3137254901960784, 0.17516339869281047`, 
                    0.3895424836601308], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.47058823529411764, 0.2627450980392157, \
0.5843137254901961]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47058823529411764`, 0.2627450980392157, 
                    0.5843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5934640522875817, 0.00784313725490196, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8901960784313725, 0.011764705882352941, \
0.49019607843137253]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8901960784313725, 0.011764705882352941`, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm],FormBox[
        FormBox[
         TemplateBox[{"\"healthy juv\"", "\"stressed juv\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Normal", ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
      
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#3, DefaultBaseStyle -> "LabeledLabel"]}, {
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {2, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Placed", "[", 
                 RowBox[{#2, ",", "Below"}], "]"}], ",", 
               RowBox[{"Placed", "[", 
                 RowBox[{#3, ",", "Above"}], "]"}]}], "}"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.773138125383717*^9, 3.77313827973534*^9, 
  3.773140652901544*^9, 3.773140989982574*^9, 3.773142108986044*^9, 
  3.773379902831131*^9, 
  3.773389387512104*^9},ExpressionUUID->"2772098e-4d6e-4dbe-9d2e-\
89ccaadcd5da"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"Plots", " ", "for", " ", "individual", " ", "Graphs"}], ",", 
   RowBox[{"softmax", ";"}]}], "Subsubsection"]], "Input",
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"f5682843-fcae-41b6-893b-33dced0ab75d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"begin", " ", "looping", " ", "here"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ulist", "=", 
     RowBox[{"{", 
      RowBox[{"0.05", ",", "0.1", ",", " ", "0.2"}], " ", "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"blist", "=", 
     RowBox[{"{", 
      RowBox[{"1.5", ",", "3", ",", "5"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lsOstart", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lhOstart", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imax", "=", "2000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"h", "=", "1"}], ",", 
      RowBox[{"h", "\[LessEqual]", 
       RowBox[{"Length", "[", "ulist", "]"}]}], ",", 
      RowBox[{"h", "++"}], ",", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"Length", "[", "blist", "]"}]}], ",", 
         RowBox[{"j", "++"}], ",", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"subs", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ba", "\[Rule]", 
               RowBox[{"blist", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], ",", 
              RowBox[{"bn", "\[Rule]", "1"}], ",", 
              RowBox[{"z", "\[Rule]", ".5"}], ",", 
              RowBox[{"vs", "\[Rule]", ".5"}], ",", 
              RowBox[{"vh", "\[Rule]", "1"}], ",", 
              RowBox[{"vI", "\[Rule]", ".8"}], "  ", ",", 
              RowBox[{"u", "\[Rule]", 
               RowBox[{"ulist", "[", 
                RowBox[{"[", "h", "]"}], "]"}]}], " ", ",", " ", 
              RowBox[{"pa", " ", "\[Rule]", " ", "0"}], ",", " ", 
              RowBox[{"pn", "\[Rule]", " ", "1"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"test", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"lsO", "\[Rule]", "0"}], " ", ",", 
              RowBox[{"lsV", "\[Rule]", " ", "0"}], " ", ",", 
              RowBox[{"lsI", "\[Rule]", " ", "0.8"}], ",", 
              RowBox[{"lhO", "\[Rule]", " ", "0.8"}], ",", 
              RowBox[{"lhI", "\[Rule]", " ", "0.2"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"QHAT", "[", 
             RowBox[{"LHO_", ",", "LSO_"}], "]"}], " ", ":=", 
            RowBox[{"Simplify", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Fasols", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"lhO", "\[Rule]", "LHO"}], ",", 
                 RowBox[{"lhI", " ", "\[Rule]", " ", "LHI"}], ",", " ", 
                 RowBox[{"lsO", " ", "\[Rule]", " ", "LSO"}], ",", " ", 
                 RowBox[{"lsI", "\[Rule]", " ", "LSI"}]}], "}"}]}], " ", "/.",
               "subs"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"isolate", " ", "dominant", " ", "eigenvalue"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"AA2", "=", 
            RowBox[{"AA", "/.", "subs"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"LL", "=", 
            RowBox[{"Eigenvalues", "[", "AA2", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"isolate", " ", "Dominant", " ", "eigenvalue"}], ",", 
             " ", 
             RowBox[{
              RowBox[{"substitute", " ", "in", " ", "q"}], "-", "hat"}]}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Lambda1", "=", " ", 
            RowBox[{"Simplify", "[", 
             RowBox[{
              RowBox[{"LL", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "/.", 
              RowBox[{"Qh", "\[Rule]", "  ", 
               RowBox[{"QHAT", "[", 
                RowBox[{"LHO", ",", "LSO"}], "]"}]}]}], " ", "]"}]}], ";", 
           "\n", "            ", 
           RowBox[{"softmaxsubs", " ", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"lsO", " ", "\[Rule]", " ", 
               RowBox[{
                RowBox[{"Exp", "[", "llsO", "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{"1", " ", "+", "  ", 
                  RowBox[{"Exp", "[", "llsO", "]"}]}], ")"}]}]}], " ", ",", 
              " ", 
              RowBox[{"lhO", " ", "\[Rule]", " ", 
               RowBox[{
                RowBox[{"Exp", "[", "llhO", "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{"1", " ", "+", "  ", 
                  RowBox[{"Exp", "[", "llhO", "]"}]}], ")"}]}]}], " ", ",", 
              RowBox[{"LSO", " ", "\[Rule]", " ", 
               RowBox[{
                RowBox[{"Exp", "[", "LLSO", "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{"1", " ", "+", "  ", 
                  RowBox[{"Exp", "[", "LLSO", "]"}]}], ")"}]}]}], " ", ",", 
              " ", 
              RowBox[{"LHO", " ", "\[Rule]", " ", 
               RowBox[{
                RowBox[{"Exp", "[", "LLHO", "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{"1", " ", "+", "  ", 
                  RowBox[{"Exp", "[", "LLHO", "]"}]}], ")"}]}]}]}], " ", 
             "}"}]}], ";", "\n", "\t  ", 
           RowBox[{
            RowBox[{"Lambda2", "[", " ", 
             RowBox[{"llsO_", ",", " ", "llhO_", ",", "LLHO_", ",", "LLSO_"}],
              "]"}], ":=", 
            RowBox[{"Lambda1", " ", "/.", "softmaxsubs"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "take", " ", "partial", " ", "derivatives", " ", "to", " ", 
              "calculate", " ", "gradient"}], ",", " ", 
             RowBox[{
             "substitute", " ", "mutant", " ", "for", " ", "common", " ", 
              "type"}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"DllsO", "=", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"Lambda2", "[", 
                RowBox[{"llsO", ",", " ", "llhO", ",", "LLHO", ",", "LLSO"}], 
                "]"}], ",", "llsO"}], "]"}], "/.", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"LLHO", " ", "\[Rule]", " ", "llhO"}], ",", 
               RowBox[{"LLSO", "\[Rule]", " ", "llsO"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"DllhO", "=", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"Lambda2", "[", 
                RowBox[{"llsO", ",", " ", "llhO", ",", "LLHO", ",", "LLSO"}], 
                "]"}], ",", "llhO"}], "]"}], "/.", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"LLHO", " ", "\[Rule]", " ", "llhO"}], ",", 
               RowBox[{"LLSO", "\[Rule]", " ", "llsO"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"try", " ", "and", " ", "graph"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"llsOstart", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"llhOstart", "=", 
            RowBox[{"-", "4"}]}], " ", ";", "\[IndentingNewLine]", 
           RowBox[{"imax", "=", "1000"}], ";", "\[IndentingNewLine]", 
           RowBox[{"llsItab", "=", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"llhItab", "=", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"llsOtab", "=", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"llhOtab", "=", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"DllsOtab", "=", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"DllhOtab", "=", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"delta", "=", "10"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"llsOtab", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "=", "llsOstart"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"llhOtab", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "=", "llhOstart"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"DllsOtab", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{
              RowBox[{"DllsO", "/.", "subs"}], "/.", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"llsO", "\[Rule]", "llsOstart"}], ",", 
                 RowBox[{"llhO", "\[Rule]", "llhOstart"}]}], "}"}], 
               "\[IndentingNewLine]", 
               RowBox[{"DllhOtab", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}]}], "=", 
             RowBox[{
              RowBox[{"DllhO", "/.", "subs"}], "/.", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"llsO", "\[Rule]", "llsOstart"}], ",", 
                 RowBox[{"llhO", "\[Rule]", "llhOstart"}]}], "}"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", "=", "2"}], ",", 
                 RowBox[{"i", "<", "imax"}], ",", 
                 RowBox[{"i", "++"}], ",", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"DllsOtab", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    RowBox[{
                    RowBox[{"DllsO", "/.", "subs"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"llsO", "\[Rule]", 
                    RowBox[{"llsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", 
                    RowBox[{"llhO", "\[Rule]", 
                    RowBox[{"llhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], ";",
                    "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"DllhOtab", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    RowBox[{
                    RowBox[{"DllhO", "/.", "subs"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"llsO", "\[Rule]", 
                    RowBox[{"llsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", 
                    RowBox[{"llhO", "\[Rule]", 
                    RowBox[{"llhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], ";",
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"llsOtab", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"llsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}], "  ", "+", " ", 
                    RowBox[{"delta", " ", 
                    RowBox[{"DllsOtab", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], "/.", "subs"}], "/.", 
                    
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"llsO", "\[Rule]", 
                    RowBox[{"llsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", 
                    RowBox[{"llhO", "\[Rule]", 
                    RowBox[{"llhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], ";",
                    "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"llhOtab", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"llhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}], "  ", "+", " ", 
                    RowBox[{"delta", " ", 
                    RowBox[{"DllhOtab", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], "/.", "subs"}], "/.", 
                    
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"llsO", "\[Rule]", 
                    RowBox[{"llsOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", 
                    RowBox[{"llhO", "\[Rule]", 
                    RowBox[{"llhOtab", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], 
                   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", "}"}]}], "]"}]}]}]}]}], ";", " ", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"lsOtab", " ", "=", 
            RowBox[{
             RowBox[{"Exp", "[", "llsOtab", "]"}], "/", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"Exp", "[", "llsOtab", "]"}]}], ")"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"lhOtab", " ", "=", 
            RowBox[{
             RowBox[{"Exp", "[", "llhOtab", "]"}], "/", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"Exp", "[", "llhOtab", "]"}]}], ")"}]}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"ListPlot", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"lsOtab", ",", "lhOtab"}], "}"}], ",", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"All", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"PlotLegends", "\[Rule]", 
               RowBox[{"PointLegend", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"LsO", ",", "LhO"}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"Graphics", "[", 
                   RowBox[{"Rectangle", "[", "]"}], "]"}]}]}], "]"}]}], ",", 
              RowBox[{"PlotLabel", "\[Rule]", "subs"}], ",", " ", 
              RowBox[{"ImageSize", "\[Rule]", "460"}]}], "]"}], "]"}], ";"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}], "]"}], 
       "\[IndentingNewLine]", "}"}]}], "]"}], ";"}], 
   "                                ", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7725266323941593`*^9, 3.772526658080578*^9}, {
   3.772526693138112*^9, 3.77252674837323*^9}, {3.7725268063810368`*^9, 
   3.772527055271327*^9}, 3.7725271414278812`*^9, {3.7725272736889267`*^9, 
   3.772527301126389*^9}, {3.772527545563987*^9, 3.772527545646627*^9}, {
   3.772527687903592*^9, 3.772527692401833*^9}, {3.772527735728236*^9, 
   3.772527762783814*^9}, {3.772527851280717*^9, 3.772527851965497*^9}, {
   3.772527885526613*^9, 3.772527885606468*^9}, {3.7725281068111353`*^9, 
   3.7725281077314997`*^9}, {3.773055655958878*^9, 3.773055658894205*^9}, 
   3.773056138889859*^9, {3.7731396226824417`*^9, 3.773139630202224*^9}, {
   3.773388284355626*^9, 
   3.77338829976626*^9}},ExpressionUUID->"a6831b52-8cdf-4068-bb4e-\
cedecce00513"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Null\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{\\\"llsO\\\", \\\"\[Rule]\\\", \\\"0\\\"}], \
\\\")\\\"}]}], \\\",\\\", RowBox[{\\\"Null\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"llhO\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \\\"4\\\"}]}], \
\\\")\\\"}]}]}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"",2,95,3,
   32663310051849339849,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.773388256132367*^9, 3.773388313383277*^9, 
  3.773389396271235*^9},ExpressionUUID->"03b5552e-c51e-494e-b0e7-\
9c649369e7a6"],

Cell[BoxData[
 TemplateBox[{
  "Set","write",
   "\"Tag \\!\\(\\*RowBox[{\\\"ReplaceAll\\\"}]\\) in \
\\!\\(\\*RowBox[{FractionBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], RowBox[{RowBox[{\\\"2\\\", \\\" \\\", RowBox[{\\\"(\\\
\", RowBox[{RowBox[{\\\"-\\\", \\\"0.5333333333333333`\\\"}], \\\"+\\\", \
RowBox[{\\\"0.4000000000000001`\\\", \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\
\"-\\\", RowBox[{\\\"0.19999999999999998`\\\", \\\" \\\", RowBox[{\\\"Power\\\
\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"9\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"+\\\", RowBox[{\\\"0.1481481481481481`\\\", \
\\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}], \\\" \\\", RowBox[{\
\\\"Root\\\", \\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"Plus\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"11\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}], \\\"&\\\"}], \\\",\\\", \\\"2\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{\\\"2.6666666666666665`\\\", \\\" \\\", \
SuperscriptBox[RowBox[{\\\"Root\\\", \\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"&\\\"}], \
\\\",\\\", \\\"2\\\"}], \\\"]\\\"}], \\\"3\\\"]}]}]], \\\"/.\\\", \\\"\
\[VeryThinSpace]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}]}]\\) is Protected.\"",2,95,4,32663310051849339849,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.773388256132367*^9, 3.773388313383277*^9, 
  3.773389396302093*^9},ExpressionUUID->"1253da2d-461a-452e-bdc6-\
46160a681329"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
p1n/bPze8LZZ/2z4mrxv1j8bE6w/N+ufDcvR35r1z8bhbr+a9c9G6P0WJ3j/
bHRSt+KOyEaSSVvuhGzkbe3ALc6GfbvO3KpsnPbqxp2XjYT1Pbnzm56PM725
C7Ihv9mXuzgb+2uE3KXZWFExgLs8G8VrBnNrszF70VDuqmxUdDbjrs7G9oMj
uGuzsW/qKG5dNlqfH81dn40lVmO5G7KxZpU1d2PTz39uwy3IganpBG6DHHyb
b8dtmIPC9EncRjl4vWYKtzAHcVumcpvm4Nh6B26LHMxXTee2zsHLJTO4kYNb
ds7cjjmwMZjN7ZKDN5Uu3J45+DvejVuUg1n93Jv1z8H3co9m/XPQ1Wles/45
MK72bNY/B7udFzTrn4MpZxY265+DouFezfrnoFrj3ax/DiTPfZr1z8GGMb7N
+ufgQZJfs/45OH1scbP+Oah659+sf9Pj7RfYrH8OvKYGNeufA3P/4Gb9c7Ap
OaRZ/xyEapY065+DD2tCm/XPgfWGpc3656JibViz/rmwz17WrH8uLiaHN+uf
i0r/iGb9c7HOMbJZ/1woB0c165+L1z+b2ToXpdXRzfrn4n+PQ2f3fyzWZkc=

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxN0XdY0+fbBfA4qqi0IrWKOw4UBRW1KtR1HCjiYlREEI2I7BH2hgRCBgTE
jTs4cSMu3EHcE0Ut7jhAnMSN++W9ft9n9J9eHx/unJycrj7hrvMbikSimkYi
0f///3//GUeVnRzb+WvQolHCP+DKYJdZ1xcSm2Bn6LZZfQ8RmyEw51St+SPi
1lCXbPPUNlss2AJXAg+6bxxI3BFN2r9r6j+LWIx1MfavHymJu8HM+tXl7sXE
PWAMKCwc/oC4J4oDem4e0WKJYCvkrfIxt7cn7oMcp0TvMQHENsg587ZHWD5x
PyTMKHS4fp7YFs+3ZX7K/E48AM3k1S8LbJcKHoiIoNoM+BEPwk6HPt9T1hD/
DYcjPffE3yIejJZNhwe6tFomeAiCcxvtsJ5KPBS3p+yz6pdDbAePqiH9Mq4Q
2yPy9ka7mebLBf+DFmnf8594EA8DvowY4bWeeDiavWxS8OsN8QiU+k5623ZU
vuCReHdlbMSHRcSjoHuTMsj4ghhIeFqJqAkr/mcZ8Nft1i4fCwWLRqPkhOWE
BmYrhffR2Pf3lEP2KYJFY9D+weo3s9+S9zFokLTf6B66Sngfi6O9orbYvRMs
G4t/uturvOSrhfdxqB5Z5x3WcY3wPg5VWU+3rzgtWOSAkoGjNu9PWyu8OyCx
rVv5hqnrhPfxyFJMavW5g054H49lXsOdfxYIFk1A099Cl0hQILxPwOWMNePC
G68X3h1hXXbIbFjLDcK7I65flDrta7FJeJ+Iybue/vrjoGDZRBS8NYltELpZ
eHdC32nb8jL6bRHenTDme4Xl9u+CRZNQtPtiYlFlofA+CbHP7+a8L9sqvE/G
GLP37g3124T3yRhwv3Sg7sp24X0KpD1MS6683SG8T8HKgOcOlda7hPepWLxI
vmNW2m7hfSqWVWz9uyiuSHifhn/mFCt3j9ojvE/D4brfTxW1KxbeneE/esg6
U5O9/zOc8c5/vFL2+z7h751xu1fFuTF99//Peme0+mRh1yH4gHDvghfGZ6Pk
Fw8K9y5453R4rd7tkHDvgo37s0Q9mx8R7l3g1Wbx8b8/HRXuXZEwuEhfLT4h
3Lti/LS7M5Iu6IV7V6RcKQ1d0f+kcO+KkMwx1wPPlgn3brjQ/ua1pytPC/du
GDnLzC5231nh3g19Z09zMXa5INy7wcZiwGK7F5eE+3+BdvbXR5iVC/f/4tXJ
/Zv/fXZNuP8XFzs4RqT9rBDu/4VhVGDqVPdbwv10tAgolN18XincT0fN67c6
6513hfvpcHtjNcEl54FwPx0RtrO9uhwyCPfu8Pk2fUxU18fCvTsW/DGx2YPo
J8K9O76oAxq82/5UuHfHT5WTvUlZlXA/AzrxF8uiQ9XC/QycG9KheOvCZ8L9
DHzNf/fmyZQa4X4GAsOuqI++FSzywJeNF8LVsufCvQcuih7UTf8hWOaBbPOE
KTeCXgj3HnhusvjTtIuCRTPh8O/ka4fEL4X7mfB5VmJdHCJYNhPWyXNKlhQJ
1s9ETL+lpzJeCxZ5Qmpe2yqyxyvh3hOLBo/rb+0uWOYJv2HT/T0zBOs98cer
PRF5OwSLvLAsOret43Vy74XN132/Pf9A7r1gfOe542rr18K9FxZvuNFr/EDB
ollQJAdXLZgiGLMQ0LenotpPsGwW0ls5WSenkvtZ2H4/dmfyEnLvjX1J5xL+
2EruvXHvzhxft6Pk3ht2DW9MCbxC7r0xwSNvd9BDcj8bBwI+twqvJff1fj9A
mv2T3M/GvqUV2uumb4T72TCJrbaf3l6waA7GfY9Z1q2XYMyBxHLaWMdBgmVz
8LRodt71keR+Ds79eWvDpYnkXoK0m6ar8a9gsQSrJ7zYMXQ2+TwJItLk9of9
BUskeLsy9MVVKfl8CfIj55emJQjWSdCxLqhPuZzkSXDg0YvmZzWCDRI0d2p9
NXAhyZ+L3uJNMcfySf5cHBwxZ+WZdSR/LroHuaZpNpP8ubg8tOtfzXeS/Ln4
NXluw8l7Sf5cdOwxaJvrIZI/F6HxvQd2PUHy56K561LV4VMk3weye46+XS+Q
fB/cqTC4elwl+T44NWl98dwbJN8HoTfrDo+6TfJ9cEG9LvXDfZLvgw+9U9/I
H5N8H/hmjrn3vJrk++BHj2Pf+74k+fPQYmvTF9NqSf48pP6baOnynuTPQ3lJ
TLtBn0n+POBh4w6fv5L8eYgq9wpe+5Pkz4PizWD7Pg1rhfx5mDO47fpVvwk2
zMParlF735sIFvliyt4jwYNMBYt9EVHqecSrpWD44mP+8sxQc8ESX/TcHVQQ
+JdgmS9KG46+42whWOeLb2uLjN07kHxfZOd1WfWkE8n3xf2U2co8Mcmfj6uf
h7pbdyf58yGWfdy0z5Lkz4d537smfa1I/nycPr6y+dI+JH8+Lj8/3v+1Dcmf
j9vZLT8N7k/y56MiovZG+ACSPx8zJ+0bsWoQyffD11lfVpUMJvl+8Ex4Pf3c
UJLvh0r96ksX7Em+H7avGzJLP4zk+8EmyXnW1hEk3w8P4yzFylEk3w+1hys+
uY8m+X54nb7cuuNYku+PY8GNm9waR/L9MaDPiAuK8STfH9qGfQ5ZOZJ8f7wb
tMvs5ESS74/XqnstXCaRfH9s6m395OZkku+P3Xc3X3KeSvL9cXGp5ffSaSQ/
AEmZ8Rt6u5D8AFzzXvNO5UryA1Bb8abtfTeSH4CCtv+i93SSHwCH5uHLQ9xJ
fgBevTg3YcsMkh+AZMsfibc9SH4Adr96NLORJ8kPxG/jdplaepH8QDQVdzoy
chbJD8QuxxytszfJD4S0uFOh52ySH4h2Zmf+9p5D8gPRMDx4poeE5Aci4qRx
+OS5JD8QVe5jm9j7kPwgzB02717neSQ/CP3K/Kt/ECMIYe6ySbd8SX4Q6irf
DiycT/KDcOaH2akoP5IfhJAa+572/iQ/CF8yT8vqiA1BeNX8x9c9ASQ/GBaN
TY/ODyT5wXDze/vizyCSHwxxI+muo8SSYFTof9pIgkl+MEpflmh/EuuC0eTl
1PfLQ0h+MFblf860CSX5wWgW4RN4lFgUgv/KtpVOCCP5IQhpNLn4CjFCMGVi
29ku4SQ/BGfb93l2lVgWAnVkdZiTlOSHoMfvr/4qJdaHYLfR/PugCJIfgqru
/thALArFfwrLBi0jSX4o3u885BVHjFA0vHk05B6xJBRD8j5OGxlF8kMxOthD
vIZYFwpnu2Z1dcT6UAxt6m10iSb5oVi7+17XQmJRGNLuTNj4jVgcBo+E/NzJ
MSQ/DL9WNPm8klgShucq0/fVxLIwDLAJXm4bS/LDcGJdv7o4Yn0Y7j4ptjpG
bAhD3IHCYaI4kh+OV/Htx44mFofjpTjCWUaMcGTYJEQfI5aEI3qR/4k6Ylk4
nm19gIHxJD8c8xu/bxpErA9H1BDb7jpiQzgaZ6/R3SAWSTF73cmcpgmCzaQQ
VW3/bEcslqKNSe2LAGJbKTzsdkctJ4YUb90K1pwidpYi5n3LaCOxRIq57g8b
dEgULJWip+1Cl3HEMin+me4YGkKcJ8Vhx0uzFxPrpOi6Xdv/EHGRFEmajTX3
ifVSrM29v6hBkuByKT632TukB7FBiok9p99zIDZKsWb09mw/YlEEGvWbMVlJ
bBaBQYsPWm4iFkdAkvmicxmxbQQOfrg60kCMCPT4zVT7ndg5AiOmNvvdIpn0
j0BE429nBxJLI9DN9OHJycSyCHh9TmvkR5wXAWtj7IJUYl0ETub0DVlGXFT/
+fkP1+4k1kfA79Bqm1PE5RHI7ujU/g6xIQKjf2wIqSU2RiCt5yirximkfyRm
+GS5WBCbRcLzztVX1sTiSPQJHvJzJLFtJC7WnNS4ECMSnWbMXDyP2DkSf7U5
3jmGWBKJ4Q2W91cSSyPRThFyfhmxLBI+G7fVbibOi0QL0fpNB4h1kWh0Sv3m
NHFRJFKWJl2+QayPxI7YVIcnxOWReL8mZeZbYkMk/pw41fQXsTEStxW7Jaap
pH8UQt44zWxHbBYFx7D9dZbE4ih4vQgfPZDYNgov3j4bPJIYUZg7L75yIrFz
FPJbBFlPJ5ZE4cfID7YSYmkUloWOeBlELItCdJHXrBjivChsdJ2uTCPWRaG9
e9dgDXFRFKqMW0wXE+ujcLhZWchq4vIomG4fmbOJ2BAFedzt8F3Exigc+suh
zUHaPxqVK3umn6D9o3Gjts3+s7R/NE4P2lB0lfaPhlv7KbH/0f7RcJ+Y3fQh
7R+NmTvPz6+m/aNx5Frgote0fzTWDCjL/UD7R0Oi7j7rG+0fDe9OV781SCP9
o/G4RYNwE+KiaCjyXh74g1gfja4TSm60Ji6PhkO0+nx7YkM0OiNmmZjYGI1Z
dQuG9yQWxSDE6fFRa2KzGAxJC7MYQCyOQdd9/Z2HENvG4P7v7ecPI0YMutW2
9wCxcwwC+7br40AsiYHp+I93JxJL6+/TNWFTiWUxeG2z7bErcV4Mdust7WfQ
/jEY+/vpSC/aPwaq4El5c2j/GHy/E7toHu0fgz12okR/2j8G8qGrJgTT/jF4
+urTtzDaPxZXfY4tj6T9Y/Ggx5IOsbR/LMq8O6oTaP9YJBx/dz+Z9q93xe5O
Mto/Fr//fDYhg/aPRfl6a28l7R+LMMemszW0fyxMDjaapKX9Y3GmweYeC2j/
WAQXh79cSPvH4u5/D9Ytof1j8cUqbMxy2j8Wx82XVqyg/WPxvPys22raPxa9
c+LK1tL+cfgcZN69gPaPQ9yaRlEbaP84xCv37t1E+8fhkV5VtYX2j8PLQU9M
ttH+ceht07PzDto/DnsCdlnuov3j8MHmvy5FtH8cvD2+mBbT/nHoGhr8ei/t
H4cBW+Wl+2n/OIxumas5SPvHwTHF4HCI9o/D1wNnPh2m/ePQKUq7+ijtHwf7
kKShx2n/eJiH3T17gvaPx+5576aU0v7xmCVpfOEk7R8P22K34ado/3j4vxBv
Ok37xyOpZlvjs7R/PFbU9PM6R/vHY7u2pvA87R+PaTWt3lyg/eMRnfOkzyXa
Px5f8pbMuUz7x6PXCk/tFdo/HtNrAvdcpf3jEejz8Uo57R+PihX9qq7R/vHw
u+Xw4Trtn4ABnYO+V9D+CajA+R83aP8ERN5eUHeT9k+Ai/fzV7do/wQ8F4vu
/kf7J2CE5MfJSto/AcvHNtt0m/ZPQNoLJ/kd2j8Ba6U1M+7S/glY+L5J73u0
fwJq11z4QF2UgFaF7kfu0/4JaDTvcvID2j8BP/5xtn9I+yfAVP/LSG1MwOut
3zYYaP9EFD/0cX1E+ydiRpLbd2pxIi6Wvyh4TPsnYrnUYewT2j8RrrZpBmrn
RLTquzfhKe2fiIPl3/6oov0T8fRWpI5aloj1LgP6VdP+iYjbOa2EWpcImwNV
I5/R/okQrWx+klqfiLmvb4yuof0T8aHY8zi1IRFXPPcMfU77J+LHmdc7qUVJ
SHLp0fUF7Z+EhxcDFlKLk1CtuvKT2jYJsTMCAl/S/km4tsDxGrVzEmS/y4e8
ov2T4GPffQW1NAkdmuILtSwJn74/c39N+yeh6G/rYmpdEuJmtWvxhvZPwuSj
pXOp9UlYMnTQAeryJEx3Tjappf2TkNx7uwe1MQnnVZc3U4uSUXPL+I7aLBlX
encbYaT9k2E9KiyT2jYZ11MfXaRGMg6I1GZvaf9k+OWGulFLkqHbsGYJtTQZ
LuHdb1DLkhF3u5n5O9o/GWqZ11RqXTJ8jnXTUBclY/LmwJPU+mR0a/nPV+ry
ZDTIWmP7nvZPxoTgNfOpjcnodWHMCmpRCnzlyy5Sm6XAelDBd2pxCrY7Btt8
oP1T4P/+uyc1UtC//2w1tXMKPpYt20ctScGg8bseUktTkGGxo9lH2j8FhtDl
A6nzUtDFKc6TWpcCbbqrnLooBUp9/y3U+hRUpf11ibo8BfNaNzdSG+o/b8uf
f36i/VPgZm83mFqUimsbUtypzVIRvOp5LLU4FQN3ypdR26ai95hJ+6mRile6
SRXUzqnY9lplpJakQtTnt98/0/6piB96zopaloqhlTfHUuelYteOgbOpdako
sH8SR12UivKnL/Oo9anYWee8lbo8Fb3WtymlNqRC+x6V1MZU6J5WvKEWpeGN
a0XjOto/DSYNx7anFqchZG3P/tS2aTh+RD6WGml4cXPGDGrnNOx13RFELUmD
TpaeQi1Nw70V9xdQy9JgKNUXUOelYUnz/nupdWnIDbM+RV1Un3er5Aa1Pg1l
be88pS5Pw9cPCz9QG9Lg0+VJoy+0fxquDy43pxbJcPG0V1dqExnyp6j7U5vJ
8NTeYwS1hQwWzy47UYtlUGx8OYPaSgZl0V5falsZ+g+ziqC2k2G876QUasig
G91FQ+0ow6/KTUuonWXw7/5oHbWHDOtMK7ZRS2QIik7ZTx0gg1nfxyeopTKU
/mx4gTpehs6bHlVQy2RodC3tPrVahuM9H1ZT58mwf3QDI3W+DLuLntVR62SY
+21xg6/EhTL4rG7anLpIBkmTcebUJTLYrndqT62Xwbe8YzfqczLUVR3pTV0u
Q9mA3gOoK2V49nm+HbVBhr9jo0ZR19R/3iPX8dRGGZr6/TaFuk6GrX20btQi
ORpPqZlJbSLHzsftJdRmcqz81sOP2kIOd13TEGqxHDOvl0VQW8lhneMZR20r
x5dTl5Kp7eS4EdghnRpyWM6boKJ2lOPZIhcttXP939/6ZyG1hxxFvzVeRi2R
46Jx50rqADlkvvbrqKVyDLXasoE6Xg7lj89bqGVytC6w2UGtlsPvokMRdZ4c
02zH7aPOr89PtSqh1snRRvL+CNtfjvlJm06w/eUoixhVxvb//9+39Azbv/73
md/3Atu//vsuSr/M9pejsq60nO1f//tavapg+8vhsL3Bf2x/Of5t1ugO21+O
XmeM99j+cvw59+JDtn86QmYsfsz2T0dVt4lVbP90XLJ//Yztn47XLWUv2P7p
cG3b8DXbPx0uR6Nq2f7pGBl88y3bPx1nsnp9YPunY5A86BPbPx0n9qytY/un
o2PKqa9s/3RE4953tn86TnlU/2T7p+Nt5yeib3T/dEifX29IHZ+OWNMDjall
6fh1R9uEWp0O4+YZJtR59fnH2zSnzk9HeuiFFtS6dET9jPydujAd9w6ZtaQu
Ssejqg1m1CXpuHXOxpxan46cTdv/pD6Xjohj4r+oy9OxcZq2DXVlOn6ufNOW
2pCOFvcntKOuSUeHafntqY3p8LI2dKCuS8eWrV06UYsy4NxgRmdqkwzI/JVd
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
Z9sFiLblbLcAPwdxxgL873sYRv0fupetsQ==
         
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1000.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 460, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{"ba", "\[Rule]", "1.5`"}], ",", 
           RowBox[{"bn", "\[Rule]", "1"}], ",", 
           RowBox[{"z", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vs", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vh", "\[Rule]", "1"}], ",", 
           RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
           RowBox[{"u", "\[Rule]", "0.05`"}], ",", 
           RowBox[{"pa", "\[Rule]", "0"}], ",", 
           RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
     PlotRange -> {{0, 1000.}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"LsO", "LhO"}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.773388256573338*^9, 3.7733883134900503`*^9, 
  3.773389396374407*^9},ExpressionUUID->"8a552ea6-2ea2-4a94-87de-\
75e727107413"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Null\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{\\\"llsO\\\", \\\"\[Rule]\\\", \\\"0\\\"}], \
\\\")\\\"}]}], \\\",\\\", RowBox[{\\\"Null\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"llhO\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \\\"4\\\"}]}], \
\\\")\\\"}]}]}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"",2,95,5,
   32663310051849339849,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.773388256132367*^9, 3.773388313383277*^9, 
  3.77338940463162*^9},ExpressionUUID->"7d3f8b0a-d7e3-498c-a913-ef51e1e0d687"],

Cell[BoxData[
 TemplateBox[{
  "Set","write",
   "\"Tag \\!\\(\\*RowBox[{\\\"ReplaceAll\\\"}]\\) in \
\\!\\(\\*RowBox[{FractionBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], RowBox[{RowBox[{\\\"2\\\", \\\" \\\", RowBox[{\\\"(\\\
\", RowBox[{RowBox[{\\\"-\\\", \\\"0.46666666666666673`\\\"}], \\\"+\\\", \
RowBox[{\\\"0.4000000000000001`\\\", \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\
\"-\\\", RowBox[{\\\"0.09999999999999999`\\\", \\\" \\\", RowBox[{\\\"Power\\\
\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"9\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"+\\\", RowBox[{\\\"0.037037037037037035`\\\", \
\\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}], \\\" \\\", RowBox[{\
\\\"Root\\\", \\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"Plus\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"11\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}], \\\"&\\\"}], \\\",\\\", \\\"2\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{\\\"1.3333333333333333`\\\", \\\" \\\", \
SuperscriptBox[RowBox[{\\\"Root\\\", \\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"&\\\"}], \
\\\",\\\", \\\"2\\\"}], \\\"]\\\"}], \\\"3\\\"]}]}]], \\\"/.\\\", \\\"\
\[VeryThinSpace]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}]}]\\) is Protected.\"",2,95,6,32663310051849339849,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.773388256132367*^9, 3.773388313383277*^9, 
  3.7733894046514473`*^9},ExpressionUUID->"d122bf89-bd43-437b-8da6-\
3cd691b3de5e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw92nlcjOv/x/GRpewlS9ZGJ5S1rFl7F4coRJaUarQvyrTvNS2z1DRTIicS
g5BsoZQtU6SQI8m+jT2y5CA7v36P7+e6/dPj+bhcXXPdr5q5l4a6r1vqpcXj
8Zra83j///V//1os//dVQ1950PNNMo/NeUjWwRPHXtpzRj0g6+L6rJUX/py7
R+6NXeFLEizc75INkLAyKXyOzh3yICwKjho6vvwWmY/N3wcNPhl6k2yE63Wv
j0yZcYNsjL++XDu0t1cjeTh2e4/LP/ClgWwC5ztD/2xqvkYeCfuKsL+E7+rJ
o5Fnq5nYicc8FlvGi6+2WP5LNsOLVRPfpObVkc0x4lLRJYXeZfJ4eJq3FhxW
XSRPgP3mM15x82rJE+Gku3hCYoca8iTY/Gxe+PfNavJkvH/9ZpvnqfPkKRjz
XuQsOnqObIH1ipT+dieryFPR9d3i/YprleRp+Dxc3nXIFzV5On5li3NemTLP
QGYHl4hH1yrIM+GzOawi1fsMeRYsBQlPOuueJlvi6nSX8zfrTpIBuU2/9iF5
J/5nEbDeqyo/Iaacxq3gXdRHecK3jMatIBTP9/jieZzGrTFwhptmaFApjVtj
k+OZvEkpJTQ+G4LgolzLXcdofDYsT5+qc7pylMbnIGRAUsxBHlk0B8fkgTO9
Zxyh8b+x8IuNojyxmMb/xqfEbceKNxym8bmwLrg/oWnCIRqfC1ns0LmODw/Q
+DxEX/3eocv6/TQ+D53rbxuq5hfRuA02Reoa/+6wj8ZtUGI53T69Yi+Nz4fe
BK04m6A9ND4fTzcP/RiutZvGF2DmKOvOryx20fgCeFpNX3NsNZlni7Tl+gO+
idi4LYS2Q41P72bjdnjctNbn9yU2bocD8Dtb2cLGF0I145/P2v0KaHwhHBwr
TzbMJPMWYcR7n21/ebHxRch0bGj/M4ONL8atHJ3eLqVsfDH0+h3fP+8hG7dH
qFPu7NPatB/YY3vPzddOmpNF9oid/nO79Wqy2h63dnXrt1TK9r8E9z4tD3tx
lM1fgvP/HPP98ZDNX4KvfRdtTO9Kx0+9BBss/G6kW5B5S1GjqHN570XGUkjS
c8R7NrDjvRT9bD665Vay+UuRtU02bfd7Nt8BTdYvowsGUy84YNNZq1JPW7LI
AbtGXlt4KIqsdkBeVq77/N2s7zI82OJi1+kam78MiXa2ftU/2PxlsNnSPTBm
WCHNXwaN5wWjkYvIvOUw8s36/CycjOVY8DVleeVWsmg5tiz4kneris1fjpEn
zuRZNrH5K3A4gx/Yszv9/GEFsgz2fXMyZz+PKzAz7fi7CcvJ6hWweNXt8b4o
Mm8lBg29lnIpj81fib7j7j/dUcHmr8SQ+XaqaY/Z/JXQMlk7eFt79vPviEPX
jI40DiPDEcO3Dbz4fB5Z5AiHXHS97UdWO6LS2Tr4iJzNX4Vp/75wizzI5q/C
4FU1J8deZfNX4US23ud7LWz+KkxZUmOY0ot+H3lOOP77xecRE8lwgnnk9RdX
lrPfVyccqp9tGBVJVjvB8EdrlulmNt8ZXW6v/vbsJJvvjAPvXF4euM/mOyPh
lYc65Teb74zHS8+eD+Cz94fV6LosWd/HmozVaO/y7GCkJ1m0GocCLWO2S8jq
1ajsWzpXU8jmu2D1IOnl6ZfZfBdIG8ccPPaWzXeB3d2JCfN1D9J8F5wOeK7+
PZ7Mc0X5yfNNjcvJcAU/p9n5ShRZ5Apx5xlhr/LYfFf06xotGnmWzXfDFOXs
6vVP2Hw37BrKS+B3Yu+Hbigr2PvglilZ7YaZXuKeJxaSeQKU7Xk2pTqYzBfg
/LLDYb9yyBDg+9o/D9xPkgUCnI4rkLQ+ZN9fgE4+2+JOtKf3Y5UAhcnKiwdM
yGoBdmjxQ68tJGsE6JLoG2sSyt6/1+C6i9Xjo7lk/hpsrN6iCq4gYw22H609
6vWMLFiDBc5e2jYd2efBGqwMqmmMMiCr1sBA1+BU9Siyeg0eBBhMGGdJ1qzB
6LLbJaVLyTx3jHpwrWyVN5nvDqP8X0cHxpDhjkcz3g76qSAL3CF68zDgxw62
vjtOtV7rM+A4W98dL29sznK8xNZ3x6A5LUvKHrL13bHJSXJ18ke2vgeONvRO
vKVNn3d8D2yMDri5eRAZHsh6nmibYE4WeCA6NnaZeC5Z5IFz9bU+h53JKg/0
i+D//Ckkqz0wflKOLEhC1njg2+XtqR22ss9XTzSMGel79ghb3xNJDlv2b69h
63vCe8f9mt0P2PqeePE6cHLDR7a+Jwr7ewUP60Kf3ypP/JMQ93E7n6z2hE7D
AAvrKWSNJ8yanE91W8Q+/70gHdL/+x9PMt8LNpIPwYPiyPDCsPolO9w3kAVe
OPgzVvt6ETtf8MLpRqVxUBVb3wt6YxTRE++y9b1w/YunbPh/bH0vxA9vvT6n
C52P8Lxx3LW/JtOIzPdG99Q95jrTyfDGMYPYRYccyAJvPIoQnUley85nvJHy
7EgniZisavt+yUbHyreR1d6YNaD9woHlZI03rC/sdTt0ja3vg2kJisiQZra+
D5oS3Yx8O9L5E3wQsOXnu0xDssAHBU5xga+nkkU+uNd/4rioZWSVDx6/O3Vh
6jqy2gf6yR9rxqWTNT6Qne9U67SbnZ/5wj89xOWUmsz3xQWdzvyl99n6vkia
3Fpo+JWt74sNuuezjXuz8z1f9Kl0jV5jRlb5otc+g+837chqX2y0O3RM7EfW
+CKNv2BukITM88OjqTKH9bvIfD+seBCd8F5Nhh9s3xcGpD0kC/xQaj2w0u0n
W98PKy8sHx46gM5HVX7IyXSbc96CrPZDZOX5aoeVZI0fhizevMIogp2/+sMy
N7bALIfM98eeh5tcE0vI8IfZht2TejaSBf74FvXxnuYjWeQPm3y3jp/16fxY
5Q+pkauP3USy2h/V97+Vv1xG1vjjw5kbR2vCybwAdNId2/PtJjI/ALNi76Q5
lpMRgJib8zVd7pIFAfA4m3Gtw092Ph6A4q+2Q+YNofN1VQCuya/IGkBWB0Cz
/2PjXg+yJgAbV86orZGw8/u1WFKmNp1QROavRY9JE6teXyFjLYxtnzq//0AW
rIWf9tEqq77semEtEi0HnH8yjaxqc6jpuOtuZPVaXHJOaNQXkzVrcXvIXMnu
IjIvELdGTTVIqyfzA2F7/B+3s61kBKL+6rAJ8wfT9YogEIcGjggYMYcsCgS/
v9NjpwCyKhDdeB+Fz7LJ6kAEjt7Uev4kWROIgN5L7X89Ydc/QXh6PtdF2fUU
rR+EvzQWf6ImkhGEhAEr+lW4kAVBmGa2Js1VShYFwc6+5zTnI2RVEPhf7HuW
3iOrg3B4ok3L2k50/aUJQrPjrOoUc3Y9tg4b2m2O/L6azF8H89R/P1yTkbEO
kw6vMuxaShasQ/n9A2/2PCaL1iF2ifG8PT3oek+1DneffBnUZQZZvQ6FD0a5
XPcja9bhnknSF61cdn0ohCrf8/7mC2RdIeIzH/zM/UzmCxGUELug3TC6vjQT
ouKNddn1ZWQI8Wfp5kl6YrK9EFtGmZWfLCULhBiq+9782guyUIjnj+/nLDc4
S69fiNtftG/ZLCBnCTHLNrBpfxxZJYRe/sPTiYfJxUKcULycW/2ErBZiZb3j
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
WSZ6HM40mMr1z8TAmtIFnJGJ/70OjeX/AZ0z818=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxF13k81Ov7x/EpdXJatUkqaUdOIUUl3tpIC+mQSkV2wth3ZpgZY8YM7bSq
VBJFpbRp2tWR1GlxWmklKmnR3s/v8Z3r/px/zuN57q655prXH+ecYatCnX06
8ni8Bg0e7////r+/WmwunJ+h9y1wrY36H2DA2tm+0XKyJg7PqW/wKSJr4WC9
4/wb18n98KzJb8jJd2QdbNLcWzWuzzq1B+NBx26nJ00k68MwOXTqQzfycDjd
sMowSiKPhMpy982/dpFH48Hn0HEfrpANYIENBdK3ZCOoRH9b/ey/Xm1jyD/e
rPOwJo/D2bMl6y76kU3ww8YyYMpasinSZofuvHOGbIYV/2w4X/iaPAH7XENO
3NDZoLY5ho578nuZPXki2rQ2XfOPI09C6tC11r2LyBZ447P5UHgd2RL3BOMa
i7Q3qj0Zj3ZsSXu6gDwFX2zW203OIE9FtYPR7vuXyFY40enRhI+dNqk9DX0H
hQWWzyZb41T0zgUr5WQbbP4pDBzzLxkwGVr7ylUv538WANoh35utgtXm2aI8
xm/uBBW922LX67ycvAG56vfpkPx2+/dbhNqC6eh4dt7Fa3fofQZiw/JWlEzb
rH6fgdIzq1P9i9TmzYSR24Wjt4dvUb/PxBWHdwc771KbNwsDRv0ydBi7Vf0+
CxZtA01mqtTmzcZPrZuPNL22qd9no0VnXt5C7e3qdztUXzgQWfVIbYEd6sc/
MdpXsUP9bo9HdTOaHDzy1O/2sLDSW/yrTW3eHAjfLQgpLN2pfp+DR0MiF/L3
7lK/O2DVHOt1EtN89bsDXB7+ufvlsD3q97mYMP3yZwuDver3uTiuP/JSrN0+
9fs8eA15d8csrUD9Pg9bqm66b3myX/0+H7cu3sg85XlA/T4fZ0dPKcjvVax+
XwC7sWvnHmk5qH5fgIPJmeIPkhL1uyOal5QUGp0oVb87Qrl/qqyu/xH1uxO2
imSfSvcc/Z/hhFFTCsckRRxT/3knNPFKpf0U5f+zygl6jbdHGHc6pZ5fCNGW
4Jlr3p1Rzy+E9ueFlu7HVOr5hfC7XvOouua8en4hbpqYf/ZceUk974yhTspO
roJK9bwzfu0xFGxcXKWed8Y3k9DI++Ia9bwz7oz0ariy4l/1/CJU7ZZN+PP0
XfX8IgTYhB2qy7yvnl+E+R4fx6/c9Vg9vwiDZoacPrG0Xj3/N+wrniYOsnmm
nv8bl70ao7a+fK6e/xs+oye+a5jzUj3/N7Z8Kjm6KfiVet4F/sbZuYnLGtTz
Lvhztb9EV69RPe+CzL/yvXZWqK1yQbrhS3f+zNfqeVfM0ZOtmVKmNlxxsTlB
f0n/JvW8K4yNXpsO9ldb5YoRxV19e5SozVuMb2FNwuHv1MZinDuw5/3T0c3q
+cXouG+FTZqb2qrFMMm7aPRVpDbPDS9adVZ3LVYbbtDQPZ63+CbNu6HJLTHc
u5Xm3VBaGHZ6m9Yb9fwSuDl/mbTCWG0sgf32yT1bZ6ktWALNlv/25y5XW7UE
u755/CePoPmleBP4VtaWTvNLcfjouzGdt9D8Usxy4xfdK6L5pdD4FS1VnKH5
ZVi8Ychi2+s0vwzCtrmRXR/S/DJsXdEc87OR5pdhoPuLLcZtNO+OMutvWgUa
b9Xz7vDYd2NWci+1Be5o/Lp7+GldtVXu0Op+aWrwKLV5y7HL2PvHlvE0vxyp
g3T+WTiZ5pfDNnSw4abpNL8cGhZjr0fMpfkVSJ6/5+TbRTS/Ao7rt7n0dKf5
FTD1sI2s9aL5FXgcqBHiHETzK3F3+yMDYTjNr4R4QsvIgDiaX4nCCSckPQU0
vxKzTbX1oyQ074E3ZlNi8zLV1veAb8qpW+vW0ud5IHTbvYnOOWp7eCDSpwv/
8Tb6fA8kO34dPHW32nke2MbrXBhYQPs88CPGYGlosdp1Hsj5vXXO3MO03xM/
BmuF8Y7Tfk+sGSYvyD5F+z0xK6dP4c+ztN8Tdds795tzkfZ7YrHFzKDIStrv
CZczw4cIq2i/Jz40jhfya2i/JxzH3ro/4zbtX4V/01RLf9yj/atQuG+p/pYH
tH8VInY+mzLsCe1fhYMNOwuzntL+VVgieOX56gXtX4WioE6zDRtp/ypYSUaZ
uDbT/lXQ3DDsbcg72u+FePNJMyJbab8XRgw61uD7ifZ74WeHQqXdF9rvhS6r
fB5qf6f9Xhg0QCvszk/a74Xuj0c9T+O9U+/3Qoy8+dJwDbXrvGB2oX7H4c5q
87zx5oX+pwmaaut7I7323PR9XdWGN/pPMeX16KG2hzf4Wak7fHqpLfDG0Cen
FaW91c7zhsdfwye870v7vXF1WviHkdq03xsH2wzGzdeh/T44cq7cOlCX9vug
y/BziYmDab8P9ry2tRLp0X4fJJv+c12oT/t9wFtYmBw1nPb7wGhMv9yVI2m/
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
c0YW/vc96mz+DybUrjU=
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1000.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 460, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{"ba", "\[Rule]", "3"}], ",", 
           RowBox[{"bn", "\[Rule]", "1"}], ",", 
           RowBox[{"z", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vs", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vh", "\[Rule]", "1"}], ",", 
           RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
           RowBox[{"u", "\[Rule]", "0.05`"}], ",", 
           RowBox[{"pa", "\[Rule]", "0"}], ",", 
           RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
     PlotRange -> {{0, 1000.}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"LsO", "LhO"}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.773388256573338*^9, 3.7733883134900503`*^9, 
  3.7733894047287197`*^9},ExpressionUUID->"2c5dd6f3-c57f-43dd-b761-\
72455d8a1976"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Null\\\", \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{\\\"llsO\\\", \\\"\[Rule]\\\", \\\"0\\\"}], \
\\\")\\\"}]}], \\\",\\\", RowBox[{\\\"Null\\\", \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{\\\"llhO\\\", \\\"\[Rule]\\\", RowBox[{\\\"-\\\", \\\"4\\\"}]}], \
\\\")\\\"}]}]}], \\\"}\\\"}]\\) is neither a list of replacement rules nor a \
valid dispatch table, and so cannot be used for replacing.\"",2,95,7,
   32663310051849339849,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.773388256132367*^9, 3.773388313383277*^9, 
  3.773389413042095*^9},ExpressionUUID->"6339aa90-5247-44dc-bc71-\
93adc9034e93"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,95,8,32663310051849339849,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.773388256132367*^9, 3.773388313383277*^9, 
  3.7733894130562763`*^9},ExpressionUUID->"86716e8b-5a6c-4517-b9db-\
7e0bd83df070"],

Cell[BoxData[
 TemplateBox[{
  "Set","write",
   "\"Tag \\!\\(\\*RowBox[{\\\"ReplaceAll\\\"}]\\) in \
\\!\\(\\*RowBox[{FractionBox[RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}], RowBox[{RowBox[{\\\"2\\\", \\\" \\\", RowBox[{\\\"(\\\
\", RowBox[{RowBox[{\\\"-\\\", \\\"0.44000000000000006`\\\"}], \\\"+\\\", \
RowBox[{\\\"0.4`\\\", \\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\
\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\
\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"-\\\", \
RowBox[{\\\"0.06`\\\", \\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\
\"+\\\", RowBox[{\\\"0.26666666666666666`\\\", \\\" \\\", RowBox[{\\\"Power\\\
\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\
\"-\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"+\\\", \
RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"21\\\", \
\\\"\[RightSkeleton]\\\"}], \\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}], \\\" \\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"-\\\", RowBox[{\\\"0.10333333333333335`\\\", \
\\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"-\\\", \
RowBox[{\\\"0.13333333333333333`\\\", \\\" \\\", RowBox[{\\\"Power\\\", \\\"[\
\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{\\\"0.013333333333333334`\\\", \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}], \\\" \\\", RowBox[{\
\\\"Root\\\", \\\"[\\\", RowBox[{RowBox[{RowBox[{\\\"Plus\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"11\\\", \\\"\[RightSkeleton]\\\"}], \
\\\"]\\\"}], \\\"&\\\"}], \\\",\\\", \\\"2\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}]], \\\
\"/.\\\", \\\"\[VeryThinSpace]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \
\\\",\\\", \\\"0\\\"}], \\\"}\\\"}]}]\\) is Protected.\"",2,95,9,
   32663310051849339849,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.773388256132367*^9, 3.773388313383277*^9, 
  3.7733894130710506`*^9},ExpressionUUID->"939a1f9b-4ecc-43d9-9814-\
53db5f68e129"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Set\\\", \\\"::\\\", \\\
\"write\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,95,10,32663310051849339849,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.773388256132367*^9, 3.773388313383277*^9, 
  3.773389413086852*^9},ExpressionUUID->"e48b191f-6fb7-4bee-96bb-\
2b09b0e82b5f"],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw92XdYzf3/B/CjjMgoQnQjKwmVXUhPu2E0qNBNe2jvXadx6rRTpMwIRUbG
TVYyItRdQsPM7jYjkv3rd30/T/451+N6n9fn+Xl+Xl3X6WS4nZeZo4xIJGqW
FYn+//V//1r0//faJLyKkNk4TCv/ykPBcuj/ZF7hppQHghXQOFx3RZr5fcFK
+Gw0ymjSkHuClSG9peD21+tGwX/B/36GfkVpg2BVrEox2p+UWy94BH7v1ZFJ
Dq8TPApvzXpcK3W5I1gNXT84t79cc1uwOs65GRVuXHtLsAbmZ/fZp+ZWK3g8
9nw4kF0VfVOwJhL39XixMb9GsDa6fx33tjavWvBEOI2sShiv8K/gSXiiUlNb
sKFS8GSM+7E8ev2EG4KnYMcPn/d/3b0meCqiypb/5Z5bIXgaXpzrtC573VXB
09HV7PWEQ4uvCNaBm+mbseWzywXr4nxmv54t+pcFz8DYMcEDDJddEjwTL7x0
FT66XRQ8C59tH27vv/GCYD2MOzN/VPO1MsGz0SWxSrewO60PR4uCM3oFpYIB
qw2t12YvPfc/i4GDexeE9e52Vjifg23vZUeE1ZwWzudgwOjZGx33nRLO58JK
cntQWUaJcD4Xx86/0UyVnBTO5+FJvva8h/EnhPN5GB54anlt1j/C+XzkDjgX
sqHouHA+H788txuvqjomnC+Ax3Iddbv2o8L5Ahxq/zzlwzjBooXo+ilDxtT5
iHC+EGOPeG+p3FcsnC/Cs1eDFqx8flg4X4R6g4Qq+5hDwrkBAjsVbxs89qBw
boApx7593FNfJJwbwmFXhHZF8n7h3BA64+S8kubuE86N8Ebe6krylwLh3Agb
9Q92M8jfK5wbw8Gx92Dx1D3CuTFunfmklx6YL5wvhukZt77nswSLF2PHGYva
WUd4vgTeJw0eylXzfAkML83wGPmW50vxLTtQnCK/WzhfisAl227N0xAsWoYT
Cw2uGhjyfBnsuvedv9mF5ybIuH4tc5pUMEzQ6863USqFfL8JBpmGLpxfIbjM
BFpLnx040Mx5U/gdmnZ7cXehH0wxa4Ffn8Ea7GuKb5Ybx3YxFlxmimCPW67t
boJFZvA9uOb27RTOmyHbpajU8yDnzTD/nuPGpCrOmyFvxQuT+284bw6nDTH3
e8kLzxvmeHh8i0v1GMFic3zOtjJ+M1dwmTlcnW40r7DmfpbDykRkOsSf88vR
dC+r1CGJ88vRL2fxKfMdnF+OXnOqtikc4/wKKK0+//1cOedXYKqibEtIPedX
4GO93so1zZxfgZnvLa2i2zlvAesJ2x5+7ib8/MACybmzJ1YO4M+TBQYePrmq
72jBZRY4aRSdeHuSYJEljDRl1wwB5y3h579Wo20x5y3Rrp6n5ryS85YomR+2
JciR81Z4kCfuounDeSvs/2v8pIxwzlvhP+seVvkJnLfCjNImDfdMzq/EqjOb
3rzbyvmVqJQTh2kVcH4lsr64rZl4hPMrIcr49e+X05xfhdV1kRcllzm/CvsP
eH54UMX5VYh/ovxQpp7zq/A8A3fbHnF+NdRNlXqebeb8alyqjvZd/oHzq7Fi
Raf/Lnzl/GpovHmj0VWmUJi3xvsUv7oRPQTDGsNUpnkN6itYbA23f3NtXg8S
XGaN1vuNv3OHc/5vjD/flKo2lvN/46VGi06mNuf/xoF7Q4Y+nM75v/Hadr+R
vD7n1+Bq8LRzgxdyfg08y+869VrC+TVYuGb0+GfmnF+DH11FL3as4vxaZByK
tptjy/m1OOt60PGaM+fXYvcD1f06npxfi7c3jz1O9+e8DTzce5yoDhWsagNN
d5Vr7WJezwY3Mor+kU8QbGODuTPO9+meyuvbwFVT1vFDpuA8GxRbTtArz2Ge
Db7qWgyWbBfcZIPr5cYhE3cz3xaDhj+8eX0f823x5o3aJtPDzLeFbfSN6VeO
M98W21JnDB17mvm2SIx8Xhx6nvm26Nsl0OzMZebboqinyO71NebbwspNe6Z8
NfPtcCEleJrKbebbYfCK6ftUGplvBxXfR897PmS+HfouVpn1/gnz7TD/8rv2
iy+Zbwe8qnOSvmG+Hd5UvazS/8B8OzzOaPb77zPz7WFW77FV8o359tD+56NU
6Tfz7eEwqSU4W1b4vLGxx5io1n3ycoLF9hC/O2rp31Nwnj0sKoefrVEQXGYP
zRGxfYb3F9xkD7XwMKnjIH5+OUD2/HDr7UMEqzpgwtA+pTeGC4YDyvU9m96O
Zr4D7m7p/qmzBvMdMHnkSnVFTeY7YIhOelHfScx3QEDnPfu7T2O+A9SmOZm2
6TLfEQHjwq836DHfEWM2BesfmcN8R2TuftQQtYD5jni1a2LpfEPmO2Lx7E/9
RUuY74j9S850OWrCfEcsnDHx6KrlzHdEXbdh+t8sme+EZyL/6ozVzHeCXO8l
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
fTXdnoycSz0XOtCiFBxTWvfenZZLwSuTfckBtEIKLrg+HBxJK6dg76Qh2+Jp
1Y75tSF902n1FPgndA3bRGun4OOIhrodtE4K9FM6qRXSSEGzKNulmDZIQc+8
wu0ltEkKFrkvriijrVIQZbTheQVtk4JvMlltNbRLCnTnrP7eQHun4EfW79Ym
Orjj/R6ZTc20OAWWo9UutNDSFLh8qtzYTmekYPzXnDUiHe4/BTunbVWRo/NS
0D2rubIPXZiCd3fTfQfSxSmIK83vOYwuSYH41tQtanRZCg5lWQ7VpCtSULdm
cPZUuiYF+0PTZfTohhRYKFbYz6ebUlA6+c4pY7o5BW31Vzub0y0peHu3eP4q
ur3j+fzOC7GlRano/K4w34WWS0X6tMaLXrRCKsKXza0PpJVTIcr+1BRBq6ai
+1JRUxytnorN+QG3k2ntjvlCh9JMWicVbRYPtuXSSEVdxnvfPNogFXuHFekV
0CapcDw+7NdB2ioVms3Wx4/TNqmYoudrc4Z2ScXtv7xkLtLeqTjYaLe5gg5O
xeRD1urVtDgVwaVuB+7Q0lS0D9ihdp/OSEXtgS6bnvzZfyoerTn0s/nP/lPh
8rlg1fs/+0/F6eGdDn3+s/9UDImq+PL9z/5TMS6zp46MLvefiphr9zzl6IpU
aEXO39qbrknFmI/Ly5TohlRcNlO5N5huSoXXyT1vVOnmVCiNkPmsRrekolfU
7E/j6fZUFO12eTWJFqVhsUVavQ4tl4ZzOHdmNq2Q1vH9RGbTfFo5DR49PVyN
aNU0ZDfJTTah1dNQUvu0dQWtnYZqdfkDq2mdNDj0T1ltSyMNVf/4yTjTBmk4
0q86z502SYPJ6KJpvrRVx/1WKV0Oom3SYNOobBhBu6QhsfPl8hjaOw1f20bM
kNLBaTBbMHdvKi1Ow10vzR5ZtDQNnZ+3OubQGWlYItpxahudkwav7rO65NN5
aSieVm9QSBemoWZ/eNxBujgNMkE6JUfpkjR0zx3w7OSf/afhzI8Rcuf+7D8N
kjDXURf/7D8N7x981rn6Z/9piGm8taDyz/7ToNq3j/HNP/tPw7zBxwzq/uw/
DVd8b8y+92f/Hf2T7Cc0/dl/OlaWxis9/7P/dLxbjU///dl/OkTbt1S++7P/
dKgezt/W+mf/6TAotHdu/7P/dDivfzH255/9d1zPdvrzTjO4/3R8EtnmdqXR
cf3/FdH/P5PzULI=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw913k41Ov/x3GtVCrtWmhaSCpppdVLqUgLSbQxVMg69rHPYDYzlogoRbsW
pX1TSSlp06JoQ3EoJSlRqX5+13fe9/nnXI9zu70+d8/rOuc6o5x9Vm3prKKi
Ut9FReX///6/v5pMbhYu1P7lnmyi/AeoKZhv01tCVsO5u8MDxPvJGpg1Ya6l
RwF5IG7ahaLwDVkTG1suOCb/Jo/AaFU4vB+aojQHI9QnZV01Jo+GqhbHSN+e
PBZTN+d+mcon6+Lx369L36WT9RDQ65Fk4WWyPnIWLD7s/Jo8Ec6PfPyX/SMb
QGNbiLTPmO1KG2L65yHcC0vIU7C6R4njGi/yVBS4W338nUKeht8vzwdcukKe
jpqmtVl7a8gzMNTTwaa4T6rSM/HHTKd2wWyyEaoPb5qr50o2xh31Y523pZJn
Yc6VDRU7isizMdXHJH1tK3kObOXGaS36aUrPxVaJ2t94Lnke7D85TTFPJ8/H
9AWW85Y/IZugrl24qaTPDqUBjlna1a/LlRYAO2zv/fuVSOemmBsev2lsGZ2b
QmPt6ZtntNKV5wsw71l7a+tWpQULEGz7n3DpZTpfiOHq/fb365uhPF+IRbsb
/ha6Ka1ihtbcLT/+u0PnZqgL9lfRmrRTeb4IaQmu3FEZSgsW4Xo3Wckz9V3K
88XQ37jr6WKZ0oLF8K0xlNzqm6k8X4JLyZUbPu9VWrAEi048tXliult5bo6i
1E9tOs1KC8xRXrvUKO78HuW5BcYukXEHb89SnlsgrmnNLj2LbOX5UtzJ/yTJ
fKu0YCkyp2X3GZG6V3luiT2qG8XvY/Ypzy2x5VnMSn7bfuX5Mrzh6C3UmnZQ
eb4MtocOpIzafkh5vhwFQRUZqaNzlOfL0fTt862ldUeU5yvg/Hvwce7nY8rz
FRjxvPaY6sITyvOVONeYYW0ekac8X4mZ3Ry9fww6rTy3Qk+r5PFbf5/5n2GF
irGGp+sXnFf+vBUG5jwK29Lj0v9cYIXhx6ojTgTlK+9bY+Px6prf3ALlfWtY
bLjS/8vwm8r71tA8EDE2K/u28r413HRMsq5Ou6e8vwouHLuyluRS5f1VOLd5
+tJLDs+U91fh7auAwkf/ypX3V2GUbunc41PfKu/b4HPu/WLFmWrlfRtsEPzo
f7dTjfK+DVw+XYk0fVOrvG+DO8KllukWdcr7q2H8fcoO4cZ65f3V0A/8eiXO
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
fxEWlbzXusH6i/DhwI6jRay/CK+89AxLWH8RLt3ce+Ih6y/Cqil9dZ+y/mJw
x4WnvWD9xYju/f3fK9ZfjFMG0c5VrL8Y+UVTrtWw/mIM/tl7wAfWXwzTt6Oc
PrP+YrwJ4ud8Zf3FGHNyxIcW1l8MDnfomF+svxh9VoWs+cv6i3Fn9pKYzs3U
X4x+1+OPdCdzxfjhZXe3J9lNDMmtE+/6kHliLJ68p6U/mS/G8p6GnYeQBWLM
yvRWG06WilE7YrPaSHKSGPp5wzqPIaeLccMzs0WXnC2Gz+pv7/TJOWIU2I0v
MSDniaG6zvzYVPJFMVwmrhPPJBeI0T3Obf1scrEYnTkR+vPJpWI0Juz9Zkou
7/ieTZXnF5GrxNijiQALcr0YhdoPJiwnN3W8/3HiGytymxh3I7fJVpNVJPjK
fTXZnqwmgeORoNL1ZA0Juvh5ejiSNSWoKSlS2UTmSGBwQZ7kQtaTYMioO8Pc
yYYSvPskyPIiG0vwr+6Gti8ZEvSuSE4PIJtLMCqoXZ1PtpIgwFk1PIz1l2Du
1PzaSNZfgq1+Y5ZGs/4SeOxadETE+ktgNXhCFxnrL8Fu09d2CtZfgv+8nQ4n
sv4S3Hhd+DWZ9Zeg3w01ozTWv+P3mcwJzmD9JXjs73w6k/WXwN1FXJ/F+kvg
1e/k0P2svwSerjWLDrH+HX9+lgZeR1h/Caq3bU88zvpLcKnLyNyTrL8EzuvK
ik6z/hKMWXS94hzrL8Flt5r6i6y/BBtXL/t2hfWXoH/K37ZrrL8UR7M7/7rB
+kvxvN7xxy3WXwrtUq3GO6y/FMKTC6tLWH8pUh6WP3rA+kvh61lzqZT1l+Ls
ea+sp6y/FOcrwgTPWX8poj4P2ljB+kvh02nhjNesvxSjBvXsUcn6S2E+0q+8
mvWXQto3en8N6y9FyC2417H+UpRrnJv4kfWXQq2w9uMn1l8Ko+0VB76w/lLM
Nt6xrpn1l6J+nY56C+svxdUdcZdaWX8pVKIeOP9i/aUYuOO76h/WX4oSp+5H
/rH+Uogseizu/I36SzH5SpfKruRiKaYObPdXJZdKceNQW9ee5HIp/l78t02d
XCXFWPGQ4X3J9VJULV6c3Y/cJIUTJ3nUQHKbFFundsoaTFaRwWhbhuZQspoM
+5c5JQwna8hQ6eigok3WlKH7rTRvDpkjw6+tGhWjyXoyjJ/22ESHbNjx+3+/
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
T8T/vqPK5P8A6Tnr/g==
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1000.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 460, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{"ba", "\[Rule]", "5"}], ",", 
           RowBox[{"bn", "\[Rule]", "1"}], ",", 
           RowBox[{"z", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vs", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vh", "\[Rule]", "1"}], ",", 
           RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
           RowBox[{"u", "\[Rule]", "0.05`"}], ",", 
           RowBox[{"pa", "\[Rule]", "0"}], ",", 
           RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
     PlotRange -> {{0, 1000.}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"LsO", "LhO"}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.773388256573338*^9, 3.7733883134900503`*^9, 
  3.7733894131570673`*^9},ExpressionUUID->"ee59c536-e950-48d5-9ba8-\
ba3966336e49"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
LYnh+lfAPSExlutfgf0+oXFc/woMUkyN5/pXQOvZP4HrX4GYakEi178Cn1TX
OOcrsCN2XRLXvwKxd4OSuf4V8P3UJYXrXwHLuuucS+vPv708letfgY2pg9O4
/hWwmnuLs7n+880J6Vz/9fvv0nY5178CK1bs5FxX35/VqAyufyWGPDzH2VKJ
Br1nZHL9K9Go4XXONkr03uwt4fpXwrH3Fc52SmzZNUHK9a9EsH8RZ2cldk2y
y+L6V0K8fjVnDyVK4n5y9lLi6PNgGde/ErLfznEWKbFS2EfO9a/E7I4SzmIl
ijvc4ZysxK3hgxVc/0pEG7I4q5VY4nyDc64SXyb3VHL9K1F2I5KzUYlzbw9z
zldidOEPzoVK+Nu5q7j+lXCIlHE2KfFVd5ZzqRJp6xuouf6VGLp3DOdKJd5d
SuJsVqJry0LONUqEpj/lXKvEYfsuGq7/+v3oN4OzQIWfyzM5W6qwd0wBZysV
JsdVcbZRwXJgcy3XvwrlsU6c7VQw+C3g7KhC5H0VZ2cVblsXcIYKHVve4uyh
grb0K2cvFS75d8vm+lfhxMmxnEUqLGy+kHO4CmvHSzmLVQiJNXJOVkFpPMlZ
okL0rXuc1fXjnes456rgEt9ex/WvQo/XDpyNKtRkT+acr0LpLBHnQhWkfsmc
i1R4rsvhbFJhV+MdnEtVuPjPcc7lKsjKyzlXqtB/8BPO5vr+HtdxrlFhZF0L
Pde/CueXdedcp0KKpyNngRp/rXHnbKnGRG8fzlZq+GUFc7ZR44tDLGehGs0C
pJzt1JjXOJezoxrXnTdydlZj4Zc9nKGGccJRzh5q7O9TwtlLDdPa65wD1MjK
f8BZpEas7wvO4Wr03viJs7h+frbAwPWvxpnuLThL1Eida81ZrcYO9x6cc9VY
XWHHOU+N9O5DORvV+GzjyjlfjQ+l4zkXqvHacRrnIjW2+/pxNqkxcFgg51I1
flwL4VyuhveQpZwr68/fL5azuf740Smca9SofZnJuVaN8hAl5zo1tDt0nAUa
SA6v5GypQeuVeZytNLjttpGzjQYhJ7ZyFmrwouUuznYa1Dnu5+yowYwBBzk7
a9DqxxHO0ODg9hOcPTS4ZHeas5cG0cpznAM0+P3UBc4iDZ7dusI5XIPTF69x
FmvwY+MtXv8ahPne4fWvQdfn93n9a7BloZnXvwai4mpe/xrE/HzK61+D2l4v
eP1rsGTQa17/GuwX1vL61yD223te/xp0KP7E61+D1eF1vP41yPz5jde/BunL
f/L616Cg5hevfw2GoGEO1399f/JGnOs0SP27CWeBFldvWXK21OJidXPOVloc
NLfkbKOF9ZXWnIVatNhtxdlOi5lJ7Tg7anHYqQNnZy22PbHmjPr1VZ04e2gR
0LUzZy8tdm/9jXOAFt7du3IWaXFH141zuBZL3nbnLNZCM0nIOVmLoat6cpZo
UXGzF2e1FuKWfTjnanFoVF/OeVoMm9+Ps1GLF4m2nPO10KrsOBdqUZLTn3OR
Futy7DmbtDirHMC5VIu2iQM5l2tRO9+Bc6UWO9wGcTZr8abTYM41WmQ857lW
i/hDjrz+tWiXMoTXfzZKRg7l9Z8Nj1qereq9dRiv/2x8mDmc1382fvvCs102
Tuc58frPxkCnEbz+s1FzmWdko/eCkbz+s1HwimevbCxJcOb1X38+33gWZaM6
dRSv/2xs/cKzOBtTo114/WfD9zHPkmxc83Pl9Z+NhNM852aj3YDRvP7rzy+X
Z2M2sj/wnJ+NS75jeP1no0Uhz0X1eZq58frPhqeI59L6fId4Ls9GfuOxvP6z
ccyXZ3M2Ghp5rsnGouc812ajyBG8/rOxMoFngQ67j/BsqUPnOp6tdBg2wp3X
vw5t4ngW6jBjH892Ojx5wrOjDre7juP1r4Pah2fo8FjBs4cOJ47w7FW/fg3P
ATp4dhrP61+HxAk8h+tQF82zWIfPa3lO1uHoGZ4lOox5wbNaB7nVBF7/OvRx
4jlPh3cBPBt1mJ/Gc74OBet5LtRh8wmei3Swv8+zSYfj33gu1WGozURe/zp0
deK5Ugcrb57NOjxfynONDm8VPNfqoNvEc50OkiM8C/RodZVnSz2sn/BspUfO
N55t9DjbZhKvfz0i+/Bsp0fdSJ4d9fg6lWdnPfrN5xl6nIvi2UOPMAnPXno8
WsFzgB73NvMs0qP3AZ7D9fjLxLNYjxVXeU7WY1YVzxI9Fr7kWa2Hbx3PuXpM
aDyZ178ewW15NtbvX3ee8/V43J/nQj1aOvFcpEcqeDbpMdKT51I9wv15Ltcj
bwHPlXp8DOfZrEfzWJ5r9OiVxnOtHu9lPNfpsUnHs8CAU6t5tjTg+HqerQx4
vJVnGwNa7eFZaMClAzzbGdDpKM+OBiw7xbOzAQ4lPMMAm8s8exgw9TrPXgYs
r+Q5wIBfVTyLDHCt5jncgBM1PIsN+PKa52QDXr/nWWLAoy88qw24/YPnXAPG
NvDg9W+ArDHPRgNKm/Gcb8D5VjwXGpDRluciA0ZY82wyoG1nnksNuNCV53ID
5gt5rjQgrDfP5vr97cdzjQFx/XmuNSB1IM919ec/mGdBDiYM5dkyB55OPFvl
oKUzzzY5uOLCszAHDcfwbJeDt248O+ZgiTvPzjmYNZ5n5OB/52Ee+3+xNJyd

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
rpEiu9Oc3R28SP8oHD/2vcsIYqso7BubPt+X2CYKz26kJiqInaOw5aw4uYAY
UVittQgrIxZHoX3J/OkPiCVRKHl/c1i9aaR/FEa1OuD4C7E8Cs33PuvnRpxb
9y7p5zGD2BiFwtFf5ZHExVHYVG+pWUNsikIXxZvw9cSVUbAreuJ0kNgchQ8/
GjhWEtdEYYC0IPQxsSgaba+9fv2F2Coa95fdL7eaTvpHY3WvYS/tiJ2j0XvD
8nBXYkQjotv0SROJxdGQDNtvmE8siUZm8PkhkcTSaCwRJ3nJieXRMNtl3M4l
zo1GxYP4u0ZiYzRuLbswr5i4OBrWiZdmHyc2ReMxNt28SFwZDY3trAe3iM3R
aPK5IuEpcU00vGYeX/2BWBSDV4q7Xg1mkP4xGLWs2NiS2CYGunFrNJ2InWPw
9qea5r2IEYOzD28PHEAsjkElUr8NI5bE4NvD8+HjiKUxyDi5U+1JLI/B5z1v
Js8lzo2BXDz5VACxMQal2+Y/Cycurvs8qx3l8cSmGHTYu2tWOnFlDHYFlG9Q
E5vr7Oq2ZTFxTQxqeo8LzyMWxWL3kdav19H+sXi7fLdLIe0fixvNemEH7R+L
ricXttxL+8fitJ248BDtH4tdX0sbnaD9Y5Hx3H/AGdo/FoefNexzkfaPxbny
sW+u0P6xKFhyRFtF+8eipPOHN7dp/1hM8IlyekD7x+LeIyOqaf9YjHB93usl
7R+LniO2PX5N+8fi0B/OaR9o/zjs72769zPtH4dDTZYP+0H7x2GV7z8LG8wk
/eMQLTke1pgYcXhYMtvrJ2JxHLpcONa+JbEkDr0Hfjramlgah/sXmrq3I5bH
4R/bl8UdiHPjsH7rkh+diY1xqGh8f4ANcXEcmk82TexObIrD9qGNJ/YkrozD
7XRd/97E5jgUPW8n6ktcE4ew4ugD/YhF8bBZMd+7P7FVPLz6LnkwkNgmHuWN
T8x2of3j0fTp74ddaf94DHh7uslQ2j8er6qe/Dac9o9H96arw0fS/vGwvStT
jqL947Hk5M+6MbR/PN7P+ZY2lvaPh2fJEf9xtH88Jsyrch1P+8dj2O+Xv0+g
/eNRI++xfxLtH4+VHSb7TKH942FSHP08lfZPgL5dtcaT9k9Am3S3ptNo/wTk
3P0lfTrtn4CY51+ezKD9E7Co4eCxs2j/BMyZ45DnTfsnoN0X1zuzaf8EiD8e
6jiX9k/AnbjGk+fR/gmouBAdN5/2T0D7VVOWL6D9E/D16tMtPrR/Aqa/zN0v
of3rfr/rOYd8af8ErOphv9+P9k/A6I6btvjT/jK8OjRuRQDtL8OXB+LEhbS/
DPVm/5gRSPvL0Oz64j5BtL8MJ3oM/0wtlqF/T5wMpv1luPTgT0UI7S9D343d
Ri6i/WWoqgl+R50rQ+3O6xtDaX8ZRtutmxxG+8uwufHz19QmGf41PM8Np/1l
UCedd4ig/WVYa7PvOHVN3ecnXp4aSfsn4kZfj1vUVokYnT/ST0r7J+LN7X8e
Ujsn4uKLMf5RtH8ijNl5t6nFiYjz/TQtmvZPRNQP7WlqaSK8nwYPjqH9ExH9
x14jdW4i1mzSWcbS/okwZzcOpy5OxPoP7peoTYl4ssm/bxztn4jalAQ1tTkR
/trVd6lrEuHepHpQPO2fhCfRsWpqqyQcSpp1ndomCT913GyXQPsnYdpyWSQ1
kpCXaj5ALU5CgunNN2pJEm6vPzlKRvsn4XiFn4JanoRFox6dpM5NQopiriiR
9k+CNP7vodTFSbgXFxhHbap7n9lpB3VlErwXWTygNifhrdK5fRLtn4TGP3aM
pxYl48JhXRK1VTKeO1zdQm2TjKWT865TOycj9KC5QTLtnwzXNUf6UYuT0eq4
ize1JBmLdHPk1NJkFDUeuJlanoyIR+cuUOcmY3tS39fUxmQ0rPD9OYX2r8tL
iXWhNiWjx4fwWdSVyfjoPiuB2pyMF4OGrKSuScawEZ33UotSEP+75WVqqxS0
HdHoJbVNCoJvdbZMpf1TYP1omi01UlCYWzKUWpwCSdXI6dSSFFxPrh9GLU1B
a4t6Cmp5CspOjVpFnZuCv6vO7aQ2psDgtOEUdXEKajMvXqc2pcDRx+s5dWUK
0rq5fKc2p+DWl1SrNNo/BdHv+9lSi1Jh83zyQGqrVLRZencMtU0qbsmqp1E7
p6KdZbg/NVJxThEVTS1OhbH5Zzm1JBXeBU0XU0tT8UePzWuo5am4M/WvLdS5
qZhxcul+amOdv1efpC5OxfOgG5eoTamw9Ai6SV2ZitDzKx5Rm1NR0DC4hvVP
RYsa82fWPw2loQ0aptP+aeg0+koLaps0HO4htqZ2TsPSkvRu1EiDa6S/A7U4
DfqL3wZQS9Lwj4PnUGppGuwu+4yhlqfhzcc+E6lz05B/6oAXtTENyeMazqEu
ToM5q50vtanu8yNfBlFXpuHx4+wIanMaDh15G0tdk4YVe3smU4vScTWzZwbr
n46dF9+pWP90/OW4TM/6p8OrX4OlrH86pk1xz2P909FAtGAN65+ORlsnrmf9
02G/2aqQ9U/HO/edW1n/dGRe6rGL9U+Ht0y2h/VPR07s5gOsfzoinu45zPqn
w/3duuOsfzqWF4WcYv3TMbZV2zOsvxzN+284R20ph6Fe60vs+5DjWOzCy9TW
cnjGrr3Kvh85fB8cuk5tL0f7tcdusu9LjvVxW25Tu8rx75AUM/v+5Bi8+9cH
1B5yFK7+5xH7Puvy9oRWU3vX/fz2R8/Y9yvH2kETX1IHy1H0fs2/7PuWo8HS
W6+pZXIMLGr8jn3/ctS73O0DtUYOK6NDLdtDjsMFtp+p8+u+n5CmX9k+cvwR
e/8bdZEcF8Zt+8H2kuO8ZGE9OXGpHPdcWzWgNsnR2H2XBXWFHC8+jWxEXSlH
7MlTjamr5NjadGgTarMccUMKm1JXy3G3pGEz6pq69+uzm1PXymGy2NiCWpSB
9BX3WlJbZqDZvbatqK0y0HcYWlNbZ6C6VtKG2iYDOYGyn6ntM/D0sqottXMG
orP07ahdM+B0VtueGhk4dD/NmtojA9K2YR2oxRmYt8GzI7V3Bs5WOHWilmRg
Q3mjztTBGZh29W9maQauOhq7UMsysLWJ/y/U8gy4rO3alVqTgbmd/2bOzcDo
gyob6vy6ny/o343amIFjza4zF2Wgi02CLXVxBmY0bd2d7V93/2EzsykDxmZD
7Nj+GVgRV85cmYE7syb3YPtnQFlVyWzOwO1O4p5s/wzUG3ueuSYDR+JG92L7
191f2scsykS7yB72bP9MrI9fwmyViRP1PzNbZ2KNk09vtn8mEjqcYLbPxPhb
XR3Y/pn4akhmds2Ey5SrzMjEOWeHPmz/TARNSWUWZ8L12EVm70zMXdmpL9s/
E41eBDIHZ+LWX7uYpZko8/3ALMvEji1ujmz/TFQeTWHWZMJYfIQ5NxOGZZ+Z
8zNxOcGlH9s/E4fCpcxFmfDLKmIuzsT3i3eYSzORO7ONE9u/zo7uzBWZ+CBJ
YK7MhOx7IXNVJo62vsZszsTVrfWc2f6ZuHOlL3NNXf7Kmcy1dZ9fL51ZpMDj
roXMlgroP59ntlLg/ZoaZmsFHlj93J/tr8BsiQuzvQIly2cxOyvweX8Cs6sC
oytXMkOBzdV7mT0USLO8wixWoJ7rK2ZvBV6nNRnA9lfgy8PuzMF1edLhzFIF
BjnMZJYp4NE+glmuQPuRWcwaBdI3r2bOVeDfmbuZ8xUomHaa2ahA2403mYsU
eDbhFXOxAkZxvYFsfwU6H2zDbFJgtbYHc4UCbmdcmCsViIgfx1ylgPOaWcxm
BaTDgpirFdg3N565RoFx35XMtQpY2i9jFinx7R8js6US1212MlspMerjIWZr
JYL9zzDbKDEg5C9meyU2/3SX2VmJrlOeMbsqsWbge2YoITn+g9lDicdvmwxi
+ysx/mobZm8l+vh3YZYoMWxjT+ZgJRzynJildfmjXJllSiRuBLNciTSTB7NG
CdnvYuZcJS4M9GbOVyLP4MNsVGLF9kDmIiVa5oYzFyvh6xbLXKrE/R1JzCYl
/n0uZ65QIuSDirlSiRl/6pmrlDiWsJTZrETS6zzmaiXeDV/LXKPE4QUbmGuV
WDBjM7MoC8dttzNbZtX9/7WY2SoLXh77mK2z8OeGg8w2WRhw4yizfRYevjjB
7JyF+3fKmV2zML74LDOy8IvfRWaPLLx5X8ntnwVR2FVu/yxIyq9z+2dhcoNb
3P5ZmNbzDrd/3c873eP2z4JP14fc/lkI/PiY2z8LFw885fbPQqrvC27/LIx4
/4rbPwtHYl5z+2ch4PZbbv8shA/8wO2fhUnxtdz+WYgp/Mztn4Wgsq/c/lno
c/k7t38Wzl0QDWb7Z6F5aX3m6rp+yyyYa7Iw1acRc20WQjtbMotUkJxvwmyp
gjrsJ2YrFaxEzZmtVUhStWC2USFGZMVsr4JzRCtmZxW6V7ZmdlUhuufPzFCh
dXRbZg8VPpa0YxarEPS0PbO3Cg/admCWqFDt2pE5WAUvr07MUhVK/Dozy1Rw
X9SFWa5CYsgvzBoVeki6Mueq0GyqDXO+Cj+5dGM2qrCjrS1zUV3fV5yLVSg7
3p25VAWdzo7ZpMLaKT2YK1TY36wnc6UK2jLOVSrEx/fi9ldhta09t78Kw85y
rlEhZVFvbn8VCho5cPursW8tZ0s1djv14fZXo9NRztZq/DO2L7e/GovOcbZX
I2+CI7e/GttOc3ZVo2hEP25/Nc6XcPZQI7a7E7e/Gj1zOXurkf6Js0SNXT7O
3P5qOJ7kLFWjoFt/bn81RGmc5WrkXuesUeOe4wBufzV2ZHDOV2PvFc5GNT7Z
DOT2V6N+OOdiNcL3cy5VI+MbZ1Nd/uhB3P5qWGdxrlRDU865So2mFoO5/dV1
/wXlXK3GxyTONWpM3cO5Vo3nTzmLNHj6iwu3vwYfPDlbaaBXcLbWIHAPZxsN
7t/jbK9BVYtfuf01GOzG2VWDuADO0MAxh7OHBoa9nMUa7L7J2VuDyz84SzRY
392V218DH3fO0rr7IM4yDW6rOcs1aLiZs0YDp3LOuRpk3OecrwF+cDZqcLfj
EG5/Dc4N5lysQdhUzqUaSIM5mzRIlnOu0GB/HudKDUbt5FylQasyzua67/cG
52oNrr/kXKNBXj03bn8N9v3MWaSFey/OllrMGsLZSotVEzhbaxEyl7ONFn+H
crbXQp/M2VmLAzrOrlpsWMUZWrQp4uyhxY59nMV1eac4e2uxr5KzRIsBtzkH
a+H2lLNUiwbvOcu0iBcN5fbXIuAnzhotPrflnKvFDBvO+VrIHTgbteg5iHOR
FpuHcy7WQuPOuVSLiVM5m7Sw8OZcoYWnhHOlFl7BnKu0aCLlbNZiXgLnai1k
aZxrtEjN4lyrRQc9Z5EO65ZyttThaT5nKx1uruNsrcPVAs42OpzdytlehyXF
nJ11sN7P2VWHnoc5Q4dGJs4eOjQt5yzW4eVZzt46ZF/iLNHh1RXOwTr0u85Z
qoPXLc4yHRzv8vvrMOEBv78OzZ7w++tw/xm/vw4rX/H7172/5vevy3/P76+D
Zy2/vw7FX/j9dfD9zu+vw9x6w7j9dRhgwblKh8ONOJt1mNKEc7UOe37iXKOD
RQvOtTr4WXEWZaOgNWfLbLz4mbNVNpq152ydDZcOnG2yMb0TZ/ts+HXh7JwN
h66cXbNRYcMZ2dhry9kjG9F2nMXZaN6Ts3c2qnpxlmQjpTfn4Gz068NZmo3V
fTnLsnHSkbM8GwOdOGuysdCZc242rvTnnJ8Nq4GcjdmwGMS5KBu2gzkXZ2OY
C+fSbIT9ytmUjVRXzhXZWD6E3z8bk9z4/bPRcii/fzau8q7OxsNh/P7ZKBvO
71/3fYzg99fDbyS/vx69wO+vh+sofn89fvC20WPfaH5/PVLG8Pvr0fU3fn89
7vGGHpfH8vvrEevO76+H9Th+fz3u8pbokefB76+H23h+fz3O8Jbp0X8Cv78e
Gbw1enznnVvXZyK/vx6PeBv1mDmJ31+Pi7yL9XCfzO+vx3Leprp+U/j99cjn
XVn3+/Cu0iN4Kr+/Hrt5V+txn3eNHmIxv78et3mLctDdk98/B/68rXKwhbd1
Dsp42+TgI2/7HIzx4vfPQShv1xwoeSMH+bw9cnCLtzgHfabx++cgjLckB4W8
g3Nwn7c0B4On8/vnIJi3PAfFvDU52M879z/Oz8GfvI05+It3UQ4+8S7OgcMM
fv8cpPI25eB33hU5aDGT3z8Ho3hX5WAGb3MOfHlX5+Ac75oc/OBdm4Mes/j9
DZjL29KAYN5WBhTxtjbgBW8bA3p68/sbkMnb2QAVb1cD0nnjPz/vYcDvvMX/
sbcBJ3lLDDjNO/g/71IDjvCWGbCRt9yATbw1Buh55xoQzjvfACNvowF3eRcZ
0GA2v3/d98O71IB2vE0GNOZd8R9XGmDHu8oAN97mut+Pd7UB03jX/Oe99j/v
osUYydtyMSbwtloMT97Wi///PjaL4czbfjH8eTsvxhzerouxljcW43+/h3nk
/wEtE1M2
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1000.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 460, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{"ba", "\[Rule]", "1.5`"}], ",", 
           RowBox[{"bn", "\[Rule]", "1"}], ",", 
           RowBox[{"z", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vs", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vh", "\[Rule]", "1"}], ",", 
           RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
           RowBox[{"u", "\[Rule]", "0.1`"}], ",", 
           RowBox[{"pa", "\[Rule]", "0"}], ",", 
           RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
     PlotRange -> {{0, 1000.}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"LsO", "LhO"}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.773388256573338*^9, 3.7733883134900503`*^9, 
  3.7733894213922367`*^9},ExpressionUUID->"72cfb055-0dee-4841-8764-\
e1c66d54be0f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw92nc4Ffz/P3CpNI22tpZRKS3anmlSiSjSsFKI7L3O4eBwnENbE02aSEN1
S0OJFCpJlCZtmkbj63d9zvN3/9P1uN69PM/zPK/7uu/rqmEOHsudFBUUFOrb
Kyj8v1//90+D4f9+rZX/qgCjun8VB//WyN0ZXX9ti8n+91RuNbwdnbhG0rVK
7t6oM93cWjGqUm51zM3PyFG3qpB7ENZ/m+DicvCh3BpwnzPnw4auD+QeDsv7
Ks9Nk8rkHglFTYs5+pNL5dZENy1l973vS+TWxi4bq9OLDxfLPRoNlUa5FVvu
yD0W6cVJn8aduS33OPQ9nBep1VQgtx5mhd4wPep8U+4JyH0YuOPG7+tyT0SC
f4VRdeY1uSehX+Bxnz3CfLknY9QmpZrPj/PkngKVQSll3lVX5NaHhZlHUk3H
y3IbwOFgvnLpily5p+JlsvNX+1sX5J6G7nsV7vWyPC/3dFwq2md/rTVH7hnQ
GJw2cPuls3LPhNXuOskPabbcs9Cp8qaB0CdL7tmIPjrr4HfnTLkN0dSxe6J+
5Wm5gbFrfd46/jj5PwuAG9le8zaPPCF/n4Pyee+WDrLNkL/PgcGgSD2Tfcfk
70aoNMXiq0VH5O9GGJ+Q8czn4iH5+1zMXOf/usVwr/x9Lj5PQyed9XIrzIOd
fq8nh8V8nwfJ6k0r3E/xfT5G90pTFZbzfT7UjML7P/vF9wV4LEx5KRy8T/6+
APOkxiouc+VWWAj9iriZiS58X4jnHZyuf07k+yL4tvgvFpzn+yJoXSxaO72G
78YYJBxwQa3Dfvm7MfQmvQ76NlpuBRNoLc0afs+c7ybYYrJvQUwg3xdjUvX1
iS0H+L4YdmWrz/67yfclgOKXXY7v+b4E7tfi69+rHJC/L8Vc2ciXKyfKLViK
bIOIUW6WfDfFPvuDZ1p9+W6KpWuaR7zfxvdlUJ1xuGlCFt+XYaTBc+Xau3w3
w7CH3iuU6+SGGeI6jU6t/Mffb4acA+ojHPql/M/5ZtjbecKjQl25FcxR8N9K
HZ25csMc53Vs9u+zkltgjjU9J16eton35ijJaW/WO5z3yzHWKerCrCTeL8em
7UmjC9J4vxw7pT27XMzm/XJoKn4ZOPwG7y2g2rrunvID3lsg5n4nW9FL3ltA
X3K2i6yR9xZ4vHR5n/4KqfJ7S/wMmXl6Rie5YYmGRVcKJ6jILbCELCum99/e
cudbYrZW+3aHBvJ+BXRq+hQMH877FShtLXKK0Ob9CqQN73Hl0jjer4Dd7oyg
ism8X4msb+66D6fzfiUmBnRceA68X4ncwRoDQhbwfiWqHI1faC7hvRWe9nTI
zzXnvRW6/Fdya7IV761QtWddY/Ia3lth0p3OY+vseW8N8+j1FhobeW+Nrk87
6s9347012s07s2OlF++tsbHeUXuFP+9XISl67e45Ibxfhc3u7+IGCXi/CqW7
xm99K+L9Khxb+XZOahzvbXD77XcNExnvbfCwWCnz9Vbe28D6aA8Xz128t4HO
73tXP+3l/Wocmzlm+NpU3q/G42EnmvIO8341TrgVHu2VwfvV2Fm9QLL6FO/X
YJd2pMKuLN6vwfv0c2tuneP9GoxfOvvru1zer8Fkl8eqinm8X4sLD8oVVK/z
fi1+31yi3OMW79fi6OPVwZ2LeL8WVVGz4n+U8H4dshwjQivLeL8OP2JHybIe
8X4ddAbfaxY84f06hO8p/7Wghve2OHJ6Q177F7y3RUH/c8ILr3lvi64pLT4O
9by3xfbJKQUdPvLeDlXblx458EVuDTsEm3eB3jf+PDuEiuZey/0pt50dTk7/
vHxGC3++HbTOyAaf+yN3qh0WbTZdpNUuTZ5nB33fbs1bOshda4dDqzZa/ugk
t4I9LqU8CjPvJreGPb6Mzth1VEVu2KOpRePG9x5y29ljnK6vxsw+cgvskbqi
5l6outyp9ngy7cjH8wOZb4+aX2N3vR/CfHsoHfr1vt9w5jvA0vZse8NRzHfA
kfZGv221me8AQ5Nrn4PHMN8BD3du/Z44jvkO2GztoJkygfkOsFYevy99MvMd
cP3zMveTBsx3wDjjkMzj05nviBMxd0MOzWK+Ixy/3Hm9E8x3xJ6RrgrRc5nv
CAub/q/cFzDfEb+W56WaGzPfETc0ri7RW8J8R/w807GlyzLmO+LboA6Xn5kz
fz2aKy+mnbZk/nqYpmZfDbJi/noMnNdbEzbMXw+ZSfKbdmuZvx76G7erXLVl
/nrcKvmdGeDA/PUYbr+xeowT89vu81VSn25kvhMOTX7UNdaV+U44HbZwzDh3
5juhR3SKapkH853w9OutAg9v5jthYsaq1V39mO+ERM30mtQA5jthQWnuqknB
zHeCvuay6muhzN+A6tpXXksimL8BeS2Zmg+EzN8A7aOnlVaKmL8B6no7Bz+K
Yf4GTCt75W8Wx/wNyHSvHFwoYf4GpMwLGTxTxvwNaEzcKziZxPyNmNqn3Lz/
NuZvxNj0yL2RO5i/EckpNRvrdzF/I1Rmvcg32cP8jejfeXVmxj7mb0TQ4HeG
HVOYvxHF3q2Ba9OYvxEjVR+tzz7EfGfMmCbt3uEo852hv1ctaHk6853xfc3w
s/uPM98ZdZPX3nhzkvnOeOExOXv0GeY7I6rhe6xbFvOdoaV5a8mJs8x3Rvvf
xzvXnWO+C/bmR94YepH5LnjYsWv0ikvMd0Hf4KeW4ivMd4Hkkuf0i3nMd0HF
kBGz3uQz3wU7w8euV73BfBfUNRw7r1/AfBfcjd46Y/Vt5rtiRUtxc+gd5rtC
d2O/pr3FzHfF93cDZ10sYb4rThs73S+7z3xXLN65/lx9GfNdEXrD88fvB8x3
xTDD2ztUKpjvivlRCfsGVzJ/Ezocvqs6uor5m7DiSciPSdXM34Q/HQIsZjxj
/ibsmywaj1rmb4KZhkWi0Uvmb8LOI2GBRq+ZvwmfZ4sbDN8yfxPGB778Pb2e
+W5Itq07OOk9893w+1tNnc5H5rvhfmJz6eDPzHeDjbmNo2oD891gIFA+/LeR
+W7QbVBO/vCN+W6YbD9vXsUP5rvBpCb2VN4v5rsjvNeBysPNzHfHz8wZReJW
5rvD8kKHWNc/zHeHSVlCL5N/zHfHicNWvlrtDsrz3ZE8/MkpxfZy57vj6CO/
m087yF3rjnbjoq5kK8mtsBm3ihfuie0st8ZmLLvdam/TVW5sRvumwn5justt
t7nt35fiq83Kcgs2I+CU2rpbqszfjKZ/u38m9WD+Znw7bCNd1Yv5m/G93zRN
jT7M90CzumrB677M90B1XYb7MXXme6AyvGiE8wDme+BP0agPmoOY74FPr9bf
fjWY+R54N2fUlQNDmd/2+7823bUaxnwPRN3b8EdlBPM9cfPYe7ObI+VW80RA
xI+iAE1+Hk+8O/tps4623HqecNAbjyc6/HyeGLK3m1HsGLnNPJEUWRQwSZef
1xOb4zJe14yT29MT5VuqJTF6/PyeiKqTeupOlDvJE4Yuz3aUT2IfT6hkvfnr
N0XuTE8Uz8g+3c+A/TzxMtE4/cJUuUs98cch/fOK6ezrCdOr10VfZ8jd0NZP
S+QuncX+Xlh76f4JTUP290L2CoFRHtjfCy0XnCdbGrG/F36lWYjq57K/F3r8
aj8lZD77e2FLzWTj7gvZ3ws7anbf2LuI/b3QUeH5UR0T9veC28f0H+cWs78X
XJR2ZGMp+3shIX5a7R1T9veC8PgoobkZ+3vhWfqLXY/N2d8LY79/1lxjwf5e
SJ5TqPfckv29cPfoiwt2K9nfG8Vn0/NqrdjfG68looW2q9jfGwP/PrKstmF/
b2za/6veag37e0NUOUupfC37e+O82q/TJrbs7407mZveXLNjf2+Ezn12wsCB
/b3xUizpcNKR/b2RlHC8cYgT+3tj8SU3v6QN7O8N369/tig4s783nh4QGXu4
sL835t4adqDalf29MVijccsiN/b3xgWtLlpn3dnfBzfHhdgO8mB/H3h7WswS
ebK/D5RG7L7+3ov9fVAUZ9q4zIf9ffBByav4rC/7++DfmOblff3Z3weFxVVx
AQHs74PWLh29Hweyvw8KNjko6wezvw9G1leu3RbC/j7AL2OnL6Hs74OStK2j
TMLZ3wc5SZLUQxHs74MNA7tUtgrY3we9rZ6WLI9kfx8cHXkvKj2K/X2RNTuj
9beI/X2hukjPwCyG/X0x7MnwqQdj2d8XS6QzFb6J2d8Xk9WmbDGKZ39f/Dc6
/2OShP198fa+tPezBPb3RaG2SdfRMvb3RaeD++/7JrK/Lxp+jt2Ql8T+vqiY
tfu+0lb298WHbxHKptvY3xeXO4cM276d/X0R9k5D+ckO9vfFwIQO5YN2sb8v
5gaf87JNZn8/bKm++il1N/v7oVx0cuGLPezvhy9NCkKNfezvh52hhnvX7Wd/
P0waWLdr7wH298PKsz6Bj1PY3w/F/9bO7pnG/n74kzLww+KD7O+HfSOGCkSH
2L/t5/es/Hv5MPv7YeTPbOevR9jfD56O/a9qHWN/Pxgqerdfk87+fniRrGGQ
mMH+fpjTI2b1tePs74eUKAXvryfY3x8Gsz+EDD/F/v44ee9AsPlp9vfHhC5e
HhFn2N8fF1XPrT6Zyf7+eLfmMiqz2N8fNbfKhrY/y/5tls5tGZvD/v4YtWhV
2Ypz7N9mrDoadp79/XGmNSb48AX298f0fSOWFV1kf3/olriP+pLL/v5oLU77
2/My+/tDyb356ZQr7O+Pq1on86z+Y39//O375VhgHvsHYEP7H8nJV9k/AGOc
P2+9kM/+Afgd0mXXo2vsH4Bxk72Pfr3O/gFoXbL8uspN9g+AxrKyDzoF7B+A
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
ooqFDz01EXZ6l2KP0kjE/z5HreH/ASRJBoI=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw11ndYzY3/BvBTVmQkoYSysyurJ9Qto6xkNCg0pGjv0z6nU6dz6jSsJCsJ
2VlJVnb2sTPiGI9SRgjxoF+/63tu/7he3r0/9+f+vF0ufTyD5nlrCgSCmhYC
wf///r9f9dYXzk/u/Wvlamv1HyB+73Sdn7m0FvL7eC55eYXWQTuTR08u/6D1
4Ohv+LvcZI3a+vh1pbCxdhHdE2LLvTe9MmljeKSFjbe/QPeFweiGC8qfdH90
07Ao7Wq+Vu2BOGVZsWSmP22Cq6WVloVF9BCMiKmLdq6mh2FE9XHFNpN1ao/A
1pDE+ov+tCnMPHJGah+lzVCjKu17+S9tDsMpVaK5s3PUHoVOAc+Vevn0aMyy
H1yZ8oMeg6vPM/cNXbBe7bHYWGO4taCEHocJoo6ztxnlqm2Bbr5Gtk1Z9D+Y
Pvbrt9NaG9S2RMvytmV66fR47HsS+1Csn6f2BDQFuxx8dZieiDhbhx3r3Taq
bYWXfgFDT+pvUtsaPW/lrYypowHXEY+C9z3Z/D+LgGUeXlNrPm5RzydBIjA5
UNUjXz2fhBE1tz4Hv1ZbYAPDLL0dNe+2qec28BjjN7aTcLt6PhmaQt31t2v2
queT4ayz3nTptv3q+RTolazTM808qJ5PwWnveYnDnhWr51NhsO6XkajrYfV8
KqaOPNj1e/QR9XwaHKtTPhjpHlPPp6F9XGVDaU2Jem6L0zeaTk3TPqGe26Kv
lSqlOu2kem4H78HZto7xZ9RzO0xtdbekQ1O5ej4dl3w8nnzpfkE9nw57x4ut
bmy5pJ7PQIdTJ5+M21+hns/Atoevz99bekM9nwnPsmH2k1Yo1fOZqLs2ed+k
9vfU81nQ/+fFjnvdH6rns3CyRtirUfhYPZ+NzicGDDjZpko9nw2ry96eOrYq
9dweddq/Hpq/f6me22P53n7nhnm+Vs/nwCfKUPBfwRv1fA6cvCK9PxX/q547
wOnB50eJq9/+z3DAj1CBfMicavXPO2DwySB/1Qe1yx2gdXOVhzC8Rr0/FwVr
f2wvrFYbc+GQd2iIwcx36v25mDj9Q8mpbWqXz0XX+VcePvigtmAegoXzzo40
q1Xvz4Myvp/muAC1RfPQuk2Df6ftapfPw5bNl7MK76ktmA+Dfk2jS5q4Px9/
EgruvBxUp96fj3HjFx7dPUvt8vmYWFUojQlUW7AAIb3uKQ5mqI0FeHEkvGHd
Hu4vgKWuvn/QJe4vQOyj0yPDn3PfERKJ257737jviIkD91ws036v3nfEQufA
rzOM1S53BDwsu+wYpbbACZ/e9O3571S14YRzKTuP9XPmvhOsXnQ/FOnDfSeE
iOODPkdy3xkdpNfH7kjhvjPG9k6L3raG+854muPapSGf+84oG+Mct3s/911g
E3Sj4cYJ7rug7uPRPb6XuO+CPg3PH6coue8C15a7q4c95f5CrOmrEev9L/cX
4pPMctXYT9xfiM/7R2XvbOT+Qti/MXM6qfFBvb8IUy2v2Ma0UxuL0C+zrVuN
rtqiRZCucxrUzlDt8kVYMuPRm9d9ue+K6ZIPCdFDuO+K5C7FObfMuO+Kgpi1
aW8tuO+K6wfd4y5ac98NN+/EOvlN474bchYeUlbN4r4b/j0ZFd57PvfdsMn4
av7IhdxfjINv8zK6LOX+YtgImuxvLOP+Yry40fjIdSX3F+Pssw5/LgRxfwlc
mzZEto7g/hKs1vvwqn8M95cgydGiwjiR+0vwQN8h5z8J95ciJmlaUYmM+0vR
Xfv11PkZ3F+KiEW/Cu+u4v5SHE3bXTsmh/vuOL8ualhCntrG7nizZGnIvi18
njtayC8ePlegtrs7LnV0rDqzk893xyfXx3cK96id747vMQ3e4QeY5w7H8gfL
RhxWW+WOU+Oqsu4dY74HWv4ctXXZCeZ7YJX/QptXp5jvgSf+O41nlzPfA8ZG
Vx7vuMB8D0inDGv94TLzPZBUEj6u3zXme+DH/tuNdjeZ74ELvi63lyiZ74kr
h/wsve8x3xPOl34ccXvIfE/cEVwpnvqY+Z7QPXcp3/gZ8z2RenPypw/Pme+J
1dvNWhx4yXxPyD8ttPZ4w3xPRMau19SqZr4XjO62KSp4x3wvTLtvmWr2nvle
aBW1tOHoR+Z7wfpZAIZ/Zr4XTjbYn8j7ynwviB9p7PnzjfleyGg4s8ipkfle
eGxn0HnHL+YvQ+ejvXRqfzN/GQ5mB+cOaGL+MqzdvaLGWeOjOn8Z3PeOmCBu
obZoGbQG3Li5rZXa+cvQZdTsByfaqF2+DE9r78iutlVbtQwtcgp73tFWW+CN
lHuzLyg7qG3sjdkHd+2v6KQ2vKFx7lO7E52Z740vbpVaBV2Y742Ptbn3JF2Z
7439K/+sW9Kd+d7oNDYi2tyA+d4o0+qzs6kH85fD3VVlc7kn85cjR39JhLQ3
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
         
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1000.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 460, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{"ba", "\[Rule]", "3"}], ",", 
           RowBox[{"bn", "\[Rule]", "1"}], ",", 
           RowBox[{"z", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vs", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vh", "\[Rule]", "1"}], ",", 
           RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
           RowBox[{"u", "\[Rule]", "0.1`"}], ",", 
           RowBox[{"pa", "\[Rule]", "0"}], ",", 
           RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
     PlotRange -> {{0, 1000.}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"LsO", "LhO"}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.773388256573338*^9, 3.7733883134900503`*^9, 
  3.7733894297955713`*^9},ExpressionUUID->"92c8d34e-aac0-4aa5-8810-\
3e899ae19c4e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
+ftjW603HMrCXu+WnYalbDQ8tfuI2Z+Nr5wJ9WZ/NpQnFlw0+7NxJDj/utmf
DaeWfsvbRn82Lqx55DbDWjb23d72bsOhbGRIbboallzo9J69t2GrC+ktNvYz
DBe0lIwnDcsu3BaZPciw6sL8g62Hm/0uVNW1cZj9LrTpuWys2e/CF19smGj2
56BV/1EpZn8Oln68Kt3sz0Gz4gXZZv9NJ3fPM/tzINs808z+HCQ2mV9o9ueg
MifJbfbn4MCScKnZn4tFPYaVm/25WP+ie4bZn4vZmrvC7M/Fx9kJs8z+XLQ+
/5tq9ueidvjCOWZ/LhLKfp5r9ufiaPOhz5v9eXhkyvT5Zn8e1m5bscDszwPa
vOo1+/Pw2PCFC83+PFy5N/MFsz8PI7v8Y5HZn4cZWth0KA+vj1622OzPv/n/
F9sSsz8f59pqppGPmNzBL5r9+VjWfL9pNR89DvVZavbnY3XRctNaPjqdvGo6
lI8VarzP7J+K8AOvmLZOxZ2pX5vGVAza2P0ls38q9pamm1an4tCgNab9U1Fc
EjStTUVJnvSy2T8Vb1b0Ni1Nwyf/TTJtnYaeD083jWn4KmONaXka1gf3mlan
QQrUm/ZPw7eP/WRam4ZIZetlZv80nPyzi2mpAItWPGraWoDzs+JNowAzv5po
Wi6A/UyuabUASQvKTfsLUNN0gWmtAJ1dy4T+AvQ7vlboVxAasMm0RUH8l9uE
71HQbude0zYFuacOCt+n4KH446YdCu7o9k/hexW8odSbVhTk9z8nfL+CZovP
m/YpsBWEhT0Kvrp82XRAwZg2V4R9N/vqr5kOKuiY1CDsVXBiwW+mIwr+8Pwh
7C9Epz5Nlpv7C3H3pqamrYVQrzQ3bSvE7FYtTKMQ1260NO0oROq+1qblQvw9
uY1ppRDnz95mWi3Ejictpn2F+HXW/5n2F6LlpramA4X48712prVCnNrR3nSw
EKNW32E6dHNPwZ2mI4XY/eBdpqUiLP5GsKUIX3pjhP1F+Pe9dwv7i7Bms2AU
oVOvDsL+IgxZJ1guwvet7hH2F+HzqYLVInxQK9hXhLiOHYX9RWiRIzhQhJfe
FawVQY4IDhbh8gOdhP1F2JAmOHLze5YLlorR9aBgSzFWfi/YWow17TsL+4tR
YheMYmRNEOwoxttlguVizFwmWClGm7cFq8VYdEiwrxj3nhHsL8a17wUHitFH
ulfYX4zLFsHBYoy2Cg7d/N6+giPFcD8hWHIjY5hgixtTEgVb3SiaLNjmxq5M
wXDjsWmCHW60KhUsu9G/QrDiRt1cwaobFxcK9rkxY6lgvxuvLBcccMPxirjf
jddfE/e78VqVuN+NwRvE/W6srRb3l2DHW+L+EnjfEfeXoNtWcX8JFm4X95dg
705xfwkO7hb3l+C198T9JUjcK+4vwfn3xf0lSNov7i/BhgPi/hKc1cT9Jfjt
A3F/CW45KO4vwXXRkRKcPiTuL4X/sLi/FJM/EveXouURcX8pqkWjFI/XivtL
sV+0XIr+R8X9pdgsWi1F22Pi/lIUi/aX4pjoQCk6HBf3lyJTdLAUm0SHSnFR
dKQUXU6I+8vgFG0pw0LR1jLsEG0rw5eiUYZmJ8X9ZeghWi5DnGilDFmi1TLM
Ee0rwxrR/jJsFx0oQ61orQxfiA6W4ZLoUBl+Ex0pQ8uPxf0e3CXa4kFX0VYP
/iHa5kF/0fBgkGiHByNFyx6ME614MEW06kGmaJ8HeaL9HiiiAx64RWselIsO
elAhOuTBHNERD55vtL8c3kb7y/FCo/3lWNJoPxnl8DXaX46XG+0vx4pG+8ux
qtH+crzaaH851jTaX451jfaXo6rR/nK80Wh/OTY22l+O6kb7y7G50f7p2NJo
P9lKtk3HO432kx1kmayQVbKP7CcHyBo5SA6RI2RpRmNbyFayjQyygyyTFbJK
9pH95ABZIwfJIXKELD1H+8lWso0MsoMskxWySvaR/eQAWSMHySFyhCxV0H6y
lWwjg+wgy2SFrJJ9ZD85QNbIQXKIHCFLM2k/2Uq2kUF2kGWyQlbJPrKfHCBr
5CA5RI6QpVm0n2wl28ggO8gyWSGrZB/ZTw6QNXKQHCJHyJLa2C3IFnIM2UqO
JdvIdjLIcWQH2UmWyS6yQvaQVbKX7CNXkv3kanKAXEPWyLXkILmeHCKHyRFy
A1maTe9PtpBjyFZyLNlGtpNBjiM7yE6yTHaRFbKHrJK9ZB+5kuwnV5MD5Bqy
Rq4lB8n15BA5TI6QG8jSHHp/soUcQ7aSY8k2sp0MchzZQXaSZbKLrJA9ZJXs
JfvIlWQ/uZocINeQNXItOUiuJ4fIYXKE3ECW5tL7ky3kGLKVHEu2ke1kkOPI
DrKTLJNdZIXsIatkL9lHriT7ydXkALmGrJFryUFyPTlEDpMj5AayNI/en2wh
x5Ct5FiyjWwngxxHdpCdZJnsIitkD1kle8k+ciXZT64mB8g1ZI1cSw6S68kh
cpgcITeQpefp/ckWcgzZSo4l28h2MshxZAfZSZbJLrJC9pBVspfsI1eS/eRq
coBcQ9bIteQguZ4cIofJEXIDWZpP70+2kGPIVnIs2Ua2k0GOIzvITrJMdpEV
soeskr1kH7mS7CdXkwPkGrJGriUHyfXkEDlMjpAbyNICen+yhRxDtpJjyTay
nQxyHNlBdpJlsouskD1klewl+8iVZD+5mhwg15A1ci05SK4nh8hhcoTcQJa8
9P5kCzmGbCXHkm1kOxnkOLKD7CTLZBdZIXvIKtlL9pEryX5yNTlAriFr5Fpy
kFxPDpHD5Ai5gSwtpPcnW8gxZCs5lmwj28kgx5EdZCdZJrvICtlDVsleso9c
SfaTq8kBcg1ZI9eSg+R6cogcJkfIDWTpBXp/soUcQ7aSY8k2sp0MchzZQXaS
ZbKLrJA9ZJXsJfvIlWQ/uZocINeQNXItOUiuJ4fIYXKE3ECWFtH7ky3kGLKV
HEu2ke1kkOPIDrKTLJNdZIXsIatkL9lHriT7ydXkALmGrJFryUFyPTlEDpMj
5AaytJjen2whx5Ct5FiyjWwngxxHdpCdZJnsIitkD1kle8k+ciXZT64mB8g1
ZI1cSw6S68khcpgcITeQpSX0/mQLOYZsJceSbWQ7GeQ4soPsJMtkF1khe8gq
2Uv2kSvJfnI1OUCuIWvkWnKQXE8OkcPkCLmBLL1I70+2kGPIVnIs2Ua2k0GO
IzvITrJMdpEVsoeskr1kH7mS7CdXkwPkGrJGriUHyfXkEDlMjpAbyNJSen+y
hRxDtpJjyTaynYyl+Os7Qs/8D6m7Mj4=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxdmHlY1PXaxsc095OjuZDrZEqoqbiTpNy44j4qKu7Dvqgw7MPqDxAYRGQ0
U7LMsTI5ajWpKeWxpnotsqOOlUods1Gz0DdPY6mhx/T1vc5v+f5u//H6cPNw
fx4vL/jyPB2VMi/2MYPB0NjcYPj/v//7xxfy2acTe99L2hwifwCdXw3OPbhZ
4dboOvBcSPBRhY1ofyBJev0nhTujy4stzt1/4kWZ/fD1syvWWcYq3BM7v/18
089xCpsw9qukf+3donBfZBw8OeCfnyncD2veuj199S2F/dHt7yfHuPy3yByA
ds/+Ms29ROGBmNJyclm9Q+Hn8MaF8mZ36xUegrYVFyPLmr8kcyAKO+0r2QuF
h2HvcN+U3ZLCw9E5OqXq2GcKj0BVQYuMCW23yjwSm/cVnN0QrvAoDDbOGtjs
DYVH40fPth873lF4DFwrw6ZPmL1N5iDM+mJ14sD9Cj8P8363O89YI/NYeM58
d6hVvsLBePfOlRb1vyn8AqKigmZfX/2yzOPQ5avpbb23FB6Pm+OvRGRWbJc5
BDFTjLm/P/eKzMD6SRdPzL4sswSE/Xz130VvvyrnofipNmp++y075DwUm8wd
dt/Y8ZqcT0DBlO8eVp3fKecTkDTf263tPqecT8TNwY7p7l275Hwihv+j/Idr
rd6Q80lYuuhmQMfEt+R8EswvdDoedmOPnE/GqU6/T2i1++9yPhm3rm24ULZ9
n5xPQdmpgdcPf/+2nE/Bf9r81sEY7JLzqSh563Cl8ZP35HwqxgWNCg+vOijn
YTga6G+de+B9OQ/D9ouLGt8Nq5PzaQjoMix2d+pROZ+GvhPvnuyz5GM5n46h
oZ2eXNrnUzmfjsELMo+cG3NczmegS4chiVMHfCnnM/DlgfIfVg4+Jecz8Ufq
G+daBn8t5zPR954nq1fLc3I+C08sjzr0hvl7OZ+F/Q/7n3lw7KKcz8b/9ro3
4/iaS3I+G0OmL9m09bkrcj4H79jGJORv+knO5+Dlow83t95zVc7N+Mb3wVD/
wp//yzDjzJDUftH+v8ifb8ZTs8p3fL1PZrcZrxwuypvcrVGenwvXCMeiDiky
Yy4WHQqfduyIzNJcuPP2nX/tlszuucg72/Wt/gHX5Pl5GPB8jx/8w2XGPKSs
6+pplSuzNA934myHLmyX2T0PMd/da1F4RJmfj3/2G/vKNo8yPx9fnZwjHfxZ
mZ+PnSEd6kPvKfPz0evqkCWvtbsuz4djyLlFE7v0kBnhsG2r//NqgMxSOGav
anlm8iiZ3eGYGWq5FwllfgGcPw65aZmuzC9AXducg9HzlfkFODAu1VW2VJlf
gMMfDqi4HKXML0TxKyP3b0hU5hdiZh98uy1FmV+Iju+cTumcqcwvRMP+z+4Y
c5X5Rfi42dxh2wuV+UUofyk4/WixMr8I7wRWniwsU+YXwf9cbtCNCmU+Ao9d
a3nkiSplPgKdB43JvF6tzEeg/GGby2WblfkIdNv14fFrW5T5xVgSfzfcb5sy
vxiRhzaFdntZmV+MCf5X6q9vV+YX45U/i9xbX1Xml+CboZN29X5NmV+CZ/be
dpTuVOaXIL34StIppzK/BHMOx3/xn13K/FLY47Y9ZnxDmV+Kwd7ACX97U5lf
ijMjLufeVti9FKcK/so4sVuZX4a9d/Z7qt5S5pchYMHhNqF7lPll+ODq97lX
FXYvw6RrP1rya5X55fh04rQfWv5dmV8O/1Gnm0oVlpaj9MjW3fcUdi/H7YEj
Pondq8yvQFK/7K71CmMFDhQ9tbLvPmV+BTZOHTE5U2H3ClwK2x7zicKGlRj/
dM+ZrfYr8ysxa/erhVMVllbi3Ze6ZxQr7F6JzsYd2+sUNljQoqndousKmyzY
E377cb+3la9nwdmk0PuhClss6Dv4fHmCwpIFmWnDfZUKOy14adyNrP0Kuy14
gHERJxT2WnB7f9xXVxU2ROLnsf2bP1TYFIm989sP6fqO0h+J3d1+zBqksCUS
nz7wtghRWIpE8qE+980KOyORe/xwQaTC7khU7/lbrVVhbySe3mrcVqiwIQrL
34+JqVTYFIX/XNr27Da1PwrvVc68s0vtj8Ks3yJ/2qf2R6H/Q78W76v9UZiA
0XHH1P4ohF80dT+u9kcheNjDwf9U+6Nx5rrnna/V/mh071Ne26D2R+P6/O7+
F9X+aDz26WvDrqj90bh0Y+G3v6j90eh/9H+6/qr2R+Or7h8YfGp/NCpSo17+
Q+2PQeiZxb/cUftj0KX3u767an8MZoy+9eF9tT8GvwROnfFQ7Y9B9y+WvtXs
XaU/BmPulniaK+yOQfDDIycfV9gbg7lbduxqpbAhFrP2bpzTRmFTLII37fy+
rcKIRcjONye3V9gSi5SoMS/+TWEpFgfijh5/Qu2PxeiaqB87qP2xuDN92GWj
2h+LCzeaeTqq/XHYk2rf20ntj4M9YUH6k2p/HDpcbRjUWe2Pw5ResWdVluLg
fz4wtYvaH4fi1xcbuqr9cTj/09USlb1xWP7h5/dVNsSjv+u7Vd3U/njYl1w/
ozLiMfjEwaF+an88Jl+5VKqyFI/NNZ3OquyMxx/tz/d6Su2PR8WOQxaVvfHo
fq7/ayobEvDd3FfOqWxKwHsV+W27q/0JaNoUMFZlSwJu1t+JVVlKQF7WmI0q
OxNwZOXIgyq7E9A4a9hZlb0J8KxffUtlQyLuzOvTsYfan4iZ4wsHqYxEfOH8
YKLKlkT8fvmvxSpLjz7/m/RklZ2J+NOHIpXdiXC4yjer7E3E/KPxr6tsSIJh
wAOX1p+E2PdjP9L6k9Dv5uETWn8Sria3Pqf1J6Hm12Sv1p+EdTl/XdP6kzDy
5eO/a/1JeDH6/D2tfxViXg99rKfavwrxv3ZsozJWoedH4R1UtqzCRUeXLipL
q3DstxXdVXauwpX1Y/uo7F6F8GnvPaOydxXmLP7qWZUNq9E5xDFI618N3+WW
Q7X+1di3Y9RwrX810ib1HaX1r8bTI74eo/WvRvbC6WO1/tX4fmT1C1r/aly8
8+Z4rX8NNiVXQ+tfgy97z5ug9a9Bcahvota/BvtPrp6s9a9Bbf6JKVr/Ggw/
3S5M61+D4E4jpmn9a3AqasJ0rT8ZAQeCZ2j9yfD/0jRT60/G3hl/aGxJxsqj
h2Zp/cm4kBs3W+tPxken28zR+pORe3Wnxt5ktD09wKz1p8C/olZjUwq63e85
V+tPwei/yjW2pGCH+brGUgpK906ap/WnIMe1TWN3Cnbfu6KxNwXnOw+cr/Vb
UbY2SWOjFcdcuzU2WfFb5wsaB1rR0OGJcM3PipZ/BWtstuL1wDiNLVa0b9qg
sdWKadtdGktWHIo4o7HDitCU3zR2WtGpS7sFKrus+D6/n8ZuK54+G6yxx4q6
sLkae624+SBGY9+j+R7ZGhtSccRdrrExFS3bb9PYlIrjT+3WOPDR5zc/oDFS
UXrpmMbmVBi+rNfYkop2p77W2JqKZs0vaCyl4l+2nzR2pOKJkF81dqbidPQf
wv6pmHzrrrB/KpLvPxT2T8WC8scXavunYsjOthr7UjF+VgeNDWnov/1JjY1p
OFHVTWNTGpKG9tA4MA2vl/bWGGko3/q0xuY0nI7vp7ElDWUP/DW2pqFk5QCN
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
2CiXyMdOPg7yqSEfJ/nUko+L+urIx015Pfl4yKeBfLzk00g+PvJpoj7Derr/
rKef/+vp/rOe7j/r6f6znu4/6+n+s57uP9QXRj5myiPIx0I+CeRjJR8b+Ujk
Y6c+B/nUUO4kn1rycZFPHfm4yaeefDzU10A+XsobycdHPk3kY6ik+08l3X8q
6f5TSe+/Srr/UB5YSfefSrr/VNL9h3zM5BNBPhbqSyAfK+U28pHIx04+DvKp
IR8n+dRSn4t86ih3k089+XjIp4F8vOTTSD4+6msiH8MG+vm/ge4/G+j+s4Hu
Pxvo/rOB7j8b6P5DfdhA9x/KzeQTQT4W8kkgHyv52MhHoj47+TgoryEfJ/nU
ko+LfOrIx00+9dTnIZ8Gyr3k00g+PvJpIh9DFd1/quj+U0Xvvyq6/1AeUEX3
nyq6/1TR/aeK7j/kYyafCOqzkE8C5VbysZGPRD528nGQTw35OKmvlnxclNeR
j5t86snHQz4N5OMln0bq85FPE+WGjXT/2Uj3n410/9lI95+NdP/ZSPefjfT+
20j3H8rDyMdMPhHkYyGfBPKxko+N+iTysVPuIJ8a8nGSTy35uMinjnzc1FdP
Ph7KG8jHSz6N5OMjnybyMVTT/aea3n/VdP+h3FRN959quv9U0/2nmu4/1fiv
hzfk/wCr2Acv
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1000.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 460, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{"ba", "\[Rule]", "5"}], ",", 
           RowBox[{"bn", "\[Rule]", "1"}], ",", 
           RowBox[{"z", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vs", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vh", "\[Rule]", "1"}], ",", 
           RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
           RowBox[{"u", "\[Rule]", "0.1`"}], ",", 
           RowBox[{"pa", "\[Rule]", "0"}], ",", 
           RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
     PlotRange -> {{0, 1000.}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"LsO", "LhO"}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.773388256573338*^9, 3.7733883134900503`*^9, 
  3.773389438317985*^9},ExpressionUUID->"13aa3c7a-e79f-4708-ae9b-\
228d26665c12"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
+N/zUE7/P+lpJGU=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
YwP+9zmqp/0fmsqxRw==
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1000.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 460, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{"ba", "\[Rule]", "1.5`"}], ",", 
           RowBox[{"bn", "\[Rule]", "1"}], ",", 
           RowBox[{"z", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vs", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vh", "\[Rule]", "1"}], ",", 
           RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
           RowBox[{"u", "\[Rule]", "0.2`"}], ",", 
           RowBox[{"pa", "\[Rule]", "0"}], ",", 
           RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
     PlotRange -> {{0, 1000.}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"LsO", "LhO"}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.773388256573338*^9, 3.7733883134900503`*^9, 
  3.773389446915258*^9},ExpressionUUID->"03436f9a-04a0-4f39-a430-\
ad7dc9ff224f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
kbEc//sc/oH/BTt5vhA=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxd13l0zHf/BfBRFLWNpUQpYymxZp7WEm1xa4197GPNiCQmkshkn+zfUITQ
TCmCktFaUuvY2kExtTWt0qk+NJR2bBWPbSzVlOLnd/pdPq5/nJd3bm7ufM7h
aB4WNzLiFZ1OV1ZRp/v/3//95e915HCfpo9nLO4l/wH6XK4e1GyL4qqo8eGp
w83uKtajwaCaNYI7L5FdH+/Xuj9wV4biAPzyzUf1bx1T3AQ3Ii8OHFLvE9kG
DKhSrcPQcMUtMCF/bhf7XsWt0GZOnwpR9ZbKbo2GF9xzvQmKA/HsYva1tFLF
7dBq8+evj+i3THYHhKNVtZh9ijuhpfFxq4bdl8s24s8vRsz747Di/+CfE6bM
U+MLZb+NgzcONh6gWyH7HdR+supR7l7FnZFrTI0+OH+l7C64EH2m3pmUVbK7
InFQs+0d538quxv+qrJp2PKTq2UHI+PBUnef8UWyu6NCS8+vFTY5Zb+LkU/X
3Pyh5mey38Pw0/v/PFu4Tvb7OGX+abQjf73sHhhVftl3cckG2T0R+VafvYt3
b5TdC5FzJoc/8xfLBta8ktykytBN/1oCOrTHqkEnN8v3D9Doy/92GJC6Vb5/
gGJvhdEFI7bL9954J6diSuWdLvneG9/8atrf6sIO+d4Hj8ZUqPNnh13yvQ9C
9jVNKdi8W773hauxO6bY8qV874vfl0dH/znWLd/7YeD94LYbV+2T7/3Qsfae
VY96HpDv/bEme0m1ye088r0/Ol64Mizx8TfyfQAqVsNx35tH5fsAtI+pvWvj
uuPyPQRD3/lrXlHRd/I9BK/dCg0wND0p3wdCn/+k7PYnXvk+EHFrN5iTfKfl
+yC81mdE8K7pZ+T7IOxyBMxt2qBUvg/GhtV1/1l86rx8H4x2uQ3LUuMvyvch
uPOZs9GEq7/L9yHY9FP6npTql+T7UBzuH7rtSIXL8n0oatU+1cp4VrZuGGpe
KWj86sIr8n0Y5r/4sCa2uSrfhyNoZPdqH2yRLQ1HrH5b6uSm1+S7CRMuuUO8
kmyY8OXDTqa3z8qWTDDuqzRqveGPf+0xoX9HX7XrU2XrRiAoftvoaatkYwQy
3++l63tKtjQCO0IX/ZD1RMmPwJldATfPt7wu50cit8JX5oohsjESjxY+Sptt
lS2NxKJzi8b8NEe2ZyQcd1a6TU4lPwoPSvvmjnUr+VF4N3Vgr/anlPwolO+M
GV7zspIfhdphkR+9/VDJj8aRzgl7v6tUJudH46GreNGTerKl0cjyJe262Vy2
ZzR+658v7e0kWzcGjS7PKZTeVfJjsOH7hQnj+yn5MTAfb/zd+OFKfgwOnvjf
X5+YlfxY5FwOGtxkqpIfi36DTvV+blXyYzHvydwTg21Kfiz+WXAurlaqkh+H
oe8/zB2ZpeTHoWmN071azFby41CjXcL9uXlKfhy+rn6z6vxFSt6MV8//HWRc
rOTN6PXLksjZy5S8Get73Kg9f6WSN+P8o64VB6xR8uPxtHjPisNrlfx4zBxc
tk+3XsmPR0rIrOuVi5X8eCTsr9/n7CYlPwHuIZs/Td6q5CfgYb+MlOvblfwE
LPvwcI2gnUp+AuYduTtx+G4lPxHrg9q1Hvylkp+I0B6Dy1u5lfxEnOwwsdPv
e5X8RKRJa/7K2K/kJ6HBaUx4+rWSn4QRFzZ2jTio5CfhXmf7oD2HlPwk/FJl
9Dt3PUp+Mpo3nxhf/7CSn4wzexKiWh9R8pPRecWE6a2PKvnJyLr6SdHrx5T8
FLw6p9V//lSMKai4vnWb48eV/BSsSxyUPv9bJT8Fc+Pa1UWJkg/FCd2C4/9T
jFD8ejXNsuA7JR+KKpsjVjX7XsmH4nb/Gq03K9ZZYJ8f8XnHE7INFvRtmbJ5
o2JYkL+p3g+NfpBtsaDL4xXzP1QsWZDdbElomWKnBcV3Rn7T76TSZ8H8HvPe
WK3YZ0H3zQd+vKNYNxVdSn7v+d4ppX8q9kzZcGiWYkzFswWV1h1TbJmKN/vm
B1f6UemfiqnXjx3tqdg5FWuHOvKTFXumouq1yBPFin1TcQ87DpYq1oVh5bwq
n1b2Kv1h2PBm4rIgxQhDo+ubLo5VbAnD9LjBazIUS2Fo1qf6K2sUO8OQ6LkZ
dFCxJwxxayKHXFDsC8P5iMK0csW6aRhS1/pL3Z+U/mnQ1doyu71iTIP5qyEr
eyu2TMNbq8K7mBVL09B+4ZTYGMXOaWh6oM74HMWeaVj6/NeaHyv2TYMtZF/R
WsW6cAxbHtp8h9ofjgeTBq07pPaHIze9NPik2h+OyffG3zmn9r+4T2jx8zW1
Pxwbuq946Ff7w3Gq18DQJ2p/OCIK7jStfFrpj8DHdT/sWUuxIQLbHgwvaaAY
EWje/+6xpootEVh124LWiqUIWLy10VGxMwK9LBd+eEexJwLL5rx1p7tiXwQW
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
ZBTg35/D1+v/AGZEnwI=
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1000.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 460, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{"ba", "\[Rule]", "3"}], ",", 
           RowBox[{"bn", "\[Rule]", "1"}], ",", 
           RowBox[{"z", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vs", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vh", "\[Rule]", "1"}], ",", 
           RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
           RowBox[{"u", "\[Rule]", "0.2`"}], ",", 
           RowBox[{"pa", "\[Rule]", "0"}], ",", 
           RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
     PlotRange -> {{0, 1000.}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"LsO", "LhO"}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.773388256573338*^9, 3.7733883134900503`*^9, 
  3.773389455469652*^9},ExpressionUUID->"0d839e13-3c9c-44c1-8861-\
7bd4ae1ec2df"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxd0XuUFPWZxvGSbCQ3N53okfbCWrCCrWFNYYzTaggvl4HGoBT3lhmg5t64
BkoM0vFCSsXYgkCJiWnjIRRCkjaJWmqECWbdiprQxlsd12A7OKQ0rLZkd62s
kO2wu+7lWNVd851/6nzOc55+5j2/cd1rFvSNUhSl/jFF+f/vR3/h1I++QfRV
5FN/e+TuyXcPR/6EvHjqkj3Zsw5FTkm5MDucur8W+TTZkP3Wfx38xsHIabny
WN+Xhha+FvlsGTpl54PHO1+NrMrQ+ttnetv9yOPlgmfWFm87+lLkc+Vg0TjQ
/vEXIk+U2k+OB79eU42cEd0bNbY6/jeRL5AvDzyQck9/LvIkmbU1WPapmc9E
vlD8k8fL8G4vsiZrjtz+q50rn448WeZuvP+n1z73VOSL5Ptvb95z5rW/iPwl
+c37e/9Yu3Jf5IvljS2Z1e92PRn5y3Ji4gXzrt31RORLZOezO8a0n/x45DaZ
cvETW/xNbuSsbDw0Xp238JHIl8pfesvmkv0/jXyZyFvvvNM25aHIl8sbqw6P
azvwo8hfkfD37ccGztsTeYr8YHDuJ2fUd0b+qtzRnftlbrQTeap8uMxau/nM
2CKjr/r1hnf/LrIlUjq+44vLpsX5NHGeDicGi+J8mhjhuC+sK8T5dHll1X/W
T705zqfLk8XXnSe3xfkMMW/aum/+7jifIZKbPm54b5zPlKX7/+H+Ob+N85my
rm3Mjo3Dcd4u+zPjxtwQxnm7nHNRzf9w1K4onyUfXLrxlT+fFtmaJdMGftw2
aWKcz5ZHD9/4ds8lcT5bJjvnr1/eHuc5Wbv/uvvfXBDnOfmrZ88cu3dFnM+R
Df+0Zv2hQpzPEf9wx3nLr4vzK6T0uYF/6S7G+RVy8OULD52zIc6/Ju+3X7Wp
elucf03+mL931ZZvx/lc2fHShnXlu+J8rhxb+5Xhz9wd51fKgc7Z20ZvjfMr
5caTlp7ubIvzq+TELbs2vGfH+VWy6cjRCR/cE+fz5Brjiq8/vz3O58k326y5
N9wb57rcu3Xcb0/6TmTR5bGFz3eujW3pcpK9/NKXYnu6dHqNe07/btyfL6d0
r63Ojy3zZf9P/nzfrbGt+fJwxw+1SmxvvvS3vdhxoNlfII98oNwZNPsLZMK+
sUPHmv0Fcu6q92d8/L64v0AWv3D5HZ+PrSyUc7r3XDo2tiyUnx3xD0+IbS2U
rvcuGZrU7C+US5549paLmv1FctnmnZ9ua/YXyfkz2n5xWbO/SBqvPPrYlGZ/
kaz7UzBGmv3FMmfqv42e3uwvln9dfU95RrO/WG4eNeHNmc3+Ylm266a32pv9
JTLrwy0/n9XsL5HzZo1eObvZXyLpu/bWm/aWyPT5R5fmmv2l8tD39z/WtCyV
U+yZJ5q2lso7zw9dPKfZXyrz2if1Nq3kZdabPZualrxMdqc91LSVl9fdLz7T
6udlk7bgYKt/tZyU++47rf7V8vKP9n3Q6l8tnfMWftjqXy3De46cfEWzv0x+
N9Y/pWlZJurh/lObtpZJ5+qjY5r2lsnKX247q9XvkOE7b/2bVr9DfrD0bbXV
75Br/vrl8a1+hxyf3HFuq98pJ/79gQmtfqdsHbVzYqvfKcZXzfNa/U45ePkZ
mVZ/uWwY3NWyLJenjn32/FZ/uWT+u9Cy93/5P7stKytk91+Otiwr5K23zrig
1V8hNz83tWVvhTy6fEXLykqZftr6lmWl/M8nNyf6K+VPmQcS/ZVy9oWVRN+Q
ix5/vGXVkJu0pxK/Z8h3PvNMy4Yh7953IPH7hqxOvdiyY8iDD7+S2DPkD+VX
Ww4MuebYa4n9Lhk+dDCx3yVb+2qJ/S7ZuPuNxH6XLNozlNjvkn+8/lBiv0tm
nfVmYr9Ltj+YcNAlQ58dTux3y9mFhNVu6Xk0YemW/6gnbHRLcczhxH63nDwl
YadbOjsS9rrl0PUJB92y586ElR7Z+b2E1R4p7UlYeuT4IwkbPbJiX3K/RyY9
ndzvkYeeTe73yBnV5H6PPPxCcr9Xtr+c3O+V9/zkfq+89Gpyv1cWvZbc7xX7
d8n9Xtl2MLnfK8tfT+73yqhacr9PSkmrfXIsaemTuW8k9/tke9JWn7yQtNMn
J5L2+kQdSu73yZSklX5ZlLTaL6uSln5Zn7TRL7cnbfXL1qSdfvle0l6/7Bix
3y+7R+wPSGXE/oD8bMT+gDwyYn9A3BH7A/LYiP0B+fmI/QHZO2IfVgojrcIC
G7AFO7AHB7CyCvuwwAZswQ7swQGsXIN9WGADtmAH9uAAVv4e+7DABmzBDuzB
Aaxci31YYAO2YAf24ABWvo59WGADtmAH9uAAVlZjHxbYgC3YgT04gJU12IcF
NmALdmAPDmDFHOkUrMIaLLAOG7AJW7ANO7ALe7APB3AIK9fhfliFNVhgHTZg
E7ZgG3ZgF/ZgHw7gEFbW4n5YhTVYYB02YBO2YBt2YBf2YB8O4BBWrsf9sApr
sMA6bMAmbME27MAu7ME+HMAhrHwD98MqrMEC67ABm7AF27ADu7AH+3AAh7Cy
DvfDKqzBAuuwAZuwBduwA7uwB/twAIewcgPuh1VYgwXWYQM2YQu2YQd2YQ/2
4QAOYWU97odVWIMF1mEDNmELtmEHdmEP9uEADmGliPthFdZggXXYgE3Ygm3Y
gV3Yg304gENY+Sbuh1VYgwXWYQM2YQu2YQd2YQ/24QAOYeVG3A+rsAYLrMMG
bMIWbMMO7MIe7MMBHMLKTbgfVmENFliHDdiELdiGHdiFPdiHAziElZtxP6zC
GiywDhuwCVuwDTuwC3uwDwdwCCu34H5YhTVYYB02YBO2YBt2YBf2YB8O4BBW
NuB+WIU1WGAdNmATtmAbdmAX9mAfDuAQVr6F+2EV1mCBddiATdiCbdiBXdiD
fTiAQ1ixRvoTcApOwyqcgTU4Cwucg3U4DxtwATbhImzBJdiGy7ADV2AXHoQ9
uAr7cA0O4Docwg1YuRXvD6fgNKzCGViDs7DAOViH87ABF2ATLsIWXIJtuAw7
cAV24UHYg6uwD9fgAK7DIdyAldvw/nAKTsMqnIE1OAsLnIN1OA8bcAE24SJs
wSXYhsuwA1dgFx6EPbgK+3ANDuA6HMINWLkd7w+n4DSswhlYg7OwwDlYh/Ow
ARdgEy7CFlyCbbgMO3AFduFB2IOrsA/X4ACuwyHcgJWNeH84BadhFc7AGpyF
Bc7BOpyHDbgAm3ARtuASbMNl2IErsAsPwh5chX24BgdwHQ7hBqzcgfeHU3Aa
VuEMrMFZWOAcrMN52IALsAkXYQsuwTZchh24ArvwIOzBVdiHa3AA1+EQbsDK
t/H+cApOwyqcgTU4Cwucg3U4DxtwATbhImzBJdiGy7ADV2AXHoQ9uAr7cA0O
4Docwg1YuRPvD6fgNKzCGViDs7DAOViH87ABF2ATLsIWXIJtuAw7cAV24UHY
g6uwD9fgAK7DIdyAlRLeH07BaViFM7AGZ2GBc7AO52EDLsAmXIQtuATbcBl2
4ArswoOwB1dhH67BAVyHQ7gBK3fh/eEUnIZVOANrcBYWOAfrcB424AJswkXY
gkuwDZdhB67ALjwIe3AV9uEaHMB1OIQbsLIJ7w+n4DSswhlYg7OwwDlYh/Ow
ARdgEy7CFlyCbbgMO3AFduFB2IOrsA/X4ACuwyHcgJXNeH84BadhFc7AGpyF
Bc7BOpyHDbgAm3ARtuASbMNl2IErsAsPwh5chX24BgdwHQ7hBqzcjfeHU3Aa
VuEMrMFZWOAcrMN52IALsAkXYQsuwTZchh24ArvwIOzBVdiHa3AA1+EQbsDK
Frw/nILTsApnYA3OwgLnYB3OwwZcgE24CFtwCbbhMuzAFdiFB2EPrsI+XIMD
uA6HcANWtuL94RSchlU4A2twFhY4B+twHjbgAmzCRdiCS7ANl2EHrsAuPAh7
cBX24RocwHU4hBuwsg3vD6fgNKzCGViDs7Bsk4/+j2Dq/wL8hySm
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxd0XuUE+X9x/ERKqCnVrxQaIsQ96cSQW1Q0FAFvopgUC6zCy7htjt7zy7I
hoWFLHIZkEtgUXLqT5oilpFLXa0HgljZVj2MqDQKxaAi0aqdLqihVo1ttRGs
tj3OJJP3/rPns6+88+xznsurm8vquimKkumuKP/7/d1PdvSLB8cMONP089H2
H2T1DbEHh+xwdi95Yn364XPec3Zvee1A18Q9/R6096Wyrf+eMS3lzu4nm1dd
MuLBzc7uL7+NXryq/m1ne2TbB3s3TRj4//YukZNy/OBTIWdfIer62a9c+oyz
r5L3hxz+/Tc9H7K3Vy5oWzeod6WzB8sV2x4uV55z9jWiVKz43s6Bm+19nfQ9
+9CALzY42ycnSi8dcdm3zh4qh0ve+vC+Zb+w9/UypN9Pkl094/a+QarmbZ9Q
bTh7mAz/+ZxhL43/pb2HS9mfv9i/s+cWe98o5+w+8FXX+86+SX5xdGD3srce
trdfjquZrjP/2mrvEdIafeOZR6f8yt4/k6VPe0rHdTPsfbM8cd6x2z7xPGrv
W+T6LWXJa49tt/dIsdq/Pti/9jF7j5KmafXv9/y2w96j5Zq9F8+YlHrC3iKN
w7Layq4nv9u6yJRDPw1Zt+2x/Vap33Xh4j7n7LX9VjnlOf3ku1uesv022T5y
cLclS5+2/Ta5auJfSx/d/4ztY8S//ZXg2Jrf2T5GBnU1nzfgkedsv12aDv3w
tY6xpu23y+IjA85Yuw/aPlauvjJa+f6vX7Z9rHxx/vLv/3bCK7aPk+eO77z5
9mf/aPs4+bJ14DufLztm+x1S2X7s1FNtb9p+h9zbue2N04+fsD0g/3hTufof
r79je0Di3dRHl3S+Z/t4iVV81P+FH1m2j5cVc8ec2Nf/L7bfKf/8cvOet07b
W79TIkteqb1sQ5ftd0mNeuOaVI+Ttt8lU9Z8rX7aYG9lgmwevuKd1/c5PkHG
XrRmcvVnjk8UXZZfMnXAKdsnysSJL/+rbYy9lUlSu/3TfV9pjk+SP/Y4vy0S
cXyy7D667bqb2x2fLHI2fvmoLY6rUvl0Scu4X9tbVHnp8N/OfrrH+bwqoz7e
/dXe/fY2Vflhx+8D2eedvlRy11z72ZcHnb5Umo09we5/cPpSubbvDx4Z96rT
l0rL270uyBxx+jI5O8sY2vM1py+TSJ8dFc+nnL5MGrI9Ph/wutOXyTtfb73r
ljecfoqULRpvlLzp9FOkxHws9q6z9Smyc9Om3S3HnX6KfJPqc/JjZytT5cR+
/wsT33L6qdKjalJyq7P1qTInveCX7zrbnCrf+GMlvU84/d0yyPrKHOFsuVs+
/n717JnO1u+Wf6+YtmqRs827ZcOF8+ZtzPflUpE7WfKrfF8ufYcvaH4y35fL
4b5/Ors/35fLlosenPxCvp8ml20/J53M99PkBy/pnxzN99PkVK7pxBv5fpp0
7dJeO5Hvg9Jn1N+6/ynfB0Xu2LnlvXwflDPjT+39c74PyhMZX/Vf8v10md8y
7UBXvp8uN5aUv30y30+Xm/b0ff5Uvp8u25Lnt36Q72fIR3O3nvdhvp8hT3Vu
WZnf+gyx9q3uym9zhnheftX3Ub6fKb850C2c3zJTTn5y0Y781mdK17mTj+S3
OVPSDz3ySaGfJVMHr+6Vyfez5IWhowbktz5LLml+9af5bc6SG3Z9OTK/ldmy
o3vj+EI/W3784mNlhX62zL9r4IxCP1uODR6kFfoKualfj7pCXyFHfF+ECn2F
tD1UMrfQV8jpdfvmFfpKuWPgoXChr5SfPN7SUugrpeLQkQWFvlKWlp5aWOg1
mdjvUGt+ezTxtyxdVPg+Teb97sLF+a1p8tGTawtb16T+wIeFbWjSOm1YpHDe
fz/fbUFhW5psNnYVtlIl3648WtieKlm/9rPCliopHXp+W+H8Krng2YGFrVfJ
JM/Qwjaq5NxrRxe2WSV/X3NnYVtVclViSmEr1dKn78zC9lTLxouqCluqZccH
da7zq+XM4UbX+dVS9ve5rvOr5f5lza7zqyXaPt91frXMGLbAdX6NtLUvdJ1f
I1uMVtf5NTJHX+Q6v0auH77YdX6NXPcH1zZqpN/IiOv8Ginf6tpWjYw67dpK
rVQOanOdXyvt011bauXiVa6t1crR7a6t18qo513bqJX4665t1kr6pGtbtfLS
566t1Mm5/3afXyc/7rHEdX6dNF/g2lqdzL7EtfU6ubKfaxt10r2/a5t1csVA
17bq5PHLXVupl33/59qeepl+pfv8eklc5T6/Xl4c5D6/XnZ53efXS/nV7vPr
JePeVr1UDHaf3yDPurenQXoNcZ/fIAH31hqkzb31Btnm3kaDPOfeZoMcd2+r
Qf7q3kpIzri3JyQ9rnGfH5Le7q2F5EfurYfkCvc2QjLEvc2Q+NzbConfvZXG
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
         
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1000.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 460, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       RowBox[{"{", 
         RowBox[{
           RowBox[{"ba", "\[Rule]", "5"}], ",", 
           RowBox[{"bn", "\[Rule]", "1"}], ",", 
           RowBox[{"z", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vs", "\[Rule]", "0.5`"}], ",", 
           RowBox[{"vh", "\[Rule]", "1"}], ",", 
           RowBox[{"vI", "\[Rule]", "0.8`"}], ",", 
           RowBox[{"u", "\[Rule]", "0.2`"}], ",", 
           RowBox[{"pa", "\[Rule]", "0"}], ",", 
           RowBox[{"pn", "\[Rule]", "1"}]}], "}"}], TraditionalForm], 
     PlotRange -> {{0, 1000.}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"LsO", "LhO"}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.773388256573338*^9, 3.7733883134900503`*^9, 
  3.773389465950561*^9},ExpressionUUID->"8f553e8e-8be3-414b-9038-\
828937d0782e"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1740, 730},
WindowMargins->{{Automatic, -345}, {Automatic, 49}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 18, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 7001, 198, 552, "Input", "ExpressionUUID" -> \
"7813fda0-2376-4733-b3ac-4ea480707c51"],
Cell[7562, 220, 2731, 75, 181, "Input", "ExpressionUUID" -> \
"497fe567-c859-4ce9-87f8-87d1f865c18b"],
Cell[10296, 297, 308, 7, 32, "Input", "ExpressionUUID" -> \
"63c45999-0500-4c1c-b0c7-32c97772204e"],
Cell[10607, 306, 534, 17, 32, "Input", "ExpressionUUID" -> \
"68345157-84e5-47b3-ac93-33e465314ede"],
Cell[11144, 325, 581, 18, 32, "Input", "ExpressionUUID" -> \
"ff70bfaf-f11f-401f-8a89-d781ae6bdd78"],
Cell[CellGroupData[{
Cell[11750, 347, 145, 3, 32, "Input", "ExpressionUUID" -> \
"68a025c8-3abf-4856-b9a6-7e142eed8aa0"],
Cell[11898, 352, 3614, 52, 32, "Output", "ExpressionUUID" -> \
"bfc06eda-46f2-4700-b8aa-f1ae79d0cded"]
}, Open  ]],
Cell[15527, 407, 692, 18, 57, "Input", "ExpressionUUID" -> \
"71b3e5ec-ac8c-46bc-8e8f-d962bedf8747"],
Cell[16222, 427, 22149, 571, 222, "Input", "ExpressionUUID" -> \
"4b51c49d-a808-4544-8230-a64b7c1c9718"],
Cell[CellGroupData[{
Cell[38396, 1002, 16391, 362, 1146, "Input", "ExpressionUUID" -> \
"4e12e417-3f00-4ee8-8786-54b84b52cfc9"],
Cell[54790, 1366, 778216, 14061, 351, "Output", "ExpressionUUID" -> \
"2772098e-4d6e-4dbe-9d2e-89ccaadcd5da"]
}, Open  ]],
Cell[833021, 15430, 256, 6, 40, "Input", "ExpressionUUID" -> \
"f5682843-fcae-41b6-893b-33dced0ab75d"],
Cell[CellGroupData[{
Cell[833302, 15440, 16901, 383, 1209, "Input", "ExpressionUUID" -> \
"a6831b52-8cdf-4068-bb4e-cedecce00513"],
Cell[850206, 15825, 726, 13, 24, "Message", "ExpressionUUID" -> \
"03b5552e-c51e-494e-b0e7-9c649369e7a6"],
Cell[850935, 15840, 2520, 38, 45, "Message", "ExpressionUUID" -> \
"1253da2d-461a-452e-bdc6-46160a681329"],
Cell[853458, 15880, 34779, 630, 327, "Print", "ExpressionUUID" -> \
"8a552ea6-2ea2-4a94-87de-75e727107413"],
Cell[888240, 16512, 723, 12, 24, "Message", "ExpressionUUID" -> \
"7d3f8b0a-d7e3-498c-a913-ef51e1e0d687"],
Cell[888966, 16526, 2525, 38, 45, "Message", "ExpressionUUID" -> \
"d122bf89-bd43-437b-8da6-3cd691b3de5e"],
Cell[891494, 16566, 36744, 661, 327, "Print", "ExpressionUUID" -> \
"2c5dd6f3-c57f-43dd-b761-72455d8a1976"],
Cell[928241, 17229, 726, 13, 24, "Message", "ExpressionUUID" -> \
"6339aa90-5247-44dc-bc71-93adc9034e93"],
Cell[928970, 17244, 448, 9, 24, "Message", "ExpressionUUID" -> \
"86716e8b-5a6c-4517-b9db-7e0bd83df070"],
Cell[929421, 17255, 4427, 64, 59, "Message", "ExpressionUUID" -> \
"939a1f9b-4ecc-43d9-9814-53db5f68e129"],
Cell[933851, 17321, 441, 9, 24, "Message", "ExpressionUUID" -> \
"e48b191f-6fb7-4bee-96bb-2b09b0e82b5f"],
Cell[CellGroupData[{
Cell[934317, 17334, 36670, 661, 327, "Print", "ExpressionUUID" -> \
"ee59c536-e950-48d5-9ba8-ba3966336e49"],
Cell[970990, 17997, 34010, 617, 327, "Print", "ExpressionUUID" -> \
"72cfb055-0dee-4841-8764-e1c66d54be0f"],
Cell[1005003, 18616, 36914, 665, 327, "Print", "ExpressionUUID" -> \
"92c8d34e-aac0-4aa5-8810-3e899ae19c4e"],
Cell[1041920, 19283, 25024, 470, 327, "Print", "ExpressionUUID" -> \
"13aa3c7a-e79f-4708-ae9b-228d26665c12"],
Cell[1066947, 19755, 35866, 647, 327, "Print", "ExpressionUUID" -> \
"03436f9a-04a0-4f39-a430-ad7dc9ff224f"],
Cell[1102816, 20404, 25691, 481, 327, "Print", "ExpressionUUID" -> \
"0d839e13-3c9c-44c1-8861-7bd4ae1ec2df"],
Cell[1128510, 20887, 21133, 406, 327, "Print", "ExpressionUUID" -> \
"8f553e8e-8be3-414b-9038-828937d0782e"]
}, Open  ]]
}, Open  ]]
}
]
*)

