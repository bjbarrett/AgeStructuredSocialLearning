(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    244651,       4771]
NotebookOptionsPosition[    240797,       4678]
NotebookOutlinePosition[    241154,       4694]
CellTagsIndexPosition[    241111,       4691]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"css", " ", "zebrafinch", " ", "model"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ns", " ", ":=", " ", 
     RowBox[{
      RowBox[{"Na", " ", "ba", " ", "pa"}], " ", "+", " ", 
      RowBox[{"Nn", " ", "bn", " ", "pn"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"nh", ":=", " ", 
     RowBox[{
      RowBox[{"Na", " ", "ba", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "pa"}], ")"}]}], " ", "+", " ", 
      RowBox[{"Nn", " ", "bn", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "pn"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NNa", " ", ":=", 
     RowBox[{
      RowBox[{"ns", " ", "vs", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "lsO"}], ")"}], " ", "vI", " ", "z"}], " ", "+", 
         
         RowBox[{"lsO", " ", "qO"}]}], " ", ")"}]}], " ", "+", " ", 
      RowBox[{"nh", " ", "vh", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "lhO"}], ")"}], " ", "vI", " ", "z"}], " ", "+", 
         
         RowBox[{"lhO", " ", "qO"}]}], " ", ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NNn", " ", ":=", 
     RowBox[{
      RowBox[{"ns", " ", "vs", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "lsO"}], ")"}], " ", "vI", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "z"}], ")"}]}], "+", 
         RowBox[{"lsO", 
          RowBox[{"(", 
           RowBox[{"1", "-", " ", "qO"}], ")"}]}]}], " ", ")"}]}], " ", "+", 
      " ", 
      RowBox[{"nh", " ", "vh", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "lhO"}], ")"}], " ", "vI", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "z"}], ")"}]}], "+", 
         RowBox[{"lhO", 
          RowBox[{"(", 
           RowBox[{"1", "-", " ", "qO"}], ")"}]}]}], " ", ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qO", " ", ":=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "u"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"Na", "/", 
        RowBox[{"(", 
         RowBox[{"Na", " ", "+", "Nn"}], ")"}]}], ")"}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.75922536820514*^9, 3.759225374361019*^9}, {
   3.759226978263508*^9, 3.7592270511939898`*^9}, {3.7592272071577883`*^9, 
   3.759227502951234*^9}, {3.759227549246399*^9, 3.759227595035541*^9}, {
   3.759227633556774*^9, 3.759227779349925*^9}, {3.760182138805376*^9, 
   3.760182140164405*^9}, {3.7601825668532953`*^9, 3.7601825760529423`*^9}, {
   3.760260971894476*^9, 3.760261003261483*^9}, {3.760343678985106*^9, 
   3.760343727470407*^9}, 3.7603437708077*^9, {3.760343806968362*^9, 
   3.760343810862163*^9}, {3.760347725058481*^9, 3.76034772570505*^9}, {
   3.7609513639818087`*^9, 3.7609513682270327`*^9}, {3.765256219711523*^9, 
   3.7652562443580437`*^9}, {3.7676090976881447`*^9, 
   3.767609173472151*^9}},ExpressionUUID->"a696a951-3069-480d-bda1-\
f557c41397a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AA", ":=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", 
       RowBox[{"ba", " ", "pa"}], 
       RowBox[{"bn", " ", "pn"}]},
      {"0", "0", 
       RowBox[{"ba", 
        RowBox[{"(", 
         RowBox[{"1", "-", "pa"}], ")"}]}], 
       RowBox[{"bn", 
        RowBox[{"(", 
         RowBox[{"1", "-", "pn"}], ")"}]}]},
      {
       RowBox[{"vs", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "lsO"}], ")"}], " ", "vI", " ", "z"}], " ", "+", 
          RowBox[{"lsO", " ", "qO"}]}], " ", ")"}]}], 
       RowBox[{" ", 
        RowBox[{"vh", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "lhO"}], ")"}], " ", "vI", " ", "z"}], " ", 
           "+", 
           RowBox[{"lhO", " ", "qO"}]}], " ", ")"}]}]}], "0", "0"},
      {
       RowBox[{"vs", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "lsO"}], ")"}], " ", "vI", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "z"}], ")"}]}], "+", 
          RowBox[{"lsO", 
           RowBox[{"(", 
            RowBox[{"1", "-", " ", "qO"}], ")"}]}]}], " ", ")"}], " "}], 
       RowBox[{"vh", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "lhO"}], ")"}], " ", "vI", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "z"}], ")"}]}], "+", 
          RowBox[{"lhO", 
           RowBox[{"(", 
            RowBox[{"1", "-", " ", "qO"}], ")"}]}]}], " ", ")"}]}], "0", "0"}
     }], "\[NoBreak]", ")"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.759229336797518*^9, 3.75922941064526*^9}, {
   3.7601910668877563`*^9, 3.760191069968646*^9}, {3.7609532359902973`*^9, 
   3.760953296684855*^9}, {3.760959349527267*^9, 3.760959368606543*^9}, {
   3.761035121392744*^9, 3.76103512193158*^9}, 3.761045760902514*^9, 
   3.7614723052140512`*^9, {3.765256247405995*^9, 3.7652562817340727`*^9}, {
   3.767609177679335*^9, 
   3.767609192766227*^9}},ExpressionUUID->"91934920-45d5-46de-846b-\
a5e422bd6d07"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NN", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"NNn", " ", "+", " ", "NNa"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.767609229418394*^9, 3.7676092418263702`*^9}, 
   3.767609303794414*^9},ExpressionUUID->"c9fd7a81-d76a-47e0-8084-\
ea0a93368801"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FFa", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"NNa", "/", "NN"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Na", "\[Rule]", 
        RowBox[{"Fa", " ", "N0"}]}], ",", 
       RowBox[{"Nn", "\[Rule]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "Fa"}], ")"}], "N0"}]}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.7652563372065363`*^9, 
  3.767428186086334*^9},ExpressionUUID->"f9e41a0a-03b2-4500-9024-\
d3371bdbb2e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FFn", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"NNn", "/", "NN"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Na", "\[Rule]", 
        RowBox[{"Fa", " ", "N0"}]}], ",", 
       RowBox[{"Nn", "\[Rule]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "Fa"}], ")"}], "N0"}]}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.7652563533747797`*^9, 
  3.767428186606475*^9},ExpressionUUID->"ad4605d5-7cd2-4cab-8865-\
89e33407d87f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"FFn", "+", "FFa"}], "]"}]], "Input",ExpressionUUID->"4cddcd6e-8eb5-\
43fd-8598-d86767458566"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.7652563766032677`*^9, 3.765274508624042*^9, 
  3.765275857873808*^9, 3.765530995977647*^9, 3.7674247653006496`*^9, 
  3.76742486162066*^9, 3.767428181159596*^9, 3.767436671148477*^9, 
  3.767522013505011*^9, 3.767609318926516*^9, 3.767692007553767*^9, 
  3.767692633641698*^9, 3.7676933847351027`*^9, 3.767693416809304*^9, 
  3.767693530049163*^9, 3.767693808398802*^9, 3.767694070658029*^9, 
  3.767694133378681*^9, 3.767694403481168*^9, 
  3.767694884489552*^9},ExpressionUUID->"d67992ed-9d91-4821-981d-\
f64306f87a59"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fasols", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"FFa", "\[Equal]", "Fa"}], ",", "Fa"}], "]"}]}]], "Input",Expressi\
onUUID->"8ac3dee0-6c9f-400b-ba10-25934b227010"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Fa", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"bn", " ", "lhO", " ", "u", " ", "vh"}], "-", 
        RowBox[{"bn", " ", "lhO", " ", "pn", " ", "u", " ", "vh"}], "+", 
        RowBox[{"bn", " ", "vh", " ", "vI"}], "-", 
        RowBox[{"bn", " ", "lhO", " ", "vh", " ", "vI"}], "-", 
        RowBox[{"bn", " ", "pn", " ", "vh", " ", "vI"}], "+", 
        RowBox[{"bn", " ", "lhO", " ", "pn", " ", "vh", " ", "vI"}], "+", 
        RowBox[{"bn", " ", "lsO", " ", "pn", " ", "u", " ", "vs"}], "+", 
        RowBox[{"bn", " ", "pn", " ", "vI", " ", "vs"}], "-", 
        RowBox[{"bn", " ", "lsO", " ", "pn", " ", "vI", " ", "vs"}], "-", 
        RowBox[{"ba", " ", "vh", " ", "vI", " ", "z"}], "+", 
        RowBox[{"bn", " ", "vh", " ", "vI", " ", "z"}], "+", 
        RowBox[{"ba", " ", "lhO", " ", "vh", " ", "vI", " ", "z"}], "-", 
        RowBox[{"bn", " ", "lhO", " ", "vh", " ", "vI", " ", "z"}], "+", 
        RowBox[{"ba", " ", "pa", " ", "vh", " ", "vI", " ", "z"}], "-", 
        RowBox[{"ba", " ", "lhO", " ", "pa", " ", "vh", " ", "vI", " ", "z"}],
         "-", 
        RowBox[{"bn", " ", "pn", " ", "vh", " ", "vI", " ", "z"}], "+", 
        RowBox[{"bn", " ", "lhO", " ", "pn", " ", "vh", " ", "vI", " ", "z"}],
         "-", 
        RowBox[{"ba", " ", "pa", " ", "vI", " ", "vs", " ", "z"}], "+", 
        RowBox[{"ba", " ", "lsO", " ", "pa", " ", "vI", " ", "vs", " ", "z"}],
         "+", 
        RowBox[{"bn", " ", "pn", " ", "vI", " ", "vs", " ", "z"}], "-", 
        RowBox[{"bn", " ", "lsO", " ", "pn", " ", "vI", " ", "vs", " ", "z"}],
         "-", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "ba"}], " ", "lhO", " ", "u", " ", "vh"}], "+", 
              RowBox[{"bn", " ", "lhO", " ", "u", " ", "vh"}], "+", 
              RowBox[{"ba", " ", "lhO", " ", "pa", " ", "u", " ", "vh"}], "-", 
              RowBox[{"bn", " ", "lhO", " ", "pn", " ", "u", " ", "vh"}], "-", 
              RowBox[{"ba", " ", "vh", " ", "vI"}], "+", 
              RowBox[{"bn", " ", "vh", " ", "vI"}], "+", 
              RowBox[{"ba", " ", "lhO", " ", "vh", " ", "vI"}], "-", 
              RowBox[{"bn", " ", "lhO", " ", "vh", " ", "vI"}], "+", 
              RowBox[{"ba", " ", "pa", " ", "vh", " ", "vI"}], "-", 
              RowBox[{"ba", " ", "lhO", " ", "pa", " ", "vh", " ", "vI"}], 
              "-", 
              RowBox[{"bn", " ", "pn", " ", "vh", " ", "vI"}], "+", 
              RowBox[{"bn", " ", "lhO", " ", "pn", " ", "vh", " ", "vI"}], 
              "-", 
              RowBox[{"ba", " ", "lsO", " ", "pa", " ", "u", " ", "vs"}], "+", 
              RowBox[{"bn", " ", "lsO", " ", "pn", " ", "u", " ", "vs"}], "-", 
              RowBox[{"ba", " ", "pa", " ", "vI", " ", "vs"}], "+", 
              RowBox[{"ba", " ", "lsO", " ", "pa", " ", "vI", " ", "vs"}], 
              "+", 
              RowBox[{"bn", " ", "pn", " ", "vI", " ", "vs"}], "-", 
              RowBox[{"bn", " ", "lsO", " ", "pn", " ", "vI", " ", "vs"}]}], 
             ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"bn", " ", "vh", " ", "vI", " ", "z"}], "-", 
              RowBox[{"bn", " ", "lhO", " ", "vh", " ", "vI", " ", "z"}], "-", 
              RowBox[{"bn", " ", "pn", " ", "vh", " ", "vI", " ", "z"}], "+", 
              
              RowBox[{
              "bn", " ", "lhO", " ", "pn", " ", "vh", " ", "vI", " ", "z"}], 
              "+", 
              RowBox[{"bn", " ", "pn", " ", "vI", " ", "vs", " ", "z"}], "-", 
              
              RowBox[{
              "bn", " ", "lsO", " ", "pn", " ", "vI", " ", "vs", " ", "z"}]}],
              ")"}]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "bn"}], " ", "lhO", " ", "u", " ", "vh"}], "+", 
              RowBox[{"bn", " ", "lhO", " ", "pn", " ", "u", " ", "vh"}], "-", 
              RowBox[{"bn", " ", "vh", " ", "vI"}], "+", 
              RowBox[{"bn", " ", "lhO", " ", "vh", " ", "vI"}], "+", 
              RowBox[{"bn", " ", "pn", " ", "vh", " ", "vI"}], "-", 
              RowBox[{"bn", " ", "lhO", " ", "pn", " ", "vh", " ", "vI"}], 
              "-", 
              RowBox[{"bn", " ", "lsO", " ", "pn", " ", "u", " ", "vs"}], "-", 
              RowBox[{"bn", " ", "pn", " ", "vI", " ", "vs"}], "+", 
              RowBox[{"bn", " ", "lsO", " ", "pn", " ", "vI", " ", "vs"}], 
              "+", 
              RowBox[{"ba", " ", "vh", " ", "vI", " ", "z"}], "-", 
              RowBox[{"bn", " ", "vh", " ", "vI", " ", "z"}], "-", 
              RowBox[{"ba", " ", "lhO", " ", "vh", " ", "vI", " ", "z"}], "+", 
              RowBox[{"bn", " ", "lhO", " ", "vh", " ", "vI", " ", "z"}], "-", 
              RowBox[{"ba", " ", "pa", " ", "vh", " ", "vI", " ", "z"}], "+", 
              
              RowBox[{
              "ba", " ", "lhO", " ", "pa", " ", "vh", " ", "vI", " ", "z"}], 
              "+", 
              RowBox[{"bn", " ", "pn", " ", "vh", " ", "vI", " ", "z"}], "-", 
              
              RowBox[{
              "bn", " ", "lhO", " ", "pn", " ", "vh", " ", "vI", " ", "z"}], 
              "+", 
              RowBox[{"ba", " ", "pa", " ", "vI", " ", "vs", " ", "z"}], "-", 
              
              RowBox[{
              "ba", " ", "lsO", " ", "pa", " ", "vI", " ", "vs", " ", "z"}], 
              "-", 
              RowBox[{"bn", " ", "pn", " ", "vI", " ", "vs", " ", "z"}], "+", 
              
              RowBox[{
              "bn", " ", "lsO", " ", "pn", " ", "vI", " ", "vs", " ", "z"}]}],
              ")"}], "2"]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "ba"}], " ", "lhO", " ", "u", " ", "vh"}], "+", 
          RowBox[{"bn", " ", "lhO", " ", "u", " ", "vh"}], "+", 
          RowBox[{"ba", " ", "lhO", " ", "pa", " ", "u", " ", "vh"}], "-", 
          RowBox[{"bn", " ", "lhO", " ", "pn", " ", "u", " ", "vh"}], "-", 
          RowBox[{"ba", " ", "vh", " ", "vI"}], "+", 
          RowBox[{"bn", " ", "vh", " ", "vI"}], "+", 
          RowBox[{"ba", " ", "lhO", " ", "vh", " ", "vI"}], "-", 
          RowBox[{"bn", " ", "lhO", " ", "vh", " ", "vI"}], "+", 
          RowBox[{"ba", " ", "pa", " ", "vh", " ", "vI"}], "-", 
          RowBox[{"ba", " ", "lhO", " ", "pa", " ", "vh", " ", "vI"}], "-", 
          RowBox[{"bn", " ", "pn", " ", "vh", " ", "vI"}], "+", 
          RowBox[{"bn", " ", "lhO", " ", "pn", " ", "vh", " ", "vI"}], "-", 
          RowBox[{"ba", " ", "lsO", " ", "pa", " ", "u", " ", "vs"}], "+", 
          RowBox[{"bn", " ", "lsO", " ", "pn", " ", "u", " ", "vs"}], "-", 
          RowBox[{"ba", " ", "pa", " ", "vI", " ", "vs"}], "+", 
          RowBox[{"ba", " ", "lsO", " ", "pa", " ", "vI", " ", "vs"}], "+", 
          RowBox[{"bn", " ", "pn", " ", "vI", " ", "vs"}], "-", 
          RowBox[{"bn", " ", "lsO", " ", "pn", " ", "vI", " ", "vs"}]}], 
         ")"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Fa", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"bn", " ", "lhO", " ", "u", " ", "vh"}], "-", 
        RowBox[{"bn", " ", "lhO", " ", "pn", " ", "u", " ", "vh"}], "+", 
        RowBox[{"bn", " ", "vh", " ", "vI"}], "-", 
        RowBox[{"bn", " ", "lhO", " ", "vh", " ", "vI"}], "-", 
        RowBox[{"bn", " ", "pn", " ", "vh", " ", "vI"}], "+", 
        RowBox[{"bn", " ", "lhO", " ", "pn", " ", "vh", " ", "vI"}], "+", 
        RowBox[{"bn", " ", "lsO", " ", "pn", " ", "u", " ", "vs"}], "+", 
        RowBox[{"bn", " ", "pn", " ", "vI", " ", "vs"}], "-", 
        RowBox[{"bn", " ", "lsO", " ", "pn", " ", "vI", " ", "vs"}], "-", 
        RowBox[{"ba", " ", "vh", " ", "vI", " ", "z"}], "+", 
        RowBox[{"bn", " ", "vh", " ", "vI", " ", "z"}], "+", 
        RowBox[{"ba", " ", "lhO", " ", "vh", " ", "vI", " ", "z"}], "-", 
        RowBox[{"bn", " ", "lhO", " ", "vh", " ", "vI", " ", "z"}], "+", 
        RowBox[{"ba", " ", "pa", " ", "vh", " ", "vI", " ", "z"}], "-", 
        RowBox[{"ba", " ", "lhO", " ", "pa", " ", "vh", " ", "vI", " ", "z"}],
         "-", 
        RowBox[{"bn", " ", "pn", " ", "vh", " ", "vI", " ", "z"}], "+", 
        RowBox[{"bn", " ", "lhO", " ", "pn", " ", "vh", " ", "vI", " ", "z"}],
         "-", 
        RowBox[{"ba", " ", "pa", " ", "vI", " ", "vs", " ", "z"}], "+", 
        RowBox[{"ba", " ", "lsO", " ", "pa", " ", "vI", " ", "vs", " ", "z"}],
         "+", 
        RowBox[{"bn", " ", "pn", " ", "vI", " ", "vs", " ", "z"}], "-", 
        RowBox[{"bn", " ", "lsO", " ", "pn", " ", "vI", " ", "vs", " ", "z"}],
         "+", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "ba"}], " ", "lhO", " ", "u", " ", "vh"}], "+", 
              RowBox[{"bn", " ", "lhO", " ", "u", " ", "vh"}], "+", 
              RowBox[{"ba", " ", "lhO", " ", "pa", " ", "u", " ", "vh"}], "-", 
              RowBox[{"bn", " ", "lhO", " ", "pn", " ", "u", " ", "vh"}], "-", 
              RowBox[{"ba", " ", "vh", " ", "vI"}], "+", 
              RowBox[{"bn", " ", "vh", " ", "vI"}], "+", 
              RowBox[{"ba", " ", "lhO", " ", "vh", " ", "vI"}], "-", 
              RowBox[{"bn", " ", "lhO", " ", "vh", " ", "vI"}], "+", 
              RowBox[{"ba", " ", "pa", " ", "vh", " ", "vI"}], "-", 
              RowBox[{"ba", " ", "lhO", " ", "pa", " ", "vh", " ", "vI"}], 
              "-", 
              RowBox[{"bn", " ", "pn", " ", "vh", " ", "vI"}], "+", 
              RowBox[{"bn", " ", "lhO", " ", "pn", " ", "vh", " ", "vI"}], 
              "-", 
              RowBox[{"ba", " ", "lsO", " ", "pa", " ", "u", " ", "vs"}], "+", 
              RowBox[{"bn", " ", "lsO", " ", "pn", " ", "u", " ", "vs"}], "-", 
              RowBox[{"ba", " ", "pa", " ", "vI", " ", "vs"}], "+", 
              RowBox[{"ba", " ", "lsO", " ", "pa", " ", "vI", " ", "vs"}], 
              "+", 
              RowBox[{"bn", " ", "pn", " ", "vI", " ", "vs"}], "-", 
              RowBox[{"bn", " ", "lsO", " ", "pn", " ", "vI", " ", "vs"}]}], 
             ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"bn", " ", "vh", " ", "vI", " ", "z"}], "-", 
              RowBox[{"bn", " ", "lhO", " ", "vh", " ", "vI", " ", "z"}], "-", 
              RowBox[{"bn", " ", "pn", " ", "vh", " ", "vI", " ", "z"}], "+", 
              
              RowBox[{
              "bn", " ", "lhO", " ", "pn", " ", "vh", " ", "vI", " ", "z"}], 
              "+", 
              RowBox[{"bn", " ", "pn", " ", "vI", " ", "vs", " ", "z"}], "-", 
              
              RowBox[{
              "bn", " ", "lsO", " ", "pn", " ", "vI", " ", "vs", " ", "z"}]}],
              ")"}]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "bn"}], " ", "lhO", " ", "u", " ", "vh"}], "+", 
              RowBox[{"bn", " ", "lhO", " ", "pn", " ", "u", " ", "vh"}], "-", 
              RowBox[{"bn", " ", "vh", " ", "vI"}], "+", 
              RowBox[{"bn", " ", "lhO", " ", "vh", " ", "vI"}], "+", 
              RowBox[{"bn", " ", "pn", " ", "vh", " ", "vI"}], "-", 
              RowBox[{"bn", " ", "lhO", " ", "pn", " ", "vh", " ", "vI"}], 
              "-", 
              RowBox[{"bn", " ", "lsO", " ", "pn", " ", "u", " ", "vs"}], "-", 
              RowBox[{"bn", " ", "pn", " ", "vI", " ", "vs"}], "+", 
              RowBox[{"bn", " ", "lsO", " ", "pn", " ", "vI", " ", "vs"}], 
              "+", 
              RowBox[{"ba", " ", "vh", " ", "vI", " ", "z"}], "-", 
              RowBox[{"bn", " ", "vh", " ", "vI", " ", "z"}], "-", 
              RowBox[{"ba", " ", "lhO", " ", "vh", " ", "vI", " ", "z"}], "+", 
              RowBox[{"bn", " ", "lhO", " ", "vh", " ", "vI", " ", "z"}], "-", 
              RowBox[{"ba", " ", "pa", " ", "vh", " ", "vI", " ", "z"}], "+", 
              
              RowBox[{
              "ba", " ", "lhO", " ", "pa", " ", "vh", " ", "vI", " ", "z"}], 
              "+", 
              RowBox[{"bn", " ", "pn", " ", "vh", " ", "vI", " ", "z"}], "-", 
              
              RowBox[{
              "bn", " ", "lhO", " ", "pn", " ", "vh", " ", "vI", " ", "z"}], 
              "+", 
              RowBox[{"ba", " ", "pa", " ", "vI", " ", "vs", " ", "z"}], "-", 
              
              RowBox[{
              "ba", " ", "lsO", " ", "pa", " ", "vI", " ", "vs", " ", "z"}], 
              "-", 
              RowBox[{"bn", " ", "pn", " ", "vI", " ", "vs", " ", "z"}], "+", 
              
              RowBox[{
              "bn", " ", "lsO", " ", "pn", " ", "vI", " ", "vs", " ", "z"}]}],
              ")"}], "2"]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "ba"}], " ", "lhO", " ", "u", " ", "vh"}], "+", 
          RowBox[{"bn", " ", "lhO", " ", "u", " ", "vh"}], "+", 
          RowBox[{"ba", " ", "lhO", " ", "pa", " ", "u", " ", "vh"}], "-", 
          RowBox[{"bn", " ", "lhO", " ", "pn", " ", "u", " ", "vh"}], "-", 
          RowBox[{"ba", " ", "vh", " ", "vI"}], "+", 
          RowBox[{"bn", " ", "vh", " ", "vI"}], "+", 
          RowBox[{"ba", " ", "lhO", " ", "vh", " ", "vI"}], "-", 
          RowBox[{"bn", " ", "lhO", " ", "vh", " ", "vI"}], "+", 
          RowBox[{"ba", " ", "pa", " ", "vh", " ", "vI"}], "-", 
          RowBox[{"ba", " ", "lhO", " ", "pa", " ", "vh", " ", "vI"}], "-", 
          RowBox[{"bn", " ", "pn", " ", "vh", " ", "vI"}], "+", 
          RowBox[{"bn", " ", "lhO", " ", "pn", " ", "vh", " ", "vI"}], "-", 
          RowBox[{"ba", " ", "lsO", " ", "pa", " ", "u", " ", "vs"}], "+", 
          RowBox[{"bn", " ", "lsO", " ", "pn", " ", "u", " ", "vs"}], "-", 
          RowBox[{"ba", " ", "pa", " ", "vI", " ", "vs"}], "+", 
          RowBox[{"ba", " ", "lsO", " ", "pa", " ", "vI", " ", "vs"}], "+", 
          RowBox[{"bn", " ", "pn", " ", "vI", " ", "vs"}], "-", 
          RowBox[{"bn", " ", "lsO", " ", "pn", " ", "vI", " ", "vs"}]}], 
         ")"}]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.76525638242496*^9, 3.76527451295613*^9, 
  3.765275857983263*^9, 3.765530996094797*^9, 3.7674247821516047`*^9, 
  3.767424861805449*^9, 3.7674281812643948`*^9, 3.767436671266842*^9, 
  3.767522013783416*^9, 3.76760931904204*^9, 3.767692007672949*^9, 
  3.7676926337787867`*^9, 3.767693384880981*^9, 3.767693416899843*^9, 
  3.767693530202668*^9, 3.767693808551785*^9, 3.7676940708664513`*^9, 
  3.767694133518243*^9, 3.767694403572383*^9, 3.7676948846317453`*^9, 
  3.767695519016388*^9},ExpressionUUID->"dbc9c200-4baa-4eaf-9a3f-\
d793adada79a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"subtest", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ba", "\[Rule]", "3"}], ",", 
     RowBox[{"bn", "\[Rule]", "1"}], ",", 
     RowBox[{"z", "\[Rule]", "0.6"}], ",", 
     RowBox[{"pa", "\[Rule]", "0.1"}], ",", 
     RowBox[{"pn", "\[Rule]", "0.9"}], ",", 
     RowBox[{"vs", "\[Rule]", "0.8"}], ",", 
     RowBox[{"vh", "\[Rule]", "0.95"}], ",", 
     RowBox[{"vI", "\[Rule]", "0.7"}], "  ", ",", 
     RowBox[{"lsO", "\[Rule]", " ", "0.2"}], " ", ",", 
     RowBox[{"lsV", "\[Rule]", " ", "0"}], " ", ",", 
     RowBox[{"lsI", "\[Rule]", " ", "0.8"}], ",", 
     RowBox[{"lhO", "\[Rule]", " ", "0.8"}], ",", 
     RowBox[{"lhI", "\[Rule]", " ", "0.2"}], " ", ",", 
     RowBox[{"u", "\[Rule]", " ", "0.1"}]}], " ", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.765256392558564*^9},ExpressionUUID->"01677ce1-98e0-4e0d-b548-\
97e28f3e849f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Fasols", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "/.", "subtest"}], " ", 
  
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "check", " ", "it", " ", "is", " ", "stable", " ", "qhat", " ", "with", 
     " ", "values"}], ",", " ", 
    RowBox[{
     RowBox[{"select", " ", "positive", " ", "q"}], "-", "hat"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Fasols", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lhO", "\[Rule]", "LHO"}], ",", 
       RowBox[{"lhI", " ", "\[Rule]", " ", "LHI"}], ",", " ", 
       RowBox[{"lsO", " ", "\[Rule]", " ", "LSO"}], ",", " ", 
       RowBox[{"lsI", "\[Rule]", " ", "LSI"}]}], "}"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pa", "\[Rule]", "0"}], ",", 
      RowBox[{"pn", "\[Rule]", "1"}]}], "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"copy", " ", "and", " ", "past", " ", "solution", " ", "below"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{"Fasols", "/.", "subtest"}]}]}], "Input",
 CellChangeTimes->{
  3.76525717590551*^9, {3.76525730557907*^9, 3.7652573070643253`*^9}, {
   3.767609336554585*^9, 3.767609394996668*^9}, 3.767691980916082*^9, {
   3.76769202647819*^9, 
   3.7676920568755093`*^9}},ExpressionUUID->"d648206e-ed93-46e6-b41b-\
2288fb0e89ce"],

Cell[BoxData["0.48083472299048263`"], "Output",
 CellChangeTimes->{
  3.765256407876418*^9, 3.76525717750564*^9, 3.765274519207049*^9, 
   3.765275864040599*^9, 3.765531023148436*^9, 3.7674247897011013`*^9, 
   3.767424873557942*^9, 3.7674281813824673`*^9, 3.7674366713999662`*^9, 
   3.767522013978409*^9, {3.767609319164377*^9, 3.7676093272249413`*^9}, {
   3.767609359133223*^9, 3.76760939975657*^9}, {3.767692021198204*^9, 
   3.76769206070743*^9}, 3.767692145276664*^9, 3.7676926339457817`*^9, 
   3.767693385024651*^9, 3.767693417012068*^9, 3.767693539983321*^9, 
   3.7676938087548037`*^9, 3.767694071024399*^9, 3.767694133665647*^9, 
   3.767694403679022*^9, 3.767694884734222*^9, 
   3.7676955311344833`*^9},ExpressionUUID->"7cd8c2f9-fc87-4643-8526-\
1572233b7a31"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    RowBox[{"2", " ", "ba", " ", "vh", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"LHO", " ", 
        RowBox[{"(", 
         RowBox[{"u", "-", "vI"}], ")"}]}], "+", "vI"}], ")"}]}], "-", 
    RowBox[{"2", " ", "bn", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"LSO", " ", 
        RowBox[{"(", 
         RowBox[{"u", "-", "vI"}], ")"}]}], "+", "vI"}], ")"}], " ", 
     "vs"}]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "bn"}], " ", "LSO", " ", "u", " ", "vs"}], "-", 
    RowBox[{"bn", " ", "vI", " ", "vs"}], "+", 
    RowBox[{"bn", " ", "LSO", " ", "vI", " ", "vs"}], "+", 
    RowBox[{"ba", " ", "vh", " ", "vI", " ", "z"}], "-", 
    RowBox[{"ba", " ", "LHO", " ", "vh", " ", "vI", " ", "z"}], "-", 
    RowBox[{"bn", " ", "vI", " ", "vs", " ", "z"}], "+", 
    RowBox[{"bn", " ", "LSO", " ", "vI", " ", "vs", " ", "z"}], "+", 
    SqrtBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", "bn", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "LSO"}], ")"}], " ", "vI", " ", "vs", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ba", " ", "vh", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"LHO", " ", 
             RowBox[{"(", 
              RowBox[{"u", "-", "vI"}], ")"}]}], "+", "vI"}], ")"}]}], "-", 
         RowBox[{"bn", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"LSO", " ", 
             RowBox[{"(", 
              RowBox[{"u", "-", "vI"}], ")"}]}], "+", "vI"}], ")"}], " ", 
          "vs"}]}], ")"}], " ", "z"}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ba", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "LHO"}], ")"}], " ", "vh", " ", "vI", 
          " ", "z"}], "+", 
         RowBox[{"bn", " ", "vs", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"vI", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "z"}], ")"}]}], "+", 
            RowBox[{"LSO", " ", 
             RowBox[{"(", 
              RowBox[{"u", "-", 
               RowBox[{"vI", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", "z"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
        ")"}], "2"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.765256407876418*^9, 3.76525717750564*^9, 3.765274519207049*^9, 
   3.765275864040599*^9, 3.765531023148436*^9, 3.7674247897011013`*^9, 
   3.767424873557942*^9, 3.7674281813824673`*^9, 3.7674366713999662`*^9, 
   3.767522013978409*^9, {3.767609319164377*^9, 3.7676093272249413`*^9}, {
   3.767609359133223*^9, 3.76760939975657*^9}, {3.767692021198204*^9, 
   3.76769206070743*^9}, 3.767692145276664*^9, 3.7676926339457817`*^9, 
   3.767693385024651*^9, 3.767693417012068*^9, 3.767693539983321*^9, 
   3.7676938087548037`*^9, 3.767694071024399*^9, 3.767694133665647*^9, 
   3.767694403679022*^9, 3.767694884734222*^9, 
   3.767695531352641*^9},ExpressionUUID->"41cdcf5a-ac44-4aff-9912-\
0d13bff2b606"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Fa", "\[Rule]", "0.48083472299048263`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Fa", "\[Rule]", 
     RowBox[{"-", "1.9612120814810536`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.765256407876418*^9, 3.76525717750564*^9, 3.765274519207049*^9, 
   3.765275864040599*^9, 3.765531023148436*^9, 3.7674247897011013`*^9, 
   3.767424873557942*^9, 3.7674281813824673`*^9, 3.7674366713999662`*^9, 
   3.767522013978409*^9, {3.767609319164377*^9, 3.7676093272249413`*^9}, {
   3.767609359133223*^9, 3.76760939975657*^9}, {3.767692021198204*^9, 
   3.76769206070743*^9}, 3.767692145276664*^9, 3.7676926339457817`*^9, 
   3.767693385024651*^9, 3.767693417012068*^9, 3.767693539983321*^9, 
   3.7676938087548037`*^9, 3.767694071024399*^9, 3.767694133665647*^9, 
   3.767694403679022*^9, 3.767694884734222*^9, 
   3.7676955313640633`*^9},ExpressionUUID->"1dcbdcb2-5646-4ddf-9bb6-\
0d242eb0d6e8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QHAT", "[", 
    RowBox[{"LHO_", ",", "LSO_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      RowBox[{"2", " ", "ba", " ", "vh", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"LHO", " ", 
          RowBox[{"(", 
           RowBox[{"u", "-", "vI"}], ")"}]}], "+", "vI"}], ")"}]}], "-", 
      RowBox[{"2", " ", "bn", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"LSO", " ", 
          RowBox[{"(", 
           RowBox[{"u", "-", "vI"}], ")"}]}], "+", "vI"}], ")"}], " ", 
       "vs"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "bn"}], " ", "LSO", " ", "u", " ", "vs"}], "-", 
      RowBox[{"bn", " ", "vI", " ", "vs"}], "+", 
      RowBox[{"bn", " ", "LSO", " ", "vI", " ", "vs"}], "+", 
      RowBox[{"ba", " ", "vh", " ", "vI", " ", "z"}], "-", 
      RowBox[{"ba", " ", "LHO", " ", "vh", " ", "vI", " ", "z"}], "-", 
      RowBox[{"bn", " ", "vI", " ", "vs", " ", "z"}], "+", 
      RowBox[{"bn", " ", "LSO", " ", "vI", " ", "vs", " ", "z"}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", "bn", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "LSO"}], ")"}], " ", "vI", " ", "vs", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ba", " ", "vh", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"LHO", " ", 
               RowBox[{"(", 
                RowBox[{"u", "-", "vI"}], ")"}]}], "+", "vI"}], ")"}]}], "-", 
           
           RowBox[{"bn", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"LSO", " ", 
               RowBox[{"(", 
                RowBox[{"u", "-", "vI"}], ")"}]}], "+", "vI"}], ")"}], " ", 
            "vs"}]}], ")"}], " ", "z"}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ba", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "LHO"}], ")"}], " ", "vh", " ", "vI", 
            " ", "z"}], "+", 
           RowBox[{"bn", " ", "vs", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"vI", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "z"}], ")"}]}], "+", 
              RowBox[{"LSO", " ", 
               RowBox[{"(", 
                RowBox[{"u", "-", 
                 RowBox[{"vI", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", "z"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
          ")"}], "2"]}]]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7652571963728933`*^9, 3.765257205617166*^9}, {
  3.765257312545537*^9, 3.765257312633198*^9}, {3.7676094526707983`*^9, 
  3.7676094537543297`*^9}, {3.7676920753162727`*^9, 3.7676920897514677`*^9}, {
  3.767693801166294*^9, 
  3.7676938044164677`*^9}},ExpressionUUID->"7d30440f-8a98-43af-a918-\
2ac7cf324333"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"AA2", "=", 
    RowBox[{"AA", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Na", "\[Rule]", "Qh"}], ",", 
       RowBox[{"Nn", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{"1", "-", "Qh"}], ")"}]}]}], "}"}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.76525643370063*^9, 3.765256443430089*^9}, {
  3.7652564735917397`*^9, 
  3.765256493702916*^9}},ExpressionUUID->"97ecbd4f-2901-4a79-b1b1-\
664bc7f4fa78"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AA3", "=", "AA2"}], ";"}]], "Input",
 CellChangeTimes->{{3.7652565216462803`*^9, 3.765256525150124*^9}, {
   3.7652565567982264`*^9, 3.7652565732615356`*^9}, {3.7652566046855173`*^9, 
   3.765256604773265*^9}, 
   3.767692117201494*^9},ExpressionUUID->"ced1abee-ec18-4b84-9a16-\
c56d67e238f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AA4", "=", 
    RowBox[{"AA3", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pa", "\[Rule]", "0"}], ",", 
       RowBox[{"pn", "\[Rule]", "1"}]}], "}"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "make", " ", "cues", " ", "100", "%", " ", "reliable", " ", "to", " ", 
    "simplify", " ", "solution"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.765256584374125*^9, 3.765256610949337*^9}, 
   3.7676921249538107`*^9, 
   3.767692155834331*^9},ExpressionUUID->"096290a6-fac9-4ea9-b8f8-\
188a29cf617f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LL", "=", 
  RowBox[{"Eigenvalues", "[", "AA4", "]"}]}]], "Input",
 CellChangeTimes->{{3.765256660990233*^9, 
  3.765256661294079*^9}},ExpressionUUID->"0afb786f-e768-4ed0-9aee-\
dfbe7576ac77"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"\[Sqrt]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", "ba", " ", "lhO", " ", "Qh", " ", "vh"}], 
       "-", 
       RowBox[{
        FractionBox["1", "2"], " ", "ba", " ", "lhO", " ", "Qh", " ", "u", 
        " ", "vh"}], "+", 
       FractionBox[
        RowBox[{"bn", " ", "lsO", " ", "vs"}], "2"], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", "bn", " ", "lsO", " ", "Qh", " ", "vs"}], 
       "+", 
       RowBox[{
        FractionBox["1", "2"], " ", "bn", " ", "lsO", " ", "Qh", " ", "u", 
        " ", "vs"}], "+", 
       FractionBox[
        RowBox[{"bn", " ", "vI", " ", "vs"}], "2"], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", "bn", " ", "lsO", " ", "vI", " ", "vs"}], 
       "+", 
       RowBox[{
        FractionBox["1", "2"], " ", "ba", " ", "vh", " ", "vI", " ", "z"}], 
       "-", 
       RowBox[{
        FractionBox["1", "2"], " ", "ba", " ", "lhO", " ", "vh", " ", "vI", 
        " ", "z"}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", "bn", " ", "vI", " ", "vs", " ", "z"}], 
       "+", 
       RowBox[{
        FractionBox["1", "2"], " ", "bn", " ", "lsO", " ", "vI", " ", "vs", 
        " ", "z"}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "ba"}], " ", "lhO", " ", "Qh", " ", "vh"}], "+", 
              RowBox[{"ba", " ", "lhO", " ", "Qh", " ", "u", " ", "vh"}], "-", 
              RowBox[{"bn", " ", "lsO", " ", "vs"}], "+", 
              RowBox[{"bn", " ", "lsO", " ", "Qh", " ", "vs"}], "-", 
              RowBox[{"bn", " ", "lsO", " ", "Qh", " ", "u", " ", "vs"}], "-", 
              RowBox[{"bn", " ", "vI", " ", "vs"}], "+", 
              RowBox[{"bn", " ", "lsO", " ", "vI", " ", "vs"}], "-", 
              RowBox[{"ba", " ", "vh", " ", "vI", " ", "z"}], "+", 
              RowBox[{"ba", " ", "lhO", " ", "vh", " ", "vI", " ", "z"}], "+", 
              RowBox[{"bn", " ", "vI", " ", "vs", " ", "z"}], "-", 
              RowBox[{"bn", " ", "lsO", " ", "vI", " ", "vs", " ", "z"}]}], 
             ")"}], "2"], "-", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "ba", " ", "bn", " ", "lhO", " ", "Qh", " ", "vh", " ", "vI", 
               " ", "vs"}], "-", 
              RowBox[{
              "ba", " ", "bn", " ", "lsO", " ", "Qh", " ", "vh", " ", "vI", 
               " ", "vs"}], "-", 
              RowBox[{
              "ba", " ", "bn", " ", "lhO", " ", "Qh", " ", "u", " ", "vh", 
               " ", "vI", " ", "vs"}], "+", 
              RowBox[{
              "ba", " ", "bn", " ", "lsO", " ", "Qh", " ", "u", " ", "vh", 
               " ", "vI", " ", "vs"}], "-", 
              RowBox[{
              "ba", " ", "bn", " ", "lhO", " ", "vh", " ", "vI", " ", "vs", 
               " ", "z"}], "+", 
              RowBox[{
              "ba", " ", "bn", " ", "lsO", " ", "vh", " ", "vI", " ", "vs", 
               " ", "z"}]}], ")"}]}]}], ")"}]}]}]}], ")"}]}]}], ",", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", "ba", " ", "lhO", " ", "Qh", " ", "vh"}], 
      "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "ba", " ", "lhO", " ", "Qh", " ", "u", " ",
        "vh"}], "+", 
      FractionBox[
       RowBox[{"bn", " ", "lsO", " ", "vs"}], "2"], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "bn", " ", "lsO", " ", "Qh", " ", "vs"}], 
      "+", 
      RowBox[{
       FractionBox["1", "2"], " ", "bn", " ", "lsO", " ", "Qh", " ", "u", " ",
        "vs"}], "+", 
      FractionBox[
       RowBox[{"bn", " ", "vI", " ", "vs"}], "2"], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "bn", " ", "lsO", " ", "vI", " ", "vs"}], 
      "+", 
      RowBox[{
       FractionBox["1", "2"], " ", "ba", " ", "vh", " ", "vI", " ", "z"}], 
      "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "ba", " ", "lhO", " ", "vh", " ", "vI", 
       " ", "z"}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "bn", " ", "vI", " ", "vs", " ", "z"}], 
      "+", 
      RowBox[{
       FractionBox["1", "2"], " ", "bn", " ", "lsO", " ", "vI", " ", "vs", 
       " ", "z"}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "ba"}], " ", "lhO", " ", "Qh", " ", "vh"}], "+", 
             RowBox[{"ba", " ", "lhO", " ", "Qh", " ", "u", " ", "vh"}], "-", 
             
             RowBox[{"bn", " ", "lsO", " ", "vs"}], "+", 
             RowBox[{"bn", " ", "lsO", " ", "Qh", " ", "vs"}], "-", 
             RowBox[{"bn", " ", "lsO", " ", "Qh", " ", "u", " ", "vs"}], "-", 
             
             RowBox[{"bn", " ", "vI", " ", "vs"}], "+", 
             RowBox[{"bn", " ", "lsO", " ", "vI", " ", "vs"}], "-", 
             RowBox[{"ba", " ", "vh", " ", "vI", " ", "z"}], "+", 
             RowBox[{"ba", " ", "lhO", " ", "vh", " ", "vI", " ", "z"}], "+", 
             
             RowBox[{"bn", " ", "vI", " ", "vs", " ", "z"}], "-", 
             RowBox[{"bn", " ", "lsO", " ", "vI", " ", "vs", " ", "z"}]}], 
            ")"}], "2"], "-", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
             "ba", " ", "bn", " ", "lhO", " ", "Qh", " ", "vh", " ", "vI", 
              " ", "vs"}], "-", 
             RowBox[{
             "ba", " ", "bn", " ", "lsO", " ", "Qh", " ", "vh", " ", "vI", 
              " ", "vs"}], "-", 
             RowBox[{
             "ba", " ", "bn", " ", "lhO", " ", "Qh", " ", "u", " ", "vh", " ",
               "vI", " ", "vs"}], "+", 
             RowBox[{
             "ba", " ", "bn", " ", "lsO", " ", "Qh", " ", "u", " ", "vh", " ",
               "vI", " ", "vs"}], "-", 
             RowBox[{
             "ba", " ", "bn", " ", "lhO", " ", "vh", " ", "vI", " ", "vs", 
              " ", "z"}], "+", 
             RowBox[{
             "ba", " ", "bn", " ", "lsO", " ", "vh", " ", "vI", " ", "vs", 
              " ", "z"}]}], ")"}]}]}], ")"}]}]}]}], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"\[Sqrt]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", "ba", " ", "lhO", " ", "Qh", " ", "vh"}], 
       "-", 
       RowBox[{
        FractionBox["1", "2"], " ", "ba", " ", "lhO", " ", "Qh", " ", "u", 
        " ", "vh"}], "+", 
       FractionBox[
        RowBox[{"bn", " ", "lsO", " ", "vs"}], "2"], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", "bn", " ", "lsO", " ", "Qh", " ", "vs"}], 
       "+", 
       RowBox[{
        FractionBox["1", "2"], " ", "bn", " ", "lsO", " ", "Qh", " ", "u", 
        " ", "vs"}], "+", 
       FractionBox[
        RowBox[{"bn", " ", "vI", " ", "vs"}], "2"], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", "bn", " ", "lsO", " ", "vI", " ", "vs"}], 
       "+", 
       RowBox[{
        FractionBox["1", "2"], " ", "ba", " ", "vh", " ", "vI", " ", "z"}], 
       "-", 
       RowBox[{
        FractionBox["1", "2"], " ", "ba", " ", "lhO", " ", "vh", " ", "vI", 
        " ", "z"}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", "bn", " ", "vI", " ", "vs", " ", "z"}], 
       "+", 
       RowBox[{
        FractionBox["1", "2"], " ", "bn", " ", "lsO", " ", "vI", " ", "vs", 
        " ", "z"}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "ba"}], " ", "lhO", " ", "Qh", " ", "vh"}], "+", 
              RowBox[{"ba", " ", "lhO", " ", "Qh", " ", "u", " ", "vh"}], "-", 
              RowBox[{"bn", " ", "lsO", " ", "vs"}], "+", 
              RowBox[{"bn", " ", "lsO", " ", "Qh", " ", "vs"}], "-", 
              RowBox[{"bn", " ", "lsO", " ", "Qh", " ", "u", " ", "vs"}], "-", 
              RowBox[{"bn", " ", "vI", " ", "vs"}], "+", 
              RowBox[{"bn", " ", "lsO", " ", "vI", " ", "vs"}], "-", 
              RowBox[{"ba", " ", "vh", " ", "vI", " ", "z"}], "+", 
              RowBox[{"ba", " ", "lhO", " ", "vh", " ", "vI", " ", "z"}], "+", 
              RowBox[{"bn", " ", "vI", " ", "vs", " ", "z"}], "-", 
              RowBox[{"bn", " ", "lsO", " ", "vI", " ", "vs", " ", "z"}]}], 
             ")"}], "2"], "-", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "ba", " ", "bn", " ", "lhO", " ", "Qh", " ", "vh", " ", "vI", 
               " ", "vs"}], "-", 
              RowBox[{
              "ba", " ", "bn", " ", "lsO", " ", "Qh", " ", "vh", " ", "vI", 
               " ", "vs"}], "-", 
              RowBox[{
              "ba", " ", "bn", " ", "lhO", " ", "Qh", " ", "u", " ", "vh", 
               " ", "vI", " ", "vs"}], "+", 
              RowBox[{
              "ba", " ", "bn", " ", "lsO", " ", "Qh", " ", "u", " ", "vh", 
               " ", "vI", " ", "vs"}], "-", 
              RowBox[{
              "ba", " ", "bn", " ", "lhO", " ", "vh", " ", "vI", " ", "vs", 
               " ", "z"}], "+", 
              RowBox[{
              "ba", " ", "bn", " ", "lsO", " ", "vh", " ", "vI", " ", "vs", 
               " ", "z"}]}], ")"}]}]}], ")"}]}]}]}], ")"}]}]}], ",", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", "ba", " ", "lhO", " ", "Qh", " ", "vh"}], 
      "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "ba", " ", "lhO", " ", "Qh", " ", "u", " ",
        "vh"}], "+", 
      FractionBox[
       RowBox[{"bn", " ", "lsO", " ", "vs"}], "2"], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "bn", " ", "lsO", " ", "Qh", " ", "vs"}], 
      "+", 
      RowBox[{
       FractionBox["1", "2"], " ", "bn", " ", "lsO", " ", "Qh", " ", "u", " ",
        "vs"}], "+", 
      FractionBox[
       RowBox[{"bn", " ", "vI", " ", "vs"}], "2"], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "bn", " ", "lsO", " ", "vI", " ", "vs"}], 
      "+", 
      RowBox[{
       FractionBox["1", "2"], " ", "ba", " ", "vh", " ", "vI", " ", "z"}], 
      "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "ba", " ", "lhO", " ", "vh", " ", "vI", 
       " ", "z"}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "bn", " ", "vI", " ", "vs", " ", "z"}], 
      "+", 
      RowBox[{
       FractionBox["1", "2"], " ", "bn", " ", "lsO", " ", "vI", " ", "vs", 
       " ", "z"}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "ba"}], " ", "lhO", " ", "Qh", " ", "vh"}], "+", 
             RowBox[{"ba", " ", "lhO", " ", "Qh", " ", "u", " ", "vh"}], "-", 
             
             RowBox[{"bn", " ", "lsO", " ", "vs"}], "+", 
             RowBox[{"bn", " ", "lsO", " ", "Qh", " ", "vs"}], "-", 
             RowBox[{"bn", " ", "lsO", " ", "Qh", " ", "u", " ", "vs"}], "-", 
             
             RowBox[{"bn", " ", "vI", " ", "vs"}], "+", 
             RowBox[{"bn", " ", "lsO", " ", "vI", " ", "vs"}], "-", 
             RowBox[{"ba", " ", "vh", " ", "vI", " ", "z"}], "+", 
             RowBox[{"ba", " ", "lhO", " ", "vh", " ", "vI", " ", "z"}], "+", 
             
             RowBox[{"bn", " ", "vI", " ", "vs", " ", "z"}], "-", 
             RowBox[{"bn", " ", "lsO", " ", "vI", " ", "vs", " ", "z"}]}], 
            ")"}], "2"], "-", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
             "ba", " ", "bn", " ", "lhO", " ", "Qh", " ", "vh", " ", "vI", 
              " ", "vs"}], "-", 
             RowBox[{
             "ba", " ", "bn", " ", "lsO", " ", "Qh", " ", "vh", " ", "vI", 
              " ", "vs"}], "-", 
             RowBox[{
             "ba", " ", "bn", " ", "lhO", " ", "Qh", " ", "u", " ", "vh", " ",
               "vI", " ", "vs"}], "+", 
             RowBox[{
             "ba", " ", "bn", " ", "lsO", " ", "Qh", " ", "u", " ", "vh", " ",
               "vI", " ", "vs"}], "-", 
             RowBox[{
             "ba", " ", "bn", " ", "lhO", " ", "vh", " ", "vI", " ", "vs", 
              " ", "z"}], "+", 
             RowBox[{
             "ba", " ", "bn", " ", "lsO", " ", "vh", " ", "vI", " ", "vs", 
              " ", "z"}]}], ")"}]}]}], ")"}]}]}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7652566672999477`*^9, 3.7652579513478413`*^9, 
  3.765275906397736*^9, 3.765531054782803*^9, 3.7674248250050583`*^9, 
  3.767424902019732*^9, 3.767428185823121*^9, 3.767436673648881*^9, 
  3.7675220190055723`*^9, 3.76760954249347*^9, 3.76769282773333*^9, 
  3.767693385429043*^9, 3.767693417218659*^9, 3.767693566519272*^9, 
  3.767693809200966*^9, 3.767694071254086*^9, 3.767694133861741*^9, 
  3.767694403825863*^9, 3.767694884927629*^9, 
  3.767695543917831*^9},ExpressionUUID->"f5c87d90-359d-475f-b0df-\
eb67ec05ff62"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LL", "/.", "subtest"}], " ", "/.", " ", 
  RowBox[{"Qh", " ", "\[Rule]", " ", "0.5"}]}]], "Input",
 CellChangeTimes->{
  3.767692853167289*^9},ExpressionUUID->"4b58fb61-334d-49a1-831f-\
293ece125666"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.29765917182323876`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.29765917182323876`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"-", "1.273263909238967`"}], ",", "1.273263909238967`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.765256682922673*^9, 3.765257951479328*^9, 
  3.765275909640439*^9, 3.7655310663266563`*^9, 3.767424830436243*^9, 
  3.767424907605268*^9, 3.767428185985194*^9, 3.767436673809209*^9, 
  3.767522019293985*^9, 3.767609549703025*^9, 3.7676928546511583`*^9, 
  3.767693385587051*^9, 3.7676934173503428`*^9, 3.767693577904607*^9, 
  3.7676937113615017`*^9, 3.7676938093378677`*^9, 3.767694071371364*^9, 
  3.7676941340192966`*^9, 3.7676944039184217`*^9, 3.767694885020871*^9, 
  3.767695544023369*^9},ExpressionUUID->"b40569c1-d99d-4f4b-bfa4-\
d4578de0026e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"LL", "[", 
   RowBox[{"[", "4", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.765256696261784*^9, 3.765256707461261*^9}, {
  3.767609558862402*^9, 
  3.767609558928729*^9}},ExpressionUUID->"53f967b4-d0ff-4920-bc71-\
0a30ace6b1c1"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SqrtBox["2"]], 
  RowBox[{"(", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ba", " ", "lhO", " ", "Qh", " ", "vh"}], "-", 
      RowBox[{"ba", " ", "lhO", " ", "Qh", " ", "u", " ", "vh"}], "+", 
      RowBox[{"bn", " ", "lsO", " ", "vs"}], "-", 
      RowBox[{"bn", " ", "lsO", " ", "Qh", " ", "vs"}], "+", 
      RowBox[{"bn", " ", "lsO", " ", "Qh", " ", "u", " ", "vs"}], "+", 
      RowBox[{"bn", " ", "vI", " ", "vs"}], "-", 
      RowBox[{"bn", " ", "lsO", " ", "vI", " ", "vs"}], "+", 
      RowBox[{"ba", " ", "vh", " ", "vI", " ", "z"}], "-", 
      RowBox[{"ba", " ", "lhO", " ", "vh", " ", "vI", " ", "z"}], "-", 
      RowBox[{"bn", " ", "vI", " ", "vs", " ", "z"}], "+", 
      RowBox[{"bn", " ", "lsO", " ", "vI", " ", "vs", " ", "z"}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"4", " ", "ba", " ", "bn", " ", 
         RowBox[{"(", 
          RowBox[{"lhO", "-", "lsO"}], ")"}], " ", "vh", " ", "vI", " ", "vs",
          " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Qh", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "u"}], ")"}]}], "+", "z"}], ")"}]}], 
        "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"bn", " ", "vs", " ", 
            RowBox[{"(", 
             RowBox[{"lsO", "+", 
              RowBox[{"lsO", " ", "Qh", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "u"}], ")"}]}], "+", "vI", "+", 
              RowBox[{"lsO", " ", "vI", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "z"}], ")"}]}], "-", 
              RowBox[{"vI", " ", "z"}]}], ")"}]}], "-", 
           RowBox[{"ba", " ", "vh", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"lhO", " ", "Qh", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "u"}], ")"}]}], "-", 
              RowBox[{"vI", " ", "z"}], "+", 
              RowBox[{"lhO", " ", "vI", " ", "z"}]}], ")"}]}]}], ")"}], 
         "2"]}]]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7676935789336033`*^9, 3.767693712313245*^9, 
  3.7676938100219097`*^9, 3.7676940714919443`*^9, 3.767694134168182*^9, 
  3.767694404002618*^9, 3.7676948851028*^9, 
  3.767695544698659*^9},ExpressionUUID->"04cc6e70-cbd1-41c7-a150-\
9ba9625afa19"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Lambda1", "[", " ", 
    RowBox[{"lsO_", ",", " ", "lhO_", ",", "LHO_", ",", "LSO_"}], "]"}], ":=",
    " ", 
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], 
    RowBox[{"(", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ba", " ", "lhO", " ", 
         RowBox[{"QHAT", "[", 
          RowBox[{"LHO", ",", "LSO"}], "]"}], " ", "vh"}], "-", 
        RowBox[{"ba", " ", "lhO", " ", 
         RowBox[{"QHAT", "[", 
          RowBox[{"LHO", ",", "LSO"}], "]"}], " ", "u", " ", "vh"}], "+", 
        RowBox[{"bn", " ", "lsO", " ", "vs"}], "-", 
        RowBox[{"bn", " ", "lsO", " ", 
         RowBox[{"QHAT", "[", 
          RowBox[{"LHO", ",", "LSO"}], "]"}], " ", "vs"}], "+", 
        RowBox[{"bn", " ", "lsO", " ", 
         RowBox[{"QHAT", "[", 
          RowBox[{"LHO", ",", "LSO"}], "]"}], " ", "u", " ", "vs"}], "+", 
        RowBox[{"bn", " ", "vI", " ", "vs"}], "-", 
        RowBox[{"bn", " ", "lsO", " ", "vI", " ", "vs"}], "+", 
        RowBox[{"ba", " ", "vh", " ", "vI", " ", "z"}], "-", 
        RowBox[{"ba", " ", "lhO", " ", "vh", " ", "vI", " ", "z"}], "-", 
        RowBox[{"bn", " ", "vI", " ", "vs", " ", "z"}], "+", 
        RowBox[{"bn", " ", "lsO", " ", "vI", " ", "vs", " ", "z"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"4", " ", "ba", " ", "bn", " ", 
           RowBox[{"(", 
            RowBox[{"lhO", "-", "lsO"}], ")"}], " ", "vh", " ", "vI", " ", 
           "vs", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"QHAT", "[", 
               RowBox[{"LHO", ",", "LSO"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "u"}], ")"}]}], "+", "z"}], ")"}]}], 
          "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"bn", " ", "vs", " ", 
              RowBox[{"(", 
               RowBox[{"lsO", "+", 
                RowBox[{"lsO", " ", 
                 RowBox[{"QHAT", "[", 
                  RowBox[{"LHO", ",", "LSO"}], "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "u"}], ")"}]}], "+", "vI", "+", 
                RowBox[{"lsO", " ", "vI", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "z"}], ")"}]}], "-", 
                RowBox[{"vI", " ", "z"}]}], ")"}]}], "-", 
             RowBox[{"ba", " ", "vh", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"lhO", " ", 
                 RowBox[{"QHAT", "[", 
                  RowBox[{"LHO", ",", "LSO"}], "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "u"}], ")"}]}], "-", 
                RowBox[{"vI", " ", "z"}], "+", 
                RowBox[{"lhO", " ", "vI", " ", "z"}]}], ")"}]}]}], ")"}], 
           "2"]}]]}], ")"}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7652567971466093`*^9, 3.765256799199314*^9}, {
   3.765275959751657*^9, 3.7652759610492163`*^9}, 3.767610013508255*^9, {
   3.767692874221672*^9, 3.767692941527948*^9}, {3.767693006890586*^9, 
   3.767693065988413*^9}, {3.767693269137322*^9, 
   3.7676932758862543`*^9}},ExpressionUUID->"b107766b-2054-4aca-a94e-\
f48c6e615cff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DlsO", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"Lambda1", "[", 
       RowBox[{"lsO", ",", " ", "lhO", ",", "LHO", ",", "LSO"}], "]"}], ",", 
      "lsO"}], "]"}], "/.", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LHO", " ", "\[Rule]", " ", "lhO"}], ",", 
      RowBox[{"LSO", "\[Rule]", " ", "lsO"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.761039137704311*^9, 3.761039140223597*^9}, {
   3.761039947932416*^9, 3.7610399637493896`*^9}, 3.761474170287904*^9, 
   3.765257056164832*^9, 3.765277258763052*^9, 3.76761011638466*^9, {
   3.7676929811844873`*^9, 3.767692994952784*^9}, {3.767693089850563*^9, 
   3.767693114127366*^9}, 3.767693251326187*^9, 3.767693349396864*^9, {
   3.767693752170061*^9, 3.7676937543966427`*^9}, 
   3.7676938843047237`*^9},ExpressionUUID->"f9cb4952-1fea-4446-baef-\
60f1f9df013f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DlhO", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"Lambda1", "[", 
       RowBox[{"lsO", ",", " ", "lhO", ",", "LHO", ",", "LSO"}], "]"}], ",", 
      "lhO"}], "]"}], "/.", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LHO", " ", "\[Rule]", " ", "lhO"}], ",", 
      RowBox[{"LSO", "\[Rule]", " ", "lsO"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.761039160474967*^9, 3.761039161070486*^9}, {
   3.761039971502843*^9, 3.761039978318613*^9}, 3.7614741708955383`*^9, 
   3.765257056956992*^9, 3.765277260275095*^9, {3.767523908684924*^9, 
   3.76752395339323*^9}, {3.767523991016198*^9, 3.767524066065748*^9}, 
   3.767610118621893*^9, 3.767693139410968*^9, {3.767693237794073*^9, 
   3.767693241133429*^9}, {3.767693760619046*^9, 
   3.76769376171041*^9}},ExpressionUUID->"73311282-88ed-486c-8d2c-\
b1709977144a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"try", " ", "and", " ", "graph"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lsOstart", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lhOstart", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imax", "=", "2000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lsItab", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lhItab", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lsOtab", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lhOtab", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DlsOtab", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DlhOtab", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"delta", "=", "0.04"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sub2", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ba", "\[Rule]", "2"}], ",", 
       RowBox[{"bn", "\[Rule]", "1"}], ",", 
       RowBox[{"z", "\[Rule]", "0.8"}], ",", 
       RowBox[{"vs", "\[Rule]", "0.4"}], ",", 
       RowBox[{"vh", "\[Rule]", "0.9"}], ",", 
       RowBox[{"vI", "\[Rule]", "0.8"}], "  ", ",", 
       RowBox[{"u", "\[Rule]", "0.05"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"lsOtab", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "lsOstart"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"lhOtab", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", "lhOstart"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DlsOtab", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", 
     RowBox[{
      RowBox[{"DlsO", "/.", "sub2"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"lsO", "\[Rule]", "lsOstart"}], ",", 
        RowBox[{"lhO", "\[Rule]", "lhOstart"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DlhOtab", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "=", 
     RowBox[{
      RowBox[{"DlhO", "/.", "sub2"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"lsO", "\[Rule]", "lsOstart"}], ",", 
        RowBox[{"lhO", "\[Rule]", "lhOstart"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.761036297954472*^9, 3.761036369789155*^9}, {
   3.761036595481844*^9, 3.761036604582141*^9}, {3.761040020665888*^9, 
   3.761040038002792*^9}, 3.761040098778673*^9, {3.761040136825926*^9, 
   3.761040140111565*^9}, {3.761040170723139*^9, 3.761040180746312*^9}, {
   3.761040235569373*^9, 3.761040268971602*^9}, {3.76104032395219*^9, 
   3.7610403766601343`*^9}, {3.7610406476389837`*^9, 3.761040667326223*^9}, {
   3.761040713758712*^9, 3.76104071382421*^9}, {3.761040900332964*^9, 
   3.76104090056889*^9}, {3.7610409508029633`*^9, 3.761041022612879*^9}, 
   3.761041058839445*^9, {3.76104113702949*^9, 3.7610411798264837`*^9}, {
   3.761041276411916*^9, 3.761041287841282*^9}, {3.761041619254726*^9, 
   3.761041621424881*^9}, {3.7610417382844877`*^9, 3.761041753267722*^9}, {
   3.761474341101612*^9, 3.761474346412177*^9}, {3.7614743765752573`*^9, 
   3.761474385844616*^9}, 3.7614760651714687`*^9, {3.761476498849394*^9, 
   3.761476553536482*^9}, {3.765191380990834*^9, 3.765191381342682*^9}, {
   3.76519318167113*^9, 3.7651931817441063`*^9}, {3.7651936013830633`*^9, 
   3.7651936151676617`*^9}, {3.765193689390979*^9, 3.7651936894380703`*^9}, {
   3.7651937245581293`*^9, 3.765193728366107*^9}, {3.765194722957922*^9, 
   3.765194723765059*^9}, {3.765195975109619*^9, 3.7651959764844017`*^9}, {
   3.765196035005024*^9, 3.765196050900456*^9}, {3.7651960867324266`*^9, 
   3.765196109308321*^9}, {3.765197735684914*^9, 3.765197755115975*^9}, {
   3.765198187061131*^9, 3.765198187245927*^9}, {3.765198434831008*^9, 
   3.7651984655017548`*^9}, {3.76519874442305*^9, 3.765198746326009*^9}, {
   3.7651991804143333`*^9, 3.765199182814208*^9}, {3.7651996321105137`*^9, 
   3.765199641086194*^9}, {3.7652568820543127`*^9, 3.765256893029104*^9}, {
   3.7652752477956247`*^9, 3.7652752483794394`*^9}, {3.7652753828196983`*^9, 
   3.7652754034433804`*^9}, {3.765275454507279*^9, 3.7652754576831007`*^9}, {
   3.7652756359793673`*^9, 3.7652756360411386`*^9}, {3.7652764230273447`*^9, 
   3.765276425818658*^9}, {3.765276734922415*^9, 3.765276734970142*^9}, {
   3.76527685243519*^9, 3.7652768528180943`*^9}, {3.765276918226337*^9, 
   3.7652769191459627`*^9}, {3.76527698391422*^9, 3.765276987793996*^9}, {
   3.765277021450756*^9, 3.765277021505876*^9}, {3.765277068130085*^9, 
   3.765277083081912*^9}, {3.765277153545912*^9, 3.7652771596817837`*^9}, {
   3.76553116276782*^9, 3.7655311628247147`*^9}, {3.765532068827553*^9, 
   3.7655320697260513`*^9}, {3.76553296065231*^9, 3.765533016532618*^9}, {
   3.7655330626481667`*^9, 3.765533096732935*^9}, {3.765533138687954*^9, 
   3.765533138811709*^9}, {3.765533219206842*^9, 3.765533220995344*^9}, {
   3.76553329388661*^9, 3.765533297564946*^9}, {3.7655335426996107`*^9, 
   3.765533546524555*^9}, {3.765533691766548*^9, 3.765533691957848*^9}, {
   3.7655337506620493`*^9, 3.765533761248564*^9}, {3.765533791399641*^9, 
   3.7655337914869967`*^9}, {3.765534096284339*^9, 3.765534177535818*^9}, {
   3.765534229195964*^9, 3.765534298037323*^9}, {3.765534332125205*^9, 
   3.765534392338602*^9}, {3.765534511208332*^9, 3.7655345627000017`*^9}, {
   3.7655347550493402`*^9, 3.76553476223635*^9}, {3.7655348397744493`*^9, 
   3.765534843722241*^9}, {3.765534916523444*^9, 3.76553491981962*^9}, {
   3.765535893146428*^9, 3.765535904452857*^9}, {3.7655359631911097`*^9, 
   3.765535967825994*^9}, {3.765536031166634*^9, 3.7655360352605047`*^9}, {
   3.7655362205549726`*^9, 3.7655362233690968`*^9}, {3.765539974327837*^9, 
   3.765539976353776*^9}, {3.7655400936599894`*^9, 3.765540093716022*^9}, {
   3.765540156954632*^9, 3.765540159012907*^9}, {3.767425040855525*^9, 
   3.767425048348516*^9}, {3.767428172094037*^9, 3.767428172160617*^9}, {
   3.767428471480749*^9, 3.767428510000742*^9}, {3.767428596831674*^9, 
   3.767428603401266*^9}, {3.767428650787896*^9, 3.767428658156764*^9}, {
   3.7674301273752604`*^9, 3.767430136328958*^9}, {3.767430175773279*^9, 
   3.767430175862821*^9}, {3.767430211762989*^9, 3.767430212853991*^9}, {
   3.767430246537716*^9, 3.767430246593899*^9}, {3.767430289975518*^9, 
   3.767430291673921*^9}, {3.76743034707091*^9, 3.7674303590522747`*^9}, {
   3.767436679583744*^9, 3.7674366798865128`*^9}, {3.7674367522383738`*^9, 
   3.767436757457672*^9}, {3.767437300576277*^9, 3.767437300675906*^9}, {
   3.767437406464287*^9, 3.767437412257904*^9}, {3.767437456955731*^9, 
   3.767437457022994*^9}, {3.767437532535727*^9, 3.767437544888459*^9}, {
   3.76743834602566*^9, 3.767438346104257*^9}, {3.767524135030794*^9, 
   3.7675241663516483`*^9}, {3.767524252619564*^9, 3.767524252675601*^9}, {
   3.7675242921309433`*^9, 3.7675242937200327`*^9}, {3.7676100578252373`*^9, 
   3.767610081923624*^9}, {3.767610133405754*^9, 3.7676101375563602`*^9}, {
   3.76769416557716*^9, 3.767694175598881*^9}, {3.767694233764*^9, 
   3.767694266434421*^9}, {3.767694335196615*^9, 3.76769433854906*^9}, {
   3.7676943797255507`*^9, 3.767694379834166*^9}, {3.76769447644567*^9, 
   3.767694476531551*^9}, {3.767694522549666*^9, 3.76769452262707*^9}, {
   3.7676945933361053`*^9, 3.767694623711691*^9}, {3.7676948816270647`*^9, 
   3.767694881679818*^9}, {3.767695266187015*^9, 3.767695266253098*^9}, {
   3.767695630282628*^9, 3.767695631349934*^9}, {3.767695801951943*^9, 
   3.767695802043915*^9}, {3.767695947429904*^9, 3.767695947777357*^9}, {
   3.767696003827446*^9, 3.767696003916215*^9}, {3.767696074873888*^9, 
   3.767696075062972*^9}, {3.7676961667093773`*^9, 3.767696166798428*^9}, {
   3.76769626761338*^9, 3.767696297111227*^9}, {3.767696838029346*^9, 
   3.767696844508494*^9}, {3.767697226752393*^9, 3.767697227118865*^9}, {
   3.767697268129671*^9, 3.76769726891648*^9}, {3.7676977888862963`*^9, 
   3.767697791067902*^9}, {3.767698011105042*^9, 3.7676980111492767`*^9}, {
   3.767698067186658*^9, 3.767698067232601*^9}, {3.767698113459774*^9, 
   3.767698124642521*^9}, {3.7676984101773443`*^9, 
   3.767698410929645*^9}},ExpressionUUID->"7c295a6f-5cba-4850-a24a-\
c8fd8ae59adb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "2"}], ",", 
     RowBox[{"i", "<", "imax"}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"lsOtab", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"lsOtab", "[", 
            RowBox[{"[", 
             RowBox[{"i", "-", "1"}], "]"}], "]"}], "  ", "+", " ", 
           RowBox[{"delta", " ", "DlsO"}]}], "/.", "sub2"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"lsO", "\[Rule]", 
            RowBox[{"lsOtab", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"lhO", "\[Rule]", 
            RowBox[{"lhOtab", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lsOtab", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"lsOtab", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ">", "1"}], ",", "1", ",", 
          RowBox[{"lsOtab", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lsOtab", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"lsOtab", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "<", "0"}], ",", "0", ",", 
          RowBox[{"lsOtab", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lhOtab", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"lhOtab", "[", 
            RowBox[{"[", 
             RowBox[{"i", "-", "1"}], "]"}], "]"}], "  ", "+", " ", 
           RowBox[{"delta", " ", "DlhO"}]}], "/.", "sub2"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"lsO", "\[Rule]", 
            RowBox[{"lsOtab", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"lhO", "\[Rule]", 
            RowBox[{"lhOtab", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lhOtab", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"lhOtab", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ">", "1"}], ",", "1", ",", 
          RowBox[{"lhOtab", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lhOtab", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"lhOtab", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "<", "0"}], ",", "0", ",", 
          RowBox[{"lhOtab", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"DlsOtab", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"DlsO", "/.", "sub2"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"lsO", "\[Rule]", 
            RowBox[{"lsOtab", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"lhO", "\[Rule]", 
            RowBox[{"lhOtab", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"DlhOtab", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"DlhO", "/.", "sub2"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"lsO", "\[Rule]", 
            RowBox[{"lsOtab", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"lhO", "\[Rule]", 
            RowBox[{"lhOtab", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], ";"}], 
      "\[IndentingNewLine]", "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.7610401598890944`*^9, 3.761040434882677*^9, {3.761040660948555*^9, 
   3.761040688814536*^9}, {3.761474397557892*^9, 3.761474453855027*^9}, 
   3.761475094943511*^9, {3.761476102263892*^9, 3.761476177516884*^9}, {
   3.761476207556143*^9, 3.761476266327355*^9}, {3.7614763008554907`*^9, 
   3.761476336653348*^9}, {3.765197094678617*^9, 3.765197101702924*^9}, {
   3.7651971740375423`*^9, 3.7651971786369658`*^9}, {3.765197253646079*^9, 
   3.7651973054000072`*^9}, 3.765197376031152*^9, {3.765197476357582*^9, 
   3.765197491231291*^9}, {3.765198119334717*^9, 3.7651981239095488`*^9}, {
   3.765198472296649*^9, 3.76519857176071*^9}, {3.765199100704739*^9, 
   3.765199105151474*^9}, {3.7651991623125877`*^9, 3.765199175095746*^9}, {
   3.765199418960644*^9, 3.765199423831779*^9}, {3.765199609096129*^9, 
   3.765199612471815*^9}, {3.765260059534336*^9, 3.765260062981285*^9}, {
   3.76527500411806*^9, 3.76527502528506*^9}, {3.7652755591337214`*^9, 
   3.7652755751565733`*^9}, {3.7652761060216713`*^9, 
   3.7652761355801287`*^9}, {3.7652762693563547`*^9, 3.765276274764585*^9}, {
   3.76527646769242*^9, 3.7652764819718943`*^9}, {3.765276598757072*^9, 
   3.765276608643861*^9}, {3.765276676252138*^9, 3.765276681755601*^9}, {
   3.765277211619864*^9, 3.7652772120352077`*^9}, {3.7652773205021048`*^9, 
   3.76527732196556*^9}, {3.765277378406798*^9, 3.765277389869611*^9}, {
   3.7652775068700047`*^9, 3.765277518046028*^9}, {3.765531226559473*^9, 
   3.765531236854851*^9}, {3.765531280853492*^9, 3.765531281157547*^9}, {
   3.7655313619696217`*^9, 3.765531362329232*^9}, {3.765531451749361*^9, 
   3.765531460634942*^9}, {3.765531560370964*^9, 3.765531568761607*^9}, {
   3.765531625530982*^9, 3.765531659889875*^9}, {3.765531703113421*^9, 
   3.765531711731173*^9}, {3.7655320978425713`*^9, 3.76553210764124*^9}, {
   3.765532150977942*^9, 3.765532155629365*^9}, {3.765532249001981*^9, 
   3.7655322883788633`*^9}, {3.765532356499567*^9, 3.76553235904196*^9}, {
   3.765532397461699*^9, 3.765532411526504*^9}, {3.765532441990788*^9, 
   3.765532493026506*^9}, {3.7655331604142523`*^9, 3.765533162360231*^9}, {
   3.765533365238052*^9, 3.765533384194013*^9}, {3.7655335224965353`*^9, 
   3.7655335334193707`*^9}, {3.765533649534284*^9, 3.765533661403329*^9}, {
   3.765533850263562*^9, 3.765534033609514*^9}, {3.765534190644724*^9, 
   3.765534222278126*^9}, {3.765535120247326*^9, 3.765535129951418*^9}, 
   3.7655355415999117`*^9, {3.765535647486732*^9, 3.765535666239719*^9}, {
   3.765535772589802*^9, 3.765535775716772*^9}, {3.76553582793014*^9, 
   3.7655358437477016`*^9}, {3.765539950908711*^9, 3.765539955709989*^9}, {
   3.767428275150045*^9, 3.7674282883906813`*^9}, {3.767436966331435*^9, 
   3.767437007934086*^9}, {3.767437058697959*^9, 3.767437099872085*^9}, {
   3.767437232897628*^9, 3.76743724494561*^9}, {3.7675240730547733`*^9, 
   3.767524077160543*^9}, {3.767610151925289*^9, 3.767610183683744*^9}, 
   3.76761101756046*^9},ExpressionUUID->"fffd1d5d-b71c-405b-8246-\
6e29bb8720c4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lsItab", " ", "=", " ", 
   RowBox[{"1", "-", "lsOtab"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lhItab", " ", "=", " ", 
   RowBox[{"1", "-", "lhOtab"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.767610196006662*^9, 3.767610226333763*^9}, {
  3.767693186648612*^9, 3.76769318931364*^9}, {3.7676968725239487`*^9, 
  3.7676969030214767`*^9}},ExpressionUUID->"8891808d-e206-4282-a261-\
3a0d6ee14f0f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"lsItab", ",", "lhItab", ",", "lsOtab", ",", "lhOtab"}], "}"}], 
    ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"PointLegend", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"LsI", ",", "LhI", ",", "LsO", ",", "LhO"}], "}"}], ",", 
       RowBox[{"LegendMarkers", "\[Rule]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"Rectangle", "[", "]"}], "]"}]}]}], "]"}]}]}], "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"DlsOtab", ",", "DlhOtab"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.2"}], ",", "0.2"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"PointLegend", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"WlsOprime", ",", "WlhOprime"}], "}"}], ",", 
       RowBox[{"LegendMarkers", "\[Rule]", 
        RowBox[{"Graphics", "[", 
         RowBox[{"Rectangle", "[", "]"}], "]"}]}]}], "]"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7652569969579887`*^9, 3.765256999068893*^9}, {
   3.765275045620585*^9, 3.7652750866836023`*^9}, {3.76527515942008*^9, 
   3.7652752381555634`*^9}, {3.76553139221556*^9, 3.765531421774836*^9}, {
   3.7655344102482557`*^9, 3.7655344922281437`*^9}, {3.765534707785615*^9, 
   3.765534712318263*^9}, {3.7675243721104727`*^9, 3.7675243807159147`*^9}, {
   3.767524448860033*^9, 3.7675244630619173`*^9}, {3.767524561026157*^9, 
   3.767524562110085*^9}, {3.767524593709651*^9, 3.767524655821959*^9}, 
   3.767524700328323*^9, {3.767524732042985*^9, 3.76752479945627*^9}, 
   3.767610340041499*^9, 3.7676941210021133`*^9, {3.767695300748136*^9, 
   3.767695320254795*^9}, {3.767695901865815*^9, 3.767695921260195*^9}, {
   3.76769642203631*^9, 
   3.767696423418873*^9}},ExpressionUUID->"a5c34887-85ca-432f-802f-\
297cdd157b40"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxd139czef/P/BGWqPRLC0WC7FGaEZrLTwk1miWJCEcCUly+iEhOf0+1alO
p1PndDonjWbNGs27WazRaNbMrFloxGKxtFiIxRrf1/f2cV3XU/vH7X57nes8
X8/rcR67MTJ4k9+aPmZmZg3Pm5n9/z//77/OGf/3Z8vTP80wPb26T0jP709t
if0vWk74oZvZGmc3piRPus9sg4nac/11d5jtEGz48vsnt5jt0d7SeXR9O7MD
Il5fe7/xBvMoaPZYyGf+weyIybbn3zrwO/NYPLjSPntEM7MTpgyM+CyniXkc
emKK15udY3aGz/++TY3+hXkifLw8+7X9xOwChTLv1vJTzG+i5SdXr3MnmSfj
0KLTA+efYH4LnoFP/OqPMU9BZz+1rVcN81Q4py1Y+W01sytK773xFr5kfhtX
Fg3W137B7AYfva3Wcz/zO/BNWDTh5D5md2i0ZmHzPmF+F/NfC/I9u4fZA4X9
jt1YWso8DRGHNW9dNzJPR5X9wmmRRcwzcDA4p/+TAmYg4HbrRzmap1YALc4v
9HfIZc9nov/GY+//L4s9n4m0g5fXeSvZc0/Up87b8HsKe+6JrmPPLYtLZM9n
4ZFf/+kvJ7Dns1DxouLVym3suRfOLst5NH8Le+6FsX0ir/0dzZ7Phu356Isa
OXs+GwGRd2++vZE9nwO7q4vtfl/Pns9Bq++Ijcq17Pl7GPjFmb/fWs2ev4ey
QLPyqyvZc2807w405QWx595oT8+8MGsJe/4+PN4MWNG9iD1/H+YZyncO+LHn
czHiu0fy0A/Z87lwv5Vn5ejDns/DnKDpNte82fN5sJ/2b+7u2ey5D9b2OZO+
xpM990H9b9/1HT+DPf8A7sP+HXDvXfb8A5R/nlP+jRt7Ph9nNn96NXMqez4f
Kyq2H1s6mT3/EDHTPeZOmMSef4jg0U6ZfZzZc19c2Z+YftHpqeEL/ZXcuV+O
YZ/3RfAe0yXNqKeu9cXZMQ89o19j5xdAbXFPGWDPzi+AzHD5S4+h7PwC3B1p
dXaMLTu/AKX//XL9pZfZeT84X058aGbNzvuh9K/wIfes2Hk/xPxzdWbbC+y8
H6x1zuktFuz8Qpx9X3vrUl92fiHOFCzbcdGMnV+IgFHHpjf/d+Xp+YVQ/dz1
ztVHT23mD9sfx225+c9Twx+uu9Med3U9tcIfIQscm/reZef9cXDBECvbv9n5
RbArW7l7fAc7vwjtF3t2e91k5xehcuRvQ1bdYOcXwTDrbJ/EP9j5ANRXHoos
a2HnA1CW5BX242V2PgCqnU5d9y+y8wGwHvGfrWMTO78YZsr3Ly46x84vRo5J
MTvrLDu/GPXdT1bW/czOL8bBOwPffO4ndj4Q7nsuH5t5ip0PROCd5JfTvmfn
A2FUm711po6dD0TEILcxw46z80vgffVe5/pj7PwSuIdfNX5Tw84vQZdd3qQh
R9j5JShbs/mA/Ct2fina/706qqGKnV+Kyaf6q986yM4vxX6Hvv8ZDrDzS+F5
tmaTxefs/DKULHn+9uZ97Pwy1PfJ3XHzE3Z+GcKGNo9e9TE7vwxW9n43mnez
80FQdU08FVTKzgehv2tmY4uJnQ+CRubff30xOx+EfeMC5Pf17Pxy9P9l0oC0
QnZ+OY6EB/4+TMvOL0fNh8Pv/C+PnV+OpNCPvBbksvMrsLSi+fJdFTu/Ao+U
xbX6THZ+BUKWJ3R6Ktn5FXB/1C2/k8rOr0TlG36zy5LZ+ZWYM2OPfFkiO78S
gQcu3Lfdyc6vxP79FRfOx7PzMoy7WGlXvO2pHWTQ35j19eo49n0ynAws/NYl
9qllMrTN/nRCnxj2/TKE2M9/rinyqUtl6I4ZO/3gJjZPBlnHnuvqjU/dIkNw
P8uH0RvY/FUIeDlk67L1bP4q2E0oWvfeOjZ/FSKcAuveXsPmr0K9aaTaeTWb
vwqyrtk/jlnF5q+CNvb65tEr2fxVSIvozB2znM1fhYa5rw91XsbmB2Puj8Ne
ensJmx+MI1Odt8xZzOYHY6kme+7SRWx+MAZ2zsyMWsjmB2Ni5fCpuQvY/GBU
/3by/coP2fxgnI7+8uS5D9j8YHj9+da+J/PY/NWYvm7l3Qlz2fzVWCtzMsm8
2fzVaL3tV66bw+avRsnSLS/96sXmr8bRoj7nB89i81dj8m+u9wJmsvmr0dXf
ee2uGWz+atze2jC+YxqbHwKP1TcxzYPND4Fa+/JujTubH4KUQXXzOtzY/BDs
/sLbfe7bbH4IWlvq11dMZfNDEOUx5/zgKWx+CIIWmLbvmMzmh2DswrRFHS5s
/hqcv1CwcuUkNn8N/HTTCs5PYPOl5xN+urPAmc1fA4+rUfJfxrH5a9AS6mG1
6A02fw3av3qltvl1Nn8Njvzwa1roWDZ/DabLRy7rdmTz18LMUfu2ajSbvxbl
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
bsGjue9/uYpZtgWhH1946MMs34Lwd1QaN2bFFgS98UqCI7N6C6z3TvjamrlU
mt+c4f3fMbb/Fpy83u7Yzly7Bae/sPnwAnPDFmgf/vxdHXPLFoxzbk8/yNwp
vd/yqdpSZrM49HFT3sxhto7D5D+/SdvB7CA9tzoUFs7sEgfXff7aZcyIw0W7
pD7zmH3jEH53XJU7s0z6fD8pMmZ5HK7MOnR5GLMiDo6H0hYOYFbH4cz6/ZY9
R9n+cahfPbGng7kyDrF5AyZcYa6Ng/OR+YafmRvi0CI3n/Utc0sczCymjf0f
c2cc0rZazfqY2WwrHDdm6nXM1ltRaXt2TCazw1YcmdynPZ7ZZSu8/vFo3cQM
6fMW5S+vZvbdiubg8C0BzLKtCJYdGjiXWb4VFoYvm6YxK7bCt9XY+Cazeiv8
Zu5+bizffyvUjY9XDOP7b4X9hdt/DeT7b0Vj1hef9OX7b8WZtzLyur9h+29F
a5+vy28xd25FlE1uxzVms21wkfkGNTFbb4PnAZ9/fmJ22IYVeY01J5hdtmGs
37sVh5mxDSW3z9cdYPbdhjP9zSz2Msu2IeXPlzYZmeXbgMCwJxpmheTD6w9l
MKu3oeJ6VL6CuXQbbk/4q2ALc+U2OM93/yaCuXYbLoacslzL3LAN8Tefj1vO
95e8Z1X/RXx/ad+PvI/58P234+5El0Ivvv92rD2TnePB99+O8xN++2QK3387
Kl9TXXXm+2/HOM2od8fw/bfjUdqwquF8/+1wHdA1z5bvvx1zJ73ZZxDffzvs
niw6/zzffztGbWv73ozvvx1tWfLzD2vY/tvhax733D3m2u2YrM707mBu2I4+
B6d+dp25ZTvURyzf+J25czvav9V+28RsFo/5peExZ5mt4zHnT8eZp5kd4tFw
ceHrJ5ld4rE3LG9sLTPiUTp+y/QjzL7x0r9nSyOqmGXxaNv76aH9zPJ4eGS+
afspsyIek1svqPYwq+PhOXr6sBLm0nj4Tn3+qJ7vH499iRe25PP94+Hyh/97
OXz/eGTuHuucwfePR4z8/pgUvn88HGUbpuzk++9AzdW3Fm/j++9AS82/2Zv5
/jsQMCCySc73lz7/1izXcL7/Dvi3jvpkHd9/B9pfPD5uNd9/B+qu/Fq7gu+/
A3u/sVq/lO+/Aw+8Ro0O4PvvwLVpP95ewPffgfLiYz9+wPeXnsdWH36f778D
XZby6tl8/x3Y9slH38/k++/AxWMv/DmN7y/57Bpbd75/AnzkMYtc+f4JODP5
/p7JfP8EaL8uf24S3z8Bc/f7Rozn+yfgccWBm6/z/RPg6J8R7cj3T4DRdfeA
kXz/BDT9duyL4Xz/BJgfLF8zjO+fAK8Rjq+/wveXvj/k0f2X+f4JmFzZ9Ys1
3z8BbS9cPvIi3z8BpYEJlf35/tK8ZWUHn+f7J6Ck/NVvzfn+O+Gy94tLz/H9
d2Jf5pQ+T75m++/E0cXRU3qYXXYi4cK0qIfM2ImJRSFfP2D23QnH29WDuphl
O3HohtWmO8zynZj84Vu/3WZW7ER7xZMPOpjVO+H+7pyfbjKX7sT+tksBfzJX
7sRY/8L2VubanbA6NU95jblhJzQzf53UwtyyU/r7q/nVy8ydO9G5+KviS8xm
CtwY9d3K35gtFYj3fH7CBWZrBbovLe57jtlOgZMH8q6d5fejwCNb9akGZicF
2swmfX2G35cCRzvnVp1mdlNg4r+1X57i96eAXV3EsXpmbwW84if/cpLfpwJj
f29vr2MOVKDMZYvVCX6/Ctx1/2rqt8yhCqz1yVp7jN+3AsFTG0u+YY5TYPqc
6Ctf8/tXwPODuWOOMCsV2K19N7qa56FASssb9YeY9QpYb+we/SXPRwFFR2ba
/5jLFZiT+t3fX/C8pH0bVCsrmasVyDz/3bn9PD8FQqwD/D5nrlfgePDoc5/x
PBW4MtxmxT7mJgVi/x14q5znq8CI4f8mfsLcpoCmf639Xp63dL+Vs78pY+5W
oDUoZvUenn8ikr6dMmg3zz8Rc29vqi3l+SeiacGgLbt4/olQftUzuYTnn4hH
s0d1GXn+iSjdEXakmOefCJ+3a1MNPP9E1O0eGFDE809EyOyZ4/U8/0RUd8/q
p+P5J8LpZp/WAp5/Isq0Yd9ref6JCPhh3YF8nr/ksj+LNTz/RISrL6jyeP6J
OO01JknN80/EtRNHt+fy/BNht1SzNYfnn4gKY872bJ5/IlJCdyeqeP6JML9a
k5XF80/E3YifijJ5/okIPHbiswyefyLCjud+q+T5JyJ238hL6Tz/RDS0r+9O
4/lL7+u6ZCh3UyKqFC3TUnn+iTjZ3bkmheefCHer+Lxknn8iPEOia5N4/omw
vV5/N5Hnn4Q+n0c4cVsmIe7lxasUPP8kOJbHmHby/JNgMflIcwLPPwk5+4e9
xu2UhBrfjJAdPP8keCseVsTz/JNQ17SiezvPPwn1Tp/P4faW5kU26bbx/JNg
3dr411aefxJWtBZ6csuSUG3+sjGO55+EsxbTu7fw/JNw6KLVYu64JHSbYqpj
ef7SPsVh9tzKJKz1bk3azPNPgqX3hb9ieP5J0Kx9ZzF3aRL2G8y+i+b5JyHI
fPRU7sok+HYUfhLF808CTvjZc9dK9zPyg/xInn8SPL+Lt+JuSIKztildzvNP
Qpp+cT/uFum+n7uTsonnn4TM0UYL7s4khG/2zYzg+SfBXNPPmtssGWrX/+k2
8vyTEei5YCS3dTIcDl2oCOf5J2Pv/6a7czskY/COhB828PyTERWTu5TbJRke
r4bdCuP5J6P+peeTuJGMs7Yr7bi9k/HYYkPlep5/MpY2j57LHZiMts+Trofy
/JPheECRxB2aDO2kV0Zyy5Mx3zDj23U8/2SoNt8L5lYkwzXY2YJbmYz4V1v3
reX5JyMk1mYBtz4ZslVfda/h+Uvv88fJj7jLpfsYMc2HuzIZzt423SE8f+l+
D875mLs2GePqzizkrk+Gd8/evtwNybDq/KFqNc8/GaPmTV7H3ZKMKT9fHMbd
lgzlwqM/B/P8k7Gv7kIqd3cybBxHTeM2S8H5dP39VTz/FHgPcz3AbZ2CiqEP
1nPbpeDGhV/HcDukwPHIqWsynn8K1G7nS7ldUmBx5c5KbrcU1L431IEbKRg8
xvvqSp5/Coa9vW0Pt28K4nw/W8sdmALLRRfGcctSUPjOo79X8PxTYOxrfYhb
noLH9TY7uONSUHfAfDa3IgVNty69yK1Mwcn6wgvLef4p2Fbw5m5ufQrMqss3
cpdK97Wn+x3u8hS0NQ1/nrsyBS1tNueCeP4pWBp5cQ93bQpiRmyI5q5PQf99
J2ZxN0jPL7XYcDelICD92I1lPP8UrM0NOszdlgLXa1Uq7s4U9Nn+nYy7W7rP
VVlTuc1SkfZp3wHclqlwih5/dSnPPxVu7U++4raTPCchl9shFWNP7VnH7ZSK
+XUbwe2SCtuc34Zyu6XifFbrvSU8/1TsdVad4fZOhWv7T59y+6aixPuTVO5A
6fn5IcHcslSEj39lBndoKgzt5fbc8lTp3z/1jwJ5/qm4Jov5jVshPVd9Ws2t
lL7faq2eW50KdeUncdz6VCT5hy/hLk1FwqUv3LnLU1H5Zqw9d2UqGud99Xgx
zz8Vg1+Pvspdm4rW+k/quOtT0TZ9YTl3QypOlUSruJtSYWfxfCR3i5SXYUAA
d1sqHqTvfJe7MxUW5qtGcnenwmvu/ue5zdJwzbTmdgDPPw2e76ee47ZOQ4Np
wDfcdmlov/egjNshDbX7ZmdzO6VhutODzdwuaVIfLFZyu6Xh+KRYb26kwX2v
52Ru7zRY1oTZc/umweafDgvuwDSs+OP7O4t4/mm4MfhRM3doGrTDk+q55WkY
9tGKKu44aV/klHIr0vDg40HZ3Mo0tCZc3cqtTsO+nX3WcevTULYq0p+7NA0R
fzh7cpen4Wz9Wy7clWnS3z9SRnBXp6HPnyNe5K5Ng6rWrMef558Gixlv/MXd
IO03XXeRuykNSz96/xR3SxqcfWYc4W5Lw8E3tuzj7kzDUadOA3d3GpQen2Zx
m6WjJOijeG7LdDSkXNjIbZ2OEV/OXcltl46KOw99uR0ke7Z6cjulw7fKciq3
SzqqAta+zu2WjsZpPUO5kY74xB+suL3TMXnaT08W8vzTMVFtcY87MB3eppgb
3LJ03Mi0vcgdmo67SX/9xC1PR/3Bu99yx6Vj3Lzxh7gV0jyFdh+3Mh2eGRN2
cavT0V16P59bnw6Hfh1K7tJ07HswKIG7PB36w7Jo7sp0dGkvh3JXp6PubOoK
7tp09BwL9OeuT0dsxaK53A3puNK+HdxN6djfcMqVuyUdow7NnMDdlg7HB7+P
5u5Mx/zbZcO4u6X7f5z7EreZEgmZpZbclkqUPDj3xI/nr4T5Z5P+4bZTouul
z29zOygxTP/BDW4nJdIqrK9wuyhhqL1/jttNCQvvnp+4ocTR6tEnub2V6Mzc
cJTbV4lut18PcQcqETRj6QFumRK19mbl3KFKXFlQV8otV2Lbqr1F3HFKBDd8
rOFWSN835ngWt1KJsTcfpXCrlQjd+2ECt16J/TePbeEulb5v5rxI7nLpfabd
CeOuVKJR/kUId7US8oisFdy1Sow6nRDIXa+Ey8gsP+4GJTQWlT7cTUrcsL01
h7tF+r7bM2dytykxcPz+d7k7lZgc/qYrd7d0P34/unCbZcCYuH08t2UGYo0z
x4r8M3DXe/hIkX8GBk4caC/yz8CUrpdfEflnwH32xMEi/wwEnA56UeSfAQfX
XZYi/wykudzvK/LPwKmwFU8W8PwzpL9/XXzEHZiB8OD1D7hlGahO6X+XOzQD
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
qI0G3Dan/Zfuh7pMyo+63AAFdYUBQdSV0jzqKun3QV1twIO+tP8GNFLXGlBF
XSflTV1vQAz1aen3SN1ggCt1ozSfukn6PfSh/Zfyo24xoJa6Vdqfuk26b+oO
6fdM3WmAH3WX9Puh7jZgBHWPAebUZsVof472vxhnqS2LcYTaqhi7qa2LkUlt
U4woartiBFHbF2MOtUMxXKgdizGM2qkY5tTOxbhtRvtfjIvUU4pxktqtGAep
PYpRQg3p/am9ihFL7V2MEGqfYvhR+xYD1P7FmEgdWAx76qBi9KeWFePRkw9J
/6U8qEOl/ajDi3GKWi7lQx1TjH3UccUwUMdL+1IrihFPnVKMCGplMWTUKml/
anUxvKi1xXCl1hfDidoo5UtdWgwr6rJimFGXF6PrMXFFMdqoK4vRTF1VjAbq
6mLUUdcUo5q6thgV1HXFKKWuL4aW+rR0f9QNxVBQN0q/H+qmYoRTNxcjmLql
GIHUrcWYT90m3S91RzHcqTul/lB3FWMsdbf0+6PuKcZgajMj+lObG9GH2tKI
R/8RWxlxl9raiHZqGyOuUdsZcZHa3oiz1A5GnKJ2NOI4tZMRR6idjThI7WLE
PuopRuymdjPCQO1hhJYaRuRQexmhpPY2Ionax4h4al8jYqn9jZBTBxoRRh1k
RAi1zIgV1CFGBFKHGuFHHW6ED7XciDnUMUaAOs4Id+p4I6ZQK4yYSJ1ihBO1
0ohR1Coj7KnVRthRa42wodYbYU1tNMKKutQIS+oyI8ypy40wo64woqeH9t+I
buoqI7qoq43opK4xooO61og26jojWqnrjWihPm1EM3WDEU3UjUY0UjcZ0UDd
bMRp6hYj6qlbjaijbjOilrrDiBrqTiOqqbuMqKLuNqKSuseICmozE8qpzU0o
o7Y0oZTayoQSamsTjNQ2Jhio7UzQU9ubUEjtYIKW2tEEDbWTCWpqZxNyqF1M
UFFPMSGT2s0EJbWHCWnUMCGF2suEJGpvExTUPiYkUPuaEE/tb8I26kAT4qiD
TIillpkQQx1iQhR1qAly6nATIqjlJoRTx5gQRh1nQih1vAlrqRUmhFCnmBBM
rTRBRq0yYQW12oQgaq0JS6n1JgRSG00IoC41wZ+6zAQ/6nITfKkrTJj/TP9N
8Hmm/ybMfab/Jng/038T5jzTfxO8num/CZ7P9N8EPNN/E6Y/038TPJ7pvwnu
z/TfBLdn+m+C6zP9N2HKM/03YfIz/TfB5Zn+mzDxmf6b4PxM/00Y90z/TXB6
pv8mjH2m/yVwfKb/JRj1TP9L4PBM/0sw4pn+l8D+mf73sl0Jhj3T/1526GXH
XnbqZededunlKb3s1ssevYxe9upl71726WXfXvbv5cBeDuplWS+H9HJoL4f3
sryXY3o5rpfje1nRyym9rOxlVS+re1nby/peNvZyaS+X9XJ5L1f0cmUvV/Vy
dS/X9HJtL9f1cn0vn+7lhl5u7OWmXm7u5ZZebu3ltl7u6OXOXu7q5e5e7ull
s13P2ryXLXvZqpete9mml+162b6XHXrZsZedetm5l116eUovu/WyRy9jF/7v
Hjpn/D8SeJzb
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxN139czef/P/AzenNGm9A4CM0ymXAQQniw0IgdhDZtzgghHIQonOpUJ53q
VKc61SkhhBALIXOQaRZCJjTOiMVCiIXY9/rePq/rh3/c7rfX63o9r+f1uJ7J
53OXT5vfTCaTVbSUyf7/3//3p370//1tk/6WwW+eqqf20l3JcpizX88amE3t
gAin5pc7BFE7YvgJw+m+I6gVCDmyb8HaVtROcIjXvnp5845kZ+SVO+3Yvpu6
BwIvpBREr6N2QdWEJ2Ozv6H+EmObu2z5uxO1K5zdezTOf/yn5K/Q+eVJneIE
tRt+iT8c+l8cdT+Un9vbvssP1Er0aPoickk/6gHwmbBR9vy/askDUbj65em9
V6gHQfPO+D5rO7U77MvdH51eTT0Y1d1jj3f1ph6CkJ6yXQc6Uw/F2C2X7699
cluyB1yX1u1YY6UehqpmLXoUpFAPR9qFcINiIfUIvA5e06lkOLUnigfvakr7
lHokOj/duGj3vVuSR8Hm1Trl5RHq0dAV/Lt3dRw1cGeW/mF/tWQtUNg1NbjH
YPp8DBIm6WImt6LPxyA5cJzq4N2b0vOxWFY76b/JhyVrx8LncmzpF3H0+ddw
m7D48sCf6POv4dWrfEroUPrcC52XNWnef0Kfe6F+f+G8YzVV0vNxUK36yPfA
Ccnacfg+KWDZ3WT6fDysa3fd+WYxfT4enTWPLj8dQ59PgLEqNehSJ/p8AnJm
/Hin9vkN6bk3Xje5Txl1QbLWGwHrx9dc2kaffwNr/4bzmaH0+TeoUV3qvs2X
Pp+IX5vi2z7oS59PhNW3zZl5LenzSXBLmTSj219/SM8nYWOP6U8dT0iW+aDZ
kQkHJqTS5z6Inj/z2JHl9PlkdL540G3uRPp8MkYNNLhO7EmfT8GZA21/Xyaj
z6egcNHcARW3r0vPv4XxgmHtsqOStd9C83tM8Tcp9LkK7bz7fjp3uWSokKd2
Tzo6ib6vQsjjPt9NdJVsVcH1eXBY5//R9VOR+c1IB9d7ldL6qQjwWO+66pRk
7VS06nv/xjuLZOtU6FLq+p9ZL1k2DZaTZ/CrH10/DbkPvDrJh9L103Brkux8
zGd0/TRM0/SZOa7hmrR+OhYs3noF1yRjOtLm/Dl2/SHJ2ulo1+X1wedJkq3T
sfF8Rs9dK+h6X3iVf7w9cypd7wt5RYd+5QPoel9o/3L6bUQ7ut4XPcr+C370
4qq0fgaaNvQacP2aZMyAQ2XYuw9FkrUzsGzsgooFaZKtMzDzQeke+xC6fiYs
+c8j67+j62diwbbj09t50vUzoc9RO6zsRtfPxNzbpv1tPqLrZ2H9mzWf/3P/
irR+FnZ2S/ne7rxk7SyUTbZ9M3uPZOssNL785c9n8ZJlfqje+2+zMyvoej+0
8Died2UGXe+HxiJLQbfhdL0fljXPara7G13/HbRLOsRrmtP130Gx7rpydW2F
tP47uLWzu3LkomTrd2hxftC3g3+WLPseT/394+rNkvE9glKq59VupOu/h5tL
6GGn+XT99zj0fuHs+El0/WyUFI/sP3wgXT8b472bf/xFJ7p+NuQ1fU9NkNH1
s6H8fvxk1eXL0np/NCjW9tTnSIY/PNNi9wxZJlnrj+JzH2+YPUqy1R8VbdYP
f/0pXf8DnCq/29DCdkla/wMU37v9GXdQsvYHmPppn0ZFSraS9+tej22YIVn2
I8xBkxf94UrX/wi3uQFP+jRdlNb/CK8Z3/g1XJZs/RGW/0HZP0+ybA7q+pQ3
3g6RjDkoyzgx8O1kun4OXA8r/WO/oOvJ+z776vVvyqX1ahSc7bqo8bJkZzWq
42tG3NgpGWr4yR5Wu2yUrFYjMMh00jZDslYNeXSTT6t+knPV8Gp79d/cFpKt
aoRdC3PNu/v7/9mmhsu5nhPaH5Ms+wnl2tJjT5IlO/+Esn/cagYulYyf4PdZ
V9d7EySrf0KY96QHb3tI1v4Et8nB68I+XJDqk/evL8KCW5KtP8Gl3eemo0ck
235C8dLT5ctTJMvmwmfBz0jQSHaei7zoA17tpkjGXOhDLvZ510eyei5K+6ZM
8G4lWTsXjV3sahtrf5Pqz0VdTOFs+zLJ1rmwVZc+C98l2TYX/vad6v1iJMvm
wf3l6F3GhZKd5yHQmvajq7dkzIPxe98fu/eWrJ4Hs9X8JLiVZO08FM8Nm+Za
VybVJ+s13a96XJJsnYcgxbHCHYWSbfPQcHTngGUpkmUBqH61Pj1pjWTnAPif
t3dp871kBMB3drTi4UjJ6gDkPlp1+LMekrUBqJp3dXh2C1o/AE123WpD/zkv
1SfPT6qbCisk2wKgC8WREUcky+bDafwnvl0skp3nQzP4cvtvIyRjPizDfAf9
EShZPR+Fh0fWH/hWsnY+8h9/or89RHLufJQqB3v4daP156PyfbdRPVvQ+sRH
Rt0Y8/RXqf4C+E9yGrPvD8nOC1CUoT624JRkLIBz5l8bluZLVi+Ar2p/uTVJ
snYBmsI718wJlZy7AF4DLjSbOF+ydQGKb5Us3PitZNsCBK72m9Y0jNZfiHL3
4GZnXWj9hShuPa/4ShtafyGqnr0v6vXunFR/IVz/3Des9KFk7UIoM1brd16V
nLsQxsHv7l/8RbJ1IQqmJiUO2yvZthBBXXC5Nl2yLBAln176+5ZOsnMgFMFl
3dqslIxA2LLjjuvm0PqBqKiZ2GzEZFo/EAXzFKMGjKD1A+G/su7Igt60fiDK
bQVHbnWk9QNR/3yQ3tCC1l8Et46z1oa+KpXqL0JF0JOKnTWSsQgN/16/90ml
ZPUiqHa+f3fgrGTtIhQ5zA8y/Cw5dxEKZF9Gbdsu2boITcdCzM9TJNsWoVR+
7E2ITrJsMSodl7wfuprWXwzXd6Pf9F1A6y+GR7/OXt/PovUXoyG77ZASb1p/
Mfzy17pOH07rL4b/tVuru7nR+ovhPrXV+q7daP3FKPm2U/K3DrT+Erg4znUq
akbrL4Hpvj5k4quzUv0lqD22sWW7WsnqJQi+HNmn1W3J2iWwPu3tPfCS5Nwl
UGXNPBN7WrKVuNU4mcNhybYl8H0as6g0X7IsCA4dWy/caZHsHATFQ8d5h420
fhDyMib8Vq+j9YPgt2xbC791tH4Q3DIiYh8vpfWD4Ns57/SuubR+EHwW93BO
nEXrB6Hho3Udc31o/aUo+SWyy60xtP5SNH6xaavnUFp/KdzWy53Pu9H6S6G7
2LXNuh60/lKgvGvtVAWtvxSu0ed7Tv2U1l+Kuk+Ge62xo/WXIuT9S6v17Rmp
/jLI71ztrHwu2XkZHFe3u3r2b8lYhqrXkwJD70hWL0Nw99Xqmdcla5chbNDd
Ub7lknOXwVY7ODb4rGQr+f6wjb8eOS7Ztgx1Tp9t6nyI1l8Ohft+zy27af3l
8J01bbPXVlp/Oao7/tjwcQatvxxlfbTyZ0ZafzlMZUdnvNTT+ssRXDctqEM4
rb8cyvS6P2eto/XJ918uHnl0Ba2vga/mfTf3xZIdNAi+1FlxaS7djwayrptO
6WZLVmpg2dt73yxfuj8NVM++Xz9+smSVBuWzk0+rxtP9Eg8wdFszWrJGg7qx
o/sd8aD716Bk760Eh4GSjRpodWfv6vrQfjTwiU0+3a6n5EINGo61/eNYN9of
2f+LYdZ1CskVGhhClS7T2tF+yX7TvHaNtZdcr0Gt7MmziS1o/yugWHVux2IZ
7X8FKjobVmx9e1rqfwXy23R//7RBsnIFas+uezntmWSsgN+KQ7KLjySrViAv
4t8r/jWS1StQ/MbwWbO7kjUroL722/qSm5K15P3Azw7FVUo2roDyUk3Q8suS
c1fAaWDxDwsvSC5cgTAPhceqc5KtK2A3K6Uw2Sq5YgXq+58IO3dCso3Ur/t8
euujkutJP+ZZ/8w7JFm2EiWhf7+/tE+yw0rI18zw8tlN+1+Jitld1t3Oo/2v
ROm0nbPCcmn/K6FW+lr6WWj/K1F7U2P3Ip32T763c9CUX1No/ysRYC3x2JtI
+18Jn8R2utw42v9KWLt0f74jhva/EnZh+8aciKT9r0QlFnrYNtH+VyL4wRWz
Yxjtn+x3rE8vvxDa/0qU/89+955g2v9KVLl2qWm9gva/CnYrZmwJXUr7X4XC
p/O3vVlE+1+FuvDSw1ELaP+rUDL3523d59H+V8Fnn+eg83No/6vg/qL/wDB/
2v8q1F7ovmTUd7T/VQhcOWfPJzNp/6vgP1d28tE02v8qGBoua65+S/tfBZt8
hum8D+1/FewLL74u+4b2vwplt9wC/xhP+1+F6k8Ux559TftfhZrOD447jqH9
r0LTn+mjx42i/QcDMlun8BG0/2D4nOrQtcyD9h+M/GOeXTsPof0HQ2X99+ma
QbT/YHjsMy68o6T9B6N21HN/VT/aP/nem607yvvQ/oOhbV2mmN6b9h+MpuFf
JNz/kvYfjKJrre9scKH9B8OSrfnr8x60/2B43ahccbk77T8YxYOnLIruSvsP
hulRxLbxXWj/wfDbvauxTSfafzDqrRsm3OtA+18N3ZdTl5x0pP2vRrDpNba2
o/2vhin/tx3xDrT/1TDL966N+JT2vxqlcR9Mm+xp/6tRsmh3ta4V7X81jMsc
+iXLaf+rYRvUYdGuFrT/1fCc02lZqR3tfzVyH7zo+qgZ7X81Gqc3fPfZR7T/
1ah0etj8m/+sUv+r4frP/z5EvpdcsRr2b+36/PpOsm01tCtaLGvzVnL9aniV
Ze+Z0yhZtgbGry6WHnkt2WENih803+r4SrLzGlRWObmseylZuQauj/0H1TyX
jDUIDl9RNKNesmoNFC2Xx198Klm9BnULL+dNeiJZswa1JM/L/0jWrkHYyJSv
vn8s2bgGhpY3Fz6ulZy7Bs7ar8O1f0suXIPc2IFznB7S/tfAYjfv8cka2v8a
KIOftJ5/n/a/BhU7vfa1vUf7J9+f51581kb7X4vSLrYOoXdp/2vhsfX0z0Pv
0P7XIsC2a92batr/WnhuOTzdepv2vxb2UPc13KL9r0WeftkL/5u0/7UoWPpv
wsAq2j95/576mf0N2v9a6Pf8KKu7TvtfCwx+vv9yJe1/LfxWB9QevUb7Xwvd
mSmZeVdp/2uhLUk8lHqF9r8WYQO/7R5XQftfC+9Pmy7pLtP+18L/60mFEZdo
/yHIOz3kkO4i7T8ETUuazm4up/2HIKhd1+um32n/IahdPvv6tgu0/xCU9zlR
VPQb7T8EFXc2zbtQRvsPga6L29X752n/IfBdr30uo9aGoC5//aHPf6X9h8Bu
g2+L8edo/yEwtIq8s7SU9h8C5cnDbhlnaf8hcFh9/d75M7T/EJTtbP7yzWna
fwgsGzO+7U9dH4LqFr3+WWil/a+D39SVxdtP0f7XoXH7mj33fqH9r4Nv/rwi
F2rlOvjnWH5bdJL2vw62pKN/Hiyh/a+Da0pYTdMJ2v86+LyouTKRWrMOxg2d
M7OO0/7XIfjMmgHPjtH+18E0NcIwjjqX1P9fw5acYtr/OnhOKlS/PUr7X4em
5WVn/agr1sHp6bpfjh2h/a+D16m+47tS16+DS+FaVeRh2v96VB357No/RbT/
9aiY9OzsTGrn9fA859ip9GfaP3m/6JeyQdRYD3fvyb/tOET7Xw/fvRPadqZW
r0fe0tnpxoO0//XAo9nTPqbWroeuYMwwXSHtfz1qHvT++iPqXOIrMxZqD9D+
18O/z1fZH1Fb15P/n/ar1u2n/ZP9DP/EqRW1bT3q65J8k/bR/tdD+e/uDZ2p
ZaHwXjQvcUcB7T8U+i114QOpnUNRa02ZfHov7T8U1tG/Pp5KjVCo/R2m1eyh
/YfCvNspLIRaHQqHlJ9/+pRaEwrDg+Pvduym/Yei0W/w16OpjaHwcho74FY+
7T8UsnlOp9ZQF4aitKHzQ0dqayg8fjmwpWgX7T8UdfMWPphBbQtF2R+1hY07
af+hcH7c8M5CLQtD2D/zrWOpHcJgG9G/8dEO2n8Yih/7ZydTK8PgO639Hk9q
hKHqcIKiNo/2H4YyW4/7Jmp1GGRlw+2+ptaEwdnNb82L7bR/Un9ke/ft1MYw
BI7p7DGDOjcM9R4DNsipC8NQpx/woWQb7T8Muu0fH1lJXRGGmkMlW3pT28IQ
PG7ukb+20v7D4P6u56tMatkGaNwnzJpB7bABxacVVQ7UzhugSJWtuphL+98A
ffDaL+KosQHaffIH31CrNqD6t6k/f0yt3oCKcc02X9hC+yffm3A7wECt3QCP
GQdGf0tt3IC6dnM7tKfO3QBz4981N3Jo/xvQ2Gb8rmxq6wYUFSZ9F0BdsQHO
o+r/7UNtI+8/SNvYkE373wA39YVHJ6llG2E+cGewntphI6rvD5kzndp5I+TV
XnO7Uys3wrdV7Ig6C+1/I8o9kv8+Rq3aCNuU93P11OqNqOm4es8sas1GaFod
Ot6LWrsRRQ7rjY1ZtH+yn6m5rheoc8n339ppLdSFG5HbOjVlObV1I6zOE9Vf
U1dsRDG+ut+R2kb2u3tCpyeZtH/yfrb1vzPUsk3QDD6VkkHtsAm2Puuuaqid
N8HuYP9j3tTKTdAN7z/uc2psQv6My6veZtD+N8F+/cqxldRqsv7PqP37qTWb
YB0XfjiWWkue33voO5/auAlFXb7ePIY6dxMalrlN70ZduAmN+HrfOzPtfxPC
jg5Iu0ldQfZv3Nu6mNq2CTVNS1unU9dvIv+/G52yhlqmhS7rWe5MarkWla1n
DRxK7aBF/ehZ4xTUCi3sFt668Sadno8WZWOv/X2b2lWLALuRq36hVmpR07tL
yFZqDy08/Nc16KihRcnkJQ8Dqb21UGXY+0ymVmlRt1X7xUBqP/L+yheLO1Kr
tbBuMTm/T5McqEXtl1vH3qfWaFE49bvLv1GHaOGZ/r9zhdRaLao3vvrcTK3X
wjVyU80maqMWga9krQOpzVrk/vVnioo6VwvbC+2GYdT5Wrj4zf61B3WhFpbd
NUH21MVa+F7KXP46leanhd+9jy7aqMvI/rrmRf5OXaGF7Fjb5CPUVVqE3LS9
3kpt06Jh1b7CeOpaLdRDO/2yjrpei/Lg37suoG7Uwku+4tI0alk45GNLLo2m
lodDWRHQtS+1QzjM+b2OdaZWhMPj5a+5cmrncPLv0cfXXpto/uEoelMy5QG1
MhymMQfbVVJ7hKPgcUnXs9QIh92d48sOUXuT5yc2222jVoVDfd7hThK1Xzg0
1we/DadWh8Pe4+9ZK6kDw1FS0OH1XGpNODwnHr82nTokHHnLyp95UWvJ/vdN
+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
7ooklKZ8yV1J5mfNrTZ8/sn9MiVyVych7OE4bht5P/D9p3z+yfMOR7hryXk9
Xs5dlwSZ7Svu+iRoXzz8hM9/Evy75nE3JsHefy53UxKc9nzOLUuGsvk9ez7/
yWicu51bngyPc/O57ZNR2rM3t0MydNonrfn8JyPoyiFuRTL0juu4nZJRPw7c
zsko/0nO7ZIM34Arrfj8J6Pimyxut2SYP13ArUyGw4EB3O7JKOz14WM+/8lo
Cv6d25PsNyWDG8mo2xTI7ZUM2xAPbu9kOB2Wc/skI/Dfm3I+/8mwvN3L7ZuM
3BMbuf2SoR46jds/GVWLv+RWJ8Nx+ruWfP6T4fakgjswGRiyizsoGWF9NnJr
yP4uzOAOTkZAm37cIcnIa2zBHUbyjLS14PNPzqPgOLeOnNeKVG49+f4VDbeB
9H/eh9uYTOa5N7eJ5Lm8Bbc5GS5da/7H55/Y7wx3LqnfbSt3XjLslmm588l9
8lJzFyTDtAXcheS+bPicu4g8v92Mu5icX3GNHZ//ZKjanue2JsNas5u7lNwv
ZTx3WTJqX2i4y8n97z2DuyIZPteGcVcmI/9JN+6qZMjX2nFXk/ux9HFzPv/J
KLhcwV2TjOCso9y1ZP+Xc7jrSL6LornrSZ6By7gbkuF8YSZ3YzK08aO5m5JR
VujKLUtB0MB23HYpqHFoasbnPwVFEx9y26cg4E4Ft0MKwi6c4HZMgemTXdyK
FGBnMrdTClxSNnI7p8B2dTG3SwqcA2Zxu5LvjfPidktB/eoB3Eril9243VPg
+4s9twf5/rW3H/H5T4H/oEfcSIH59g1urxQE/v4rt3cK8j46wu2TAtcNO7hV
KajyTOX2TYFldBS3H6mnW83tnwJ5qwXcalL/8kzugBTIKidwB5Lz6zCMO4j0
l/oVtyYFXion7uAUKMZ/yh1C+l8t4w5LQcGdFzI+/ykwbHrArSP7n1XFrU9B
4/zfuQ0psO7+hdtI6vU4xG0i53NpB7eZPN+XwW0h/iWeOzcFfrII7rwU2K9a
w52fAs1nS7gLUlDycA53YQqUD325i8j5tp/IXZwCY9Bo7hLy/Rfu3NYUlG37
irs0BQ4bnbnLUuAe2YG7PAX6g/bcFWQe5M25K8n9jXnz31E2/ylw7FvPXU3u
05uH3LYUuNX9yV1D6ttd565NQTHKuetI/a1nuevJ/e95gruBnOfFQ9yNZP/p
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
8Dw=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxd13lYzdv7PvDMIUcIIWQOcTJnvo8xhBBCCKEIRZEku3muPbdHQsgccnQS
cj6GzCFkzpw5hBB++3d9z1rrKf+4Xtfaaz/v533v+1xHm/krJi+samZmll/L
zOz///1/f0qG/t/fRf/9bYZ5OVt/XarCbI7O39Z566sxW6LpucFDvGowW+Fl
H1VQ71rM1rjSs4ONWW1mG8QnR9teqMNsizFvnCNVFsxt0W9f+ei5fzC3x4tS
q0V2lswdESmtc7+kAbMdnpc57cpqxNwFYSN7XtjQmNkeMzu2HjyqKXN33Lk/
52fdZswOyB3Yr/bV5sw9YKl9Oltlw9wTHW5oy9xaMffCwymSmy1smXvD/OeR
0vttmPvg1aDpLpvaMfeFQ82lz+d2YO6HBje+HGrdidkRdw6VHn5gx9wfhZj6
0tCFeQCOHP49dqY980DMKLl6q0l35kHosz414dqfzIMxZmvfRYk9mIdgu9+0
eaN7MQ/FjstZQWZ9mIEbMfX2Z/X9zxJA6v3j+wpHdv4X1o2xndVxADv/C8c6
Nrh4dyA7HwabwTPHSgez82Goabvh2vCh7Hw4wm9+9/gCdj4cXb4N/bhjGDsf
gabXssLcRrDzEXgbcvYP81HsfCQ+W52R/z2anY/E1LM163qOYeej4F+/YJXl
OHY+Ckm3fM8ddWbno7F2h7X5ognsfDT2Xf/dtb4LO3eCfN+UHkcmsXMn1M0Z
YDVnCjsfg/kvCvKrTWXnYxBydOCC9GnsfCz8jGFnx7mx87FYUPvIt7cz2Pk4
3L9a9DlpFjsfh5XzqmZ1n83OnXHpl/WgS3PYuTNsGrUMWeLBzsfjycqqQTXn
s/PxsN+Z1XXzAnY+Ac1Gdk0esJCdT8DVzsNSry1i5xNxpujRTG8vdj4RE9+9
zv7lzc5dILMbmiNf+p/hgkzLrJkdlrHPu2Bi9x7yv5f/51wXNF0WPmeUL7s/
CVnBUUcL/Nj9Scjv2WDbvFXs/iTUev+tyVt/dn8SHKo0rbdmNbs/GUsaDA3/
vYbdnwyHuDEBUWvZ/ckYVb3+w7rr2P3JCMz0zkkOZvenoOndPrUbhrD7U9Cs
z+ST8g3s/hTcWJ5a1CCU3Z+CAZoaC5LD2H1XBOiWjKgbwe674tm+HElkJLvv
igm33jb6FcXuu6LT9M/f/GPY/ako7Zbf/VUsuz8V8fLQfbPj2f2psFvRKOBK
Ars/Fb0eqEOGJrH702DY0f7s3mR2fxr2Hb8/trmM3Z+GAbmva0TK2f1pKPMN
LX2rYPenw2zQ3YZTVez+dPQ/MHR2tprdnw5DNbP8lhp2fzo6RQcu3qBl992w
oHsD24c6dt8NrrWGfBlkYPfdcPDIhucaI7vvhjFlC95+3Mjuz4B7/aha41LZ
/Rl4Mia5x+bN7P4MRK3q5/V5C7s/A93Hj0wfncbuz0TdqsnvUrax+zPxQve9
3/Pt7P5M7FwREtoznd2fiYfqNnnBO9n9Wegxpdz89C52fxYMIY5/1d3D7s/C
uE8Nlk/cy+7PwvcPNxNk+9h9d2RHFuuu7mf33fHjabaq/gF23x1HrtwIGneQ
3XfH7lcFoyMPsfuzsa6p1/ecTHZ/NraemyL9eJjdn422bn61Oh5h92fjxLj9
s6dnsftzcH1nA1nUP+z+HIQPPLjpUDa7PwcTruZGPzjK7s/Bk7Dw0bWOsftz
Yfd62v1ux9n9uZjtsW/05BPs/ly42llF+uey+3OxM72zUnmS3ffAa/mOVQf/
/c+2Hsi0mNP28v/Y93nAeL33phen/rOHByxmd3356zT7fg9c/uD2u9HZ/5zq
gYjTb4o65rF5Hsiv3T2x37n/XOSBiT/XVRt1ns2fh6lfxg+ffIHNnwd/717O
7hfZ/Hk49/p6S89LbP482PR4f8T7Mps/D/k1ZjdfdoXNn4e/R9QbuTyfzZ+H
Y3m1HJddZfPnQTPT55P3NTZ/PmbpVq7xvM7mz0e7Z96n3AvY/Pm43vefO5Nv
sPnz8a3Ww+xRN9n8+XjZyW+h4y02fz7aK2zudipk8+ej+ahtNo1vs/nzMcfi
eRezO2z+Asxzzq/5ktl2AS5dWXrgyl02fwGSYm52zbzH5i/Agckj1qjvs/kL
0ObQL+XqB2z+AixWeEa5PmTzFyDq+0tnhyI2fwFq/6/pq9qP2HxPzJ8QP/cR
s60nsvp82ff3YzbfE0PKWt6JfcLme+LPHXcfz3zK5nsiKbnFhc7P2HxPnH10
T/mFOdcTk6f3GHbyOZvviWU3B92IfcHmL0Rjqz4uLsVs/kJM7z3vsNVLNt90
7t2s1i1mj4WYn3xmdMorNn8hpBcerZ36ms1fiLrtSzc1eMPmL0S7FuqcC8xF
C/Fo9Ipr4W/Z/EUwe9fnaf93bP4i2Kv2lb5lxiJs3LS7Zup7Nn8RehVZtHQp
YfMXobnDiQG/mFMXoUf1nPm7PrD5i9Ctam2N60c2fxF2qo7cL2c2W4yukU/7
bv3E5i/GiOgj20eXsvmLce/WfIdXzB6LkXup7a24z2z+YiT4Dt7Y+QubvxjV
61eNPcOcuxifbuTp5n1l8xdjy+KPN78zm3mhfNULyMvYfC+snGR9r9M3Nt8L
B9Tlu48ye3ih/+GGmeO/s/leKFY+/HqfOdUL8Q7vgnx+sPleWN/rCr4xF3nB
W2M9PqKczffGgDELt9b7yeZ7Y3Su62gVM7zx7664QS1+sfneCEnYF7WJWeIN
y4VLO7f9zeZ7w23aCrutzLneWOO8NLqt2aP/5ntj+I6GY1OZzZag37Pm/jZV
/rPtEryZOLB2CjOWoO0u+3qWVf+zxxK4P0wPj2aWLIHV4SW+P5lTl0C6vtst
v2r/OXcJpl3cc/Qpc9ESONmntZlWnc1fCu9bly3OMNsuxRjfF5LeNdj8pWh/
bEfoZmaPpUj3zGtYryabvxQr95g5rmFOXYqe/Wt+fsicuxQR+QnjR9di85ci
0GbUyL3MZj741/fRwwbmbL4PNsnqtglghg/mBC+3uMXs4QNFjwPb+tVm833w
UbKmRM2c6oPLN+eVlDLn+qBP3Xo7J9Vh832wp2fDVnuZzZYhzLfmlFp12fxl
yD4fNM6DGcsQ9ftHnSxmj2UY595Q9YcFm78MfdR/vV3AnLoMw9PMm2Yx5y7D
fd2jxnXrsfnLUBjz11t3ZrPlKJ2qSd3LbLscZ7a49PrJjOWovetK+rg/2Pzl
cG0XUF3LLFkOu076Mc+YU5djhpV6nUN9Nn85/rc60xjEXLQc494POfQ/ZrMV
6Ngy8ERdSzZ/BdxiDKcnM2MFliU+ztMwe6zAgrFBF+8zS1bgeELi9TYN2PwV
yMkd+siTOXcF9jzaW7aduWgFpi99Z1PMbOaLYOcGk+wa/mdLX0y601qzmNnW
F3+ctvm8jdnBF771qi99wgxf9Pxxvrx1o//s4osgK4+9s5g9fGHfZPcGNbOv
L2zfJqzOZ5b4ol/GQ2Vtq/8s9YWTfvX9v5hTfXG3Tqspa5kzfLE/UF+2nznX
FzXX7s1/xpxvOs+q+6B5Y7avLy78WNRuInOJL9DSe2sYs5kfiv447HGY2dIP
ve48n/2C2dYPzzYrjNZN2P5+uLp1TNsxzPDD1oHSd4HMLn6weP6iejqzhx8i
R5xffJPZ1w8pbXY1q96U7e+HHQGfbHowS/0w3Keu/2zmVD889nZpE8uc4YdW
DZt3ymTO9YP7hH+iHzDnm/ZxDRxpbs3298OIDN38Hswlfpg5evajGcxmKzFv
4Zf/hTJbrkTqvyqLncy2KzEh0fPYFWaHlchfGVn4mRkrMXKnlUeLZmz/lZjz
rdM0MHusxNq8yzmezL4rUa1dQ3UMs2QlrM+WPtnNLF2JuX+uSr/MnLoSbTaG
PythzlgJuV0TY8PmbP+VmPKv1dVezPkrYTNmQbgrc9FKaKUPD/szl6zEsuXz
liiZzVZhzpnsLYeYLVdhq/qIxzVm21WYVr3V9hJmh1Wo4bXP/48WbP9VcJ/Z
7nJXZpdVeJfbI9OJ2WMVGt6NsVvI7LsKtyZcsw9llqzCH30P/mtglq7C3K5n
Xx9hTl2FVdN37bzGnLEKnUPe/3zDnLsKBXU7vKppw/Zfhdi2BStsmYtWwWeH
RNqfuWQV6rrsHD+Z2cwfWfvPpi9htvTH8xEuW8OYbf2REHVwiI7ZwR9hH9yC
DzDDH0WNd87OY3bxx9S0ak8fMHuYPr/ulOVnZl9/jDo87Fmdlmx/f9TJzJ9v
yyz1R1WHnLg+zKn+WDBiwpyxzBn+UAZfeDCHOdcfEx6tqreKOd8fh2qEv45i
LvI3/ffYIUjHXOKPYff2Zu9lNgvA+ftd9uUyWwYgYvrVqdeZbQNQbcrZg8+Y
HQKgOdD9zFdmBOCrYwdZ7VZs/wBc3XTKqgWzRwCm6NpOtmf2DUDKc5exg5kl
AfjlNvvXeGZpAPyLJ62Yw5wagK3ZvTcuZ84IQF0H84QQ5twA1Cw53z+JOT8A
h0vXpBuZiwJwU13z9h7mkgCEaZdcPMpsthrX+yjDzzNbrkZAR9/fhcy2q2F9
6AVeMDusxuWjRU6fmbEaLqcGW1drzfZfjc6/7++3ZPZYjTNuRstWzL6rsTzM
dWBXZslqtP1Z6ODILF2N2e1/fhjBnLoa/3OUbpjEnLEae5bMuTObOXc1Nj51
qLaEOX81tt+49D2AuWg1tOvKToYyl6zGgG5+MxKZzdZgtOfnkxpmyzVYcnZo
+VZm2zWw7G1eez+zwxp0zKv28h9mrEH266eGU3z/NQifOavDFb7/Gjh3swq/
zfdfg7FP/vn7Cd9/DSYvLc19y/dfgzJ77y1f+f5rIG1wdFYVW7b/GrRMjHtb
hzl3DZrvCHCzYs5fg77VrI0tmYvW4PXLOjkdmUvWoNqkZ4f/ZDYLxO8nA+Md
mS0Dsdhi86C/mG1N59/Szo9hdgjEs103+kxmRiAUn46HzGR2CcT5qFfb5jN7
BGLhz4e7lzD7BqLBg/aylcySQLxLGzQtiFkaiGYX0n+EMqcGwuZycWgs3z8Q
I/sFvZTy/QPxakthTw3fPxDSs+vnbOL7B8Js/SOf7Xz/QAz+39o5e/n+a7H8
XHavTL7/WqSXNnmbzfdfi63Pf8Wd5PuvxZyIR/Xy+P6mz5d3XX2Z778W8stj
ThXw/dfiypW0sjt8/7X42XNbo0d8/7UoTDzQ+AXffy2mP+z++w3ffy2yVJL8
j3z/tVipNI8r4/uvRZMBnex/8f3XotmigUeqtWH7r0VSyJautZlL1uJsQFbs
H8xmQSi+cutqI2bLIMxNn1G9GbNtECYdUbVpxewQhLfTHndux4wgHIhRtrRj
dgmC9vvvcntmjyAMsViT14PZNwhF18dK+jJLguDR7kL7gczSIHRJHPX3UObU
INT2rtNnBHNGEF4Vzt/sxJwbBMUl3Q9n5vwgDKtbPnwS39/k7leCpvL9g+C1
f1bqDL7/OkQXv8iczfdfh0vW/2TN4/uvQ2PvRnsW8v3Xwa6kf7I3338dXv+9
fP4yvv86hOd87ODH91+Hhd9r3PHn+6/DLK8XIYF8/3XwN7thFcz3X4f3/9Y1
bOD7r4NF9lmrcL7/OhT+HL4hiu+/Di+OZN+N5fuvw++OC7sk8v3XIWvLuqVS
vv861N3UZ5OC7x+M2/vPnVbz/YMxO2HZQy3fPxiahtPeGPj+wdg79sibTXz/
YDgsOVW0he8fbPr37P68bXz/YCTY705L5/sH4/GAF/67+f7BeFFP2X8f3z8Y
c98Vfczg+wfDbWF56iG+fzC6DrUa8TffPxheSVPvZfH9g3F03xvvo3z/YJwZ
XePtMb5/MN5NPL8wl++/Hm3rLyr4l++/HtI2Vfuf5vuvx9Sgs4qzfH/T5xc9
eHqO778eNxOX21/k+69H3W8bl1zm+6/HRkv1pny+/3p027z2wjW+/3pE3l/+
roDvvx715+nMb/H918O+p23z23z/9Ug+1a7dXb7/ekT9ONvuPt9/PYbb/2nz
kO+/Ho1s11k84vuvh6LJpdLHfP8Q3Dk78sZTvn8ItItq7HvO9w9B3y1dNxTz
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
E1HvTZBwaiLGjsgSTk/EjE2lwhmJmFjFIUTknwiH5UuEcxNR8nKrcF4i/ALv
Ceeb3kdLqw0i/0R8vjdWuCgRK7IlwsWJ0P1zWLgkEXUfvBQuS4RT15YSkX8S
zqdNFDZPwo/xocKWSejX5aCwdRIuDHosbJuEspgGoSL/JJQ0gLBDEm7fWSbs
mISLz3XCpn9t33A8K+yUhE/XPwq7JKHZ0ZZhIv8kdPswWtgjCXXX+gl7JSF0
qk7YNwlTYv8VDkxC/6avhCVJKKrSIFzkn4SX4/oJS5Pw5qu7sCYJ/uZhwqlJ
qCbZLpyehAbzzgtnmJ5v31vhrCS4eltGiPyTMFLVUzjPtF9vV+F80/M7BQgX
JqH0ukq4KAnDbx8WLk7Ckpk3hEuSED+jVLgsCccLG0aK/JPR6I6DsHky5HMn
CFsmY8DSpcLWyaj6O1rYNhmFNmnCdslIO3NC2CEZI37dEXZMRvLpz8JIxtRW
llEi/2TMrdNF2CXZ9O+x4cJuyXDc6i7skYxVUwKEvZJxzpgo7JuMh+HbhAOT
MaXWMWFJMo52LhCOScbON6+EpcnYPqlKtMg/GX1nNhVOTcbNWt2E05Pxa9Yw
4YxktHabLpxlej8/lwrnJuPTeIlwXjKWjlUK5ydjcekO4cJkDBx/VLjI9DzT
LgsXJ2Oz5SPhkmScXP9JuCwZBRtrxIj8pWgc0FS4uhRZVToLm0vxduQAYQsp
Hg4bJ2wpRea3WcJWUiQt9RG2liJWGyxsI8WxiARhWymGdDcIt5eiRcpuYTsp
5uZmC9tL0WD3OWEHKXq6FQr3luJk3nNhR9M+P0uFB0lhUVY1Vvz+pMjIshQe
IYUcrYSdpNBLuwo7S3Fop6OwixQ5CSOFXaVQDZgs7CZF88w5wu5StPu+RNhD
ioh6a4Q9paj/PkzYSwrZpiRhHykKWuuEfaVI9d0m7G/aV54hHCjF/aijwsFS
XBp/RlgixbDifOEIKUqn3RWOkUKjeyacYMr/0HthqRSBW78JK03Pv6RanOiL
FBPM6wkbpLgb0kQ4VYoZl1sLp0mx5KudcLoUe7/3EN5j+v0UDhDOkKK3fLhw
phS7OjkLZ0lxUOsqnGN6/mJ34VzT76XxQuFTUjyzXSacJ8WtOgHCF6VoXRAs
nC/FyPURwgWm91szQbhQiv5+CuF7UtQ5phMukuL4q83CT6W49j1duFiK3Lf7
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
kgdVMjbB7L8//w8JNxT8
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxN13lYzen/P/DsGfnINkJDTMiePcbyREMIyRZCKKLQvi+nfa/T6XSWzlLW
sYSskz2EELLvhBBZQkaNZX7nd3277/vlH9fjurt7vV/v5/tprum2fL2jW0Mj
I6OyZkZG///v//tTPe7//i6v/9sIc67Mf3fSjNkYQ/c2vrlyELMpTnpHqGqm
MLfDio0ju65ezmyGYsvt9sUhzOYIOjyuSdMsZgvsVnv3H7CTuTtKOx3aPvoM
syXaOSctGfSAuSeW/lxrbfKZ2QrVL943uvzL03r3gW/TDcd9uzP3Q7eRPSYY
jWIegE6/9QnwmcVsjQ8N1o296M48CAsfFkU2kzAPhtWfTbv2UTIPgV30iAaD
dzMPxb9qtxZdzzIPQxuvo90/PmAeDtt3kf22fWIegaXWZv+zbf6s3jbwvNB8
V3FX5pGQ//z+vvdw5lE42OnkYV975j8Qd9b284blzKNh6ZYfdSCIeQw+J2La
znTmsZAuDhkev5l5HE70btznzyPMQOubR00qr9ZbAlh5Hzy77gU7H4+R98eM
vvcvOx+Pv6c9mt/L9Hn9+QRcaLHQaEGPeksmYKHZ0d/WjWLnE7Hm4VTVypns
fCKWvFU7TXBl57b4XBI1uUEwO7dF4rZeMzalsfM/4TTpv7lWG9n5n5j992U7
6SF2PgkWtvmmDy6y80n4PLmFyvgJO5+MwrYHL5h9ZueTMehWmbRFs4r6czvE
Rb24W96p3hI7XDn9ME01gJ1PgUVlE+3gCex8CtLvmFXvnsvOp0LXYGRgy9Xs
fCry5tZ2mRHGzqdhzfCFt7wy2Pk0nFp3O9F/Izu3x3+WzlbOB9m5PcZcnrPJ
soSdT4dvx79eX7nPzqfj6cvDVQvfsfMZ6GoVmFPyHzufAatLM151aPOi/nwm
CnNGFttZ1lsyE3adjv2+aDg7d8DXRa9rZ9jVGw7YfdVthOVC9vMOKP5lzY37
HvUucoBnwtlTPuHs/iwMWfT0a1U6uz8LV56f9piUx+7PQujq/7WL3svuz8LY
Q80r9afZfUcM3qB/or3B7jvCOm3x59AKdt8Rbe9Hmo/+wu474s7kN3MeNXlZ
f382Lk8dqFz6a70xG8McMh+f7llvyWwEfmrcq9mIehfNxnjzIWv7TWb35+Bx
x9Ddg+ez+3PwXVlT2XEVuz8HyPDu/CyA3Z+DD50lf6bEs/tz0XC856r2CnZ/
Lmqzx0dLtrD7c3Hhcamy9AC7Pxdz03Q76s6w+/Owr2+zE81usPvzcHl399v/
PGX35+FYwdWv56rZ/XmYKTtoFfQfuz8fE2Ns1//yv1f19+djl9eh6+Hm9ZbM
h/m9Vouu96l30Xw0jrdobTyy3kZOaNMn9meXyey+E34839i/w1x23wmxW/Zu
r17O7jthSsS+iJ1e7P4C4KLf4ckR7P4C+E3MXnU2hd1fgDf/hCst1ez+AoSb
r3Ry28ruL0TStVlHEvaz+wsx9VDrKylF7P5CvFk7YYv3ZXZ/IXo1sHcceZ/d
X4SNvy+rfPaS3V+ER4siQtd9ZvcX4XvL1RYP/2P3F8Fv9e63fU0q6+8748zI
jf8sNqs3nOGds3iuj2W9Jc6QpR+3WG1d7yJnmIQt854wmt1fjLrk7S4/J7P7
ixHy+oCxbja7vxiLapbGdlnK7ht+3nbCh+g17P4S3N+c73bRn91fAv9XWxt/
kbD7S7Bnx7vXDVPZ/SVQ//wwpEbB7i9Fky+lDS5sYPeXIr3jLN+ofHZ/KQ5d
/7ztt7/Z/aU4m3/zjO4Uu++C9hmFLxqU1tvCBUkPmw6aepv9Phe8iTxXElBe
bxcXvKzIKUt4w36/CyIeF3mG19Q7zwV7Qlucnv+TzXNBt0vlX341fv1/LnfB
3+nDBxxtXW+jZbj8JD3TtnO9LZbhf2drJu23rDeWYceRWv9mA+rtsgxP+++a
NH5EvSXLcPDtxqcuqHee4eeTX6xfOaXeRcsQePRrJ0dHNn8ZZJuvmlguYvOX
Y23PG+sfrmDzl2N+l5vrQj3Z/OV4vMFkWAN/Nn85MoZ2fr82nM1fjoZ1P8+e
imPzl6PJ47avv6ex+ctRUvK/2K4KNn85Xh+rO9Nbz+avwJBG1rc7b2XzV+Dl
zIWVX3ax+Svg/HqNVeFBNn8F7l9VFy8/zuavgOMrl6ovxWy+4f7vQZe8S9n8
FXhx+FrW7Rts/go0clT4Wj5g812RNKFbzqJnbL4rel/5PjzsNZvvir6rHwfH
V7P5rlA12SQL+crmu+KXVdP2Ov1k811xKqK2Sbcmb+rnuyK57FXRjRb1LndF
16fr23i3qbeRG4J3f+9TZ1ZvCzdsHmzyh2fXesMN6o99fC/2qLeLG+Sy6kbt
+tVb4oZ5cd9/mzK43nluuLr/08fVNmy+G1IQVBAwls13wzRH6+T1tmz+SvR+
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
Ar4ouQsSsapu8m7uwkQULhpbzF2UiCMd79/jLklE7HbzD9xlibAMbdb4Ms8/
EYdrNWbc5YlIjX/Qj7syEVYx58FdnQivycvmcNca5vXcsYrbKAnl6zaFcBsn
YbH7jDRu0yS4zMvP5TZLwtOAE3u5LZJwuGH8GW6rJBzs3/gWt3US8nuOeslt
k4SsDr2/ciMJsh7Xm13h+Sehg/dwM26HJLxuP9+K2ykJo/sOs+F2ScKZM9cm
c7sn4dy7/vO5vZIwYP/UldxBSdB17O3PLUlCePeLMdyJSTC9NEDGLU1CnIlT
HrcqCU0eTtrNnZeEs32+H+XeloSOL4MucBckIeLr8dvchUnYa1v6nLsoCYV7
NldzlyThy692P7jLkjBs7t/Nr/L8k3B8/Of23OVJWFjwvRt3ZRLWe9/sz12d
hEaOoSO5a5NwtfMnW26jZEzNHunAbZyMI1GOi7hNkzF2w5iV3GbJeFTwzYvb
IhnSNWmh3FbJcIz7HMdtnYw+BwdIuW2SMXLnuBxuJKO4fa/N3HbJmJD3Yhe3
QzLcPof+ze2UjF4H3xRxuyTjduLgi9zuyfit1Zwb3F7JMH058yF3UDJGbO/5
gluSDNXHu++4E5Nxeu6qf7ilybi1+vpPblUyMk52albG80/G3Jdoxb0tGX94
/NmBuyAZre5ZdeUuTMbywqqe3EXJkGWkD+AuScb1Z62Hc5clG/49DxjDfTcZ
BY2O2XKXJ2Pg1efTuCsNv6/Ne0fu6mQcnfxgAXdtMuQvd7pwG6Wgo5vLKm7j
FCwdUbeW2zQFmqsBftxmKeinvxfCbZGCDa27R3FbpeCkwiGB2zoFaSq3NG6b
FMyTLMviRgr2H7RVc9ulIFPfKpfbIQWjck9v5nZKwYJOS3Zwu6SggfezPdzu
KTjY0OEgt1cK1vf/6wh3UAo2T688yS1JwbQTbc9yJ6ag4m7vi9zSFER86XOV
W5WCY2s63BT5p+BR2oe7Iv8UnNi3/5HIPwXP+ro+E/mnIGRqg1ci/xS4LUmp
Evkb9j3UsFrkb3i+3FU1Iv8U7HQ7UivyT8GQOd++i/xTkHCgT4NrPP8UmF+1
a8Jdm4I/quY25zZKRbOZji25jVMRNW5sa27TVGQYdWrPbZaKHzdfmHFbpCL2
5wZzbqtUXD4+w4LbOhWBjm9/57ZJRadvIb24kYrpX/7tw22Xir/CPQdwO6Ti
7NWrg7idUjGzZ49h3C6p+HbE04bbPRXSc1v/4PZKRZXkxljuoFQ07PZ5PLck
Fa8fNvmTOzEVN1+3sOOWpsI8rMk0blUqJpz/NJ07LxWfftxw4N6WCmPH7bO5
CwzPU+Mzj7vQ8H7aD1rAXZSKP148X8RdkgpZZsoS7rJUXLCzWsZ9NxUdbY6s
4C5PRYPU8Su5K1Mx2euEu8g/FT9bDfIQ+aciPlu9VuSfhsw+tetF/mmwrLX3
EfmnQdtT5SfyT8PuR/cCRP5p8LRtEyzyT8OkqPGhIv80tDqyKlzkn4bvbeMi
Rf5p2L5fHSXyT4P58S0xIv80nJ29PU7kn4bonM0JIv80bNivTBL5p+F5UXSK
yD8NEc/d0kT+aegyenyGyD8NlW/aZYr80xDe6qlM5G943pItcpF/GhoOX6EQ
+adhj19Hlcg/DVs3lqhF/ob9H3lpRP6G94k2OpF/GuJf5+tF/mnI+ow8kX8a
fg25skHkn4aPyrmbRP5pUK26vVnknwbTRrO2ivzT8CXm7F8i/zQENhq6XeSf
jqU52h0i/3SYLvtvp8g/HUnrnXeJ/NPh+mj/bpF/Oh6calIg8k9HyRDHvSL/
dGydot4n8k+HvOOD/SL/dMw93OGgyD8ds8fOPCTyT0fu8ai/Rf7pqJm2p1Dk
n45DP+4cFvmn45+X346I/NPh3bnzMZG/Yf7uYcdF/ukI3T/thMg/HZ9HLz4p
8k9H2OI1RSL/dEzp5XtK5J+OifmBp0X+6TD+GXhG5J+Od/39ikX+6TCa7nlW
5J+O5p4u50T+6UjWOJwX+afjVNXoEpF/OnZ49rgg8k/Hz/6/XBT5p2PYuCrh
6nQk7im5JPJPx8e0jaUi/wz0fR10WeSfgUNXp10R+Wfg5szOV0X+GcgIfCVs
kYEDcwrKRP4ZuFfjf03knwFnN5vrIv8MLN//VRgZeFi1/4bIPwNxndfeFPln
4NmM32+J/DMwSXZb2CUDZR/jb4v8M7AueOgdkb/h9w99IhyUga0DE+6K/DNg
5d/vnsjfsJ/pVWFpBh6YrL8v8s/AIz+TByL/DIya/Zfwtgx47hv3UOSfgVPa
W8KFhvdhvvqRyD8Dw//4V7gkAxaNkh6L/DNwOrz9E5F/BrQHcoXLM9Bsb69y
kX8GhoXtEq7OwOCug56K/DPwcuM+YSMp2poOfsbdWIp56/cIG0vR90Kf59wm
UlT22CxsKsWZtM4V3O2kKDPOFDaTwii38QtucyksnQKELaR498dLYUsp3s6a
81J8T1JkbSgS7ifFsMF9X4nvS4pmLeTCQ6XoNuSbsI0UYXtdKrlHS/EltVgY
Ukwv7fma21aK3gEJwnaG95P5UtheiuDfbd+I71OKPUPyhOdI8eH8v8JOUix4
ObuK21mKGvlOYRcpdt9r8JbbVQrnI/OE3aU4NnqHsKcUfiu/C3tJ0WbM9Hfc
flL875xWOEiKC02rhMOkSGts8158/1JkFMcIxxqef9oV4UQp/s7t8IE7VYpH
xUuFpVJMKNoqLJdin+KtsEqKV/aDqrm1UsS/8hPOM+Tl8bfwZilGPqwV3ibF
qHEjP3LnSxGhChIukGLm20PCB6SoGFsjXCjFcrn1J+5jUjyu9hAukmKR01bh
YikuX3kiXCLFr05mn7lLpWheO1O4TIo1++KFb0pRlXxM+K4Ug+I+Cj+U4trm
HjWiv1I4vnMSrjD0bXmKcKUU55oeF34rReTjd8LVUmx6+9sX7hopvIdOF66V
4rfDocLfpSgN3y5slAlF3G3hxplIuNHwH9H/TOjXDBA2ycTl6QuETTPxLTJG
uF0mGjXeJWyWif0PbwmbZ+KKyU9hi0y0VPb4Kvqfic4R9sJWmdAU+wj3y8Tv
a1XC1pkYG3JceGgm1r9/KmyTiX6lTWpF/zPxvH1vYWTin8vThG0zceKftcJ2
mUiRZQjbZ2LjpgJhh0yM73dNeE4mcgZ8FHbKxN180zrRf8N+2wcKu2QirMcM
YddMtLD0FHbPRNnWJGHPTFzYs1XYKxPvcEbYLxN9nJ8IB2ViVaNvwmGZiLH5
9V/R/0zM/WEtHJuJ/NnThBMz4TDGTTg1Ew2PRQhLMxF6TSksz8TayAJhVSZi
z5cIazPhurNcOC8TO/vVCm/ORLV9q2+i/5k407KncH4mdnuNFi7IxNBAR+ED
mbjR3V240PC8/uHCxzIxeL1MuMjwPbb5S7g4E6OXHRUuycSDRVeFSzPRpPFz
4bJMtFr0j/DNTExe3vy76L/h++pkLvwwE8viBwiXZ+L8FghXGM5DHIUrDe+r
iavw20wY2fkLV2fCZWK8cE0mttcqhGsz8cP9L+HvmQjO/lvYSIahkeeFG8sw
odcdYWMZ9qW/FDaRIePQF2FTGZ7kNv4h+i/Dlmlthc1keHykm7C5DLHvBwpb
yJD2aoywpQxVW6cJW8mQ2n+BcD8ZFoatFLaWYbTcV3ioDO0CJMI2MpzqniY8
WoauGrUwZGhSvkXYVga7T3uF7WQ4fP24sL0MPaMvCDvIsKDBLeE5MpjNKhd2
ksHKp0rYWYapbv8Iu8jwR98GP0X/ZThY3ELYXQavwb8Ke8rQzd9C2EuG4LQ+
wn4y9AobKhwkw53xY4XDZBj8ZLKwxJDfnFnCsTJEbVoonGjY/9IK4VTD/lc8
haUyQ5/9heUytHSNEFbJ8HdtvLBWhq+rM4TzZFhaqBTeLENkRa7wNhlevP9L
OF+Gznf3CBfIsDPvb+EDhvMpJ4ULZai+dk74mAz5f1wRLpKhLP6WcLEM9/c/
FC6RYdKZ58Klhu//4BvhMhn6p3wUvimDwrZW+K4MY5/9FH4og8q1yX+i/zK0
L20hXCHD7x3bCFfKYG1vJvxWhr/cughXy/DJzVK4Roag6X2Ea2XIM7cW/i7D
lRvDhI2y4Ob7h3DjLJz/BmHjLMxeO0nYJAurSqYJm2ZhWctZwu2yoBk9T9gs
C17zFgmbZ2HEIhdhiyzYTXMTtsxCbc81wlaG3/d+nXC/LMRu9BW2zkLjiUHC
Q7PgURYmbJMF42lRwqOz0Ht/nDCy0Kl5srBtFnpOTxe2y4IyUiZsn4VDeQph
hyxcLMgRnpOFjgV6YacsvNZvFHbOQkT4VmEXw3z7HcKuWTBqsVvY3fD+juwV
9szCzoUHhb2y8KGqUNgvCyHrjgkHZSHx2UnhsCzMtTsjLMnCb3nnhGMNz//m
gnBiFqJ7XhZOzYJ0bpmw1DAv8IawPAsBqbeFVVk4Ir8nrDX8vPShcF4W3kQ+
Ed6chTErnglvy8LmUS+E87Mwq2mlcEEW/M69ET6QhbGh74QLs/DQslr4WBbC
z3wSLsrCjPlfhIuzEFb+VbgkC0OW/itcmgX9je/CZVl4NeY/4ZtZsNE3MLrO
+5+FozWNhB8avqfxTYXLs/Al1li4IgvfT/wiXJmF6x9MhN8a5ndoJVxt6MPw
1sI1Wdhh31a41vD8C9sLf8/CxKUdhI3k+LGoo3BjOWIdOgsby1E3+jdhEznC
u3UVNpVj8E8L4XZyjLjRXdhMjl15lsLmcuxb2VPYQg63HlbClnK8eNhb2EqO
mWl9hfvJUTS8v7C1HHPvDRAeKkdff2thGzkW/zJYeLQczdRDhCHHxG7DhG3l
6LdpuLCdHI+62Ajby7FePlLYQY5vjf4QniNHztrRwk5yuF4bI+wsh8/AccIu
cjxIgLCrHH/fHy/sLoe51URhTzm6e9kKe8nxeN+fwn5yrKyeJBwkx1UrO+Ew
OQY6TxGWGJ43eapwrBw9DkwTTpSj4q69cKocVbXThaVyTG83U1gux299HYRV
hvc1Zpaw1pDXNEfhPDmezpktvNkwf+Ec4W2G72vRXOF8OTo7zRMukKPaYb7w
ATlO/+kkXCjHhuELhI/Jof99oXCRHBdMFgkXG+Z9Ii6Ro/KGs3CpHP/uXSxc
JkdQ6hLhm3J4rVhK+i/Hx+EupP9yNG+2jPRfjnM3iCvkGK5bTvovx6oVK0j/
Dfn2dCX9lwMviWvkaLjJjfRfjsPOK0n/Dd9f21Wk/9kYeZ64cTY6BbmT/mej
W8/VpP/ZWHCN2DQbV4PXkP5nI62rB+l/NnJPE5tnw3SFJ+l/NqqM1pL+Z+MP
LbFVNn4Zto70PxvLLxFbZ2PG0vWk/9m4U01sk41mEi/S/2y8NvEm/c9GnJLY
NhsvuvqQ/mejzVZi+2y07+NL+p+NrzuJ52TjVF8/0v9shG0nds6GdQ9/0v9s
vNQTu2Zjy68BpP/Zhv+eEntmY5lRIOl/Ntb6EPtlY9Mz4iDD+5sVRPqfje3H
iSXZSLQKJv3Pxu5M4sRsdK8jTjXktSSE9N+Q5xlieTaUPUJJ/w2/P55Ya3j/
L4jzslE0MYz0Pxvt8oi3Geb9S5yfjWlzwkn/szEqn/hANk40jCD9z8aj+cTH
sqHbSVyUjUY/iYsN+c6MJP3Pxl09cWk2HN8Rlxn2GyUh/c9GZDzx3WyMuUb8
MBvnOkWR/mfDYgVxRTZm7iCuNPStmvhtNsYPiyb9z0bLYOIaw/d3lLjW0Jcf
xN+zUTMmhvRfgbBw4sYK/DhKbGw4ryM2UeDnsFjSfwXivYnbKWCWT2ymQOEL
YnMFPLrEkf4rMHQesaUCv6YRWxl8hrifAiNqia0VCO8XT/qvQNVSYhsF4mTE
oxWYUUwMBaZ8IbZVIKRHAum/AhVziO0VSIkhdlDAey/xHAVyHhM7KWDcIpH0
X4GTw4ldFDi9jNhVgbapxO4KHDpI7KlA/mNiLwXqmiaR/iuQN4A4SIHNc4nD
FGgWRixR4NIG4lgFPp8jTlQguoo41fB+WiWT/ivwaDCxXIE9c4lVCnwMJNYq
sEVNnKfAlSPEmxVY94B4mwKJ34jzFfitcwrpvwLWo4gPKHDGibhQgbsBxMcU
8JITFymQvpe42PA9XiEuUcD1DXGpAl2bppL+K+DejfimAhhNfFeB7fOIHyqw
1Yu43PA9JxNXKLB0E3GlYd4x4rcKBN8krja8r7fENQo0aJxG+q/A4M7E3xVo
PJjYSIlAO+LGSqQvITZWYoofsYkSO5OITZU4qCdup4T7fmIzJc6eJzZX4soD
YgslYj8QWyrxumE66b8SP9sT91Oi2IrYWokxfxAPVWLNdGIbJeyXEo9WosKL
GEoMiSa2VeKPLGI7JX5sIrZXIvgAsYMSe4uJ5yix9SaxkxILK4idlbj8mdhF
CaNGGaT/StS0JnY3vG8LYk8legwk9lJixRhiPyVWTiMOUmLgAuIwJYpWEkuU
6OhHHKvEqCjiRMO8dOJUJR7kEEuVcP6LWK7Ejv3EKkP+J4m1Suy+RJxneN47
xJuVeP+MeJsSk94T5yuxvo64wJB3YynpvxI2rYgLlbjXkfiYEjMsiYuUUA0g
Llai0Ia4xPC8E4hLlQi1Jy5Tous84ptKaJcS31XiozvxQyUsfIjLlegdSlyh
RMtY4kolSlOJ3yqxKpu4WonHOuIaJQZvJa5VwnU38Xcl/A4RG6mw4gRxYxUG
nSM2VuHJZWITFdbeIjZV4eFD4nYq9K8gNlNhaRWxuQp+n4gtVPCoI7ZUYZJR
Jum/Ck2aEfdTYVtLYmsVBrYjHqqCphOxjQrvLIhHq9CjFzFUmNif2FYFuyHE
dioMHUlsr0KzccQOKpy2JZ6jwsqpxE4qfJpJ7KzCqrnELiqcW0jsqkIrF2J3
FSa4EXuq4LKG2EsF9/XEfio4+xEHqfBHMHGYCk0jiCUqHI8mjlVhWQJxouH5
U4hTVfCSEktVeCAnlhvel5pYpUKojlirQsEG4jwVbm4h3qzCq+3E21R4vYs4
3zBvL3GBCscOEh9QIe0wcaEKM48TH1OhwSniIhU2FxMXq2BTQlxieD+XiEsN
+10lLlNBe534pgr/3CK+a8jvHvFDFaIeEpersO8JcYUKt58RVxq+3xfEb1Wo
rSSuNsyrIq5RofI9ca0Klz8Sf1dhaw2xkRp+X4kbqzH8X2JjNd59JzZRQ/0f
sakaIxvKSP/VuNqY2EyNhc2IzdV40JzYQo1ZJsSWahz/H7GVGl1bE/dTI7At
sbUa59oTD1WjhRmxjRqTOxGPViPYnBhqbOxCbKvGaQtiOzXudye2V+O1JbGD
GtU9ieeo8d6K2EmNij7Ezmpc70fsokbhAGJXNRTWxO5qeA4m9lTjj6HEXmo0
HE7sZ3j+EcRBaoSOJA5To/8fxBI17o4mjlUjbCxxohodQZyqxp7xxFI1xk0k
lqtRYkusUmPaJGKt4XwycZ7h/hTizWoUTCXepkZne+J8NSTTiQvUeDKD+IAa
Ng7EhWqkziI+ZsjTkbhIjd/nEBerDf8+E5eosWUecakaj+cTl6nRZgHxTTXG
LyS+a8hvEfFDNTKdicvV2LeYuEKNK0uIK9V4uZT4rRp1LsTVahgvJ64xPM8K
4lo1zFyJv6vRyY3YKAdmK4kb56DNKmLjHBi7E5vk4F9q0xxUrqb9z8H1NbT/
OSj0oP3PQY4n7X8OgtfS/udgzjra/xz0W0/7nwMjL9r/HFyjHpoDvTftfw7c
fWj/czDQl/Y/B5+pbXOw34/2Pwde/rT/OegTQPufg6fUc3KQHUj7n4NJQbT/
OaihdslBXjDtfw6mhND+5+ADtWcOskJp/3MwNIz23/D+qYNysC6c9j8HzSJo
/w3vizo2B4Mjaf9zUEydmoPZEtr/HJRTy3PgEUX7b9iXWpuD0Gja/xz8R705
B1ExtP85aBBL+5+DSOqCHHyjPpAD/zja/xy8oz6WgxXxtP85uENdbHj/CbT/
OThCXZqD3om0/zlQUN80PG8S7X8O1lA/NORDXZ4Dm2Ta/xxoqSsN74f6bQ5c
Umj/c1BEXZODLqm0/4b3Tf09B7epjTSwTqP91yCR2liDJ9QmGgxNp/03/Dx1
Ow0eUJtp0C+D9l+DMGoLDS5RW2pgJqX918CVup8Ge6itNaijHqrBhEzafw2S
qEdrcJUaGrST0f5r4ERtp4GG2l6DR9QOGnTJov3XYAm1kwY6amfD+6F2Mewr
p/3XYA61uwYZ1J4aXKD20qBhNu2/BqOogzTwpg7T4C9qiQYPqWM1MFXQ/mtg
S52qQSC1VIPt1HIN7lOrNPhFSftveD7qPA1WU2/WQEm9TYNi6nwNPlIXaPCb
ivZfAzvqQg18qI9poKUu0uAsdbEG76hLNGivpv3XYDR1mQYrqG8avjfquxrs
pn6owQ3qcg2+Uldo0CmH9l+DMdRvNVhKXa1BFHWNBhupazU4Q/1dg+fURlo0
0tD+a9Gd2liL8dQmWiylNtUinLqdFjnUZlr8TW2uxQ1qCy0+UFtq8YuW9l+L
HtT9tAC1tRYLqYdq4Udto0Ua9WgttlJDixPUtlrcprbT4j21vRZNdLT/WphT
z9FiMLWTFnbUzlosoXbRwpfaVYtEanctdNSeWuyl9tLiLLWfFveog7R4Rx2m
hZGe9l+LttSxhvdNnajFCOpULaZQS7VYRC3XwpNaZfg+qLVapFPnaaGn3qzF
bupthnyo87W4Ql2gxSPqA1q8pS7U4hv1McP3lUv7r0VH6mItelGXaDGMulSL
idRlWsyivmnIl/quFh7UD7UIoi7XIo66QgsZdaUWudRvtdhJXW3oF3WNFmeo
a7W4Sv1di/vURjq8oG6sQzW1sQ7fqE10aJpH+6+DKXU7HTpRm+lgSW2uwwBq
Cx1sqC11mEBtpYM9dT8d5lJb67CEeqgOq6htdPCiHq1DMDV0iKa21SGZ2k6H
LGp7HTTUDjpsop6jw05qJx32UzvrcJTaRYfT1K46XKB216GM2lOHO9ReOjym
9jPkSR2kw1vqMB0+U0t0+Jc6VocGG2j/dWhGnapDS2qpDm2p5Tp0pFbp0JVa
q0MP6jwd+lJv1mEQ9TYdRlDn6zCGukCHidQHdLCjLtRhOvUxHRypi3SYT12s
gzN1iQ7LqEt1WEldpoMH9U3D90Z9Vwd/6oc6hFCX6xBJXaFDLHWlDonUb3VI
pa7WQUpdo4OculYHFfV3HbTURnrkUTfWYzO1sR7bqE30yKc21aOAup0eB6jN
9CikNtfjKLWFHieoLfU4RW2lRzF1Pz3OU1vrcZF6qB6XqW30KKMerccNauhx
m9pWj3vUdno8pLbX4wm1gx7PqOfo8YLaSY9Kamc9qqhd9HhP7arHR2p3PWqo
PfX4Su2lRx21nx7fqIP0+EEdpsd/1BI9Gmyk/dejEXWiHk2oU/VoRi3Vozm1
XI8W1Co9WlJr9WhFnadHa+rNerSl3qZHe+p8PTpQF+jRkfqAHp2pC/X4jfqY
Hl2pi/ToRl2sx+/UJXr0oC7Voxd1mR69qW/q0Zf6rh79qB/qMYC6XA9r6go9
BlNX6jGE+q0ew6ir9RhBXaPHSOpaPUZRf9djNLVRLsZSN87FOGrjXIDaJBfj
qU1zMYG6XS4mUpvlwpbaPBd/UlvkYhK1ZS4mU1vlwo66Xy6mUFvnYir10FxM
o7bJhT316FxMp0YujOr//D+nGk+J
         
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 2000.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 2000.}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"LsI", "LhI", "LsO", "LhO"}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False", ",", "False"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.76752447346268*^9, 3.767524647939724*^9, {3.767524744416259*^9, 
   3.767524759285419*^9}, 3.7675248030713387`*^9, 3.767693193047288*^9, 
   3.767693418077149*^9, 3.7676938132884893`*^9, 3.767694074594818*^9, 
   3.76769413702177*^9, 3.7676941838050632`*^9, 3.76769430275557*^9, 
   3.7676943541628847`*^9, 3.7676944219667664`*^9, 3.76769450485946*^9, 
   3.767694902300342*^9, {3.767695285693819*^9, 3.767695308045618*^9}, 
   3.767695587867395*^9, 3.767695654169937*^9, 3.76769582688916*^9, {
   3.767695913729542*^9, 3.767695924030217*^9}, 3.7676959757201138`*^9, 
   3.767696102747109*^9, 3.76769620630105*^9, 3.767696322861813*^9, 
   3.767697249316082*^9, 3.767697812698333*^9, 3.767698035525419*^9, 
   3.767698098595351*^9, 3.7676981544379683`*^9, 
   3.767698432791095*^9},ExpressionUUID->"21670bef-e0d0-41f2-b571-\
3f7d4394322d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
5IwDLXDGitQF0brjaKEzbsRfc3upQBc6I3DCkeJXNwSc7wyH7dfiJ2yk650x
rqdLx+vetIILarc7OByeQWu6wNl9wrq3nWi4AOtOBT4rW8358nO/9lHZAlro
gqenr45/1pYudIFY8MX5wbZVnO8C/Q0PboWY0vUu2NU7YED5+5Wc74rzCW6P
DohpTVf07DwrbaE+DVdsNE3MXVtny/muOBvxfVFOAi10xeWxxe1mjKYLXbHj
ltMD6d0VnO8Ku2mSz9ui6HpXfO9xZImzDq3ghoUNyT8f3FrO+W74FY8LilE0
3PDy39Wk58NpgRtsj/doG37PhvPdcFdi9rQiji50g3kHzQvXx9Llbhjbq+uk
jHprzndD9P2T+xVFtII7TMW9CyaC1nTHP7P7VpqflnG+O8IyNmhd2EwL3FFu
7jRbewktdIdB46mH01XoQnd8HKrzX9fSpZzvjo4y+9pCH7reHfmzT1m8GUIr
eOCtreeSDw+XcL4Hep97eG2PmIYHJIfbZg2ZRws8UFd9VGDdlhZ6YLiz0l+j
k1ac74GlHpHd3wbQ5R44oJJpOk+XrveAsuSunv0bS873xOCUoKXjttOanlCf
7TH1hD0NT+Sa1ixqHkgLPBG5wFH5Y+1izvdERYHw5NoCutATX9pfOP9rBV3u
idoJBj5d+tH1cs873Obho0Wc74XuD7qVLNtAa3rhhMLG44kCGl7IPL/QwEWL
FnjhUcqAVU0vLTjfC/brFk6Zspsu9ELC1bJ6HR+63AvxSiMEFyfS9V4oePQt
ZFDTQs73huGlAQ1qibSmN1Ietfm7sDsNb2zSu7fhxbYFnO8Ni0l2Wyon00Jv
jLgeVdP2qjnne6Pm33bFxNV0uTeGG/jWWX4z43xvnDHu3tM9nVZYg8uFr5dc
1KY116BnxOMpzmXzOX8NFPV+28y1oQVr0HtU1RyXb/M4fw0e271NOCemC9eg
z8SFBTZj6fI1kFbWKg67acr5a1D77uLE4X60gg+Wzv68caUGre6DzCEu+88c
NeHz+CDozoGri21pPR+s0DW27tSWhg+eNTwu+VQ0t8UWPsi2qJ/+04IW+ABR
O82G/DRusY8P/Ef+mOyzlRb6ILTTRKvqhbTIBycu3fqy/Pcc7uODKrdcl287
6WIfXC1++XerNV3uA427g1RcVOgqH4zoVFelf9yI+/rAqmrS9p4edKMP9lzt
cldhAK3gC9Ui+12fbhpyf1/o53j6v0qkNX0RvadN1GMDWs8Xloblve5/mc39
fdG9/QLJ1d20hS/eambPOOFIC3yxweKVZ+EA2scXRn+W+4XXzOL+vvjleG+r
SS4t8kXdTStbpcV0oS9WNHb5sq8zXewLixVHL8y+Du7vi+ezkseXZdBVvri9
Km3DgAV0vS9cxx3ysOtMN/piVo1Ke5UtM7m/HzRPB25UHk6r+8F6SY2wtHgG
9/fD8DPLMgdNpfX8YLPA/NDYC9O5vx9KU9KevlpEW/jBP0PSY2a9Aff3w+85
1xaN86F9/KCrVrqhtA0t9MOoOD31mpxp3N8PVzYEn4kdThfKn88k6V7J6anc
3w83PXUi3JfR5X7Qkgxo2NA4hfv7Ye9fMxvzNLreDz/W1fT0HUY3yp9nh3mg
0gV97u+PhV1LKpUcaXV/3Dl/ONZLkdb0x1PFEiX97ZO5vz+aM+qvCUxp+GN1
neXKZ+8ncX9/rDk9CCcltMAf9lc9Oj6fSvv4o2yin73Ns4nc3x/fFLa865FB
i/zl/728Y3UvfbrQH7turQmzeT6B+/vjzLfp7e9l0+X+aP9q770U0FX+8LA6
ddmncTz398cMyc1LiZvoRn9UzCs9d8mSVghA+oWyE7rKtHoALqull5w4OY77
B+DlG9Nzjr60XgBiEkTtRujQCED+MLeC9vVjuX8AsnbOP/1dSgsCsFCzb9H3
xbRPAJwcBq1v24kWBqBrdIePPa7ocf8A9N5b06SbRBcGQOf124Hz5tDFAZjW
6eVtO0W6XD7vlV3/V8m63F/u6tqiH6p0fQCeH3jq/CFzDPcPwMaiFcnnNWiF
QFjsc1zsXzCa+weiq+q4AV+H0JqBKI7/bo0Do7h/IHpYVsQtmkEjEP59EsYP
ujaS+wdCt7hEfedKWhCIqXYe959+HMH9AzE4csSyijhaGIiBe8r9LHvTokBc
GjBcM6p4OPcPxIfh7q6zTeniQIy65eey9pkO95ffb980XxhNVwVi4juLZR/6
0fWB0LuyuLbu5DDuH4jf3UcZmdnSCkFwmzdTcezfodw/CJUD/uxI2kRrBqG3
dtnVeca0XhBs5hX0D3w3hPsHQenI/JVtcmiLIKi6flnxxoAWBOFksNLvEa+0
uX8QZkztObZMTAuDYF527N+GmbQoCAPzzSIr3mtx/yD8fVF3Y+J6ujgIzSd/
j35qTpfLf78yta7i32DuH4R1Owr0Xxyk64OQojR/yzgXujEIax+n5u7pRysE
Y2tVu7wFtwdx/2BYbno5VSON1gzGg47nhzcb0npyd3Xo2fxHk/sHA8X5lzof
py2CMUvaW21KIC0IxiDh8ss+42ifYLSvPlHt9GQg9w+GmWqf199X06JgDNsy
pDa9fgD3D4Y02PbNQAe6OBhn5ve0L3rVn/sHw/TY5AMDvOmqYEzodn91+Pd+
3D8Yuzd8Uz8qpBuDkbV4ROyVjrRCCJaoWqbtW9uX+4egKdVogO0IWjMEI36F
G1ee7MP9QyAOuqHTtIBGCOJnabaredab+4fAykZtlGsYLQhB3tRtXTd2pX1C
0PVh7xnBe3px/xD8/ulv/mYuLQrByH1zf3x63pP7h0DhhWuH5Di6OASppwtd
t2vR5SF4WeegPvdCD+4fgq9I7uroSteHYGnR77wfHenGEFR3ED78dbA79w/F
jW7Lx3ssp9VD8e9oN2W0ozVDkX9M707AXg3uH4pv0a9HKdrQCMXP0S+PNijR
FqEYfapZt39JN+4fig/Xax0KHGifUFyY+XGinQYtDEVfn7frnC925f6hUJux
b8OOULowFMkjGm0GjqGLQ2FYovS74lkX7h+KAVM3Xti4lq4KxYR2KR02Lqbr
QzHureeos//RjaHwWSPZqnhRnfuH4dOe7c12MbR6GC7WBJy/O53WDMOmbm4r
j37vzP3DcGxG9os6fxph+FyoerT3l07cPwxjdrxNWh1AC8IgypkzpuiHGvcP
g+KYgxvfRtDCMOz997RxkCItCkP1Ob0lhhkduX8YUu10B5j0oovDYGo/46TO
tv+4v/z+sIHHa8fTVWHQupp8ZvV5Ve4fBnfd8rU7ltKNYVj8S3fYvjcduH84
km4rOHkKafVwZH0t8XrYk9YMx6uoc4Ffi1W4fziidSZWFs+nEQ6V/oYPOjQo
c/9wnLn/bXBzAi0IR9r8i7NDhtA+4VBNnPFReLE99w/HiRUbvnd0o0XhOLg7
cmYPNbowHLJD/hV5B5W4fzgUy07uSLahy8OxvqJW9WUbuiocHX4unbRztyL3
D4eLs2FC5VK6MRw9Ajq4zWtHK0SgHZTc+h9ox/0jUPJk0mAIaM0I7LT7aLxX
ndaLwK/tMRtWn23L/SPQ4+InxcWBtEUEHqRud48eTgsikOTb787TujbcPwJL
kmU2wbm0MAJ+AU+G6pvTogiYvn8TptmeLoxArkn+jpHlCtw/AhO13LosCafL
I7CqaLqudDJdFQHbUx01nrz+N6Nlf/n8q4qhh5zpxgjMnNH0YsOLvy1WiIT5
WOV7a51p9UgMLFv+csPrPy3WjMRW9cK7m71pvUioWyTFbfj2u8WIhEmVUWNK
FG0RiYOuXQ1WdqAFkdhue2i7et6vFvtE4qt1c2aBNi2MRPZtc7/mkp8tFkUi
oWjyu4Fz6cJItPny5rDKw+YWF0finPGNbXt86PJIKM/vtl9Rha6KROHWKU86
bGri/pGwubHT5fA0ujES0z4ZpShU/+D+UVAOaNrxPJBWj0LkniVY0Z3WjMKY
nGGvVx75zv2jMOm8muVLaxpRyM3obvLh9zfuH4WA50t3r9lMC6LQy0UU4mhK
+0RhZZ/L5y5++sr9ozDn3btjonW0KArJ8/3WlRrThfK/FzdfMPryhftHIWjL
t51am+jyKNz9aHbD0oKuisLgOUp3bijQ9VEQf3/lIT74mftH4c5XXUGeE60Q
jeBjeln3etPq0fAf3/6d+Y1P3D8abXRnRv1IoPWiUS3MsLs+nUY07oYHXbj2
vZH7RyNwV7v3jcW0IBpKgwLHjPekfaJxQePL5ywdWhiN66czPZUqP3L/aJze
0EetkyldGA2N2gfKYys+cP9oLA/eWu5kSpdHo7e3cdmWyvfcPxq3d/za+XQR
XR+NZxZPFvSpecf9ozFmlb9stj2tIETMr395lu/ftlhFiJ9OIwPnhNHqQtx0
do1R70D3EuL5sAidvbI3fD9CDE5Q+N5tFK0jRHeDV5Lp5a/5voRYdk/hyuCl
tL4QHb7GRJa+b+D7E+K4bm5xuyTaRIhbux7EfBpEWwhR7dJmVHTZqxZbCzGz
1Fxpuy0tEKIsWC969e+XLXYVorTf3SHb1tM+Qjj9PbrRB3SIEG2HTNt78vkL
vn8hkhRn6whT6WQhTA+da3dsLC0SYsEVz/krHzxvsVSINLWJWu7xdKEQUbcV
L1Xr0kVCdC2an7rl0TPmJUT5paL751PpY/Ln/5uiN3kqXS7E6vs3Rn1787TF
FfK/j/INay6gq4SYcX5o7QwLulqIoTv/G1OuSNcLYdXXYkXIiSctbhBiZ2WN
i70v3SjECYdm99DhdJMQf/eqi449rWf+MdgZO6dH3/W0SgzO/tW1KLCm1WPg
G5S+ZXJ3ulcMrkyv7nJz22PmH4Pj8Xd7LNGidWJwctdZ0efNdcw/Bnt9ptcV
atP6MVi8fWrMsqJa5h8DRTefAZ3G0CYxEFveiSg9/Ij5x2BYuw4Jy2fS1jGI
97qH+isPmX8M9jzY8mCONe0ag5kHvxbEvXrA/GMAq8efskPokBgonMmzd/uP
FsZA3fJ5XtvCGuYfgw/d91otnUSLYjBlfUD0yuvVzF9+v/P7nl1c6cIYXN4V
Ms29HV0Ug8rIEi37wvvMPwYHGtsP/TyDPhYDWcyEQ90e32P+MUiMfLm0XEhX
yH9fjKOftOiqGGieDsnZVHGX+cfg0nq3isvedH0MPlvqGDv2oBtiUP91U2+P
03eYfwwmxo51qXajm2Iw4+tMj+3daYVYrGxTH3rj7G3mHwvt+V5/zX1p9ViU
nB8Z3m8Q3SsWyQc+JU+8dYv5x6IxofyeJJ7WicWbL77Dx+nTerEYHrFyxX/v
bzL/WESM+7mizxYasYgPyNFdvpw2kc+f/eHDha60RSxUhn64aF1Zxfxj0feu
eZNaEi2Ixclv5vfrZ9OusajsciJP9u8G849Fzozc9WvD6ZBYOPZrX3uy+Trz
j0WPeh/J11A6ORbD4qdoGfy+xvxjERA4rmuqkJbGIlJXpcO99nRhLMrCd9/q
mVXJ/GMR9fr+irm96eJYiIeGHLTddpX5x6J3+35KFuPp8likKidv7n3uCvOX
z7/Su/mAFV0VC63PlnldGi4z/1hseWY3dGwkXR+LwWdj/Dto0A2x8LlR5CTZ
U8H8Y7FzfHObCmO6KRb/Thi7Fz69xPzjoL+o+FF3Ia0Shxcv+x4aNJBWj8OH
V+fsT52+yPzjoB7xJPypHa0ZhzFTe+9MVaJ14nCu68j9+3ddYP5xcPvm5zl/
Ea0fhzbLRNXLms8z/zjEZnxtd2MzbRIHqX90z93mtEUcPh/vZ/Wy+Rzzj0Ni
+5Vdw3fQgjj0O9n7rMNS2jUOij6d36xtT/vEoVk3eVjfY2eZfxy6fP01+rE7
LYyD5cVdF58MoJPjkBlgWdX/zhnmL79fcX9GZiotjcOByff6jJlNF8ahTs07
pulnOfOPwyn/21saSujiOMxT63SpeQ19LA5HpsgMh42iy+XPUz5ftebWaeYf
h1WrfTRSF9JVcZj/tfKS9fUy5h8HlQddPQwW0vVx+FRe7zrq1inmH4cHXQwW
ai6jG+NQqvz2eue6UuYfh+Ctz058dqYV4rHo3gPlM59OMv949EktuuoXRavH
o+nhAQMFNbpXPDo6CQ/YrT/B/OOx/+fQwixdWiceS+Iq18eeO87843Hy4NBV
421o/Xj0c246uLbxGPOPR1ynDWkHUmiTeDzqkfnVR5u2iMecmI89bpUfZf7x
yPqorH99FS2Ix4n2z46t+nuE+cdjnPud7pEbaZ94TG3b7uXg2XRIPMoD/z4w
fXmY+cdjy/pV5W/T6OR4qG0yDm87nhbJ34dxO9XkhyXMPx42c7bGBSXQhfF4
LJb0rNCji+IxOmC8WnDtIeYfj2UnQ85FptHH4tH8Prv43lS6PB4jXWPtIt4e
ZP7y97H1eKjberoqHhsKLx6UWtDV8big1uaRohJdH4/g5RoPik4cYP7xOKd9
Znu0L90Yj4olsRbxw+mmeOwu0/154Gkx80+AhsqBB+3W0yoJ8ArfYhBoTasn
QK1Lt6g23eleCeiaZatpsm0/80/A6jf574sH0zoJmH/3qWjC5n3MPwFh5ktX
XNGi9RMwtEeXs2479jL/BJwZjZWqo2mTBOx8UfdqS8ke5p+AQPtbM8bMoK0T
cPxAlWDT5d3MX/4876y9vi2lXRPgM3nN1sEvdzH/BAyco+M8KJgOScCC6d/H
vulACxMw7uiI7YEbdjL/BMzN3hVdOoEWJWDzUz3Z0coi5p8A5zPNb1Y704UJ
mD3bNnVfG7ooAWsaPxYVbNjB/BOwaO+mHK3p9LEEdJDVHTGo3c78EzDvi37O
kyi6IgH3dw2o/G8wXSV/vrfavQ5f3Mb8E5CZen3+fU+6PgEJ0YOsPDXohgQs
HtJvsveprcw/AaZnwrrdd6GbEqC8f7Tmpm60QiLKu/3afbF8C/NPxIr+mv1n
r6HVE3Hjb5dPagPpXomYNv35Se2qzcw/EcVmajoxsbROItY/++97/0m0XiJM
Gxt+fXuzifknwnrOqCGKm2gkwqdwgJ+hNW2SiPxp53/sU6ctEjH0tMPjWVcK
mX8iAvynOf+IpwWJyPTqXXsFtGsiupett1jzayPzT4S9slqUXzAdkojkgH5L
875tYP6JeJJZ2uVWIJ2ciOj78Wr9m9Yz/0TsVOlwxTuCliZC+dGVN2Vt6cJE
TH9UNVEprYD5J6KgvI9kSne6OBEx/33/z2rTOuYvf38H06+Y6dLliVApX9q7
3+m1zD8RFdnl9ics6KpElKVF6Wk+lzH/RHgo3R1hHErXJ8L4pnWvIep0QyLO
6VyuPVwkZf7y53MrjPg0m25KxCzDz91u1uUz/yR8dUiuM4+gVZJwdrLxeLu+
tHoS1AbWxCuW5jH/JAxYtFEwdhWtmYTcFTLvJ21onSS4pk307bQjl/knQb3D
GqOD5rR+EnRro2svfsth/km4uu3iPOONtEkSUnr8OzhiHm2RhD3VKku8v0uY
fxJePDyU9N9WWpCEkNlPjv1eTLsmoeH1Pi+DdrRPEl5dWj/rQomY+SfhZnnx
y2wXWpiExhvB2uv70slJSM60r35Slc38kwCXuq/Lk2hpEs5f14ppN5MuTILT
0pmyez9EzD8JCUcVvG4coIuTsOCYD1570seS4Nbzs/vA4XR5En58Vdr3oDKL
+SdhtvtZxfWmdFUSwie/b46oyGT+SRCNarjla0rXJ+Hh1oAmv8oM5p+ESSMH
/wheRDcmYaTpmciQ6nTmn4TuQ7xXedrRCsnYe+t92vx3acw/GZslw/p2CqXV
kzHxt82sPcp0r2SY1Ny3HCBNZf7J8KgqvGQ7gtZJxv68c3qCshTmn4zsmspZ
g6xo/WS815peKX2bzPyTUfHp16nT8bRJMsrHG2plDaQtktEoVNZWKE1i/sm4
duuHYsfltCAZve4eHbqnOZH5JyNq503FB2tpn2R8FH+ZmDWdDknG8ppZHhee
JDD/ZKztcnZNUBKdnAybXyY6BWNoUTKGFMjEevfjmX8yZt6JuDA6hi5MhufH
to0Zo+iiZByJ9bWZXxPH/JNxLixIIEiijyVjaZsXYZcm0eXyfYryJoa/imX+
yejyrXZ8kIyuSsZ3Z2XdQ2Z0dTKWDA77PqoNXS8/H/nau+5IDPNPxq7x17LP
etGNySi0XOl1ZwjdJH//EzsO6fxYyPxTgM1TP3rJaJUU/G5e2+OdFa2ego9h
0c3xXeheKbDddayL64Zo5p+CYefXZb/uS+ukYMf+6o0J66KYfwoWXcrMGN+f
1k9Bud+ZG28KI5l/Cp5+3fFv81DaJAXik6rVlvsimL98/jDdSd8m09YpmLav
W+/oc+HMPwXXrkUUvragXVNQNEVbbXR9GPNPQaVeh9OzfOmQFPjOmjlJU5EW
pqDAf3eXM9JQ5p+CcZG/1Prr0qIU2MePVh59KYT5p8BakPfttYAuTIFLj/QP
Zr+DmX8KVj6zHrJQRhfL3+/5Ly9fT6aPpeBgmGhDj+og5p+CtpYpVddD6YoU
HM+q7dexP12VggvS/2ZUnAlk/in41TdH+Y8LXZ8CpyuOLls70w0pGFq9zPHY
sQDmn4KwF6/7jXegm1Lwz0z1cqfOtEIqVie+Ozqn1J/5p2Lx63sWt9xp9VQo
Jsd02d+H7pWKGZsTM+9d9WP+qdCtC/IzjKJ1UtFtt2N041haLxXjvYPSql/6
Mv9UGH3cHfu9gEYqKq1UnOdY0SapePD+v/nlHWmLVKyfn77C/qIP809FvYbr
3aExtCAVcb/NVDtMp11TMfSQ6JTK1zXMPxXeTfG5Oj50iHzfn8eKXT94M/9U
+I+Om1fuTSenov2ixNNDP3kxf7lNDLIlgbQ0FSMy9jr9/eXJ/FPh1N6j3ep4
uigVe/fFL97biS5OReHvN6uerPVg/qmYY/fe8osOXZ4KwaDF4Q+PuTP/VHTZ
EGEonkdXpWLlNJcJ6nVuzD8VV/a9ajL3p+vl73OolrWRKt2QihLN3lPebXZl
/qko/m/V+hnT6aZUlJlO2TqhxoX5p8H566j0S0G0Shq0f53a1didVk+D6prh
ATuPODP/NNzcVhr81prWTMPRnytWFf92Yv5pGFY+8s2nTbReGvLKYpt3mtD6
aZg880DsrUZH5p8GJeExidNa2iQNmJWzZOUc2iIN654FqpR8cmD+aeift6yd
40ZakAbd7ctLXBbQrml4Hjll8/G/9sw/DYM2HXO3KqZD0uDpseH0OAdamAa/
kbddF/akk9Pw8LWS8bZKO+afhl/i/aa6cbQ0DbZdx4c3TKUL01BzKbf56hcB
80+D3qxXX+7spYvT4J0Uv/+vK30sDRWDJyQYDaHL0/DltnK54YXVzD8NsZ0q
w7Rn01VpOPi8o2DwmVXMPw3R7cJKJsym69Pw2vjok8UXVjL/NJz4uC44YB7d
mIaF1yYOy75py/zTcLnHkzOFy2mFdKguvzdj3YsVzD8dC3UDikP8aPV0ZHZQ
Wjy2Dd0rHYc6fQw+lb2c+cv/PmGCtLs2rZOOqKEC03HHbJh/OvS27p/ZcQGt
nw6Xrd/NCl5YM/90CCYtc3gYRZuko9udFelne9MW6ejzfsjneUeWMf90TG+u
f+RlRQvScXhW7D7tr0uZfzrefxz4zDWX9knHxINXukzQp0PSYXujzfvoR0uY
fzp0ZhoZGsfSyel4lCpoEg6nRfLfTzrfccQtK+afjriKcfnTIujCdGwt+nNp
/zC6KB3PIoa/Ed6xZP7paLzf12ZnLH0sHfURo7K0xtHl6TB3fNj7zdPFzD8d
a17fW/8jh65Kxzrjd7eNTehq+fNpLc669XsR80+HZP/ig7kH6YZ0RPiNnpLm
RjemY/iyhRP2DaKb0qHwWfFS8wML5p8B4yJ7HbdcWiUDM4b82fbDglbPQI/s
2QWFanSvDGgP//W3LG8h88/Ax+Saras1aJ0MFLhMWd0nZwHzz8Aujy5RL7vT
+hlQy50QfFJmzvwzoFpq9Fo0kDbJwLDqiLRVO8yYfwauDDRBv7G0dQb23tdX
OVs6n/lnwFwc085kHu2agTEGY0O218xj/hlIOKF8/q47HZKBoW9tXa//MWX+
Gdh/VeW/FDGdnIH+V1yc/+rQogzsvrxqybAzJsw/A/67k+79Xk4XZuDZzC//
gr/PZf4ZGDhMoCiW0MUZmHtJYbzROPpYBgIuWvxMumXM/DMw7ve9h0sD6IoM
KJ86E72rJ12VgXZfdq6PKJ3D/DNQKR733yV7ul7+/Lftj8ap0g0ZmP3NdOee
Q0bMPwMXK03aGayimzJglnzo10hVWiETRwUNL4OOGjL/TMxd3XFET2daPRP6
VUWGyj3oXplYE/Kmctal2cw/Ez0GvPI5E0rrZMLoxfkPwtG0XiY2q+tohz+d
xfwz4bh5cPMuKY1MaA6v8/nPgjbJxDadXtvzVWiLTBgGCE7OOwvmn4mmbtOa
BkbSgkxouOnv6TqFdpXPbysJNXg3k/lnIja5HBGudEgmLk+VVj18OYP5Z6I+
7PXyxS50ciamLOo+8/7r6cw/E1b/AtTsvWmpfN7xjrZvvhow/0zY97zw1yWS
LspEdbXB01vKdHEmTs7RUdHKmcb8M7G+fb+tFoPp8kz4lK9Wtjo4lflnQvtu
hmSIEV2Vie1HJtafuj+F+WeiYUCMuLsXXZ+JJOmYkCGKdEMmVmwRBb0s0Gf+
mXi2zDxn0WS6KRN9fjx8s/r2ZOafheV1f86p+tIqWSj8XOg5X51Wz4L7zfVO
fQ9MYv5ZmPStYWqAJa2ZheP26RkLf0xk/lloHpM0YUcBrZeF3T5fFAINaf0s
fF3t0XDw7QTmL//7uokqK3Jpkyxc/eIc7wLaIgs/90+U3Ho3nvln4X7Wl4K8
tbQgC1/uFbfdZ0q7ZuFCfbZdt5/jmH8W3ic+nnVmNx2ShRcDljoeXEULs6D7
Ky/rSVc6OQs3Bs4qNK0Yy/yz0LXhavqLKFqahflDLQTFk+jCLBx9azx+20c9
5p+F+sr3Rqd30sVZOHbf52qzI30sC0Y7fmpZDKLLs3BSsDg6/JQu88/ChG4y
/YipdFUWwjz6b5AdH8P8syCtif56ZSpdL//9PxYy5bLRzD8Lw8sMRs81pBvl
+ZTNsou5Mor5Z6Gz3kq1fZa0gghKZ8y0L9SNbLGiCOMVbh8u86BVRCi7PKCd
5OeIFncUIWrTYIepabS6CPsnpS3a25/WEOHWFwPB8wPD+b2IUJdbZlw9l+4n
wgbxoeqYxzr8fkT4OjWz64MQWluEidmNH2q60ToijFUS7gkrHtbiUSLseKIR
d3gBrSdCvqZ+XdyHoS2eIMLDD5EGj7NofRFuq+RMPzOONhCh4wODBK37Q/j9
iXCv746GfxG0kQgpLu2XW2jTJiJ0mTPxQqdr2i02EyF6x/fVE4NpCxGE9Wv1
ywbTViLoH488vuWGFr9XERS3TR9dH0nbimDW9XFv79G0QIRpNvdVTeoGt9hR
hLCZ7QpdRbSrCE2NSzZeMaQ9RXDsFH7TtWkQv295Pu8Uh83YRweIcGXJDMkc
JzpEBPOmPX3C+tMR8vPGGqX79zT5/YvwrPT7mmXZdLwIDyY9PvDdjE4Wwaaz
5/DiDnS6CIPD32T9zRzIfoiQc/+k1umOdI4Id4e6G8nSB7Av8jyGpMyL70QX
iLBdbfH+YHF/9kf+fLHz2nv0oreKcMJyweSlhf3YJxGcJxk80htB7xHhyMV+
w78c7st+iTD1j7teriFdIkKnAV+mdb7dh32TP5+JRZmNI10q9xcbDa8fvdk/
+ffaMKRxVjp9XgTXr8LRNwfTFSJ803qR3+1krxZXipC3wkm37RK6SoTFddN/
5zb2bPEdEZKvhOpWZNDVIliqJ00Vj6IfibB66ZSY95U92F8R4gX10be96efy
/s3o/2Z6V7pBBGNPW+uhR7u3+J0IbavPVyWupBtFEJ1r28dGif4qwkAdgVn+
Pg32XQSTQ2pF02zo3/I+dk4whBKtkI3RUy4JNh7sxv5n45vZ6b2WdrRKNrrI
AuyXdaE7ZmNR9CTjbWe7sv/ZCDpSUz85kNbIhuMaG3XV4XSvbNQ+KD7Yo64L
+5+NhOEPt1nn0JrZiGtn+PXKfFo7G4qmOftdFWmdbBjcNfo2qkyd/c/GYds+
s7qF0nrZMFthV9RjIj0hGx5rDWY6Pe/M/mfDou9f4wsC2iAb90W+x4wed2L/
s3FCRTf4wWraKBtafZSto56qsf/ZCPMeN3uYC22WjZuWA22vve/I/mfjxwRh
gmsQbZUNhRt3JzQq0Nby56nUv26b8R/7n40vD0/P296XFmSj9L9nqhd2q7L/
2bC7HH7vwHTaNRt9hilscbzZgf3PxtobTeJ7zrRPNsafUpqk8FeF/c/Gs+O7
sh/k0SHZaA4akrRqLB2RjZDAfK+Ea8rsfza2xkwLMPGg4+XzVww/VqhKJ2fL
//+kv17y7vbsv3x+5Y3fP8xpkXzfoXdfvP6kxP5nQyqefHdZPi3NRnRxpWza
DLogG2UeUxWzXiqy/9lwevDH20xEb5X/femGw17T6KJslP8d5/L+VTv2PxtW
Jyf6X8ili+Xfi0nqsUYjuiQbujZKp92+tWX/s3H6UMHhETvoUnmeFXqXxyyn
y7Mx9c37fT6d6PPZSNm797+359qw/9lIb+z7SRpGV2ZjpGvktsBxdFU2Ohy+
/jj8rQL7n43ugkmftm+jq7MxtM1h588C+lE2nKteO9n0p+uzMcRb4cS+w/+m
/5+fZyP2QucdN8bRDdkYcK/t3o4H/7b4XTYkRSOMVo6nG7NhqGFWcOzInxZ/
zcbny+GGPQzoJnm+fWsHeJ/73eLf2Zhy+nPnY2a0ghiO4/42vr3/q8WKYlRl
PtnYxolWEWNAzeqyT19+trijGCee799WEk+rixHkeTZ1dk9aQ4zzPYtvSnY3
t7iXGOOVd+psnkX3E8OvbsN/TjVNLdYUw01kW3HPj9YW49yS0wM/qtE6YlxZ
P1lYtOtHi0eJ0V+3Ru+XCa0nRlbdCeUnDd9bPEGM6ZUdD1mm0vpiGJ+02mI2
mjYQo3q7jcWFm99aDDEkSyq6HgumjcQQjo7oP2AgbSLGhuu+wz5f+tpiMzE+
jPcpGu1HW4ix1uu709X+tJUYM8rXG1248qXF1mIsSvr7pHsobSv//bEpe47q
0AIxFv8edGVrzecWO4qx50BBeHUa7SrGgw4GBeYzaU8xlG7ZGf798qnFPmIM
VvL++WInHSDGtBE9rf4J6BAxhs8btmxObzpCjK3DTiUcutXYYqEYX7Z+NpqT
QceLkeoaqvrNhE4W46h+Pk4r0eliCESz6gySPrZYJMaF/Q9t+ivROWIc65Tl
3zPhQ4ulYjhEN/sNUqYLxFhi8+XXuLT3LS4UY+aAUQZGXeitYvjvyJpvLnvX
4iIx5rpeqTDSoveIYXtnkKPW/rctLhbDU+TS46kBXSKG7qSmgcGVb1p8TIxG
Tc8BtSvpUjG+ff3VpPrpdYvLxdiYNqrmZwJ9XowFJ85+2NKPrhAjccBD/38l
DS2uFMPdRUtFeSFdJcZDzWHCQ29etfiOGHtTunj9TaKr5d/bwc4fHg+lH4lh
fqBTP8tLL1tcL8bngsY7C93o52JM3dKw5GZHukH+/Ttu2n/jwAv2X4yxeOBi
bE03inFb9dPpMQr0V/n3MrjjqNidz9l/eV+enTOdZkX/FmO+95r9Vgq0ggSF
y4OqL+19xv5L0G2oZLTIllaR4P2iTh92dKQ7StBD8VqiStlT9l+CktrdI/f5
0BoSRI3LPCnRpntJMPJvTO+DNU/YfwnStWOGtRfRmhIcfVW7KnUurS3Bq0Nn
zk5RoHUkSBo4ur7ziXr2X4Jmu7yU9oG0ngQGN0L39xlLT5Ag9I6zauajx+y/
BIEa67Z0sqENJNj/45373vt17L8EPnbaAx2saSMJ9ob1/TzkYS37L0H338OV
362mzST4HHJW4+DLR+y/BI+bs43d19BWEowyThd0+vmQ/Zc/34FfuvmJtK0E
Z6dvWfpHgxZI8G/WWedJ2x6w/xIU+1xsnjGZdpUgxdyqbcerNey/BJOFjnb5
AtpH/n7GPIp78KOa/ZdAUn/M5YaIDpEg7t2UjR4j6QgJVmx/2GfPpfvsvwT+
Sf8mJznR8fLzN9NzfijSyfJ5evPDvm27x/5LMP/7o4kRJrRIAvtN15vj391l
/yWYbrrucAcxLZXgUec2H9pOoQskCBcf/uDx5A77L8GZ7+u1Z6TRWyX408t5
U8AkukiC0lErF6o8u83+S7DJvtbym4gulr/v3xt7TABdIoH7qS15Zxpvsf8S
TNXy7Z27mS6V4EdhtN/uJXS5BBW349//60CflyBYMfls+umb7L8EfxctPmAe
RFdKMHTj7pBpY+gq+bzaH8GLX1Wx/xLse9dhZ+YmulqCXp2v5b2zpR9J8PbD
mFf2vel6CSYa3rjxYu8N9l+CB/fmpWmNpBskuPfw/b7oXdfZf/n7/2w///NI
ulGCJ9k7gt32X2P/5c/z4EiPFxPoJgk2Xxn11La0kv2X4HTnd0bn59AKOZiw
6P3A7jevsv85UEjdZmS8ilbJwbUBjS8s3l9h/3NwrvmpWDeKVs/Bofz22TXq
tEYOgnc6jjfcdpn9z8GTL6MLvKbR/XKwuvvOXJPbFex/DoysZ22450lr50DH
/41YSYXWycGfojOD7m29xP7nYGf5iU6zDWm9HNgf0DKc+ewi+5+DbuZO067E
0/o56Hjl3PbqYbRBDtST9Ma4V15g/3NwcLdlvY8fbZSDA79XPn7fmzbJwfUR
NlF3z55n/3PwpavW56FetEUOpnt1W1Xdi7bKwe+3+SteXjjH/svfZ+mzYWYB
tG0OLs+69a2tNi2Q79+/0722d8+y///7/uxS5iXRrvJ9HJYsuTmV9szB8oq7
F/I+nmH/c+Aw8ld81jY6IAeJz1w9jtvSITn4r0NlWtfudEQOij85hIiul7P/
OXjwz+Ts+BQ6Pgcut4eEfTWik3MQWBi+90YbOj0HdcuWWEdGn2b/5e/vSvtz
YX/K2P8cmD/SMZVG0tIcHB4SnFj67xT7L98vYfz3D3F0YQ56nro4WlOV3pqD
k8PLsuaKS9n/HFSap79d0o/ek4P2Ky2/LCs6yf7nYLiL19+xk+iSHCQPMNle
f+EE+58DWerYk07L6FL597u0yG7Pm+Psfw4Mvmt5HYimz+egw4h9PQN70BU5
KIwe8/rNvmPsfw7W13gW/mdKV+WgeosYt54fZf9zMG+I4Um9WLo6B0nhRxaN
GUQ/yoFa1bKSw2eOsP85MD3rJ73uQD/PwenEV87OynSD/Ptasqp7+J7D7H8O
7qY6tle0pBtz0DzGRLXdrxL2Pwf9HjjZeW+lm3Kwv1E6Y+ZC+ncONia0S3T/
dYj9z8WdPsd3NxbRirlw71V65eoyWiUXB9f4zG5SpjvmolD13Saf4wfZ/1wY
h023Ge5Ja+TiptNK036adK9cmMquOJrdPcD+56LcpP3xI2m0Zi66RJzyNTek
tXORZX33V4ffxex/LqYEzTf4fJgelYvQKb+c/vnQerm4sNnwzqDR9IRcbGmX
e+7Enf3sfy6SJZ3Or1xEG+RCcKHpsWbVPvY/F4YnfX68s6CNciHcNO9d5e29
7H8uZr79k33KmjaTz/ujdUv6eA/7nwtP9fZzPV1pq1x4/e3/eMyX3ex/LtR7
rLS9E03b5kL3ul3Y8k60IBcpZj5tdm/Yxf7nYsXBV32u69GuuVgpiOhSen4n
+5+L9g3rim2W0z65GChZ3Pf4pyL2PxfBP1e8L0+lQ3Lx+sZFx8ghdEQuRj8y
fVV/Zgf7n4uGvFmvLq+m43NhaRupvvDfdvY/F+2CLxk4FNLpufj0cNehdoa0
KBeiZUrntF5tY/9zcbfO7mB5Oi3NRZv+M7dfGE8X5GLMr69BZo+2sv/yvOv6
ddJNpLfmwuVLqnnIWLooF0NnZSiNqNvC/uei5vgcs0HpdLH8ezTu+DN4Gl2S
ix1Jb8J6vNvM/ufC7MnJNt/X06W5eD/a4OKoRXR5Lqr3RhWmKdHnc5F9fKSV
zslN7H8ujG7oerX1oytzMWJtB3WlEXRVLgKl2yp0nxWy//K8+/WbFbyers5F
r9tWN15a049y8e+T7iOP7nR9Ln7PyHwwcPtG9j8XG9XGLYjQohtyEX7INUtp
ywb2Pxe/5p92jNOmG+XPY97jdtei9ey//PllE2V7RtNNueigXpZhcriA/c/F
rjlGjpUzaIU8tLVWWDXzyjr2Pw/nOu+slyyjVfLk//2cp1Pyci37n4cXAQ73
tgTT6nk45Di+YI0qrZGH+YH+c35vkLH/eTCyabw4aSLdLw9dV9WOHHdNyv7n
Yd2PNX+vOtPaeZgstVuh2ZbWycPKTdpGKhvz2f88RA2JmJU8ndaTP+/Uxee3
1eax/3nQ87h4yTCa1s/Diq3dz60cTBvkYYeDd1rXS7nsfx5Czq98NdyLNsrD
0L+jfA9o0CZ5uDX0omzfqRz2X75P8sT48a60RR6SRXXLarvRVnmYkrVx7d9y
Cfufh979JzRErqFt81A6rObo0oG0IA9POj4YbFclZv/zYJcv7XAjlnbNw8Pb
SmLHSbRnHjaW/byt+Tab/c/D5W7TO4/bRAfkoadn8uMoazokD27Tut54rk5H
5KHdvn2nva+I2P88mF7dHTMggY6XP1/gzdvvQCfnIWKMR2rRryz2Pw+v2jiJ
bwbTojx0W/6u+fa3TPY/D2t63Nw6JIiW5sHS+fFCq6YM9j8PxVUz+pZH0IV5
mJreIaepLb01D2eud3xlmpbO/udBkNSm2ac7vUee59OTu0M2pbH/eXigl/c5
QJcukT/vN7sm49Op7L/8/SRfEiouokvzoCHyN7d+nsL+56FhQ9RW51D6fB7c
2xuGGqrTFXkw6DQ44ExRMvsvzyt+68puhnRVHr5Nm1/zoS6J/c9D4U+Lx/ER
dHUejqid8HLvSz/Kw96si2+0ShPZf3m+Q7R62a6in+dh8/3+FzXa0g3yPuyy
mae+I4H9z0OPyO3J583pxjxUDUrQfvUtnv3Pw5WNhh9CN9JNeTjZ+1SE8Tz6
dx7Gyt70yfwex/7nY4hX+KwhW2nFfEy2PLD+12JaJR9dv2W+nNqO7piPpqiG
P+9LYtn/fOiv+Dn4gAutkY+/aWuqzvWle+XDTqHN26dVMex/PvqfX6yflURr
5kM75GT81xm0dj4aYsfdafghZP/zIfoj8/t6gB4ln5+X79nOi9bLx66nhipT
h9MT8jHzbkTM98po9j8fStPG5543pQ3ysbSuu0BWEcX+56Ns8XQdmSltlI9e
8+beHVcZyf7nQ8+wfGnMItosHx2NpPap1RHsfz6O+ysk5NnRVvkIMY/olfAu
nP3PR/ttk6fND6Vt8zF4war/6pRpQT7in+zW1paGsf/5mJu4qJvzCNo1HwPX
rm0MLwtl//Oxp9fYSy8taZ98XBz7We392xD2X/4+U0MrhfF0SD5MT824LRxI
R+Tj1MYThUNKg9l/+e+V70/QWE7H58PLX6uxsDmI/Zc/313zQbfW0un5eOOz
QCNtOi3Kx3Pf5l33ngSy//korP00NTiJlubjp3ag/6UxdEE+utk5FS68H8D+
58PwxSVdhxh6az48NdJEBaPoonxY6598oVbjz/7nw23JPu1JSXRxPlbPFHmo
TqZL8hGoM2Txuld+7H8+Xs0T/Twko0vzkfA0c+52M7pc7g+3q8e0oc/nw6Sk
+6P6I77sfz7MevRTP+xFV+Zj7cJlP44PoavyURz579b3Oh/2X/59vdG8GCmj
q/MxdOk36zNW9KN8SA5IUsO60PX5CBtZau6wYQ37n48ln9yclPvRDfmYapss
vbrOm/3Ph7NGaVxtP7oxH4ssHzacL/Ri//Ohqz61Nm4o3ZSPgisHikP2ebL/
+fjUo6jDf/q0ghRu7sXpGuc92H8p1MeblfywoFWkaAh5oLqm3p39l+JwG33v
/b60uhROT7bciVKkNaRYn/8jY5rMjf2XwlDfT7Rbl+4nv3/NJsnykiv7L8WO
cyaVVwW0thQZZ/LW/f3lwv5LMS43euVDGT1KijWrBgeM16f1pBhqbrvUvNqZ
/ZeiNsppjl4YrS+FV9/S0a79aQMp3D813B921on9l2JekaHQxpU2ksK//PO9
DZ1pEykGTdkZXnLMkf2XP+8Tg3x1B9pCisH9FuqrdqatpEjx+2cTX+rA/kvx
+2O98lx32lYKnWUFG0L70AIprnl1+m1Rac/+S9H28uuhIVG0qxQKrk/Kdo+l
PaWYIFWNmPLKjv2X4kNeaZufBXSAFPkHOqpMs6JDpNiTtfjqy450hPx5T+41
rr8oYP+lGO38tIt+DB0vRfmkfUWLptPJUryZUL3r4ZfV7L8Ui/PGanj60CIp
LDo8W9z0YRX7L0WxYp/Kem9aKkX12vDDjp9Wsv9SeOoa1tkF0oXyvBKc2xn+
tmX/pXh20De8SwJdJMWUiFnabTvTe6QQbY1ablCwgv2Xv7/6n4kGw+kSKf5e
kRxffnw5+y9F0XB/vc7z6VL5+/G/aHGi1ob9lyJM7+LXAH/6vHx+15WOn1Tp
CimmR3e7YbHZmv2Xoup2B3vZdLpKim/ngi+UP1jG/kshPRz92juIrpZi+eih
w/Z3px9JcSS85OijI0vZf/n3uSn411Qb+rkUlQv8ex/8s4T9l+9rGv8xaAv9
ToqAfj1r9pvSjVKcMjgdNumTFfsvxbkqgYL6OrpJik7d2++9OYf+LcVNcUzf
vp8t2X8Zvr4aOz13I60oQ8Y0kw3JC2gVGc44GS92+7eY/ZfhL3IzAotpdRn2
Pq5JeGdPa8ig0n6ZdURPupcMl0NfP7W5toj9l2FdjUGwbxytKcNQv95e16bR
2jIcFd5zMf5qwf7L8HORwemX++hRMkRLJ54UuNN6Mrz/7LW3cAg9QYYS4Tbj
+ksL2X8ZnhslPc6eTRvI0PfzNwWf8gXsv/x+Q1PTPEPaSIb7s9b/i7hozv7L
sHvQaGG8GW0mQ+WwTaOyb5ux/zLYDZ+b32E1bSVD/SxB6JJX89l/GTYrm7aJ
8KdtZbhd4TC3kyItkOHGtH6BnXPmsf8yTDgTWr1wCO0qw6Cxf+MNj5my/zIM
D6o6t34B7SODS/SLgdtfmLD/MpxdadKpu5AOkWG0jmf7sj50hAxatUfm9jk6
l/2XYXuEzq3hS+h4GeZ/7euz94sx+y8Dsk4f08mj02XYo3MZ/afSIhk+vrY4
vL52Dvsvg2ju+uWIpaXy3y/sW7ZgJF0gw8JXX9/2v23E/svQo12/PZZR9FYZ
GlUVg84Np4tkeBKQsSD1riH7L/9eDzkePxpPF8ufp3JZ0+NxdIkM874v2VP+
bDb7L0O72G/eTTl0qQzjO1z6uG4eXS5D7pMxqnV/ZrH/8u/dVSEt5hBdIYN+
4d1xau50pfz7mrdsVZEWXSXDr+1Bvgcfgf2XwSw0KKUml66WYcF/byP6WNGP
ZHDPSo4o7kjXyzDrQs9e2utnsv/y72ehz8Ls7nSDDPGn3ndUz5/B/svnb+vd
BRp0owz34ndmz107nf2XQXwegoGD6SYZTNts3ft6jwH7L/9ea//teTaRVliL
GmurVWqnprH/a+Gz/aymaB6tshbrFlSNqXg89X+6sPO4mhL/j+NpkgwqyTa2
kESpyFI0vBEaiUaJLKOs2Waa7xTZpkX2IlvM2W5MX5Ps5IskpSZb06KIhEqN
lNKU1Bg1v3u7739++u/5+Jx7u/fcz+vcU+xfwIdC2znxq2hjAZPm7W1w0aVN
Begty3/4XbQj+xdQMC/e4fgwureA8M0rIvckO7B/AW6r82svLqDNBUh/7Dr2
w8cx7F/9+0Mce045RlsLcBS8K9uOoO0ENIYtdjV5NJr9C5CDY0+UbaAdBJS+
NL93uCftJODR/uN3FyaOYv8CzkyLvJ6wgnYWcO75khSxE+0ioNnC/4egSyPZ
v4Dckv0lzxfQ7gK6D2jT6WB72lNA9MDQ/D8T7dm/gKIVFqFxy+mFArzXFN77
0pT2ETCt7vT0c/dGsH8BRrG2jlWbaT/1+204/XSuNb1WwPRvH7z1LR/O/gUY
fjHrmXKUDhDQ3n/jUl8POkiACi8T2xjSWwTkBYSUBN+xY/8C9E/1N2gJocPV
5wctzd6O9C4B2b194p5W27J/AS+zRmc+XE5HCTB2u9XSvtKG/QuYmHvefqEf
fUzAq9w5Sn79MPYvIH9f9sg1AXSMgKqBD14ENlizfwG7zX/8piaEjhOQtneH
3mwD+oyARTvS157/xYr9Czj5eMWFCeZ0goClpyysO/9vKPsXMGK55vufThIw
MzdtQUPxEPYv4H3CvhnBgXS6gH/GzH7nYEDfFTBo550Yu98s2b+AyFPbGno6
0DkCYo3W9i3PG8z+BVz94a3zkUD6iQC/0UU37LrQRQKqTUx6tLttwf4FDJlb
5uU7jy4T8Ebf12vI34PYv4CwJ/UTlqjotwKG/bI5oXQSXat+P0VmvrHV5uxf
QE5y8q0j0XSTAMW1aZLnVPqTgKNJ214kVQ5k/yKc1uS5vlXReiLWHG0bWuhG
G4ho9ju2usv7AexfxGbHltTL52hjEa8sJhya5EObijB3anFf1JnuIcL0iOb7
vz/7F/FVgW9zWARtJmJtyVYXnVG0uYh+P9WNm1hvxv5FPGppsV55lbYWEXB2
phC9lrYT8WTfrRXvhtAjRTwL9u6RktmP/YtoW2q/9PgU2knEMGfDc2HJfdm/
iNqaWV/fdaedRZy47eQ6IqsP+xfR9d70a7970DNEFO61/nZDVm/2L8IiwT1u
szftKeK0vE00q+jF/kUcGhE8xWoVvVCEZ25t9th2tI8IuW25VeCOr9i/iPD1
/neeD6X9RNiOj8zpnNCT/YuoKWqZ33827S9i+ymv/II3Pdi/CK/JkTXLNtJB
IjYEDrb4vj+9RUTjd/N7drnQnf2LiOxXGnnIgw4XkTdudLFvZTf2L2Jrnsnj
myfoCBHGMatnBYylo9TnV6cq0LyoK/sXYTTLZ3DvzfQxEXM8TP1/HkJLIi7Y
9Bmb9NaU/Ys4cDqocP52Olb9eZ+3HnjTno4TkWC9K21BZhf2L6J84rTQ9Vvp
CyICdbMbPpjRCSJKMzOnbykxYf8i/q2L3jrrCJ0k4r97fvrptBudImLMBKtX
DZ86s38RE9Zrvv/puyLmS/dveq6kM0UsyVMtL+5D54iIu3U59vErY/Yv4seJ
06807qGfiKjW7yR8dKKLRNi/ds9PNKSL1Z+P+ZkasxNG7F+Ea+60E0c70BUi
bp+Lj9I/acj+RbjsfGhYP5yuFfFggxDterIT+xex0ebM0DvWdJO6D8vKg+bJ
Hdm/iPib5U62E2gdCX4/JPlYXu3A/iUc32t8+YMbbSBh2aBpf2x7/iX7l1DR
/L2r/yraWIJbccd4XxPaVEKwaRt96UB79i+h6WlapTKZ7i1hXPutj70SDNi/
hK0NUV3dNtHmEkb/ttJxal079i/BrF3F4g+HaGsJizpIcfMm0XYSXrxKs5iS
pc/+Jcw9taODSwjtIKHr5JuDHhnRThIw48yL65lt2b8E+1sHFA8X2lnCubUJ
Gys70y4S8iInO427qsf+JZypa3m4biXtLsH8WupV/560p4S2dqWvI379gv1L
+Lh4wD/LAuiFEvqEXrx5pSftoz6+ZHjZ8hu67F+CpW7qyf/50H4SvOuNvGxH
0WvV5weafW3D/iXEt62503SODlDPz2nuV+kgCQWOpQPtbegtEtY02FgOT9Nh
/xJS01dWOxykwyX0+63tjKHj6F0STAqmLNbtSEdISPtt0r8Tv/nXqdVREq4U
hJl89RV9WMLTgd2DUkJbtD4mYezwxI3tqpu1liS8yrbS676XjpEwyGT67muP
PmkdK+HguzMbBvvTcRJy9TO8f2r6R+szEo76a/aVviDh7NuopyfffdQ64TNf
k+BQFbZnhS2dJMGqV5o8XodOkbBgTPfajkf/1jpdQvmXei3rTem7EiLzN1kV
BTRpnSkh6fd7hZ7f0DkSLpgZHQgratQ6X0L2RMUjL5R+ImF9sdGL0n50kYSE
RssUm7gPWhdL+Pfyp6oZMl2m3rfWfaUr1K8vVVV9yIB+K8F0x7P49fMbtK6V
MFN+H3G79L3W7yUkbpq7efhWukmCT03akqp59Ce1nbPiop/Xa60j4/4Hq/fn
r9B6MkKWL1rzOow2kNH09fY3eYZ0RxmZJxCif6tOa2MZH5MPP8yfQ5vKUEa0
Sdw3nO4hw8B4WVzzg7+07i1jaV2bdu8CaDMZZ1v3lTaX8eb3GlPvulqtLdVz
2/JehhdpaxmN3ZIrQ/1oOxkVUzX3q/RIGZGJq8u7dKUdZKy4dO3l1BXvtHaS
0TLUZ8w2dxoyliQUXHR5X621swwPoz5+63fSLurXb+n8i24OPUOGOENn65G0
t1q7y/hi6NI1et/RnjLqw+P6j/irSut5Mkw2j5g4LJ9eKMP1pntGVl/aR0ZK
635War1MxgH38f1/eflGaz8ZfzjN9tn/X3qtDIt+tckhM2l/GW2D/cvtaiu0
DpCxZ/aiemEdHSRjVpLHx1nW9BYZulbbf9z592utQ2TMXTqsm/lgOlxGzbP8
dT6d6V0ywuI119M/tY6QcQtReodS6Sj1foSd2z2yI31YRrufNf+/Kmf/Mtxu
eNnkOtKSjOgTts3Of5WxfxlVhQXHS/rSsTIONzlOrg2k42QEn9o94V7kK/Yv
Q1J1WZzuT19Qf17Xxka5X6cTZIxftSdiSG4p+5ex033pAnkXnSTj4PERwzNa
Sti/jKzIqf5J6XS6jBipMWVyLX1XhkNXVY+QQjpTxiD/sqyz6+gc9fu7+nV6
bkYx+5ex69dvv7gbQT+R4W2g+f6ni2RMfvkgt6jiJfuXEZERG+MeQ5fJGFWm
P2lxI10hY+UW205nMl6wfxmLW/fxOfuX0ak62Ku8P/1eve/Zfa48vl/E/mVs
+lFzvXzG/mUsat1HWkfBwP19dccY8ng9BSaHvf9zvTdtoEBlaCY1Hi5k/wr2
dVnQcdOvtLGCRL34G3UbaFMFvoEf9azznrB/BS+Od2pMnfOU/SsYFX56zuUW
zs0UPHIbsK3HYtpcwZt3KTarXQvY/2dzawVhJt/hnwuc2ynIjTG2mrz0MftX
cP1bzf3nI/avIDpBc33l3EnB4G2afaWh4JSXeFTZzeOdFTSWuYX9OS6f/SsY
N8ht1I4meoaCeb0KPEOf0e4KZt6pKi4oy2P/CkyfafaZ83kKhuf6pha1oRcq
eHlE/vmWB4/3UZAxtXrTsTUP2b8Cj+9//3T6Je2nYGy/rn+HN+ayf/X5mHjp
y26LOPdXMD5Dc73MYf/qz+vThtf1B3h8kAK7B0O2P9Ohtyj4tXU/eXyIgqBL
up6zrtHhCvrnLGtYZMTjdynYcfbOq8xTnEcoMAhN+Gv0YDpKQXf33r26OWex
fwWr9xYvsq+jj302lxSkrPs5yVykY9Tnu/X6nM3+FTi27vMf7F99/lv3MZP9
Kxgw5dT3B0c+YP/q1z9Yc396n/0rCAxZd/F8KefXPnOSAt24KfZpXny+FAU1
J11WOi+7x/4VXEkcaTlToe8qsBo7+rbhoLvs/7PjcxR0kB/umDCNzlfvW3q8
gccN+omCrgcXF94Yk8H+FdiUaO4H7rB/BSeuj1mYfZrzMgW1rfvO31ehIK05
4PJ/wtPZv4Im8VFiiiePr1X3WrU9+bUTn+/9Z/Mm9X7FzsyeGpzG/hXcOp+6
+f4+znVUONmu6tCG43x+PRXWte43baD6/4/vqEL/R5q/f1LZvwqOW9e72Xfg
3FSFioq9FpVzOe+hQp+db4c5WHLeW4Vx5u6r2unfZv+fzc1VCGi9X+DjLVUo
aN2XZPb/2euxU6Fy//JJybNT2L8K/Wwyvuk4kM/v8NncSYWbfbOuNV+6yf5V
0OHP/wEtCZtN
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxU13lYzPv/PvCRKHsphA5Zy559545kC6VQSYoklaR9b9r3mmZpJkQisiUk
IWTfE4pQhJA9S8j6nc+vuz9+559zPc5rXu/nPN/33NfV6bNqw+I1KgKBoExN
IPjfv5v+qZ9+bWSG26clR6bzP+D/tzo0p2uOd5zRbA0kuvUKOzu82dqYKZg2
o03PZuvg86P/wiarNVsXf4buHGv15TCtB8fB351WPml2X6x/EtXF/Hqz+yND
0G7WsGPNHoi917b+/JLdbAOIXxdMyUlp9mBoOw3SMgps9lCcks+Ovbym2cNx
rsedHRPMm22IwEttfaRTmj0S1TtOqD/Sb/YoGD6d6N5eq9mj8aHEr9Dg7yF6
DCoiVL6OeN3ssegxs9PkvuXNHoc1t8K3/zvd7PGwWf912pU9zZ6AmeIzQ4Ol
zZ4Ix9gWMT3Dmj0J5Y05a3eta/ZkSDzX1+taNnsKnhz5irBpzZ6KisaTQTcN
mj0Ne3sMv6im1ezpOBy5e+bwP/k0cEIjpLfRK1oIvD2uEonbzedGiOgi3jT0
ZPO5EbrtFUlb5TSfz4BmR9/t11Oaz2dg0u3bX0L9m89nIn+oeUnvVc3nM+Ht
e2Fq3vzmc2NstOyfM3hs87kxNPanj5T1aj6fhWvzvPQ+qDWfz0J1rGiV67OD
PDfBJkHx/MoCWmgC3UafqH6xzeezsW31wowF1s3ns1Fhatdz2ZDm8zmInLkg
C3/yeD4HT1ssPdf2Fi2Yi1lm8/QKs5rP5yKtZ/qKmZ7N5/Oge8yo75GZzefz
EGr8pUfrLs3n86E9+eOPKS8P8Hw+GtR0PK2O0QJToOQdrOOaz03xviamP6yb
zxegUlte02Fw8/kCjPptP/X8z/08XwjT+qNqDtdp4ULcOfVBo25z8/kimJnX
Drd2az5fhPnmryYfndJ8boav2wu7/mlPwwyNN72zR1bv4+fN0HnxlksWB+gS
Mzy79NndMYQWmMPhVWCi4wIa5vDYuEZjyX/N982h91jwbdz7vbxvDtVPuye0
O0ULFiNF92DlnSQai2FYbPYwxZYWLsasfopZGNp8fzFUIuYPrPu1h/ctUJhV
nhh7nYYFensZxPfeTAstEB5zYMwhF7rEAhamfXKnTmq+b4m/xsGCS22a71tC
r2PFivkPcnnfEjXWM56X5tIllrh1+2ShuT8tWAKf942Citk0lmBkieV7627N
95fg/KXte56+3M37S7DohIbT+kJasBQ6nmpL/kbTWArfB7/3ypbQwqV418pi
65gBzfeXItbHcG3V1128vwyrQ6ymp1ygsQxnG1RWzZfSwmV4NvRIuy6OdMky
dBvSMfDd6Ob7Vohemv/2Tsvm+1YYGqaSdfVuDu9boXpVx/u3d9AlVhhdsPj2
Oy9aYI1Dh9Nv9TSmYY02Dqc622s337eGu7Pi0YnanbxvjXGFJ1yGHaUFNrB5
Nk9wPJqGDYzdKx7ZLaWFNrB402uKnn7zfRvc6PTN7u/3Hby/HKk1rcJ/XqGx
HEGPdld32UQLl2ONWWGeuStdshz1b+yGHpzSfN8W44MakkZ0bL5vi20al1XL
n2Tzvi3yvN5fzDxEl9givGM/QUokLViBTYvlNTlLaKxAyJ7zaS/1m++vQO4/
TDb/uZ33V6DX98wWr27QAjuMLxvbes82GnZ43Fl9rcKTFtrhWtu0aYWzmu/b
od9/O3a07N58fyWGqxvtCX+Xxfsr8a9LgN3IElq4EtMXGZVqSemSlVh3zPLf
IGdaYI/oLZpfvafQeva418p6b4NG8/PsYSN6PM7m+rYm29tDQ3rSb4IPLbRH
3q9932J701n2sJo4JH7eta2cZw/JLMXPcB+6xh4Dx7Rsb9iHFjhAz+mP19Kb
mZzvgMPr3B5/C6DhgLKYle8669P2DpjVvm70/vItnO+AwKVfp1+IoLMcMGnL
MJHtSLrEAdvDKxW+NZs53wGjvYrOaYlowSq0vN7gMha03io4nGz9vKp+E+ev
gpPqZo922bT9KkxZl7DgnAUtXIWXry7uVmlNZ63Ch93zt98syuD8Vfi57T+z
/m50zSr8fjnptJoeLVgNjd2bX/uXKzh/NfwPjrjgH09DeS5+Mlp9Om2/Gs/m
ijobNMg5fzXaWA0a/mAfnbUaVosy5+iupktWo/Dk126fe9A1q2GzYrnJ8rvp
nO+IidkjPK2SaD1H5FhoD38zi4Yjeq9RbaEpoO0dMeaus9PNEzLOd8SmaMPS
3r50liPCe7zZoj6KLnHEetmTIXEfpJzviJZ3R1/duo8WrEHtsRZFputovTWo
ahViKNansQYNp7XtN7yUcP4aBHSSr6vNoYVrMHXr0jWf1tBZayCbaO6QPpAu
WQPra8sc7r4Sc/4arA4YvzJ3Dy1wQuO35/O6uNF6Tlh+I7ttjxE0nPBl3/ig
ws9pnO+Errs0Pd4U0kInqI0LOHI0iM5ywqeOZ1rrGNElTvDNdO2rqUbXOMFT
f0Nh1k0R569F98DFLpektN5aTOvqXB1uS2Mt8i/92XWnP22/FqNG/nfA41Eq
569F/ag3rxzd6ay1+LB/8j+hCl2yFu20vF+cl6dw/v+eVxs6dDgtcEZR2ejs
4xeTOd8Zvbef1XGxo+GM/cc7bpvyI4nznfF8UJ8XIyS00Bnrrr1OmTGCznLG
sE57xnjdSOR8Z6RvsFhd4kLXOOPLxIYtBm1pwTocudPFeu/eBM5fh5kjerQy
NqWxDoM27VL9+iGe89dhVNq/Q0ViWrgO/S6ssxONp7PWoW2n+MUB1XGcvw5z
PE6Xboyia9Yh4GVUO/+htMAF3/rfnJhQEcv5Lsq/76wid4XRcIHpRI121wfT
9i6Id3F433AvhvNdUHQ2FQOi6CwXGF1p32XZKLrEBe0crvvEP43mfOXz54qd
T6TRAldU6i748GoGreeKimfLW2o0RHG+K7x7P91mmEvbu2KRVcei2ba00BXT
dTZMsdCks1yxxmFUD/PLkZzvii4Sz8nTQ+kaV5w+GRTbcxwtcMNwa43nzz9E
cL4b1gn3G6bn0nDDNp/LZoaraXs3rNml1Te/Fy10w7+up8K1HoVzvhsSR+2a
b6WgS9zwtt0Om+CldI0b/NociQvpQgvWw6jVxIPWFULOX49d5SN3d0ynofTC
dXM3LaPt18Pm0gH3n91p4Xoc+dSyxvpEGOevh1P7zQtWzqBL1kO/qNtDwY1Q
zlfed/8yadIyWuCOYEToq9WGcL47XH7Ptl7tScMdQ0PmJc1Toe3dsa2nQ1iR
JJjz3dFubfjX3IF0ljty+7Q51O1kEOe7Y3B4q1CBOV3jjtL7fgYr6wI5fwMi
tsjDR4TTehvgVqu5cn1PGhtgt9xks/axAM7fgOiz4V36WNLCDbj/b+zhlM/+
nL8Bqs9HLLcW0yUb4OJ17V/waLpmA1pq68kaKvw43wPr7Cd2PRNAa3hgVM3E
qIpetJ4HHiUlvBxz0bfJhh6YbKEy/4EbDQ/4eba/dLoLbeaBZ79veD4948Pv
64Fes2Z6TXWlPTyAUJf60m600AM2QVY9xBe9myzyQPetNgaR3nSWB8r/aVhv
7U/ne+Dl19jPTyq8uJ8HBJWLZhjH0WUeyB8nybw8ma7xwGePIQ5O9Z5NrvfA
kPIjn3R30YKNeGaw+eQrW1pjIyTPRo8+r03rbUS/R+fK993cyP03IvRkUv+t
sTQ2YlfrZ3npM2izjbj5cZC6+K8H99+IYY/f3kg6SXtsxKub97dHBtDCjRDG
3RztNYEWbcQEh4sb8us3cP+N6B97656dJ52/EaX/Veq/bXDn/huxzTD878Ig
umwjboz72jpKha7ZiBc9a/9EJq7n/huhtio5f05XWuCJAccKfl/PduP+nkje
s6NMbSSt54mIyn5DvpW4cn9PmEn9e6YtpuEJl7qlZ++8cOH+ntBeVWV6NJC2
98TGkVF/R2nSHsrnGfXUN9mzjvt74r8nh/Vfz6BFntjaT7yx62Nn7u+JVNOB
MVcC6XxPvKv/9K1Rhy7xhE+foDU5RWu5vydEARMiL1rTNZ54aRaiueS3E/f3
hNMnx6cLs2iBF3a9Lr57YBat4YWIlA+Vbu/WcH8vvLjwqj5GSht6obhWZcj3
qTS8UPn5fU5RnSP394KKRVrqJSlt74W+uxv6686gPbyQqjvocEH9au7vhb1z
+osTs2iRF7Tt84ZvMaezvDDvIwTPWtL5XnAY/TbZ6tgq7u+Fbm/HrP/lSpd5
IeqyYMalPnSNcr9I99MFlQ7c3ws+O4qzz4logTesygadejuX1vCG2o+K10NU
aT1vrBm3o3PYGXvu740S664jngbR8Ea41XjjhRNpM288uPXsStTHldzfG1tH
vrTzcqc9vDHdUXen/Uc77u8Nj/jh7Wd50iJvvFZJ7N/9+wru742Ifv2lFSF0
vjfmYkRPr9Z0iTeOWjwXvxHZcn9v7L8y/v2Y/+gab+j/yR4zf99y7u+Nhe0e
JA6cTAt8kDUuYVjJDRvu74MRJ/q4adrTej4Y7x91SKvBmvv7YPv5W6EliTR8
8GCJjptmf9rMBynzBxkITltxfx88OTbTP8aa9vDBkuzq8Vu/LeP+PnD55GBl
JKNFPjhtWF+zbiyd5QP7q7ofNO8v5f4+ODnu0KHRgXSJD/yfuXle7UWXKec1
XEy8eWEJ9/fB2+t7109yo+t98N+KmVvadqEFvliw/MjBCWcsub8v5oRXWZxx
ofV8MbpfnzkZ3WhDX9x21l959qIF9/fF08ItoaN8aDNffAtr3PpqAG3vi6+7
Zl1/dH8x9/fF45HVem0TaaEvui4ce2v9dFrki5ZDsrupNJhzf1+k5ekuOLeP
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
aqted2D+qdBPCTslDaftU6Ha46iv5UTaORW2wQau0z7bM/9UFJgLjy/YT/un
ol1++eGQtbQwFQG32x682o+OS4Vu114GNudWMv9UWMxNumwynVYon79Ha7XZ
aTvmn4o4yeMJ7tPp3FRsDNS4Kj+3gvmnot8yzbgLs+miVPy1GzzsXakt809F
r2EnZa2t6CupyIhpKGj3fDnzT8W36/Y5XzbQlak4Zu+eXvjXhvkr70/a99g0
la5LxXVpu+95fej6VKxoOSOo4qg180/FzPfX9I7PpwUiFKe8K1z83KrJqiL4
XvA32BxMq4tgvM8jLrEb3V4Eb+H6f7oFy/j7EOHl7pyHcxbT2iL0S7T0Vf+8
lL8XEYoCKhcukdC6ItgdVftlMI7WE6Hn9b5TQx4uaXJ/EfzdXW/MF9IGInTq
ZrgjRZ8eKkKUgePB6WWW/H0pz38aaVsH0mNESJb2+Fc+gJ4gwk6XjSUH7lg0
eYoIa3u/21MtpCFC7AvDSSsNaWMRbmReVh/2dDF/jyJY9em+20hCm4owPSn5
ndyENhPhydiF0YN/mTfZUoSSacH+X/NpKxF+3T69v34tbSvChw1z0EOPthch
+lvSPLcHZk12VM57ndr2mYR2FsH59IubvotoNxG6vv7wZUB72kMEHfGf0grJ
oiZ7ixDo3dI7QpP2V+bxLbNmTtrCJgeLUK6I3q6nRQtFWNb/xHeBfEGTo0To
aDdw+1NdOk6ErLUN5id2mjY5SYS9VjefRgynRSKUDlthPvrE/CZLRQh5/rHs
/GxaIcJc8zeyoffnNXmLCLLDkg5OznSWCPottx90/jW3yTtFeL9xyYxhIjpX
hHbRUpP9A+n9IqjIB515fHoO+yXCf/0v7DhlRReI4O4Rqz7j62z2TYSWt3cO
WZNGF4twUs9/jp4hXSLC/cszbrqVmTT5ggg/TWwcjT3pKyJgXkh8Vhf6hgjx
3Yy6BJ2YxX6KsOdAeclNe7pchDV9AoLE6nSlCGr/LrqdP2Tc5CoRPP7G59jY
0jUi/NPMWb5Yna4VoXa9fv3OozPZZ+XvVUN7n6kj/U75Pk7OHmqsTdeLUFl+
4Uv0xRlN/ipCuu6C3e396R8idJh1bOLdIfRvEequGS4przFi/9Mgz1Srayun
VdMw3LaPnudCWj0NU9cXVamq0e3TMM/2YeDpErD/aYiYtKTDpiBaOw1H3Mer
SMbTOmnYfjMlcu7r6ex/GlJ3526UraH10jAt8HSjoHYa+5+GnGkzTSMdaYM0
XNv1I1Pr1VT2Pw07fgd+2uNKG6Yp/57o6Tv18xT2Pw2TR3poXgqkJ6Th65lh
BZNb0VPScKGLamZ62mT2Pw3Cq+ezSnvTxmlQf/7Hv+rgJPY/DU5zp3QsMqJN
0+CYY2ZtUzGR/U/DP5v2bYtdaMs03D82O6WiBW2Vhvzyz7pZmyaw/8rvX+QW
qz2Wtk+DsVPXtkNvj2f/05Ay31Wrxp12TkPCkx6bB3Wk3dJwYPQ1e5WD49j/
NCzcaHd7tTntnYajvcYenN0wlv1Pw8Uqj327N9HBaUj2KtodYkQL0zD+zrjC
86/HsP9pWG2msddLQseloZ/OnQ5x0+ikNEz5VP/w55vR7H8atsz9uv6Sgpam
QUvrm8OL2bQiDSemWBss/jGK/U/Dq6+dDdT20lnK79unWPTPlt6Zhj/Cxuyx
mnRuGvZoXdy/89JI9l/5ezpcMmV2CJ2v/P3ciz2qM5YuSENlyZcp2h8M2f80
TEw+pRiTSxen4U32yiif1XRJGnqG/5hwpzd9IQ3fNe49Tzwxgv1X5n/i6BbF
ePqGMs/2RyacKxzO/qeh457fPf+Np8vTMP9cr+6zTw5j/5X73bNpKwZdpezH
n+ne9y8PZf+VfdAr6dnJnK5Nw7rxu1uMrBrC/qchK8BCd+w6+p1yn97f67V+
DGb/0zBzn9GBi3H0V+X3u7fz5Iye9I80lB9ctCvy4CD2Pw04ouEaPosWiNE5
X690TLUB+y9G3rKs+em+tLoYbUZOitumSbcXI6zWd9fcPH32Xwx/4anUZFNa
WwzVqBGbHd8NZP/F2Bu7U+VqMq0rhqnJLJsjhrSeGL5j6lf3qhjA/oth5d+j
VCWINhBj7CW3g8v70kPFqMo42qrv9f7svxgua8evNvOhx4jhOqqr7lM9eoIY
EbsyXUpv9mP/xdiz7faMzsE0xLBeKKjaPYQ2FuPPrWlv4qr6sv9ifK5c/zw/
hTYVo7Sr1Y3uM2gzMWahUfvMtz7svxgjziSO37yfthLjcKKu457VtK1yn9TA
07U9aXsxHHve+TW7Qo/9F6P1qxMnS1NpZ+X98jdi7/m0mxhd3W9NHaNOe4hx
LHnJaK2k3uy/GEaf/S49aUP7i1E7bLPTxfhe7L8YSdmT/51sRwuV+w654Hky
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
         
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 2000.}, {-0.2, 0.2}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 2000.}, {-0.2, 0.2}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"WlsOprime", "WlhOprime"}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[
                    RectangleBox[{0, 0}], {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, ImageSize -> {20, 10},
                     PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             GraphicsBox[
              RectangleBox[{0, 0}]]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.76752447346268*^9, 3.767524647939724*^9, {3.767524744416259*^9, 
   3.767524759285419*^9}, 3.7675248030713387`*^9, 3.767693193047288*^9, 
   3.767693418077149*^9, 3.7676938132884893`*^9, 3.767694074594818*^9, 
   3.76769413702177*^9, 3.7676941838050632`*^9, 3.76769430275557*^9, 
   3.7676943541628847`*^9, 3.7676944219667664`*^9, 3.76769450485946*^9, 
   3.767694902300342*^9, {3.767695285693819*^9, 3.767695308045618*^9}, 
   3.767695587867395*^9, 3.767695654169937*^9, 3.76769582688916*^9, {
   3.767695913729542*^9, 3.767695924030217*^9}, 3.7676959757201138`*^9, 
   3.767696102747109*^9, 3.76769620630105*^9, 3.767696322861813*^9, 
   3.767697249316082*^9, 3.767697812698333*^9, 3.767698035525419*^9, 
   3.767698098595351*^9, 3.7676981544379683`*^9, 
   3.767698432916954*^9},ExpressionUUID->"ac654f05-6a2f-4683-a074-\
07a2bdea8dda"]
}, Open  ]]
},
WindowSize->{1715, 1023},
WindowMargins->{{Automatic, 26}, {Automatic, 22}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 18, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3193, 89, 138, "Input", "ExpressionUUID" -> \
"a696a951-3069-480d-bda1-f557c41397a1"],
Cell[3754, 111, 2232, 63, 133, "Input", "ExpressionUUID" -> \
"91934920-45d5-46de-846b-a5e422bd6d07"],
Cell[5989, 176, 308, 7, 32, "Input", "ExpressionUUID" -> \
"c9fd7a81-d76a-47e0-8084-ea0a93368801"],
Cell[6300, 185, 534, 17, 32, "Input", "ExpressionUUID" -> \
"f9e41a0a-03b2-4500-9024-d3371bdbb2e6"],
Cell[6837, 204, 534, 17, 32, "Input", "ExpressionUUID" -> \
"ad4605d5-7cd2-4cab-8865-89e33407d87f"],
Cell[CellGroupData[{
Cell[7396, 225, 145, 3, 32, "Input", "ExpressionUUID" -> \
"4cddcd6e-8eb5-43fd-8598-d86767458566"],
Cell[7544, 230, 571, 9, 32, "Output", "ExpressionUUID" -> \
"d67992ed-9d91-4821-981d-f64306f87a59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8152, 244, 203, 5, 32, "Input", "ExpressionUUID" -> \
"8ac3dee0-6c9f-400b-ba10-25934b227010"],
Cell[8358, 251, 15104, 285, 364, "Output", "ExpressionUUID" -> \
"dbc9c200-4baa-4eaf-9a3f-d793adada79a"]
}, Open  ]],
Cell[23477, 539, 898, 21, 32, "Input", "ExpressionUUID" -> \
"01677ce1-98e0-4e0d-b548-97e28f3e849f"],
Cell[CellGroupData[{
Cell[24400, 564, 1493, 42, 96, "Input", "ExpressionUUID" -> \
"d648206e-ed93-46e6-b41b-2288fb0e89ce"],
Cell[25896, 608, 774, 12, 32, "Output", "ExpressionUUID" -> \
"7cd8c2f9-fc87-4643-8526-1572233b7a31"],
Cell[26673, 622, 3086, 81, 86, "Output", "ExpressionUUID" -> \
"41cdcf5a-ac44-4aff-9912-0d13bff2b606"],
Cell[29762, 705, 970, 19, 32, "Output", "ExpressionUUID" -> \
"1dcbdcb2-5646-4ddf-9bb6-0d242eb0d6e8"]
}, Open  ]],
Cell[30747, 727, 2955, 80, 124, "Input", "ExpressionUUID" -> \
"7d30440f-8a98-43af-a918-2ac7cf324333"],
Cell[33705, 809, 493, 14, 54, "Input", "ExpressionUUID" -> \
"97ecbd4f-2901-4a79-b1b1-664bc7f4fa78"],
Cell[34201, 825, 328, 7, 32, "Input", "ExpressionUUID" -> \
"ced1abee-ec18-4b84-9a16-c56d67e238f0"],
Cell[34532, 834, 564, 16, 32, "Input", "ExpressionUUID" -> \
"096290a6-fac9-4ea9-b8f8-188a29cf617f"],
Cell[CellGroupData[{
Cell[35121, 854, 216, 5, 32, "Input", "ExpressionUUID" -> \
"0afb786f-e768-4ed0-9aee-dfbe7576ac77"],
Cell[35340, 861, 13382, 324, 497, "Output", "ExpressionUUID" -> \
"f5c87d90-359d-475f-b0df-eb67ec05ff62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48759, 1190, 235, 6, 32, "Input", "ExpressionUUID" -> \
"4b58fb61-334d-49a1-831f-293ece125666"],
Cell[48997, 1198, 927, 17, 32, "Output", "ExpressionUUID" -> \
"b40569c1-d99d-4f4b-bfa4-d4578de0026e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49961, 1220, 289, 7, 32, "Input", "ExpressionUUID" -> \
"53f967b4-d0ff-4920-bc71-0a30ace6b1c1"],
Cell[50253, 1229, 2490, 61, 88, "Output", "ExpressionUUID" -> \
"04cc6e70-cbd1-41c7-a150-9ba9625afa19"]
}, Open  ]],
Cell[52758, 1293, 3384, 81, 150, "Input", "ExpressionUUID" -> \
"b107766b-2054-4aca-a94e-f48c6e615cff"],
Cell[56145, 1376, 896, 20, 32, "Input", "ExpressionUUID" -> \
"f9cb4952-1fea-4446-baef-60f1f9df013f"],
Cell[57044, 1398, 891, 20, 32, "Input", "ExpressionUUID" -> \
"73311282-88ed-486c-8d2c-b1709977144a"],
Cell[57938, 1420, 9137, 181, 411, "Input", "ExpressionUUID" -> \
"7c295a6f-5cba-4850-a24a-c8fd8ae59adb"],
Cell[67078, 1603, 7625, 171, 306, "Input", "ExpressionUUID" -> \
"fffd1d5d-b71c-405b-8246-6e29bb8720c4"],
Cell[74706, 1776, 472, 10, 75, "Input", "ExpressionUUID" -> \
"8891808d-e206-4282-a261-3a0d6ee14f0f"],
Cell[CellGroupData[{
Cell[75203, 1790, 2237, 53, 96, "Input", "ExpressionUUID" -> \
"a5c34887-85ca-432f-802f-297cdd157b40"],
Cell[77443, 1845, 97180, 1687, 254, "Output", "ExpressionUUID" -> \
"21670bef-e0d0-41f2-b571-3f7d4394322d"],
Cell[174626, 3534, 66155, 1141, 240, "Output", "ExpressionUUID" -> \
"ac654f05-6a2f-4683-a074-07a2bdea8dda"]
}, Open  ]]
}
]
*)

